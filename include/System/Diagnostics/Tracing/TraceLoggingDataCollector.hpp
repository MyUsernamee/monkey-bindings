// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: TraceLoggingDataCollector
  class TraceLoggingDataCollector;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Diagnostics::Tracing::TraceLoggingDataCollector);
DEFINE_IL2CPP_ARG_TYPE(::System::Diagnostics::Tracing::TraceLoggingDataCollector*, "System.Diagnostics.Tracing", "TraceLoggingDataCollector");
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.TraceLoggingDataCollector
  // [TokenAttribute] Offset: FFFFFFFF
  class TraceLoggingDataCollector : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.Diagnostics.Tracing.TraceLoggingDataCollector Instance
    static ::System::Diagnostics::Tracing::TraceLoggingDataCollector* _get_Instance();
    // Set static field: static readonly System.Diagnostics.Tracing.TraceLoggingDataCollector Instance
    static void _set_Instance(::System::Diagnostics::Tracing::TraceLoggingDataCollector* value);
    // public System.Int32 BeginBufferedArray()
    // Offset: 0xD6DB50
    int BeginBufferedArray();
    // public System.Void EndBufferedArray(System.Int32 bookmark, System.Int32 count)
    // Offset: 0xD6DBA0
    void EndBufferedArray(int bookmark, int count);
    // public System.Void AddScalar(System.Boolean value)
    // Offset: 0xD6DC08
    void AddScalar(bool value);
    // public System.Void AddScalar(System.SByte value)
    // Offset: 0xD6C974
    void AddScalar(int8_t value);
    // public System.Void AddScalar(System.Byte value)
    // Offset: 0xD6DC6C
    void AddScalar(uint8_t value);
    // public System.Void AddScalar(System.Int16 value)
    // Offset: 0xD66F20
    void AddScalar(int16_t value);
    // public System.Void AddScalar(System.UInt16 value)
    // Offset: 0xD6DCCC
    void AddScalar(uint16_t value);
    // public System.Void AddScalar(System.Int32 value)
    // Offset: 0xD67298
    void AddScalar(int value);
    // public System.Void AddScalar(System.UInt32 value)
    // Offset: 0xD6DD2C
    void AddScalar(uint value);
    // public System.Void AddScalar(System.Int64 value)
    // Offset: 0xD675E8
    void AddScalar(int64_t value);
    // public System.Void AddScalar(System.UInt64 value)
    // Offset: 0xD6DD8C
    void AddScalar(uint64_t value);
    // public System.Void AddScalar(System.IntPtr value)
    // Offset: 0xD67980
    void AddScalar(::System::IntPtr value);
    // public System.Void AddScalar(System.UIntPtr value)
    // Offset: 0xD6DDEC
    void AddScalar(::System::UIntPtr value);
    // public System.Void AddScalar(System.Single value)
    // Offset: 0xD6CCD0
    void AddScalar(float value);
    // public System.Void AddScalar(System.Double value)
    // Offset: 0xD6DE7C
    void AddScalar(double value);
    // public System.Void AddScalar(System.Char value)
    // Offset: 0xD6DEDC
    void AddScalar(::Il2CppChar value);
    // public System.Void AddScalar(System.Guid value)
    // Offset: 0xD66BB8
    void AddScalar(::System::Guid value);
    // public System.Void AddBinary(System.String value)
    // Offset: 0xD6D750
    void AddBinary(::StringW value);
    // public System.Void AddBinary(System.Byte[] value)
    // Offset: 0xD6DF3C
    void AddBinary(::ArrayW<uint8_t> value);
    // public System.Void AddArray(System.Boolean[] value)
    // Offset: 0xD6DFAC
    void AddArray(::ArrayW<bool> value);
    // public System.Void AddArray(System.SByte[] value)
    // Offset: 0xD6C808
    void AddArray(::ArrayW<int8_t> value);
    // public System.Void AddArray(System.Int16[] value)
    // Offset: 0xD66DB4
    void AddArray(::ArrayW<int16_t> value);
    // public System.Void AddArray(System.UInt16[] value)
    // Offset: 0xD6E020
    void AddArray(::ArrayW<uint16_t> value);
    // public System.Void AddArray(System.Int32[] value)
    // Offset: 0xD6712C
    void AddArray(::ArrayW<int> value);
    // public System.Void AddArray(System.UInt32[] value)
    // Offset: 0xD6E094
    void AddArray(::ArrayW<uint> value);
    // public System.Void AddArray(System.Int64[] value)
    // Offset: 0xD6747C
    void AddArray(::ArrayW<int64_t> value);
    // public System.Void AddArray(System.UInt64[] value)
    // Offset: 0xD6E108
    void AddArray(::ArrayW<uint64_t> value);
    // public System.Void AddArray(System.IntPtr[] value)
    // Offset: 0xD677EC
    void AddArray(::ArrayW<::System::IntPtr> value);
    // public System.Void AddArray(System.UIntPtr[] value)
    // Offset: 0xD6E17C
    void AddArray(::ArrayW<::System::UIntPtr> value);
    // public System.Void AddArray(System.Single[] value)
    // Offset: 0xD6CB64
    void AddArray(::ArrayW<float> value);
    // public System.Void AddArray(System.Double[] value)
    // Offset: 0xD6E230
    void AddArray(::ArrayW<double> value);
    // public System.Void AddArray(System.Char[] value)
    // Offset: 0xD6E2A4
    void AddArray(::ArrayW<::Il2CppChar> value);
    // public System.Void AddArray(System.Guid[] value)
    // Offset: 0xD66944
    void AddArray(::ArrayW<::System::Guid> value);
    // static private System.Void .cctor()
    // Offset: 0xD6E318
    static void _cctor();
    // private System.Void .ctor()
    // Offset: 0xD6DB48
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TraceLoggingDataCollector* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingDataCollector::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TraceLoggingDataCollector*, creationType>()));
    }
  }; // System.Diagnostics.Tracing.TraceLoggingDataCollector
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::BeginBufferedArray
// Il2CppName: BeginBufferedArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::BeginBufferedArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "BeginBufferedArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::EndBufferedArray
// Il2CppName: EndBufferedArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(int, int)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::EndBufferedArray)> {
  static const MethodInfo* get() {
    static auto* bookmark = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "EndBufferedArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bookmark, count});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(bool)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(int8_t)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "SByte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(uint8_t)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(int16_t)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(uint16_t)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(int)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(uint)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(int64_t)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(uint64_t)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::System::IntPtr)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::System::UIntPtr)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(float)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(double)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::Il2CppChar)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::System::Guid)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary
// Il2CppName: AddBinary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::StringW)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddBinary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary
// Il2CppName: AddBinary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<uint8_t>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddBinary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<bool>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Boolean"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<int8_t>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "SByte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<int16_t>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<uint16_t>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt16"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<int>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<uint>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<int64_t>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int64"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<uint64_t>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<::System::IntPtr>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "IntPtr"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<::System::UIntPtr>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UIntPtr"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<float>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<double>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Double"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<::Il2CppChar>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingDataCollector::*)(::ArrayW<::System::Guid>)>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Guid"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Diagnostics::Tracing::TraceLoggingDataCollector::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingDataCollector*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingDataCollector::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
