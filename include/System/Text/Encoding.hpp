// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: EncoderFallback
  class EncoderFallback;
  // Forward declaring type: DecoderFallback
  class DecoderFallback;
  // Forward declaring type: EncoderNLS
  class EncoderNLS;
  // Forward declaring type: DecoderNLS
  class DecoderNLS;
  // Forward declaring type: Decoder
  class Decoder;
  // Forward declaring type: Encoder
  class Encoder;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CodePageDataItem
  class CodePageDataItem;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: StreamingContext
  struct StreamingContext;
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Text::Encoding);
DEFINE_IL2CPP_ARG_TYPE(::System::Text::Encoding*, "System.Text", "Encoding");
// Type namespace: System.Text
namespace System::Text {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Text.Encoding
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: A50B10
  class Encoding : public ::Il2CppObject/*, public ::System::ICloneable*/ {
    public:
    // Nested type: ::System::Text::Encoding::DefaultEncoder
    class DefaultEncoder;
    // Nested type: ::System::Text::Encoding::DefaultDecoder
    class DefaultDecoder;
    // Nested type: ::System::Text::Encoding::EncodingCharBuffer
    class EncodingCharBuffer;
    // Nested type: ::System::Text::Encoding::EncodingByteBuffer
    class EncodingByteBuffer;
    public:
    // System.Int32 m_codePage
    // Size: 0x4
    // Offset: 0x10
    int m_codePage;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_codePage and: dataItem
    char __padding0[0x4] = {};
    // System.Globalization.CodePageDataItem dataItem
    // Size: 0x8
    // Offset: 0x18
    ::System::Globalization::CodePageDataItem* dataItem;
    // Field size check
    static_assert(sizeof(::System::Globalization::CodePageDataItem*) == 0x8);
    // System.Boolean m_deserializedFromEverett
    // Size: 0x1
    // Offset: 0x20
    bool m_deserializedFromEverett;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [OptionalFieldAttribute] Offset: 0xA56F1C
    // private System.Boolean m_isReadOnly
    // Size: 0x1
    // Offset: 0x21
    bool m_isReadOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_isReadOnly and: encoderFallback
    char __padding3[0x6] = {};
    // [OptionalFieldAttribute] Offset: 0xA56F54
    // System.Text.EncoderFallback encoderFallback
    // Size: 0x8
    // Offset: 0x28
    ::System::Text::EncoderFallback* encoderFallback;
    // Field size check
    static_assert(sizeof(::System::Text::EncoderFallback*) == 0x8);
    // [OptionalFieldAttribute] Offset: 0xA56F8C
    // System.Text.DecoderFallback decoderFallback
    // Size: 0x8
    // Offset: 0x30
    ::System::Text::DecoderFallback* decoderFallback;
    // Field size check
    static_assert(sizeof(::System::Text::DecoderFallback*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::ICloneable
    operator ::System::ICloneable() noexcept {
      return *reinterpret_cast<::System::ICloneable*>(this);
    }
    // Get static field: static private System.Text.Encoding defaultEncoding
    static ::System::Text::Encoding* _get_defaultEncoding();
    // Set static field: static private System.Text.Encoding defaultEncoding
    static void _set_defaultEncoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding unicodeEncoding
    static ::System::Text::Encoding* _get_unicodeEncoding();
    // Set static field: static private System.Text.Encoding unicodeEncoding
    static void _set_unicodeEncoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding bigEndianUnicode
    static ::System::Text::Encoding* _get_bigEndianUnicode();
    // Set static field: static private System.Text.Encoding bigEndianUnicode
    static void _set_bigEndianUnicode(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding utf7Encoding
    static ::System::Text::Encoding* _get_utf7Encoding();
    // Set static field: static private System.Text.Encoding utf7Encoding
    static void _set_utf7Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding utf8Encoding
    static ::System::Text::Encoding* _get_utf8Encoding();
    // Set static field: static private System.Text.Encoding utf8Encoding
    static void _set_utf8Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding utf32Encoding
    static ::System::Text::Encoding* _get_utf32Encoding();
    // Set static field: static private System.Text.Encoding utf32Encoding
    static void _set_utf32Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding asciiEncoding
    static ::System::Text::Encoding* _get_asciiEncoding();
    // Set static field: static private System.Text.Encoding asciiEncoding
    static void _set_asciiEncoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding latin1Encoding
    static ::System::Text::Encoding* _get_latin1Encoding();
    // Set static field: static private System.Text.Encoding latin1Encoding
    static void _set_latin1Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Collections.Hashtable encodings
    static ::System::Collections::Hashtable* _get_encodings();
    // Set static field: static private System.Collections.Hashtable encodings
    static void _set_encodings(::System::Collections::Hashtable* value);
    // static field const value: static private System.Int32 MIMECONTF_MAILNEWS
    static constexpr const int MIMECONTF_MAILNEWS = 1;
    // Get static field: static private System.Int32 MIMECONTF_MAILNEWS
    static int _get_MIMECONTF_MAILNEWS();
    // Set static field: static private System.Int32 MIMECONTF_MAILNEWS
    static void _set_MIMECONTF_MAILNEWS(int value);
    // static field const value: static private System.Int32 MIMECONTF_BROWSER
    static constexpr const int MIMECONTF_BROWSER = 2;
    // Get static field: static private System.Int32 MIMECONTF_BROWSER
    static int _get_MIMECONTF_BROWSER();
    // Set static field: static private System.Int32 MIMECONTF_BROWSER
    static void _set_MIMECONTF_BROWSER(int value);
    // static field const value: static private System.Int32 MIMECONTF_SAVABLE_MAILNEWS
    static constexpr const int MIMECONTF_SAVABLE_MAILNEWS = 256;
    // Get static field: static private System.Int32 MIMECONTF_SAVABLE_MAILNEWS
    static int _get_MIMECONTF_SAVABLE_MAILNEWS();
    // Set static field: static private System.Int32 MIMECONTF_SAVABLE_MAILNEWS
    static void _set_MIMECONTF_SAVABLE_MAILNEWS(int value);
    // static field const value: static private System.Int32 MIMECONTF_SAVABLE_BROWSER
    static constexpr const int MIMECONTF_SAVABLE_BROWSER = 512;
    // Get static field: static private System.Int32 MIMECONTF_SAVABLE_BROWSER
    static int _get_MIMECONTF_SAVABLE_BROWSER();
    // Set static field: static private System.Int32 MIMECONTF_SAVABLE_BROWSER
    static void _set_MIMECONTF_SAVABLE_BROWSER(int value);
    // static field const value: static private System.Int32 CodePageDefault
    static constexpr const int CodePageDefault = 0;
    // Get static field: static private System.Int32 CodePageDefault
    static int _get_CodePageDefault();
    // Set static field: static private System.Int32 CodePageDefault
    static void _set_CodePageDefault(int value);
    // static field const value: static private System.Int32 CodePageNoOEM
    static constexpr const int CodePageNoOEM = 1;
    // Get static field: static private System.Int32 CodePageNoOEM
    static int _get_CodePageNoOEM();
    // Set static field: static private System.Int32 CodePageNoOEM
    static void _set_CodePageNoOEM(int value);
    // static field const value: static private System.Int32 CodePageNoMac
    static constexpr const int CodePageNoMac = 2;
    // Get static field: static private System.Int32 CodePageNoMac
    static int _get_CodePageNoMac();
    // Set static field: static private System.Int32 CodePageNoMac
    static void _set_CodePageNoMac(int value);
    // static field const value: static private System.Int32 CodePageNoThread
    static constexpr const int CodePageNoThread = 3;
    // Get static field: static private System.Int32 CodePageNoThread
    static int _get_CodePageNoThread();
    // Set static field: static private System.Int32 CodePageNoThread
    static void _set_CodePageNoThread(int value);
    // static field const value: static private System.Int32 CodePageNoSymbol
    static constexpr const int CodePageNoSymbol = 42;
    // Get static field: static private System.Int32 CodePageNoSymbol
    static int _get_CodePageNoSymbol();
    // Set static field: static private System.Int32 CodePageNoSymbol
    static void _set_CodePageNoSymbol(int value);
    // static field const value: static private System.Int32 CodePageUnicode
    static constexpr const int CodePageUnicode = 1200;
    // Get static field: static private System.Int32 CodePageUnicode
    static int _get_CodePageUnicode();
    // Set static field: static private System.Int32 CodePageUnicode
    static void _set_CodePageUnicode(int value);
    // static field const value: static private System.Int32 CodePageBigEndian
    static constexpr const int CodePageBigEndian = 1201;
    // Get static field: static private System.Int32 CodePageBigEndian
    static int _get_CodePageBigEndian();
    // Set static field: static private System.Int32 CodePageBigEndian
    static void _set_CodePageBigEndian(int value);
    // static field const value: static private System.Int32 CodePageWindows1252
    static constexpr const int CodePageWindows1252 = 1252;
    // Get static field: static private System.Int32 CodePageWindows1252
    static int _get_CodePageWindows1252();
    // Set static field: static private System.Int32 CodePageWindows1252
    static void _set_CodePageWindows1252(int value);
    // static field const value: static private System.Int32 CodePageMacGB2312
    static constexpr const int CodePageMacGB2312 = 10008;
    // Get static field: static private System.Int32 CodePageMacGB2312
    static int _get_CodePageMacGB2312();
    // Set static field: static private System.Int32 CodePageMacGB2312
    static void _set_CodePageMacGB2312(int value);
    // static field const value: static private System.Int32 CodePageGB2312
    static constexpr const int CodePageGB2312 = 20936;
    // Get static field: static private System.Int32 CodePageGB2312
    static int _get_CodePageGB2312();
    // Set static field: static private System.Int32 CodePageGB2312
    static void _set_CodePageGB2312(int value);
    // static field const value: static private System.Int32 CodePageMacKorean
    static constexpr const int CodePageMacKorean = 10003;
    // Get static field: static private System.Int32 CodePageMacKorean
    static int _get_CodePageMacKorean();
    // Set static field: static private System.Int32 CodePageMacKorean
    static void _set_CodePageMacKorean(int value);
    // static field const value: static private System.Int32 CodePageDLLKorean
    static constexpr const int CodePageDLLKorean = 20949;
    // Get static field: static private System.Int32 CodePageDLLKorean
    static int _get_CodePageDLLKorean();
    // Set static field: static private System.Int32 CodePageDLLKorean
    static void _set_CodePageDLLKorean(int value);
    // static field const value: static private System.Int32 ISO2022JP
    static constexpr const int ISO2022JP = 50220;
    // Get static field: static private System.Int32 ISO2022JP
    static int _get_ISO2022JP();
    // Set static field: static private System.Int32 ISO2022JP
    static void _set_ISO2022JP(int value);
    // static field const value: static private System.Int32 ISO2022JPESC
    static constexpr const int ISO2022JPESC = 50221;
    // Get static field: static private System.Int32 ISO2022JPESC
    static int _get_ISO2022JPESC();
    // Set static field: static private System.Int32 ISO2022JPESC
    static void _set_ISO2022JPESC(int value);
    // static field const value: static private System.Int32 ISO2022JPSISO
    static constexpr const int ISO2022JPSISO = 50222;
    // Get static field: static private System.Int32 ISO2022JPSISO
    static int _get_ISO2022JPSISO();
    // Set static field: static private System.Int32 ISO2022JPSISO
    static void _set_ISO2022JPSISO(int value);
    // static field const value: static private System.Int32 ISOKorean
    static constexpr const int ISOKorean = 50225;
    // Get static field: static private System.Int32 ISOKorean
    static int _get_ISOKorean();
    // Set static field: static private System.Int32 ISOKorean
    static void _set_ISOKorean(int value);
    // static field const value: static private System.Int32 ISOSimplifiedCN
    static constexpr const int ISOSimplifiedCN = 50227;
    // Get static field: static private System.Int32 ISOSimplifiedCN
    static int _get_ISOSimplifiedCN();
    // Set static field: static private System.Int32 ISOSimplifiedCN
    static void _set_ISOSimplifiedCN(int value);
    // static field const value: static private System.Int32 EUCJP
    static constexpr const int EUCJP = 51932;
    // Get static field: static private System.Int32 EUCJP
    static int _get_EUCJP();
    // Set static field: static private System.Int32 EUCJP
    static void _set_EUCJP(int value);
    // static field const value: static private System.Int32 ChineseHZ
    static constexpr const int ChineseHZ = 52936;
    // Get static field: static private System.Int32 ChineseHZ
    static int _get_ChineseHZ();
    // Set static field: static private System.Int32 ChineseHZ
    static void _set_ChineseHZ(int value);
    // static field const value: static private System.Int32 DuplicateEUCCN
    static constexpr const int DuplicateEUCCN = 51936;
    // Get static field: static private System.Int32 DuplicateEUCCN
    static int _get_DuplicateEUCCN();
    // Set static field: static private System.Int32 DuplicateEUCCN
    static void _set_DuplicateEUCCN(int value);
    // static field const value: static private System.Int32 EUCCN
    static constexpr const int EUCCN = 936;
    // Get static field: static private System.Int32 EUCCN
    static int _get_EUCCN();
    // Set static field: static private System.Int32 EUCCN
    static void _set_EUCCN(int value);
    // static field const value: static private System.Int32 EUCKR
    static constexpr const int EUCKR = 51949;
    // Get static field: static private System.Int32 EUCKR
    static int _get_EUCKR();
    // Set static field: static private System.Int32 EUCKR
    static void _set_EUCKR(int value);
    // static field const value: static System.Int32 CodePageASCII
    static constexpr const int CodePageASCII = 20127;
    // Get static field: static System.Int32 CodePageASCII
    static int _get_CodePageASCII();
    // Set static field: static System.Int32 CodePageASCII
    static void _set_CodePageASCII(int value);
    // static field const value: static System.Int32 ISO_8859_1
    static constexpr const int ISO_8859_1 = 28591;
    // Get static field: static System.Int32 ISO_8859_1
    static int _get_ISO_8859_1();
    // Set static field: static System.Int32 ISO_8859_1
    static void _set_ISO_8859_1(int value);
    // static field const value: static private System.Int32 ISCIIAssemese
    static constexpr const int ISCIIAssemese = 57006;
    // Get static field: static private System.Int32 ISCIIAssemese
    static int _get_ISCIIAssemese();
    // Set static field: static private System.Int32 ISCIIAssemese
    static void _set_ISCIIAssemese(int value);
    // static field const value: static private System.Int32 ISCIIBengali
    static constexpr const int ISCIIBengali = 57003;
    // Get static field: static private System.Int32 ISCIIBengali
    static int _get_ISCIIBengali();
    // Set static field: static private System.Int32 ISCIIBengali
    static void _set_ISCIIBengali(int value);
    // static field const value: static private System.Int32 ISCIIDevanagari
    static constexpr const int ISCIIDevanagari = 57002;
    // Get static field: static private System.Int32 ISCIIDevanagari
    static int _get_ISCIIDevanagari();
    // Set static field: static private System.Int32 ISCIIDevanagari
    static void _set_ISCIIDevanagari(int value);
    // static field const value: static private System.Int32 ISCIIGujarathi
    static constexpr const int ISCIIGujarathi = 57010;
    // Get static field: static private System.Int32 ISCIIGujarathi
    static int _get_ISCIIGujarathi();
    // Set static field: static private System.Int32 ISCIIGujarathi
    static void _set_ISCIIGujarathi(int value);
    // static field const value: static private System.Int32 ISCIIKannada
    static constexpr const int ISCIIKannada = 57008;
    // Get static field: static private System.Int32 ISCIIKannada
    static int _get_ISCIIKannada();
    // Set static field: static private System.Int32 ISCIIKannada
    static void _set_ISCIIKannada(int value);
    // static field const value: static private System.Int32 ISCIIMalayalam
    static constexpr const int ISCIIMalayalam = 57009;
    // Get static field: static private System.Int32 ISCIIMalayalam
    static int _get_ISCIIMalayalam();
    // Set static field: static private System.Int32 ISCIIMalayalam
    static void _set_ISCIIMalayalam(int value);
    // static field const value: static private System.Int32 ISCIIOriya
    static constexpr const int ISCIIOriya = 57007;
    // Get static field: static private System.Int32 ISCIIOriya
    static int _get_ISCIIOriya();
    // Set static field: static private System.Int32 ISCIIOriya
    static void _set_ISCIIOriya(int value);
    // static field const value: static private System.Int32 ISCIIPanjabi
    static constexpr const int ISCIIPanjabi = 57011;
    // Get static field: static private System.Int32 ISCIIPanjabi
    static int _get_ISCIIPanjabi();
    // Set static field: static private System.Int32 ISCIIPanjabi
    static void _set_ISCIIPanjabi(int value);
    // static field const value: static private System.Int32 ISCIITamil
    static constexpr const int ISCIITamil = 57004;
    // Get static field: static private System.Int32 ISCIITamil
    static int _get_ISCIITamil();
    // Set static field: static private System.Int32 ISCIITamil
    static void _set_ISCIITamil(int value);
    // static field const value: static private System.Int32 ISCIITelugu
    static constexpr const int ISCIITelugu = 57005;
    // Get static field: static private System.Int32 ISCIITelugu
    static int _get_ISCIITelugu();
    // Set static field: static private System.Int32 ISCIITelugu
    static void _set_ISCIITelugu(int value);
    // static field const value: static private System.Int32 GB18030
    static constexpr const int GB18030 = 54936;
    // Get static field: static private System.Int32 GB18030
    static int _get_GB18030();
    // Set static field: static private System.Int32 GB18030
    static void _set_GB18030(int value);
    // static field const value: static private System.Int32 ISO_8859_8I
    static constexpr const int ISO_8859_8I = 38598;
    // Get static field: static private System.Int32 ISO_8859_8I
    static int _get_ISO_8859_8I();
    // Set static field: static private System.Int32 ISO_8859_8I
    static void _set_ISO_8859_8I(int value);
    // static field const value: static private System.Int32 ISO_8859_8_Visual
    static constexpr const int ISO_8859_8_Visual = 28598;
    // Get static field: static private System.Int32 ISO_8859_8_Visual
    static int _get_ISO_8859_8_Visual();
    // Set static field: static private System.Int32 ISO_8859_8_Visual
    static void _set_ISO_8859_8_Visual(int value);
    // static field const value: static private System.Int32 ENC50229
    static constexpr const int ENC50229 = 50229;
    // Get static field: static private System.Int32 ENC50229
    static int _get_ENC50229();
    // Set static field: static private System.Int32 ENC50229
    static void _set_ENC50229(int value);
    // static field const value: static private System.Int32 CodePageUTF7
    static constexpr const int CodePageUTF7 = 65000;
    // Get static field: static private System.Int32 CodePageUTF7
    static int _get_CodePageUTF7();
    // Set static field: static private System.Int32 CodePageUTF7
    static void _set_CodePageUTF7(int value);
    // static field const value: static private System.Int32 CodePageUTF8
    static constexpr const int CodePageUTF8 = 65001;
    // Get static field: static private System.Int32 CodePageUTF8
    static int _get_CodePageUTF8();
    // Set static field: static private System.Int32 CodePageUTF8
    static void _set_CodePageUTF8(int value);
    // static field const value: static private System.Int32 CodePageUTF32
    static constexpr const int CodePageUTF32 = 12000;
    // Get static field: static private System.Int32 CodePageUTF32
    static int _get_CodePageUTF32();
    // Set static field: static private System.Int32 CodePageUTF32
    static void _set_CodePageUTF32(int value);
    // static field const value: static private System.Int32 CodePageUTF32BE
    static constexpr const int CodePageUTF32BE = 12001;
    // Get static field: static private System.Int32 CodePageUTF32BE
    static int _get_CodePageUTF32BE();
    // Set static field: static private System.Int32 CodePageUTF32BE
    static void _set_CodePageUTF32BE(int value);
    // Get static field: static private System.Object s_InternalSyncObject
    static ::Il2CppObject* _get_s_InternalSyncObject();
    // Set static field: static private System.Object s_InternalSyncObject
    static void _set_s_InternalSyncObject(::Il2CppObject* value);
    // Get instance field reference: System.Int32 m_codePage
    [[deprecated("Use field access instead!")]] int& dyn_m_codePage();
    // Get instance field reference: System.Globalization.CodePageDataItem dataItem
    [[deprecated("Use field access instead!")]] ::System::Globalization::CodePageDataItem*& dyn_dataItem();
    // Get instance field reference: System.Boolean m_deserializedFromEverett
    [[deprecated("Use field access instead!")]] bool& dyn_m_deserializedFromEverett();
    // Get instance field reference: private System.Boolean m_isReadOnly
    [[deprecated("Use field access instead!")]] bool& dyn_m_isReadOnly();
    // Get instance field reference: System.Text.EncoderFallback encoderFallback
    [[deprecated("Use field access instead!")]] ::System::Text::EncoderFallback*& dyn_encoderFallback();
    // Get instance field reference: System.Text.DecoderFallback decoderFallback
    [[deprecated("Use field access instead!")]] ::System::Text::DecoderFallback*& dyn_decoderFallback();
    // protected System.Void .ctor(System.Int32 codePage)
    // Offset: 0x15F95A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Encoding* New_ctor(int codePage) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Encoding*, creationType>(codePage)));
    }
    // System.Void SetDefaultFallbacks()
    // Offset: 0x16001C4
    void SetDefaultFallbacks();
    // System.Void OnDeserializing()
    // Offset: 0x16002D8
    void OnDeserializing();
    // System.Void OnDeserialized()
    // Offset: 0x16002E8
    void OnDeserialized();
    // private System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1600330
    void OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1600340
    void OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1600388
    void OnSerializing(::System::Runtime::Serialization::StreamingContext ctx);
    // System.Void DeserializeEncoding(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1600390
    void DeserializeEncoding(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // System.Void SerializeEncoding(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x16006B8
    void SerializeEncoding(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // static private System.Object get_InternalSyncObject()
    // Offset: 0x1600804
    static ::Il2CppObject* get_InternalSyncObject();
    // static public System.Text.Encoding GetEncoding(System.Int32 codepage)
    // Offset: 0x1600898
    static ::System::Text::Encoding* GetEncoding(int codepage);
    // static public System.Text.Encoding GetEncoding(System.Int32 codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback)
    // Offset: 0x1601D74
    static ::System::Text::Encoding* GetEncoding(int codepage, ::System::Text::EncoderFallback* encoderFallback, ::System::Text::DecoderFallback* decoderFallback);
    // static public System.Text.Encoding GetEncoding(System.String name)
    // Offset: 0x1602164
    static ::System::Text::Encoding* GetEncoding(::StringW name);
    // static public System.Text.Encoding GetEncoding(System.String name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback)
    // Offset: 0x160230C
    static ::System::Text::Encoding* GetEncoding(::StringW name, ::System::Text::EncoderFallback* encoderFallback, ::System::Text::DecoderFallback* decoderFallback);
    // public System.Byte[] GetPreamble()
    // Offset: 0x16024F0
    ::ArrayW<uint8_t> GetPreamble();
    // private System.Void GetDataItem()
    // Offset: 0x1602558
    void GetDataItem();
    // public System.String get_EncodingName()
    // Offset: 0x1602690
    ::StringW get_EncodingName();
    // public System.String get_HeaderName()
    // Offset: 0x160269C
    ::StringW get_HeaderName();
    // public System.String get_WebName()
    // Offset: 0x16026D8
    ::StringW get_WebName();
    // public System.Text.EncoderFallback get_EncoderFallback()
    // Offset: 0x1602714
    ::System::Text::EncoderFallback* get_EncoderFallback();
    // public System.Void set_EncoderFallback(System.Text.EncoderFallback value)
    // Offset: 0x1601F94
    void set_EncoderFallback(::System::Text::EncoderFallback* value);
    // public System.Text.DecoderFallback get_DecoderFallback()
    // Offset: 0x160271C
    ::System::Text::DecoderFallback* get_DecoderFallback();
    // public System.Void set_DecoderFallback(System.Text.DecoderFallback value)
    // Offset: 0x160207C
    void set_DecoderFallback(::System::Text::DecoderFallback* value);
    // public System.Object Clone()
    // Offset: 0x1602724
    ::Il2CppObject* Clone();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x16027B4
    bool get_IsReadOnly();
    // static public System.Text.Encoding get_ASCII()
    // Offset: 0x15F94F8
    static ::System::Text::Encoding* get_ASCII();
    // static private System.Text.Encoding get_Latin1()
    // Offset: 0x1601664
    static ::System::Text::Encoding* get_Latin1();
    // public System.Int32 GetByteCount(System.String s)
    // Offset: 0x16027C4
    int GetByteCount(::StringW s);
    // public System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetByteCount(::ArrayW<::Il2CppChar> chars, int index, int count);
    // public System.Int32 GetByteCount(System.Char* chars, System.Int32 count)
    // Offset: 0x160287C
    int GetByteCount(::Il2CppChar* chars, int count);
    // System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Text.EncoderNLS encoder)
    // Offset: 0x16029EC
    int GetByteCount(::Il2CppChar* chars, int count, ::System::Text::EncoderNLS* encoder);
    // public System.Byte[] GetBytes(System.Char[] chars)
    // Offset: 0x16029FC
    ::ArrayW<uint8_t> GetBytes(::ArrayW<::Il2CppChar> chars);
    // public System.Byte[] GetBytes(System.Char[] chars, System.Int32 index, System.Int32 count)
    // Offset: 0x1602AC4
    ::ArrayW<uint8_t> GetBytes(::ArrayW<::Il2CppChar> chars, int index, int count);
    // public System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetBytes(::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex);
    // public System.Byte[] GetBytes(System.String s)
    // Offset: 0x1602B84
    ::ArrayW<uint8_t> GetBytes(::StringW s);
    // public System.Int32 GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    // Offset: 0x1602C8C
    int GetBytes(::StringW s, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex);
    // System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)
    // Offset: 0x1602D68
    int GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, ::System::Text::EncoderNLS* encoder);
    // public System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)
    // Offset: 0x1602D78
    int GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount);
    // public System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetCharCount(::ArrayW<uint8_t> bytes, int index, int count);
    // public System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)
    // Offset: 0x1602F98
    int GetCharCount(uint8_t* bytes, int count);
    // System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS decoder)
    // Offset: 0x160310C
    int GetCharCount(uint8_t* bytes, int count, ::System::Text::DecoderNLS* decoder);
    // public System.Char[] GetChars(System.Byte[] bytes)
    // Offset: 0x160311C
    ::ArrayW<::Il2CppChar> GetChars(::ArrayW<uint8_t> bytes);
    // public System.Char[] GetChars(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0x16031E4
    ::ArrayW<::Il2CppChar> GetChars(::ArrayW<uint8_t> bytes, int index, int count);
    // public System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex);
    // public System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)
    // Offset: 0x16032A8
    int GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount);
    // System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS decoder)
    // Offset: 0x16034C8
    int GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, ::System::Text::DecoderNLS* decoder);
    // public System.Int32 get_CodePage()
    // Offset: 0x16034D8
    int get_CodePage();
    // public System.Text.Decoder GetDecoder()
    // Offset: 0x16034E0
    ::System::Text::Decoder* GetDecoder();
    // static private System.Text.Encoding CreateDefaultEncoding()
    // Offset: 0x1603580
    static ::System::Text::Encoding* CreateDefaultEncoding();
    // System.Void setReadOnly(System.Boolean value)
    // Offset: 0x160378C
    void setReadOnly(bool value);
    // static public System.Text.Encoding get_Default()
    // Offset: 0x1601288
    static ::System::Text::Encoding* get_Default();
    // public System.Text.Encoder GetEncoder()
    // Offset: 0x1603798
    ::System::Text::Encoder* GetEncoder();
    // public System.Int32 GetMaxByteCount(System.Int32 charCount)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetMaxByteCount(int charCount);
    // public System.Int32 GetMaxCharCount(System.Int32 byteCount)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetMaxCharCount(int byteCount);
    // public System.String GetString(System.Byte[] bytes)
    // Offset: 0x1603838
    ::StringW GetString(::ArrayW<uint8_t> bytes);
    // public System.String GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0x1603900
    ::StringW GetString(::ArrayW<uint8_t> bytes, int index, int count);
    // static public System.Text.Encoding get_Unicode()
    // Offset: 0x160130C
    static ::System::Text::Encoding* get_Unicode();
    // static public System.Text.Encoding get_BigEndianUnicode()
    // Offset: 0x16013B4
    static ::System::Text::Encoding* get_BigEndianUnicode();
    // static public System.Text.Encoding get_UTF7()
    // Offset: 0x160145C
    static ::System::Text::Encoding* get_UTF7();
    // static public System.Text.Encoding get_UTF8()
    // Offset: 0x16015C0
    static ::System::Text::Encoding* get_UTF8();
    // static public System.Text.Encoding get_UTF32()
    // Offset: 0x16014FC
    static ::System::Text::Encoding* get_UTF32();
    // System.Char[] GetBestFitUnicodeToBytesData()
    // Offset: 0x1603A6C
    ::ArrayW<::Il2CppChar> GetBestFitUnicodeToBytesData();
    // System.Char[] GetBestFitBytesToUnicodeData()
    // Offset: 0x1603AD4
    ::ArrayW<::Il2CppChar> GetBestFitBytesToUnicodeData();
    // System.Void ThrowBytesOverflow()
    // Offset: 0x1603B3C
    void ThrowBytesOverflow();
    // System.Void ThrowBytesOverflow(System.Text.EncoderNLS encoder, System.Boolean nothingEncoded)
    // Offset: 0x15FB44C
    void ThrowBytesOverflow(::System::Text::EncoderNLS* encoder, bool nothingEncoded);
    // System.Void ThrowCharsOverflow()
    // Offset: 0x1603C64
    void ThrowCharsOverflow();
    // System.Void ThrowCharsOverflow(System.Text.DecoderNLS decoder, System.Boolean nothingDecoded)
    // Offset: 0x15FB928
    void ThrowCharsOverflow(::System::Text::DecoderNLS* decoder, bool nothingDecoded);
    // protected System.Void .ctor()
    // Offset: 0x16001BC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Encoding* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Encoding*, creationType>()));
    }
    // public override System.Boolean Equals(System.Object value)
    // Offset: 0x160392C
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object value)
    bool Equals(::Il2CppObject* value);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1603A10
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // System.Text.Encoding
  #pragma pack(pop)
  static check_size<sizeof(Encoding), 48 + sizeof(::System::Text::DecoderFallback*)> __System_Text_EncodingSizeCheck;
  static_assert(sizeof(Encoding) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Text::Encoding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::Encoding::SetDefaultFallbacks
// Il2CppName: SetDefaultFallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::SetDefaultFallbacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "SetDefaultFallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::OnDeserializing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::OnDeserialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::OnDeserializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::OnDeserialized)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnSerializing
// Il2CppName: OnSerializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::OnSerializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnSerializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::DeserializeEncoding
// Il2CppName: DeserializeEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::DeserializeEncoding)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "DeserializeEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::SerializeEncoding
// Il2CppName: SerializeEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::SerializeEncoding)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "SerializeEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_InternalSyncObject
// Il2CppName: get_InternalSyncObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)()>(&System::Text::Encoding::get_InternalSyncObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_InternalSyncObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(int)>(&System::Text::Encoding::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* codepage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{codepage});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(int, ::System::Text::EncoderFallback*, ::System::Text::DecoderFallback*)>(&System::Text::Encoding::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* codepage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* encoderFallback = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderFallback")->byval_arg;
    static auto* decoderFallback = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderFallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{codepage, encoderFallback, decoderFallback});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(::StringW)>(&System::Text::Encoding::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(::StringW, ::System::Text::EncoderFallback*, ::System::Text::DecoderFallback*)>(&System::Text::Encoding::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* encoderFallback = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderFallback")->byval_arg;
    static auto* decoderFallback = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderFallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, encoderFallback, decoderFallback});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetPreamble
// Il2CppName: GetPreamble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Text::Encoding::*)()>(&System::Text::Encoding::GetPreamble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetPreamble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetDataItem
// Il2CppName: GetDataItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::GetDataItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetDataItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_EncodingName
// Il2CppName: get_EncodingName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)()>(&System::Text::Encoding::get_EncodingName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_EncodingName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_HeaderName
// Il2CppName: get_HeaderName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)()>(&System::Text::Encoding::get_HeaderName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_HeaderName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_WebName
// Il2CppName: get_WebName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)()>(&System::Text::Encoding::get_WebName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_WebName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_EncoderFallback
// Il2CppName: get_EncoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::EncoderFallback* (System::Text::Encoding::*)()>(&System::Text::Encoding::get_EncoderFallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_EncoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::set_EncoderFallback
// Il2CppName: set_EncoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::EncoderFallback*)>(&System::Text::Encoding::set_EncoderFallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderFallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "set_EncoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_DecoderFallback
// Il2CppName: get_DecoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::DecoderFallback* (System::Text::Encoding::*)()>(&System::Text::Encoding::get_DecoderFallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_DecoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::set_DecoderFallback
// Il2CppName: set_DecoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::DecoderFallback*)>(&System::Text::Encoding::set_DecoderFallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderFallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "set_DecoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Text::Encoding::*)()>(&System::Text::Encoding::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Text::Encoding::*)()>(&System::Text::Encoding::get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_ASCII
// Il2CppName: get_ASCII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_ASCII)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_ASCII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_Latin1
// Il2CppName: get_Latin1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_Latin1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_Latin1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::StringW)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<::Il2CppChar>, int, int)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int, ::System::Text::EncoderNLS*)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, count, encoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Text::Encoding::*)(::ArrayW<::Il2CppChar>)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Text::Encoding::*)(::ArrayW<::Il2CppChar>, int, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<::Il2CppChar>, int, int, ::ArrayW<uint8_t>, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* charIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, charIndex, charCount, bytes, byteIndex});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Text::Encoding::*)(::StringW)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::StringW, int, int, ::ArrayW<uint8_t>, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* charIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, charIndex, charCount, bytes, byteIndex});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int, uint8_t*, int, ::System::Text::EncoderNLS*)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, charCount, bytes, byteCount, encoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int, uint8_t*, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, charCount, bytes, byteCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int)>(&System::Text::Encoding::GetCharCount)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int)>(&System::Text::Encoding::GetCharCount)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int, ::System::Text::DecoderNLS*)>(&System::Text::Encoding::GetCharCount)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, count, decoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppChar> (System::Text::Encoding::*)(::ArrayW<uint8_t>)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppChar> (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int, ::ArrayW<::Il2CppChar>, int)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* charIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, byteIndex, byteCount, chars, charIndex});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int, ::Il2CppChar*, int)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, byteCount, chars, charCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int, ::Il2CppChar*, int, ::System::Text::DecoderNLS*)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, byteCount, chars, charCount, decoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_CodePage
// Il2CppName: get_CodePage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)()>(&System::Text::Encoding::get_CodePage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_CodePage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetDecoder
// Il2CppName: GetDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Decoder* (System::Text::Encoding::*)()>(&System::Text::Encoding::GetDecoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::CreateDefaultEncoding
// Il2CppName: CreateDefaultEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::CreateDefaultEncoding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "CreateDefaultEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::setReadOnly
// Il2CppName: setReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(bool)>(&System::Text::Encoding::setReadOnly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "setReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_Default
// Il2CppName: get_Default
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_Default)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_Default", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoder
// Il2CppName: GetEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoder* (System::Text::Encoding::*)()>(&System::Text::Encoding::GetEncoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(int)>(&System::Text::Encoding::GetMaxByteCount)> {
  static const MethodInfo* get() {
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetMaxByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{charCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(int)>(&System::Text::Encoding::GetMaxCharCount)> {
  static const MethodInfo* get() {
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetMaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{byteCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)(::ArrayW<uint8_t>)>(&System::Text::Encoding::GetString)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int)>(&System::Text::Encoding::GetString)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_Unicode
// Il2CppName: get_Unicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_Unicode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_Unicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_BigEndianUnicode
// Il2CppName: get_BigEndianUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_BigEndianUnicode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_BigEndianUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_UTF7
// Il2CppName: get_UTF7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_UTF7)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_UTF7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_UTF8
// Il2CppName: get_UTF8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_UTF8)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_UTF8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_UTF32
// Il2CppName: get_UTF32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_UTF32)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_UTF32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBestFitUnicodeToBytesData
// Il2CppName: GetBestFitUnicodeToBytesData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppChar> (System::Text::Encoding::*)()>(&System::Text::Encoding::GetBestFitUnicodeToBytesData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBestFitUnicodeToBytesData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBestFitBytesToUnicodeData
// Il2CppName: GetBestFitBytesToUnicodeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppChar> (System::Text::Encoding::*)()>(&System::Text::Encoding::GetBestFitBytesToUnicodeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBestFitBytesToUnicodeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowBytesOverflow
// Il2CppName: ThrowBytesOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::ThrowBytesOverflow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowBytesOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowBytesOverflow
// Il2CppName: ThrowBytesOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::EncoderNLS*, bool)>(&System::Text::Encoding::ThrowBytesOverflow)> {
  static const MethodInfo* get() {
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderNLS")->byval_arg;
    static auto* nothingEncoded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowBytesOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encoder, nothingEncoded});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowCharsOverflow
// Il2CppName: ThrowCharsOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::ThrowCharsOverflow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowCharsOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowCharsOverflow
// Il2CppName: ThrowCharsOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::DecoderNLS*, bool)>(&System::Text::Encoding::ThrowCharsOverflow)> {
  static const MethodInfo* get() {
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderNLS")->byval_arg;
    static auto* nothingDecoded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowCharsOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{decoder, nothingDecoded});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::Encoding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Text::Encoding::*)(::Il2CppObject*)>(&System::Text::Encoding::Equals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)()>(&System::Text::Encoding::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
