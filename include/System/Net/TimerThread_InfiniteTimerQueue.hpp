// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.TimerThread
#include "System/Net/TimerThread.hpp"
// Including type: System.Net.TimerThread/Queue
#include "System/Net/TimerThread_Queue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::TimerThread::InfiniteTimerQueue);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::TimerThread::InfiniteTimerQueue*, "System.Net", "TimerThread/InfiniteTimerQueue");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.TimerThread/InfiniteTimerQueue
  // [TokenAttribute] Offset: FFFFFFFF
  class TimerThread::InfiniteTimerQueue : public ::System::Net::TimerThread::Queue {
    public:
    // System.Void .ctor()
    // Offset: 0xC6D8C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TimerThread::InfiniteTimerQueue* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::InfiniteTimerQueue::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TimerThread::InfiniteTimerQueue*, creationType>()));
    }
    // override System.Net.TimerThread/Timer CreateTimer(System.Net.TimerThread/Callback callback, System.Object context)
    // Offset: 0xC6F4CC
    // Implemented from: System.Net.TimerThread/Queue
    // Base method: System.Net.TimerThread/Timer Queue::CreateTimer(System.Net.TimerThread/Callback callback, System.Object context)
    ::System::Net::TimerThread::Timer* CreateTimer(::System::Net::TimerThread::Callback* callback, ::Il2CppObject* context);
  }; // System.Net.TimerThread/InfiniteTimerQueue
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::TimerThread::InfiniteTimerQueue::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::TimerThread::InfiniteTimerQueue::CreateTimer
// Il2CppName: CreateTimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::TimerThread::Timer* (System::Net::TimerThread::InfiniteTimerQueue::*)(::System::Net::TimerThread::Callback*, ::Il2CppObject*)>(&System::Net::TimerThread::InfiniteTimerQueue::CreateTimer)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("System.Net", "TimerThread/Callback")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::TimerThread::InfiniteTimerQueue*), "CreateTimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, context});
  }
};
