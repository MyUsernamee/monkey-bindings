// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Net.WebHeaderCollectionType
#include "System/Net/WebHeaderCollectionType.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: HttpRequestHeader
  struct HttpRequestHeader;
  // Forward declaring type: HeaderInfoTable
  class HeaderInfoTable;
  // Forward declaring type: HttpResponseHeader
  struct HttpResponseHeader;
  // Forward declaring type: DataParseStatus
  struct DataParseStatus;
  // Forward declaring type: WebParseError
  struct WebParseError;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebHeaderCollection
  class WebHeaderCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebHeaderCollection);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebHeaderCollection*, "System.Net", "WebHeaderCollection");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x82
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebHeaderCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: A5F654
  // [DefaultMemberAttribute] Offset: A5F654
  class WebHeaderCollection : public ::System::Collections::Specialized::NameValueCollection {
    public:
    // Nested type: ::System::Net::WebHeaderCollection::HeaderEncoding
    class HeaderEncoding;
    // Nested type: ::System::Net::WebHeaderCollection::RfcChar
    struct RfcChar;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: System.Net.WebHeaderCollection/RfcChar
    // [TokenAttribute] Offset: FFFFFFFF
    struct RfcChar/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: RfcChar
      constexpr RfcChar(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar High
      static constexpr const uint8_t High = 0u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar High
      static ::System::Net::WebHeaderCollection::RfcChar _get_High();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar High
      static void _set_High(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar Reg
      static constexpr const uint8_t Reg = 1u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar Reg
      static ::System::Net::WebHeaderCollection::RfcChar _get_Reg();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar Reg
      static void _set_Reg(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar Ctl
      static constexpr const uint8_t Ctl = 2u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar Ctl
      static ::System::Net::WebHeaderCollection::RfcChar _get_Ctl();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar Ctl
      static void _set_Ctl(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar CR
      static constexpr const uint8_t CR = 3u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar CR
      static ::System::Net::WebHeaderCollection::RfcChar _get_CR();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar CR
      static void _set_CR(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar LF
      static constexpr const uint8_t LF = 4u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar LF
      static ::System::Net::WebHeaderCollection::RfcChar _get_LF();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar LF
      static void _set_LF(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar WS
      static constexpr const uint8_t WS = 5u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar WS
      static ::System::Net::WebHeaderCollection::RfcChar _get_WS();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar WS
      static void _set_WS(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar Colon
      static constexpr const uint8_t Colon = 6u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar Colon
      static ::System::Net::WebHeaderCollection::RfcChar _get_Colon();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar Colon
      static void _set_Colon(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/RfcChar Delim
      static constexpr const uint8_t Delim = 7u;
      // Get static field: static public System.Net.WebHeaderCollection/RfcChar Delim
      static ::System::Net::WebHeaderCollection::RfcChar _get_Delim();
      // Set static field: static public System.Net.WebHeaderCollection/RfcChar Delim
      static void _set_Delim(::System::Net::WebHeaderCollection::RfcChar value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // System.Net.WebHeaderCollection/RfcChar
    #pragma pack(pop)
    static check_size<sizeof(WebHeaderCollection::RfcChar), 0 + sizeof(uint8_t)> __System_Net_WebHeaderCollection_RfcCharSizeCheck;
    static_assert(sizeof(WebHeaderCollection::RfcChar) == 0x1);
    public:
    // private System.String[] m_CommonHeaders
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::StringW> m_CommonHeaders;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Int32 m_NumCommonHeaders
    // Size: 0x4
    // Offset: 0x70
    int m_NumCommonHeaders;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_NumCommonHeaders and: m_InnerCollection
    char __padding1[0x4] = {};
    // private System.Collections.Specialized.NameValueCollection m_InnerCollection
    // Size: 0x8
    // Offset: 0x78
    ::System::Collections::Specialized::NameValueCollection* m_InnerCollection;
    // Field size check
    static_assert(sizeof(::System::Collections::Specialized::NameValueCollection*) == 0x8);
    // private System.Net.WebHeaderCollectionType m_Type
    // Size: 0x2
    // Offset: 0x80
    ::System::Net::WebHeaderCollectionType m_Type;
    // Field size check
    static_assert(sizeof(::System::Net::WebHeaderCollectionType) == 0x2);
    public:
    // static field const value: static private System.Int32 ApproxAveHeaderLineSize
    static constexpr const int ApproxAveHeaderLineSize = 30;
    // Get static field: static private System.Int32 ApproxAveHeaderLineSize
    static int _get_ApproxAveHeaderLineSize();
    // Set static field: static private System.Int32 ApproxAveHeaderLineSize
    static void _set_ApproxAveHeaderLineSize(int value);
    // static field const value: static private System.Int32 ApproxHighAvgNumHeaders
    static constexpr const int ApproxHighAvgNumHeaders = 16;
    // Get static field: static private System.Int32 ApproxHighAvgNumHeaders
    static int _get_ApproxHighAvgNumHeaders();
    // Set static field: static private System.Int32 ApproxHighAvgNumHeaders
    static void _set_ApproxHighAvgNumHeaders(int value);
    // Get static field: static private readonly System.Net.HeaderInfoTable HInfo
    static ::System::Net::HeaderInfoTable* _get_HInfo();
    // Set static field: static private readonly System.Net.HeaderInfoTable HInfo
    static void _set_HInfo(::System::Net::HeaderInfoTable* value);
    // Get static field: static private readonly System.String[] s_CommonHeaderNames
    static ::ArrayW<::StringW> _get_s_CommonHeaderNames();
    // Set static field: static private readonly System.String[] s_CommonHeaderNames
    static void _set_s_CommonHeaderNames(::ArrayW<::StringW> value);
    // Get static field: static private readonly System.SByte[] s_CommonHeaderHints
    static ::ArrayW<int8_t> _get_s_CommonHeaderHints();
    // Set static field: static private readonly System.SByte[] s_CommonHeaderHints
    static void _set_s_CommonHeaderHints(::ArrayW<int8_t> value);
    // static field const value: static private System.Int32 c_AcceptRanges
    static constexpr const int c_AcceptRanges = 0;
    // Get static field: static private System.Int32 c_AcceptRanges
    static int _get_c_AcceptRanges();
    // Set static field: static private System.Int32 c_AcceptRanges
    static void _set_c_AcceptRanges(int value);
    // static field const value: static private System.Int32 c_ContentLength
    static constexpr const int c_ContentLength = 1;
    // Get static field: static private System.Int32 c_ContentLength
    static int _get_c_ContentLength();
    // Set static field: static private System.Int32 c_ContentLength
    static void _set_c_ContentLength(int value);
    // static field const value: static private System.Int32 c_CacheControl
    static constexpr const int c_CacheControl = 2;
    // Get static field: static private System.Int32 c_CacheControl
    static int _get_c_CacheControl();
    // Set static field: static private System.Int32 c_CacheControl
    static void _set_c_CacheControl(int value);
    // static field const value: static private System.Int32 c_ContentType
    static constexpr const int c_ContentType = 3;
    // Get static field: static private System.Int32 c_ContentType
    static int _get_c_ContentType();
    // Set static field: static private System.Int32 c_ContentType
    static void _set_c_ContentType(int value);
    // static field const value: static private System.Int32 c_Date
    static constexpr const int c_Date = 4;
    // Get static field: static private System.Int32 c_Date
    static int _get_c_Date();
    // Set static field: static private System.Int32 c_Date
    static void _set_c_Date(int value);
    // static field const value: static private System.Int32 c_Expires
    static constexpr const int c_Expires = 5;
    // Get static field: static private System.Int32 c_Expires
    static int _get_c_Expires();
    // Set static field: static private System.Int32 c_Expires
    static void _set_c_Expires(int value);
    // static field const value: static private System.Int32 c_ETag
    static constexpr const int c_ETag = 6;
    // Get static field: static private System.Int32 c_ETag
    static int _get_c_ETag();
    // Set static field: static private System.Int32 c_ETag
    static void _set_c_ETag(int value);
    // static field const value: static private System.Int32 c_LastModified
    static constexpr const int c_LastModified = 7;
    // Get static field: static private System.Int32 c_LastModified
    static int _get_c_LastModified();
    // Set static field: static private System.Int32 c_LastModified
    static void _set_c_LastModified(int value);
    // static field const value: static private System.Int32 c_Location
    static constexpr const int c_Location = 8;
    // Get static field: static private System.Int32 c_Location
    static int _get_c_Location();
    // Set static field: static private System.Int32 c_Location
    static void _set_c_Location(int value);
    // static field const value: static private System.Int32 c_ProxyAuthenticate
    static constexpr const int c_ProxyAuthenticate = 9;
    // Get static field: static private System.Int32 c_ProxyAuthenticate
    static int _get_c_ProxyAuthenticate();
    // Set static field: static private System.Int32 c_ProxyAuthenticate
    static void _set_c_ProxyAuthenticate(int value);
    // static field const value: static private System.Int32 c_P3P
    static constexpr const int c_P3P = 10;
    // Get static field: static private System.Int32 c_P3P
    static int _get_c_P3P();
    // Set static field: static private System.Int32 c_P3P
    static void _set_c_P3P(int value);
    // static field const value: static private System.Int32 c_SetCookie2
    static constexpr const int c_SetCookie2 = 11;
    // Get static field: static private System.Int32 c_SetCookie2
    static int _get_c_SetCookie2();
    // Set static field: static private System.Int32 c_SetCookie2
    static void _set_c_SetCookie2(int value);
    // static field const value: static private System.Int32 c_SetCookie
    static constexpr const int c_SetCookie = 12;
    // Get static field: static private System.Int32 c_SetCookie
    static int _get_c_SetCookie();
    // Set static field: static private System.Int32 c_SetCookie
    static void _set_c_SetCookie(int value);
    // static field const value: static private System.Int32 c_Server
    static constexpr const int c_Server = 13;
    // Get static field: static private System.Int32 c_Server
    static int _get_c_Server();
    // Set static field: static private System.Int32 c_Server
    static void _set_c_Server(int value);
    // static field const value: static private System.Int32 c_Via
    static constexpr const int c_Via = 14;
    // Get static field: static private System.Int32 c_Via
    static int _get_c_Via();
    // Set static field: static private System.Int32 c_Via
    static void _set_c_Via(int value);
    // static field const value: static private System.Int32 c_WwwAuthenticate
    static constexpr const int c_WwwAuthenticate = 15;
    // Get static field: static private System.Int32 c_WwwAuthenticate
    static int _get_c_WwwAuthenticate();
    // Set static field: static private System.Int32 c_WwwAuthenticate
    static void _set_c_WwwAuthenticate(int value);
    // static field const value: static private System.Int32 c_XAspNetVersion
    static constexpr const int c_XAspNetVersion = 16;
    // Get static field: static private System.Int32 c_XAspNetVersion
    static int _get_c_XAspNetVersion();
    // Set static field: static private System.Int32 c_XAspNetVersion
    static void _set_c_XAspNetVersion(int value);
    // static field const value: static private System.Int32 c_XPoweredBy
    static constexpr const int c_XPoweredBy = 17;
    // Get static field: static private System.Int32 c_XPoweredBy
    static int _get_c_XPoweredBy();
    // Set static field: static private System.Int32 c_XPoweredBy
    static void _set_c_XPoweredBy(int value);
    // Get static field: static private readonly System.Char[] HttpTrimCharacters
    static ::ArrayW<::Il2CppChar> _get_HttpTrimCharacters();
    // Set static field: static private readonly System.Char[] HttpTrimCharacters
    static void _set_HttpTrimCharacters(::ArrayW<::Il2CppChar> value);
    // Get static field: static private System.Net.WebHeaderCollection/RfcChar[] RfcCharMap
    static ::ArrayW<::System::Net::WebHeaderCollection::RfcChar> _get_RfcCharMap();
    // Set static field: static private System.Net.WebHeaderCollection/RfcChar[] RfcCharMap
    static void _set_RfcCharMap(::ArrayW<::System::Net::WebHeaderCollection::RfcChar> value);
    // Get instance field reference: private System.String[] m_CommonHeaders
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_m_CommonHeaders();
    // Get instance field reference: private System.Int32 m_NumCommonHeaders
    [[deprecated("Use field access instead!")]] int& dyn_m_NumCommonHeaders();
    // Get instance field reference: private System.Collections.Specialized.NameValueCollection m_InnerCollection
    [[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& dyn_m_InnerCollection();
    // Get instance field reference: private System.Net.WebHeaderCollectionType m_Type
    [[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollectionType& dyn_m_Type();
    // System.String get_ContentLength()
    // Offset: 0xF27978
    ::StringW get_ContentLength();
    // System.String get_CacheControl()
    // Offset: 0xF27A3C
    ::StringW get_CacheControl();
    // System.String get_ContentType()
    // Offset: 0xF27B00
    ::StringW get_ContentType();
    // System.String get_Date()
    // Offset: 0xF27BC4
    ::StringW get_Date();
    // System.String get_Expires()
    // Offset: 0xF27C88
    ::StringW get_Expires();
    // System.String get_ETag()
    // Offset: 0xF27D4C
    ::StringW get_ETag();
    // System.String get_LastModified()
    // Offset: 0xF27E10
    ::StringW get_LastModified();
    // System.String get_Location()
    // Offset: 0xF27ED4
    ::StringW get_Location();
    // System.String get_ProxyAuthenticate()
    // Offset: 0xF281A8
    ::StringW get_ProxyAuthenticate();
    // System.String get_SetCookie2()
    // Offset: 0xF2826C
    ::StringW get_SetCookie2();
    // System.String get_SetCookie()
    // Offset: 0xF28330
    ::StringW get_SetCookie();
    // System.String get_Server()
    // Offset: 0xF283F4
    ::StringW get_Server();
    // System.String get_Via()
    // Offset: 0xF284B8
    ::StringW get_Via();
    // private System.Void NormalizeCommonHeaders()
    // Offset: 0xF2857C
    void NormalizeCommonHeaders();
    // private System.Collections.Specialized.NameValueCollection get_InnerCollection()
    // Offset: 0xF2869C
    ::System::Collections::Specialized::NameValueCollection* get_InnerCollection();
    // static System.Boolean AllowMultiValues(System.String name)
    // Offset: 0xF1FDE8
    static bool AllowMultiValues(::StringW name);
    // private System.Boolean get_AllowHttpRequestHeader()
    // Offset: 0xF28744
    bool get_AllowHttpRequestHeader();
    // System.Boolean get_AllowHttpResponseHeader()
    // Offset: 0xF2877C
    bool get_AllowHttpResponseHeader();
    // public System.String get_Item(System.Net.HttpRequestHeader header)
    // Offset: 0xF287AC
    ::StringW get_Item(::System::Net::HttpRequestHeader header);
    // public System.Void set_Item(System.Net.HttpRequestHeader header, System.String value)
    // Offset: 0xF288A8
    void set_Item(::System::Net::HttpRequestHeader header, ::StringW value);
    // public System.String get_Item(System.Net.HttpResponseHeader header)
    // Offset: 0xF289AC
    ::StringW get_Item(::System::Net::HttpResponseHeader header);
    // public System.Void set_Item(System.Net.HttpResponseHeader header, System.String value)
    // Offset: 0xF28B00
    void set_Item(::System::Net::HttpResponseHeader header, ::StringW value);
    // public System.Void Add(System.Net.HttpRequestHeader header, System.String value)
    // Offset: 0xF28CE4
    void Add(::System::Net::HttpRequestHeader header, ::StringW value);
    // public System.Void Add(System.Net.HttpResponseHeader header, System.String value)
    // Offset: 0xF28DF0
    void Add(::System::Net::HttpResponseHeader header, ::StringW value);
    // public System.Void Set(System.Net.HttpRequestHeader header, System.String value)
    // Offset: 0xF28FDC
    void Set(::System::Net::HttpRequestHeader header, ::StringW value);
    // public System.Void Set(System.Net.HttpResponseHeader header, System.String value)
    // Offset: 0xF290E8
    void Set(::System::Net::HttpResponseHeader header, ::StringW value);
    // System.Void SetInternal(System.Net.HttpResponseHeader header, System.String value)
    // Offset: 0xF292D4
    void SetInternal(::System::Net::HttpResponseHeader header, ::StringW value);
    // public System.Void Remove(System.Net.HttpRequestHeader header)
    // Offset: 0xF294B4
    void Remove(::System::Net::HttpRequestHeader header);
    // public System.Void Remove(System.Net.HttpResponseHeader header)
    // Offset: 0xF295B8
    void Remove(::System::Net::HttpResponseHeader header);
    // protected System.Void AddWithoutValidate(System.String headerName, System.String headerValue)
    // Offset: 0xF296BC
    void AddWithoutValidate(::StringW headerName, ::StringW headerValue);
    // System.Void SetAddVerified(System.String name, System.String value)
    // Offset: 0xF29BE4
    void SetAddVerified(::StringW name, ::StringW value);
    // System.Void AddInternal(System.String name, System.String value)
    // Offset: 0xF1FE98
    void AddInternal(::StringW name, ::StringW value);
    // System.Void ChangeInternal(System.String name, System.String value)
    // Offset: 0xF29CC0
    void ChangeInternal(::StringW name, ::StringW value);
    // System.Void RemoveInternal(System.String name)
    // Offset: 0xF29D20
    void RemoveInternal(::StringW name);
    // System.Void CheckUpdate(System.String name, System.String value)
    // Offset: 0xF29D80
    void CheckUpdate(::StringW name, ::StringW value);
    // private System.Void AddInternalNotCommon(System.String name, System.String value)
    // Offset: 0xF29E08
    void AddInternalNotCommon(::StringW name, ::StringW value);
    // static System.String CheckBadChars(System.String name, System.Boolean isHeaderValue)
    // Offset: 0xF29868
    static ::StringW CheckBadChars(::StringW name, bool isHeaderValue);
    // static System.Boolean IsValidToken(System.String token)
    // Offset: 0xF29EE8
    static bool IsValidToken(::StringW token);
    // static System.Boolean ContainsNonAsciiChars(System.String token)
    // Offset: 0xF29E60
    static bool ContainsNonAsciiChars(::StringW token);
    // System.Void ThrowOnRestrictedHeader(System.String headerName)
    // Offset: 0xF29FB4
    void ThrowOnRestrictedHeader(::StringW headerName);
    // public System.Void Add(System.String header)
    // Offset: 0xF1DE48
    void Add(::StringW header);
    // System.Void SetInternal(System.String name, System.String value)
    // Offset: 0xF1FEF8
    void SetInternal(::StringW name, ::StringW value);
    // System.String ToString(System.Boolean forTrace)
    // Offset: 0xF2AB70
    ::StringW ToString(bool forTrace);
    // static System.String GetAsString(System.Collections.Specialized.NameValueCollection cc, System.Boolean winInetCompat, System.Boolean forTrace)
    // Offset: 0xF2A8C8
    static ::StringW GetAsString(::System::Collections::Specialized::NameValueCollection* cc, bool winInetCompat, bool forTrace);
    // public System.Byte[] ToByteArray()
    // Offset: 0xF2ABDC
    ::ArrayW<uint8_t> ToByteArray();
    // static public System.Boolean IsRestricted(System.String headerName)
    // Offset: 0xF2AC78
    static bool IsRestricted(::StringW headerName);
    // static public System.Boolean IsRestricted(System.String headerName, System.Boolean response)
    // Offset: 0xF2ACE0
    static bool IsRestricted(::StringW headerName, bool response);
    // System.Void .ctor(System.Net.WebHeaderCollectionType type)
    // Offset: 0xF2ADD4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection* New_ctor(::System::Net::WebHeaderCollectionType type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection*, creationType>(type)));
    }
    // System.Void .ctor(System.Collections.Specialized.NameValueCollection cc)
    // Offset: 0xF2AEB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection* New_ctor(::System::Collections::Specialized::NameValueCollection* cc) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection*, creationType>(cc)));
    }
    // System.Net.DataParseStatus ParseHeaders(System.Byte[] buffer, System.Int32 size, ref System.Int32 unparsed, ref System.Int32 totalResponseHeadersLength, System.Int32 maximumResponseHeadersLength, ref System.Net.WebParseError parseError)
    // Offset: 0xF2B3F8
    ::System::Net::DataParseStatus ParseHeaders(::ArrayW<uint8_t> buffer, int size, ByRef<int> unparsed, ByRef<int> totalResponseHeadersLength, int maximumResponseHeadersLength, ByRef<::System::Net::WebParseError> parseError);
    // System.Net.DataParseStatus ParseHeadersStrict(System.Byte[] buffer, System.Int32 size, ref System.Int32 unparsed, ref System.Int32 totalResponseHeadersLength, System.Int32 maximumResponseHeadersLength, ref System.Net.WebParseError parseError)
    // Offset: 0xF2B9BC
    ::System::Net::DataParseStatus ParseHeadersStrict(::ArrayW<uint8_t> buffer, int size, ByRef<int> unparsed, ByRef<int> totalResponseHeadersLength, int maximumResponseHeadersLength, ByRef<::System::Net::WebParseError> parseError);
    // private System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Offset: 0xF2C360
    void System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext);
    // public override System.Void Add(System.String name, System.String value)
    // Offset: 0xF2A140
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::Add(System.String name, System.String value)
    void Add(::StringW name, ::StringW value);
    // public override System.Void Set(System.String name, System.String value)
    // Offset: 0xF2A2F8
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::Set(System.String name, System.String value)
    void Set(::StringW name, ::StringW value);
    // public override System.Void Remove(System.String name)
    // Offset: 0xF2A51C
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::Remove(System.String name)
    void Remove(::StringW name);
    // public override System.String[] GetValues(System.String header)
    // Offset: 0xF2A658
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String[] NameValueCollection::GetValues(System.String header)
    ::ArrayW<::StringW> GetValues(::StringW header);
    // public override System.String ToString()
    // Offset: 0xF2A85C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
    // public System.Void .ctor()
    // Offset: 0xF1DD30
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::.ctor()
    // Base method: System.Void NameObjectCollectionBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection*, creationType>()));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Offset: 0xF2B0B8
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Base method: System.Void NameObjectCollectionBase::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection* New_ctor(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection*, creationType>(serializationInfo, streamingContext)));
    }
    // public override System.Void OnDeserialization(System.Object sender)
    // Offset: 0xF2B26C
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Void NameObjectCollectionBase::OnDeserialization(System.Object sender)
    void OnDeserialization(::Il2CppObject* sender);
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Offset: 0xF2B270
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Void NameObjectCollectionBase::GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    void GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext);
    // public override System.String Get(System.String name)
    // Offset: 0xF2C36C
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String NameValueCollection::Get(System.String name)
    ::StringW Get(::StringW name);
    // public override System.Collections.IEnumerator GetEnumerator()
    // Offset: 0xF2C6D0
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Collections.IEnumerator NameObjectCollectionBase::GetEnumerator()
    ::System::Collections::IEnumerator* GetEnumerator();
    // public override System.Int32 get_Count()
    // Offset: 0xF2C74C
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Int32 NameObjectCollectionBase::get_Count()
    int get_Count();
    // public override System.Collections.Specialized.NameObjectCollectionBase/KeysCollection get_Keys()
    // Offset: 0xF2C788
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Collections.Specialized.NameObjectCollectionBase/KeysCollection NameObjectCollectionBase::get_Keys()
    ::System::Collections::Specialized::NameObjectCollectionBase::KeysCollection* get_Keys();
    // override System.Boolean InternalHasKeys()
    // Offset: 0xF2C7C4
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Boolean NameValueCollection::InternalHasKeys()
    bool InternalHasKeys();
    // public override System.String Get(System.Int32 index)
    // Offset: 0xF2C7FC
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String NameValueCollection::Get(System.Int32 index)
    ::StringW Get(int index);
    // public override System.String[] GetValues(System.Int32 index)
    // Offset: 0xF2C840
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String[] NameValueCollection::GetValues(System.Int32 index)
    ::ArrayW<::StringW> GetValues(int index);
    // public override System.String GetKey(System.Int32 index)
    // Offset: 0xF2C884
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String NameValueCollection::GetKey(System.Int32 index)
    ::StringW GetKey(int index);
    // public override System.String[] get_AllKeys()
    // Offset: 0xF2C8C8
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String[] NameValueCollection::get_AllKeys()
    ::ArrayW<::StringW> get_AllKeys();
    // public override System.Void Clear()
    // Offset: 0xF2C904
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::Clear()
    void Clear();
    // static private System.Void .cctor()
    // Offset: 0xF2C950
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Void NameObjectCollectionBase::.cctor()
    static void _cctor();
  }; // System.Net.WebHeaderCollection
  #pragma pack(pop)
  static check_size<sizeof(WebHeaderCollection), 128 + sizeof(::System::Net::WebHeaderCollectionType)> __System_Net_WebHeaderCollectionSizeCheck;
  static_assert(sizeof(WebHeaderCollection) == 0x82);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebHeaderCollection::RfcChar, "System.Net", "WebHeaderCollection/RfcChar");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_ContentLength
// Il2CppName: get_ContentLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_ContentLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_ContentLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_CacheControl
// Il2CppName: get_CacheControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_CacheControl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_CacheControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_ContentType
// Il2CppName: get_ContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_ContentType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_ContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Date
// Il2CppName: get_Date
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Date)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Date", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Expires
// Il2CppName: get_Expires
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Expires)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Expires", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_ETag
// Il2CppName: get_ETag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_ETag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_ETag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_LastModified
// Il2CppName: get_LastModified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_LastModified)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_LastModified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Location
// Il2CppName: get_Location
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Location)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Location", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_ProxyAuthenticate
// Il2CppName: get_ProxyAuthenticate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_ProxyAuthenticate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_ProxyAuthenticate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_SetCookie2
// Il2CppName: get_SetCookie2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_SetCookie2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_SetCookie2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_SetCookie
// Il2CppName: get_SetCookie
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_SetCookie)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_SetCookie", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Server
// Il2CppName: get_Server
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Server)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Server", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Via
// Il2CppName: get_Via
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Via)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Via", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::NormalizeCommonHeaders
// Il2CppName: NormalizeCommonHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::NormalizeCommonHeaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "NormalizeCommonHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_InnerCollection
// Il2CppName: get_InnerCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Specialized::NameValueCollection* (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_InnerCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_InnerCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::AllowMultiValues
// Il2CppName: AllowMultiValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::Net::WebHeaderCollection::AllowMultiValues)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "AllowMultiValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_AllowHttpRequestHeader
// Il2CppName: get_AllowHttpRequestHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_AllowHttpRequestHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_AllowHttpRequestHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_AllowHttpResponseHeader
// Il2CppName: get_AllowHttpResponseHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_AllowHttpResponseHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_AllowHttpResponseHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(::System::Net::HttpRequestHeader)>(&System::Net::WebHeaderCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpRequestHeader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpRequestHeader, ::StringW)>(&System::Net::WebHeaderCollection::set_Item)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpRequestHeader")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(::System::Net::HttpResponseHeader)>(&System::Net::WebHeaderCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpResponseHeader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpResponseHeader, ::StringW)>(&System::Net::WebHeaderCollection::set_Item)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpResponseHeader")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpRequestHeader, ::StringW)>(&System::Net::WebHeaderCollection::Add)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpRequestHeader")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpResponseHeader, ::StringW)>(&System::Net::WebHeaderCollection::Add)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpResponseHeader")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpRequestHeader, ::StringW)>(&System::Net::WebHeaderCollection::Set)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpRequestHeader")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpResponseHeader, ::StringW)>(&System::Net::WebHeaderCollection::Set)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpResponseHeader")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::SetInternal
// Il2CppName: SetInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpResponseHeader, ::StringW)>(&System::Net::WebHeaderCollection::SetInternal)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpResponseHeader")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "SetInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpRequestHeader)>(&System::Net::WebHeaderCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpRequestHeader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpResponseHeader)>(&System::Net::WebHeaderCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpResponseHeader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::AddWithoutValidate
// Il2CppName: AddWithoutValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::AddWithoutValidate)> {
  static const MethodInfo* get() {
    static auto* headerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* headerValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "AddWithoutValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{headerName, headerValue});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::SetAddVerified
// Il2CppName: SetAddVerified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::SetAddVerified)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "SetAddVerified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::AddInternal
// Il2CppName: AddInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::AddInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "AddInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ChangeInternal
// Il2CppName: ChangeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::ChangeInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ChangeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::RemoveInternal
// Il2CppName: RemoveInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::RemoveInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "RemoveInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::CheckUpdate
// Il2CppName: CheckUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::CheckUpdate)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "CheckUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::AddInternalNotCommon
// Il2CppName: AddInternalNotCommon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::AddInternalNotCommon)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "AddInternalNotCommon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::CheckBadChars
// Il2CppName: CheckBadChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, bool)>(&System::Net::WebHeaderCollection::CheckBadChars)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isHeaderValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "CheckBadChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, isHeaderValue});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::IsValidToken
// Il2CppName: IsValidToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::Net::WebHeaderCollection::IsValidToken)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "IsValidToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ContainsNonAsciiChars
// Il2CppName: ContainsNonAsciiChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::Net::WebHeaderCollection::ContainsNonAsciiChars)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ContainsNonAsciiChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ThrowOnRestrictedHeader
// Il2CppName: ThrowOnRestrictedHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::ThrowOnRestrictedHeader)> {
  static const MethodInfo* get() {
    static auto* headerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ThrowOnRestrictedHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{headerName});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::Add)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::SetInternal
// Il2CppName: SetInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::SetInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "SetInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(bool)>(&System::Net::WebHeaderCollection::ToString)> {
  static const MethodInfo* get() {
    static auto* forTrace = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{forTrace});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetAsString
// Il2CppName: GetAsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Collections::Specialized::NameValueCollection*, bool, bool)>(&System::Net::WebHeaderCollection::GetAsString)> {
  static const MethodInfo* get() {
    static auto* cc = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    static auto* winInetCompat = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* forTrace = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetAsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cc, winInetCompat, forTrace});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ToByteArray
// Il2CppName: ToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::ToByteArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::IsRestricted
// Il2CppName: IsRestricted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::Net::WebHeaderCollection::IsRestricted)> {
  static const MethodInfo* get() {
    static auto* headerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "IsRestricted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{headerName});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::IsRestricted
// Il2CppName: IsRestricted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, bool)>(&System::Net::WebHeaderCollection::IsRestricted)> {
  static const MethodInfo* get() {
    static auto* headerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* response = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "IsRestricted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{headerName, response});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ParseHeaders
// Il2CppName: ParseHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::DataParseStatus (System::Net::WebHeaderCollection::*)(::ArrayW<uint8_t>, int, ByRef<int>, ByRef<int>, int, ByRef<::System::Net::WebParseError>)>(&System::Net::WebHeaderCollection::ParseHeaders)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* unparsed = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* totalResponseHeadersLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* maximumResponseHeadersLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parseError = &::il2cpp_utils::GetClassFromName("System.Net", "WebParseError")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ParseHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, size, unparsed, totalResponseHeadersLength, maximumResponseHeadersLength, parseError});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ParseHeadersStrict
// Il2CppName: ParseHeadersStrict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::DataParseStatus (System::Net::WebHeaderCollection::*)(::ArrayW<uint8_t>, int, ByRef<int>, ByRef<int>, int, ByRef<::System::Net::WebParseError>)>(&System::Net::WebHeaderCollection::ParseHeadersStrict)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* unparsed = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* totalResponseHeadersLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* maximumResponseHeadersLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parseError = &::il2cpp_utils::GetClassFromName("System.Net", "WebParseError")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ParseHeadersStrict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, size, unparsed, totalResponseHeadersLength, maximumResponseHeadersLength, parseError});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Net::WebHeaderCollection::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  static const MethodInfo* get() {
    static auto* serializationInfo = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* streamingContext = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializationInfo, streamingContext});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::Add)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::Set)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetValues
// Il2CppName: GetValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::GetValues)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::OnDeserialization
// Il2CppName: OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::Il2CppObject*)>(&System::Net::WebHeaderCollection::OnDeserialization)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Net::WebHeaderCollection::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* serializationInfo = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* streamingContext = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializationInfo, streamingContext});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::Get)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Keys
// Il2CppName: get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Specialized::NameObjectCollectionBase::KeysCollection* (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Keys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::InternalHasKeys
// Il2CppName: InternalHasKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::InternalHasKeys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "InternalHasKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(int)>(&System::Net::WebHeaderCollection::Get)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetValues
// Il2CppName: GetValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Net::WebHeaderCollection::*)(int)>(&System::Net::WebHeaderCollection::GetValues)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetKey
// Il2CppName: GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(int)>(&System::Net::WebHeaderCollection::GetKey)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_AllKeys
// Il2CppName: get_AllKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_AllKeys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_AllKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::WebHeaderCollection::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
