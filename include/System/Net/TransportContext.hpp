// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Authentication::ExtendedProtection
namespace System::Security::Authentication::ExtendedProtection {
  // Forward declaring type: ChannelBinding
  class ChannelBinding;
  // Forward declaring type: ChannelBindingKind
  struct ChannelBindingKind;
  // Forward declaring type: TokenBinding
  class TokenBinding;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: TransportContext
  class TransportContext;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::TransportContext);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::TransportContext*, "System.Net", "TransportContext");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.TransportContext
  // [TokenAttribute] Offset: FFFFFFFF
  class TransportContext : public ::Il2CppObject {
    public:
    // public System.Security.Authentication.ExtendedProtection.ChannelBinding GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind kind)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Security::Authentication::ExtendedProtection::ChannelBinding* GetChannelBinding(::System::Security::Authentication::ExtendedProtection::ChannelBindingKind kind);
    // public System.Collections.Generic.IEnumerable`1<System.Security.Authentication.ExtendedProtection.TokenBinding> GetTlsTokenBindings()
    // Offset: 0xC70CB8
    ::System::Collections::Generic::IEnumerable_1<::System::Security::Authentication::ExtendedProtection::TokenBinding*>* GetTlsTokenBindings();
    // protected System.Void .ctor()
    // Offset: 0xC70D18
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransportContext* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TransportContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransportContext*, creationType>()));
    }
  }; // System.Net.TransportContext
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::TransportContext::GetChannelBinding
// Il2CppName: GetChannelBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Authentication::ExtendedProtection::ChannelBinding* (System::Net::TransportContext::*)(::System::Security::Authentication::ExtendedProtection::ChannelBindingKind)>(&System::Net::TransportContext::GetChannelBinding)> {
  static const MethodInfo* get() {
    static auto* kind = &::il2cpp_utils::GetClassFromName("System.Security.Authentication.ExtendedProtection", "ChannelBindingKind")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::TransportContext*), "GetChannelBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kind});
  }
};
// Writing MetadataGetter for method: System::Net::TransportContext::GetTlsTokenBindings
// Il2CppName: GetTlsTokenBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::System::Security::Authentication::ExtendedProtection::TokenBinding*>* (System::Net::TransportContext::*)()>(&System::Net::TransportContext::GetTlsTokenBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::TransportContext*), "GetTlsTokenBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::TransportContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
