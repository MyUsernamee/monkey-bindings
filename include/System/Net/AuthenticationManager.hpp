// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: ICredentialPolicy
  class ICredentialPolicy;
  // Forward declaring type: Authorization
  class Authorization;
  // Forward declaring type: WebRequest
  class WebRequest;
  // Forward declaring type: ICredentials
  class ICredentials;
  // Forward declaring type: IAuthenticationModule
  class IAuthenticationModule;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Collections::Specialized
namespace System::Collections::Specialized {
  // Forward declaring type: StringDictionary
  class StringDictionary;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: AuthenticationManager
  class AuthenticationManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::AuthenticationManager);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::AuthenticationManager*, "System.Net", "AuthenticationManager");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.AuthenticationManager
  // [TokenAttribute] Offset: FFFFFFFF
  class AuthenticationManager : public ::Il2CppObject {
    public:
    // Get static field: static private System.Collections.ArrayList modules
    static ::System::Collections::ArrayList* _get_modules();
    // Set static field: static private System.Collections.ArrayList modules
    static void _set_modules(::System::Collections::ArrayList* value);
    // Get static field: static private System.Object locker
    static ::Il2CppObject* _get_locker();
    // Set static field: static private System.Object locker
    static void _set_locker(::Il2CppObject* value);
    // Get static field: static private System.Net.ICredentialPolicy credential_policy
    static ::System::Net::ICredentialPolicy* _get_credential_policy();
    // Set static field: static private System.Net.ICredentialPolicy credential_policy
    static void _set_credential_policy(::System::Net::ICredentialPolicy* value);
    // private System.Void .ctor()
    // Offset: 0x126496C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthenticationManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthenticationManager*, creationType>()));
    }
    // static private System.Void EnsureModules()
    // Offset: 0x1264974
    static void EnsureModules();
    // static public System.Net.ICredentialPolicy get_CredentialPolicy()
    // Offset: 0x1264BD4
    static ::System::Net::ICredentialPolicy* get_CredentialPolicy();
    // static public System.Void set_CredentialPolicy(System.Net.ICredentialPolicy value)
    // Offset: 0x1264C3C
    static void set_CredentialPolicy(::System::Net::ICredentialPolicy* value);
    // static private System.Exception GetMustImplement()
    // Offset: 0x1264CA8
    static ::System::Exception* GetMustImplement();
    // static public System.Collections.Specialized.StringDictionary get_CustomTargetNameDictionary()
    // Offset: 0x1264D04
    static ::System::Collections::Specialized::StringDictionary* get_CustomTargetNameDictionary();
    // static public System.Collections.IEnumerator get_RegisteredModules()
    // Offset: 0x1264D68
    static ::System::Collections::IEnumerator* get_RegisteredModules();
    // static System.Boolean get_OSSupportsExtendedProtection()
    // Offset: 0x1264DE8
    static bool get_OSSupportsExtendedProtection();
    // static System.Void Clear()
    // Offset: 0x1264DF0
    static void Clear();
    // static public System.Net.Authorization Authenticate(System.String challenge, System.Net.WebRequest request, System.Net.ICredentials credentials)
    // Offset: 0x1264F10
    static ::System::Net::Authorization* Authenticate(::StringW challenge, ::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials);
    // static private System.Net.Authorization DoAuthenticate(System.String challenge, System.Net.WebRequest request, System.Net.ICredentials credentials)
    // Offset: 0x126500C
    static ::System::Net::Authorization* DoAuthenticate(::StringW challenge, ::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials);
    // static public System.Net.Authorization PreAuthenticate(System.Net.WebRequest request, System.Net.ICredentials credentials)
    // Offset: 0x126549C
    static ::System::Net::Authorization* PreAuthenticate(::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials);
    // static public System.Void Register(System.Net.IAuthenticationModule authenticationModule)
    // Offset: 0x1265968
    static void Register(::System::Net::IAuthenticationModule* authenticationModule);
    // static public System.Void Unregister(System.Net.IAuthenticationModule authenticationModule)
    // Offset: 0x1265FF4
    static void Unregister(::System::Net::IAuthenticationModule* authenticationModule);
    // static public System.Void Unregister(System.String authenticationScheme)
    // Offset: 0x1266110
    static void Unregister(::StringW authenticationScheme);
    // static private System.Void DoUnregister(System.String authenticationScheme, System.Boolean throwEx)
    // Offset: 0x1265B4C
    static void DoUnregister(::StringW authenticationScheme, bool throwEx);
    // static private System.Void .cctor()
    // Offset: 0x12661B8
    static void _cctor();
  }; // System.Net.AuthenticationManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::AuthenticationManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::AuthenticationManager::EnsureModules
// Il2CppName: EnsureModules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::AuthenticationManager::EnsureModules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "EnsureModules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::get_CredentialPolicy
// Il2CppName: get_CredentialPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::ICredentialPolicy* (*)()>(&System::Net::AuthenticationManager::get_CredentialPolicy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "get_CredentialPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::set_CredentialPolicy
// Il2CppName: set_CredentialPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::ICredentialPolicy*)>(&System::Net::AuthenticationManager::set_CredentialPolicy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "ICredentialPolicy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "set_CredentialPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::GetMustImplement
// Il2CppName: GetMustImplement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)()>(&System::Net::AuthenticationManager::GetMustImplement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "GetMustImplement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::get_CustomTargetNameDictionary
// Il2CppName: get_CustomTargetNameDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Specialized::StringDictionary* (*)()>(&System::Net::AuthenticationManager::get_CustomTargetNameDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "get_CustomTargetNameDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::get_RegisteredModules
// Il2CppName: get_RegisteredModules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)()>(&System::Net::AuthenticationManager::get_RegisteredModules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "get_RegisteredModules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::get_OSSupportsExtendedProtection
// Il2CppName: get_OSSupportsExtendedProtection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Net::AuthenticationManager::get_OSSupportsExtendedProtection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "get_OSSupportsExtendedProtection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::AuthenticationManager::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::Authenticate
// Il2CppName: Authenticate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Authorization* (*)(::StringW, ::System::Net::WebRequest*, ::System::Net::ICredentials*)>(&System::Net::AuthenticationManager::Authenticate)> {
  static const MethodInfo* get() {
    static auto* challenge = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* credentials = &::il2cpp_utils::GetClassFromName("System.Net", "ICredentials")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "Authenticate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challenge, request, credentials});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::DoAuthenticate
// Il2CppName: DoAuthenticate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Authorization* (*)(::StringW, ::System::Net::WebRequest*, ::System::Net::ICredentials*)>(&System::Net::AuthenticationManager::DoAuthenticate)> {
  static const MethodInfo* get() {
    static auto* challenge = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* credentials = &::il2cpp_utils::GetClassFromName("System.Net", "ICredentials")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "DoAuthenticate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challenge, request, credentials});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::PreAuthenticate
// Il2CppName: PreAuthenticate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Authorization* (*)(::System::Net::WebRequest*, ::System::Net::ICredentials*)>(&System::Net::AuthenticationManager::PreAuthenticate)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* credentials = &::il2cpp_utils::GetClassFromName("System.Net", "ICredentials")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "PreAuthenticate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, credentials});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::IAuthenticationModule*)>(&System::Net::AuthenticationManager::Register)> {
  static const MethodInfo* get() {
    static auto* authenticationModule = &::il2cpp_utils::GetClassFromName("System.Net", "IAuthenticationModule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{authenticationModule});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::IAuthenticationModule*)>(&System::Net::AuthenticationManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* authenticationModule = &::il2cpp_utils::GetClassFromName("System.Net", "IAuthenticationModule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{authenticationModule});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&System::Net::AuthenticationManager::Unregister)> {
  static const MethodInfo* get() {
    static auto* authenticationScheme = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{authenticationScheme});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::DoUnregister
// Il2CppName: DoUnregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, bool)>(&System::Net::AuthenticationManager::DoUnregister)> {
  static const MethodInfo* get() {
    static auto* authenticationScheme = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* throwEx = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), "DoUnregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{authenticationScheme, throwEx});
  }
};
// Writing MetadataGetter for method: System::Net::AuthenticationManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::AuthenticationManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::AuthenticationManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
