// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: EmptyEnumerator
  class EmptyEnumerator;
}
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: IXmlSchemaInfo
  class IXmlSchemaInfo;
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: XmlDocument
  class XmlDocument;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::XmlDocument);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlDocument*, "System.Xml", "XmlDocument");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlDocument
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlDocument : public ::System::Xml::XmlNode {
    public:
    // Get static field: static System.Xml.EmptyEnumerator EmptyEnumerator
    static ::System::Xml::EmptyEnumerator* _get_EmptyEnumerator();
    // Set static field: static System.Xml.EmptyEnumerator EmptyEnumerator
    static void _set_EmptyEnumerator(::System::Xml::EmptyEnumerator* value);
    // Get static field: static System.Xml.Schema.IXmlSchemaInfo NotKnownSchemaInfo
    static ::System::Xml::Schema::IXmlSchemaInfo* _get_NotKnownSchemaInfo();
    // Set static field: static System.Xml.Schema.IXmlSchemaInfo NotKnownSchemaInfo
    static void _set_NotKnownSchemaInfo(::System::Xml::Schema::IXmlSchemaInfo* value);
    // Get static field: static System.Xml.Schema.IXmlSchemaInfo ValidSchemaInfo
    static ::System::Xml::Schema::IXmlSchemaInfo* _get_ValidSchemaInfo();
    // Set static field: static System.Xml.Schema.IXmlSchemaInfo ValidSchemaInfo
    static void _set_ValidSchemaInfo(::System::Xml::Schema::IXmlSchemaInfo* value);
    // Get static field: static System.Xml.Schema.IXmlSchemaInfo InvalidSchemaInfo
    static ::System::Xml::Schema::IXmlSchemaInfo* _get_InvalidSchemaInfo();
    // Set static field: static System.Xml.Schema.IXmlSchemaInfo InvalidSchemaInfo
    static void _set_InvalidSchemaInfo(::System::Xml::Schema::IXmlSchemaInfo* value);
    // static private System.Void .cctor()
    // Offset: 0x1B5BFD0
    static void _cctor();
  }; // System.Xml.XmlDocument
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::XmlDocument::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Xml::XmlDocument::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::XmlDocument*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
