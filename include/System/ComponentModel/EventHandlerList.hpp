// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: Component
  class Component;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Delegate
  class Delegate;
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: EventHandlerList
  class EventHandlerList;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::EventHandlerList);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::EventHandlerList*, "System.ComponentModel", "EventHandlerList");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.EventHandlerList
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: A5E9F4
  class EventHandlerList : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::System::ComponentModel::EventHandlerList::ListEntry
    class ListEntry;
    public:
    // private System.ComponentModel.EventHandlerList/ListEntry head
    // Size: 0x8
    // Offset: 0x10
    ::System::ComponentModel::EventHandlerList::ListEntry* head;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::EventHandlerList::ListEntry*) == 0x8);
    // private System.ComponentModel.Component parent
    // Size: 0x8
    // Offset: 0x18
    ::System::ComponentModel::Component* parent;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::Component*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.ComponentModel.EventHandlerList/ListEntry head
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList::ListEntry*& dyn_head();
    // Get instance field reference: private System.ComponentModel.Component parent
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::Component*& dyn_parent();
    // public System.Void .ctor()
    // Offset: 0x1187C2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventHandlerList* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventHandlerList*, creationType>()));
    }
    // System.Void .ctor(System.ComponentModel.Component parent)
    // Offset: 0x1187C34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventHandlerList* New_ctor(::System::ComponentModel::Component* parent) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventHandlerList*, creationType>(parent)));
    }
    // public System.Delegate get_Item(System.Object key)
    // Offset: 0x1187C60
    ::System::Delegate* get_Item(::Il2CppObject* key);
    // public System.Void set_Item(System.Object key, System.Delegate value)
    // Offset: 0x1187CDC
    void set_Item(::Il2CppObject* key, ::System::Delegate* value);
    // public System.Void AddHandler(System.Object key, System.Delegate value)
    // Offset: 0x1187DC4
    void AddHandler(::Il2CppObject* key, ::System::Delegate* value);
    // public System.Void AddHandlers(System.ComponentModel.EventHandlerList listToAddFrom)
    // Offset: 0x1187E7C
    void AddHandlers(::System::ComponentModel::EventHandlerList* listToAddFrom);
    // public System.Void Dispose()
    // Offset: 0x1187EBC
    void Dispose();
    // private System.ComponentModel.EventHandlerList/ListEntry Find(System.Object key)
    // Offset: 0x1187CC4
    ::System::ComponentModel::EventHandlerList::ListEntry* Find(::Il2CppObject* key);
    // public System.Void RemoveHandler(System.Object key, System.Delegate value)
    // Offset: 0x1187EC4
    void RemoveHandler(::Il2CppObject* key, ::System::Delegate* value);
  }; // System.ComponentModel.EventHandlerList
  #pragma pack(pop)
  static check_size<sizeof(EventHandlerList), 24 + sizeof(::System::ComponentModel::Component*)> __System_ComponentModel_EventHandlerListSizeCheck;
  static_assert(sizeof(EventHandlerList) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Delegate* (System::ComponentModel::EventHandlerList::*)(::Il2CppObject*)>(&System::ComponentModel::EventHandlerList::get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::EventHandlerList*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::EventHandlerList::*)(::Il2CppObject*, ::System::Delegate*)>(&System::ComponentModel::EventHandlerList::set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::EventHandlerList*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::AddHandler
// Il2CppName: AddHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::EventHandlerList::*)(::Il2CppObject*, ::System::Delegate*)>(&System::ComponentModel::EventHandlerList::AddHandler)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::EventHandlerList*), "AddHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::AddHandlers
// Il2CppName: AddHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::EventHandlerList::*)(::System::ComponentModel::EventHandlerList*)>(&System::ComponentModel::EventHandlerList::AddHandlers)> {
  static const MethodInfo* get() {
    static auto* listToAddFrom = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "EventHandlerList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::EventHandlerList*), "AddHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listToAddFrom});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::EventHandlerList::*)()>(&System::ComponentModel::EventHandlerList::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::EventHandlerList*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::EventHandlerList::ListEntry* (System::ComponentModel::EventHandlerList::*)(::Il2CppObject*)>(&System::ComponentModel::EventHandlerList::Find)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::EventHandlerList*), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::EventHandlerList::RemoveHandler
// Il2CppName: RemoveHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::EventHandlerList::*)(::Il2CppObject*, ::System::Delegate*)>(&System::ComponentModel::EventHandlerList::RemoveHandler)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::EventHandlerList*), "RemoveHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
