// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.ReferenceConverter
#include "System/ComponentModel/ReferenceConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Attribute
  class Attribute;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyDescriptorCollection
  class PropertyDescriptorCollection;
  // Forward declaring type: ITypeDescriptorContext
  class ITypeDescriptorContext;
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: ComponentConverter
  class ComponentConverter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::ComponentConverter);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::ComponentConverter*, "System.ComponentModel", "ComponentConverter");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.ComponentConverter
  // [TokenAttribute] Offset: FFFFFFFF
  class ComponentConverter : public ::System::ComponentModel::ReferenceConverter {
    public:
    // public System.Void .ctor(System.Type type)
    // Offset: 0x114C028
    // Implemented from: System.ComponentModel.ReferenceConverter
    // Base method: System.Void ReferenceConverter::.ctor(System.Type type)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ComponentConverter* New_ctor(::System::Type* type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentConverter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ComponentConverter*, creationType>(type)));
    }
    // public override System.ComponentModel.PropertyDescriptorCollection GetProperties(System.ComponentModel.ITypeDescriptorContext context, System.Object value, System.Attribute[] attributes)
    // Offset: 0x114C0A0
    // Implemented from: System.ComponentModel.TypeConverter
    // Base method: System.ComponentModel.PropertyDescriptorCollection TypeConverter::GetProperties(System.ComponentModel.ITypeDescriptorContext context, System.Object value, System.Attribute[] attributes)
    ::System::ComponentModel::PropertyDescriptorCollection* GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes);
    // public override System.Boolean GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext context)
    // Offset: 0x114C118
    // Implemented from: System.ComponentModel.TypeConverter
    // Base method: System.Boolean TypeConverter::GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext context)
    bool GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context);
  }; // System.ComponentModel.ComponentConverter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::ComponentConverter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::ComponentConverter::GetProperties
// Il2CppName: GetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::PropertyDescriptorCollection* (System::ComponentModel::ComponentConverter::*)(::System::ComponentModel::ITypeDescriptorContext*, ::Il2CppObject*, ::ArrayW<::System::Attribute*>)>(&System::ComponentModel::ComponentConverter::GetProperties)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ITypeDescriptorContext")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* attributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Attribute"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ComponentConverter*), "GetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, value, attributes});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ComponentConverter::GetPropertiesSupported
// Il2CppName: GetPropertiesSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ComponentConverter::*)(::System::ComponentModel::ITypeDescriptorContext*)>(&System::ComponentModel::ComponentConverter::GetPropertiesSupported)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "ITypeDescriptorContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ComponentConverter*), "GetPropertiesSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
