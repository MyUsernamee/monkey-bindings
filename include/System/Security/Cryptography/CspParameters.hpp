// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Security.Cryptography.CspProviderFlags
#include "System/Security/Cryptography/CspProviderFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: CryptoKeySecurity
  class CryptoKeySecurity;
}
// Forward declaring namespace: System::Security
namespace System::Security {
  // Forward declaring type: SecureString
  class SecureString;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: CspParameters
  class CspParameters;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::CspParameters);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::CspParameters*, "System.Security.Cryptography", "CspParameters");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.CspParameters
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: A53224
  class CspParameters : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 ProviderType
    // Size: 0x4
    // Offset: 0x10
    int ProviderType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: ProviderType and: ProviderName
    char __padding0[0x4] = {};
    // public System.String ProviderName
    // Size: 0x8
    // Offset: 0x18
    ::StringW ProviderName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String KeyContainerName
    // Size: 0x8
    // Offset: 0x20
    ::StringW KeyContainerName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 KeyNumber
    // Size: 0x4
    // Offset: 0x28
    int KeyNumber;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_flags
    // Size: 0x4
    // Offset: 0x2C
    int m_flags;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Security.AccessControl.CryptoKeySecurity m_cryptoKeySecurity
    // Size: 0x8
    // Offset: 0x30
    ::System::Security::AccessControl::CryptoKeySecurity* m_cryptoKeySecurity;
    // Field size check
    static_assert(sizeof(::System::Security::AccessControl::CryptoKeySecurity*) == 0x8);
    // private System.Security.SecureString m_keyPassword
    // Size: 0x8
    // Offset: 0x38
    ::System::Security::SecureString* m_keyPassword;
    // Field size check
    static_assert(sizeof(::System::Security::SecureString*) == 0x8);
    // private System.IntPtr m_parentWindowHandle
    // Size: 0x8
    // Offset: 0x40
    ::System::IntPtr m_parentWindowHandle;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Get instance field reference: public System.Int32 ProviderType
    [[deprecated("Use field access instead!")]] int& dyn_ProviderType();
    // Get instance field reference: public System.String ProviderName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ProviderName();
    // Get instance field reference: public System.String KeyContainerName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_KeyContainerName();
    // Get instance field reference: public System.Int32 KeyNumber
    [[deprecated("Use field access instead!")]] int& dyn_KeyNumber();
    // Get instance field reference: private System.Int32 m_flags
    [[deprecated("Use field access instead!")]] int& dyn_m_flags();
    // Get instance field reference: private System.Security.AccessControl.CryptoKeySecurity m_cryptoKeySecurity
    [[deprecated("Use field access instead!")]] ::System::Security::AccessControl::CryptoKeySecurity*& dyn_m_cryptoKeySecurity();
    // Get instance field reference: private System.Security.SecureString m_keyPassword
    [[deprecated("Use field access instead!")]] ::System::Security::SecureString*& dyn_m_keyPassword();
    // Get instance field reference: private System.IntPtr m_parentWindowHandle
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_m_parentWindowHandle();
    // public System.Security.Cryptography.CspProviderFlags get_Flags()
    // Offset: 0x1218FE4
    ::System::Security::Cryptography::CspProviderFlags get_Flags();
    // public System.Void set_Flags(System.Security.Cryptography.CspProviderFlags value)
    // Offset: 0x1218FEC
    void set_Flags(::System::Security::Cryptography::CspProviderFlags value);
    // public System.Security.AccessControl.CryptoKeySecurity get_CryptoKeySecurity()
    // Offset: 0x12190FC
    ::System::Security::AccessControl::CryptoKeySecurity* get_CryptoKeySecurity();
    // public System.Void set_CryptoKeySecurity(System.Security.AccessControl.CryptoKeySecurity value)
    // Offset: 0x1219104
    void set_CryptoKeySecurity(::System::Security::AccessControl::CryptoKeySecurity* value);
    // public System.Security.SecureString get_KeyPassword()
    // Offset: 0x121910C
    ::System::Security::SecureString* get_KeyPassword();
    // public System.Void set_KeyPassword(System.Security.SecureString value)
    // Offset: 0x1219114
    void set_KeyPassword(::System::Security::SecureString* value);
    // public System.IntPtr get_ParentWindowHandle()
    // Offset: 0x1219164
    ::System::IntPtr get_ParentWindowHandle();
    // public System.Void set_ParentWindowHandle(System.IntPtr value)
    // Offset: 0x121916C
    void set_ParentWindowHandle(::System::IntPtr value);
    // public System.Void .ctor(System.Int32 dwTypeIn)
    // Offset: 0x12191F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor(int dwTypeIn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>(dwTypeIn)));
    }
    // public System.Void .ctor(System.Int32 dwTypeIn, System.String strProviderNameIn)
    // Offset: 0x1219200
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor(int dwTypeIn, ::StringW strProviderNameIn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>(dwTypeIn, strProviderNameIn)));
    }
    // public System.Void .ctor(System.Int32 dwTypeIn, System.String strProviderNameIn, System.String strContainerNameIn)
    // Offset: 0x1219184
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor(int dwTypeIn, ::StringW strProviderNameIn, ::StringW strContainerNameIn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>(dwTypeIn, strProviderNameIn, strContainerNameIn)));
    }
    // public System.Void .ctor(System.Int32 providerType, System.String providerName, System.String keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword)
    // Offset: 0x1219264
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor(int providerType, ::StringW providerName, ::StringW keyContainerName, ::System::Security::AccessControl::CryptoKeySecurity* cryptoKeySecurity, ::System::Security::SecureString* keyPassword) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>(providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)));
    }
    // public System.Void .ctor(System.Int32 providerType, System.String providerName, System.String keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.IntPtr parentWindowHandle)
    // Offset: 0x1219298
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor(int providerType, ::StringW providerName, ::StringW keyContainerName, ::System::Security::AccessControl::CryptoKeySecurity* cryptoKeySecurity, ::System::IntPtr parentWindowHandle) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>(providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)));
    }
    // System.Void .ctor(System.Int32 providerType, System.String providerName, System.String keyContainerName, System.Security.Cryptography.CspProviderFlags flags)
    // Offset: 0x1219208
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor(int providerType, ::StringW providerName, ::StringW keyContainerName, ::System::Security::Cryptography::CspProviderFlags flags) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>(providerType, providerName, keyContainerName, flags)));
    }
    // System.Void .ctor(System.Security.Cryptography.CspParameters parameters)
    // Offset: 0x12192D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor(::System::Security::Cryptography::CspParameters* parameters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>(parameters)));
    }
    // public System.Void .ctor()
    // Offset: 0x1219174
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CspParameters* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CspParameters*, creationType>()));
    }
  }; // System.Security.Cryptography.CspParameters
  #pragma pack(pop)
  static check_size<sizeof(CspParameters), 64 + sizeof(::System::IntPtr)> __System_Security_Cryptography_CspParametersSizeCheck;
  static_assert(sizeof(CspParameters) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::get_Flags
// Il2CppName: get_Flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::CspProviderFlags (System::Security::Cryptography::CspParameters::*)()>(&System::Security::Cryptography::CspParameters::get_Flags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "get_Flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::set_Flags
// Il2CppName: set_Flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::CspParameters::*)(::System::Security::Cryptography::CspProviderFlags)>(&System::Security::Cryptography::CspParameters::set_Flags)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "CspProviderFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "set_Flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::get_CryptoKeySecurity
// Il2CppName: get_CryptoKeySecurity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::AccessControl::CryptoKeySecurity* (System::Security::Cryptography::CspParameters::*)()>(&System::Security::Cryptography::CspParameters::get_CryptoKeySecurity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "get_CryptoKeySecurity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::set_CryptoKeySecurity
// Il2CppName: set_CryptoKeySecurity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::CspParameters::*)(::System::Security::AccessControl::CryptoKeySecurity*)>(&System::Security::Cryptography::CspParameters::set_CryptoKeySecurity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "CryptoKeySecurity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "set_CryptoKeySecurity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::get_KeyPassword
// Il2CppName: get_KeyPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::SecureString* (System::Security::Cryptography::CspParameters::*)()>(&System::Security::Cryptography::CspParameters::get_KeyPassword)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "get_KeyPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::set_KeyPassword
// Il2CppName: set_KeyPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::CspParameters::*)(::System::Security::SecureString*)>(&System::Security::Cryptography::CspParameters::set_KeyPassword)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Security", "SecureString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "set_KeyPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::get_ParentWindowHandle
// Il2CppName: get_ParentWindowHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (System::Security::Cryptography::CspParameters::*)()>(&System::Security::Cryptography::CspParameters::get_ParentWindowHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "get_ParentWindowHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::set_ParentWindowHandle
// Il2CppName: set_ParentWindowHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::CspParameters::*)(::System::IntPtr)>(&System::Security::Cryptography::CspParameters::set_ParentWindowHandle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::CspParameters*), "set_ParentWindowHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::CspParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
