// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.ReadOnlyCollectionBase
#include "System/Collections/ReadOnlyCollectionBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: ICollection because it is already included!
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: System.Security.Authentication.ExtendedProtection
namespace System::Security::Authentication::ExtendedProtection {
  // Forward declaring type: ServiceNameCollection
  class ServiceNameCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Authentication::ExtendedProtection::ServiceNameCollection);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Authentication::ExtendedProtection::ServiceNameCollection*, "System.Security.Authentication.ExtendedProtection", "ServiceNameCollection");
// Type namespace: System.Security.Authentication.ExtendedProtection
namespace System::Security::Authentication::ExtendedProtection {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
  // [TokenAttribute] Offset: FFFFFFFF
  class ServiceNameCollection : public ::System::Collections::ReadOnlyCollectionBase {
    public:
    // public System.Void .ctor(System.Collections.ICollection items)
    // Offset: 0xD91A2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ServiceNameCollection* New_ctor(::System::Collections::ICollection* items) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ServiceNameCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ServiceNameCollection*, creationType>(items)));
    }
    // static private System.Void AddIfNew(System.Collections.ArrayList newServiceNames, System.String serviceName)
    // Offset: 0xD91D20
    static void AddIfNew(::System::Collections::ArrayList* newServiceNames, ::StringW serviceName);
    // static System.Boolean Contains(System.String searchServiceName, System.Collections.ICollection serviceNames)
    // Offset: 0xD921FC
    static bool Contains(::StringW searchServiceName, ::System::Collections::ICollection* serviceNames);
    // static System.String NormalizeServiceName(System.String inputServiceName)
    // Offset: 0xD91E10
    static ::StringW NormalizeServiceName(::StringW inputServiceName);
    // static System.Boolean Match(System.String serviceName1, System.String serviceName2)
    // Offset: 0xD924F8
    static bool Match(::StringW serviceName1, ::StringW serviceName2);
  }; // System.Security.Authentication.ExtendedProtection.ServiceNameCollection
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Authentication::ExtendedProtection::ServiceNameCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Authentication::ExtendedProtection::ServiceNameCollection::AddIfNew
// Il2CppName: AddIfNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::ArrayList*, ::StringW)>(&System::Security::Authentication::ExtendedProtection::ServiceNameCollection::AddIfNew)> {
  static const MethodInfo* get() {
    static auto* newServiceNames = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    static auto* serviceName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Authentication::ExtendedProtection::ServiceNameCollection*), "AddIfNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newServiceNames, serviceName});
  }
};
// Writing MetadataGetter for method: System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Collections::ICollection*)>(&System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Contains)> {
  static const MethodInfo* get() {
    static auto* searchServiceName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* serviceNames = &::il2cpp_utils::GetClassFromName("System.Collections", "ICollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Authentication::ExtendedProtection::ServiceNameCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{searchServiceName, serviceNames});
  }
};
// Writing MetadataGetter for method: System::Security::Authentication::ExtendedProtection::ServiceNameCollection::NormalizeServiceName
// Il2CppName: NormalizeServiceName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Security::Authentication::ExtendedProtection::ServiceNameCollection::NormalizeServiceName)> {
  static const MethodInfo* get() {
    static auto* inputServiceName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Authentication::ExtendedProtection::ServiceNameCollection*), "NormalizeServiceName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputServiceName});
  }
};
// Writing MetadataGetter for method: System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Match
// Il2CppName: Match
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&System::Security::Authentication::ExtendedProtection::ServiceNameCollection::Match)> {
  static const MethodInfo* get() {
    static auto* serviceName1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* serviceName2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Authentication::ExtendedProtection::ServiceNameCollection*), "Match", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serviceName1, serviceName2});
  }
};
