// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.XR.XRControllerWithRumble
#include "UnityEngine/InputSystem/XR/XRControllerWithRumble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: Vector2Control
  class Vector2Control;
  // Forward declaring type: AxisControl
  class AxisControl;
  // Forward declaring type: ButtonControl
  class ButtonControl;
  // Forward declaring type: Vector3Control
  class Vector3Control;
}
// Completed forward declares
// Type namespace: Unity.XR.Oculus.Input
namespace Unity::XR::Oculus::Input {
  // Forward declaring type: OculusTouchController
  class OculusTouchController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::XR::Oculus::Input::OculusTouchController);
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::Oculus::Input::OculusTouchController*, "Unity.XR.Oculus.Input", "OculusTouchController");
// Type namespace: Unity.XR.Oculus.Input
namespace Unity::XR::Oculus::Input {
  // Size: 0x1F8
  #pragma pack(push, 1)
  // Autogenerated type: Unity.XR.Oculus.Input.OculusTouchController
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: AB6BE4
  class OculusTouchController : public ::UnityEngine::InputSystem::XR::XRControllerWithRumble {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xAB9CBC
    // private UnityEngine.InputSystem.Controls.Vector2Control <thumbstick>k__BackingField
    // Size: 0x8
    // Offset: 0x170
    ::UnityEngine::InputSystem::Controls::Vector2Control* thumbstick;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector2Control*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9CCC
    // private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::InputSystem::Controls::AxisControl* trigger;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9CDC
    // private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::InputSystem::Controls::AxisControl* grip;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9CEC
    // private UnityEngine.InputSystem.Controls.ButtonControl <primaryButton>k__BackingField
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::InputSystem::Controls::ButtonControl* primaryButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9CFC
    // private UnityEngine.InputSystem.Controls.ButtonControl <secondaryButton>k__BackingField
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::InputSystem::Controls::ButtonControl* secondaryButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D0C
    // private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
    // Size: 0x8
    // Offset: 0x198
    ::UnityEngine::InputSystem::Controls::ButtonControl* gripPressed;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D1C
    // private UnityEngine.InputSystem.Controls.ButtonControl <start>k__BackingField
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::InputSystem::Controls::ButtonControl* start;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D2C
    // private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickClicked>k__BackingField
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::InputSystem::Controls::ButtonControl* thumbstickClicked;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D3C
    // private UnityEngine.InputSystem.Controls.ButtonControl <primaryTouched>k__BackingField
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::InputSystem::Controls::ButtonControl* primaryTouched;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D4C
    // private UnityEngine.InputSystem.Controls.ButtonControl <secondaryTouched>k__BackingField
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::InputSystem::Controls::ButtonControl* secondaryTouched;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D5C
    // private UnityEngine.InputSystem.Controls.AxisControl <triggerTouched>k__BackingField
    // Size: 0x8
    // Offset: 0x1C0
    ::UnityEngine::InputSystem::Controls::AxisControl* triggerTouched;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D6C
    // private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
    // Size: 0x8
    // Offset: 0x1C8
    ::UnityEngine::InputSystem::Controls::ButtonControl* triggerPressed;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D7C
    // private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickTouched>k__BackingField
    // Size: 0x8
    // Offset: 0x1D0
    ::UnityEngine::InputSystem::Controls::ButtonControl* thumbstickTouched;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D8C
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
    // Size: 0x8
    // Offset: 0x1D8
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9D9C
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
    // Size: 0x8
    // Offset: 0x1E0
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceAngularVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9DAC
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
    // Size: 0x8
    // Offset: 0x1E8
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceAcceleration;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAB9DBC
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularAcceleration>k__BackingField
    // Size: 0x8
    // Offset: 0x1F0
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceAngularAcceleration;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector2Control <thumbstick>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& dyn_$thumbstick$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$trigger$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$grip$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <primaryButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$primaryButton$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <secondaryButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$secondaryButton$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$gripPressed$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <start>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$start$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickClicked>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$thumbstickClicked$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <primaryTouched>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$primaryTouched$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <secondaryTouched>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$secondaryTouched$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <triggerTouched>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$triggerTouched$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$triggerPressed$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickTouched>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$thumbstickTouched$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceAngularVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceAcceleration$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularAcceleration>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceAngularAcceleration$k__BackingField();
    // public UnityEngine.InputSystem.Controls.Vector2Control get_thumbstick()
    // Offset: 0xD989E8
    ::UnityEngine::InputSystem::Controls::Vector2Control* get_thumbstick();
    // private System.Void set_thumbstick(UnityEngine.InputSystem.Controls.Vector2Control value)
    // Offset: 0xD989F0
    void set_thumbstick(::UnityEngine::InputSystem::Controls::Vector2Control* value);
    // public UnityEngine.InputSystem.Controls.AxisControl get_trigger()
    // Offset: 0xD989F8
    ::UnityEngine::InputSystem::Controls::AxisControl* get_trigger();
    // private System.Void set_trigger(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0xD98A00
    void set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // public UnityEngine.InputSystem.Controls.AxisControl get_grip()
    // Offset: 0xD98A08
    ::UnityEngine::InputSystem::Controls::AxisControl* get_grip();
    // private System.Void set_grip(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0xD98A10
    void set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_primaryButton()
    // Offset: 0xD98A18
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_primaryButton();
    // private System.Void set_primaryButton(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98A20
    void set_primaryButton(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_secondaryButton()
    // Offset: 0xD98A28
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_secondaryButton();
    // private System.Void set_secondaryButton(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98A30
    void set_secondaryButton(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_gripPressed()
    // Offset: 0xD98A38
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_gripPressed();
    // private System.Void set_gripPressed(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98A40
    void set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_start()
    // Offset: 0xD98A48
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_start();
    // private System.Void set_start(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98A50
    void set_start(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_thumbstickClicked()
    // Offset: 0xD98A58
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_thumbstickClicked();
    // private System.Void set_thumbstickClicked(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98A60
    void set_thumbstickClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_primaryTouched()
    // Offset: 0xD98A68
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_primaryTouched();
    // private System.Void set_primaryTouched(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98A70
    void set_primaryTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_secondaryTouched()
    // Offset: 0xD98A78
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_secondaryTouched();
    // private System.Void set_secondaryTouched(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98A80
    void set_secondaryTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.AxisControl get_triggerTouched()
    // Offset: 0xD98A88
    ::UnityEngine::InputSystem::Controls::AxisControl* get_triggerTouched();
    // private System.Void set_triggerTouched(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0xD98A90
    void set_triggerTouched(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_triggerPressed()
    // Offset: 0xD98A98
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_triggerPressed();
    // private System.Void set_triggerPressed(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98AA0
    void set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_thumbstickTouched()
    // Offset: 0xD98AA8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_thumbstickTouched();
    // private System.Void set_thumbstickTouched(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xD98AB0
    void set_thumbstickTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceVelocity()
    // Offset: 0xD98AB8
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceVelocity();
    // private System.Void set_deviceVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0xD98AC0
    void set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceAngularVelocity()
    // Offset: 0xD98AC8
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceAngularVelocity();
    // private System.Void set_deviceAngularVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0xD98AD0
    void set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceAcceleration()
    // Offset: 0xD98AD8
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceAcceleration();
    // private System.Void set_deviceAcceleration(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0xD98AE0
    void set_deviceAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceAngularAcceleration()
    // Offset: 0xD98AE8
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceAngularAcceleration();
    // private System.Void set_deviceAngularAcceleration(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0xD98AF0
    void set_deviceAngularAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // protected override System.Void FinishSetup()
    // Offset: 0xD98AF8
    // Implemented from: UnityEngine.InputSystem.XR.XRController
    // Base method: System.Void XRController::FinishSetup()
    void FinishSetup();
    // public System.Void .ctor()
    // Offset: 0xD98D40
    // Implemented from: UnityEngine.InputSystem.XR.XRControllerWithRumble
    // Base method: System.Void XRControllerWithRumble::.ctor()
    // Base method: System.Void XRController::.ctor()
    // Base method: System.Void TrackedDevice::.ctor()
    // Base method: System.Void InputDevice::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OculusTouchController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OculusTouchController*, creationType>()));
    }
  }; // Unity.XR.Oculus.Input.OculusTouchController
  #pragma pack(pop)
  static check_size<sizeof(OculusTouchController), 496 + sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*)> __Unity_XR_Oculus_Input_OculusTouchControllerSizeCheck;
  static_assert(sizeof(OculusTouchController) == 0x1F8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_thumbstick
// Il2CppName: get_thumbstick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector2Control* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_thumbstick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_thumbstick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_thumbstick
// Il2CppName: set_thumbstick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::Vector2Control*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_thumbstick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector2Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_thumbstick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_trigger
// Il2CppName: get_trigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_trigger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_trigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_trigger
// Il2CppName: set_trigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_trigger)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_trigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_grip
// Il2CppName: get_grip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_grip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_grip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_grip
// Il2CppName: set_grip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_grip)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_grip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_primaryButton
// Il2CppName: get_primaryButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_primaryButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_primaryButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_primaryButton
// Il2CppName: set_primaryButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_primaryButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_primaryButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_secondaryButton
// Il2CppName: get_secondaryButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_secondaryButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_secondaryButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_secondaryButton
// Il2CppName: set_secondaryButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_secondaryButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_secondaryButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_gripPressed
// Il2CppName: get_gripPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_gripPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_gripPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_gripPressed
// Il2CppName: set_gripPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_gripPressed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_gripPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_start
// Il2CppName: get_start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_start
// Il2CppName: set_start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_start)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickClicked
// Il2CppName: get_thumbstickClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_thumbstickClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickClicked
// Il2CppName: set_thumbstickClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickClicked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_thumbstickClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_primaryTouched
// Il2CppName: get_primaryTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_primaryTouched)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_primaryTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_primaryTouched
// Il2CppName: set_primaryTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_primaryTouched)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_primaryTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_secondaryTouched
// Il2CppName: get_secondaryTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_secondaryTouched)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_secondaryTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_secondaryTouched
// Il2CppName: set_secondaryTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_secondaryTouched)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_secondaryTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_triggerTouched
// Il2CppName: get_triggerTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_triggerTouched)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_triggerTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_triggerTouched
// Il2CppName: set_triggerTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_triggerTouched)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_triggerTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_triggerPressed
// Il2CppName: get_triggerPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_triggerPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_triggerPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_triggerPressed
// Il2CppName: set_triggerPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_triggerPressed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_triggerPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickTouched
// Il2CppName: get_thumbstickTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickTouched)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_thumbstickTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickTouched
// Il2CppName: set_thumbstickTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickTouched)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_thumbstickTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_deviceVelocity
// Il2CppName: get_deviceVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_deviceVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_deviceVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_deviceVelocity
// Il2CppName: set_deviceVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_deviceVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_deviceVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularVelocity
// Il2CppName: get_deviceAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_deviceAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularVelocity
// Il2CppName: set_deviceAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_deviceAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_deviceAcceleration
// Il2CppName: get_deviceAcceleration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_deviceAcceleration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_deviceAcceleration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_deviceAcceleration
// Il2CppName: set_deviceAcceleration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_deviceAcceleration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_deviceAcceleration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularAcceleration
// Il2CppName: get_deviceAngularAcceleration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularAcceleration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "get_deviceAngularAcceleration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularAcceleration
// Il2CppName: set_deviceAngularAcceleration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularAcceleration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "set_deviceAngularAcceleration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::Oculus::Input::OculusTouchController::*)()>(&Unity::XR::Oculus::Input::OculusTouchController::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::Oculus::Input::OculusTouchController*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::Oculus::Input::OculusTouchController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
