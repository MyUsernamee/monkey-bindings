// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Sensor
#include "UnityEngine/InputSystem/Sensor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: AxisControl
  class AxisControl;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: AmbientTemperatureSensor
  class AmbientTemperatureSensor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::AmbientTemperatureSensor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::AmbientTemperatureSensor*, "UnityEngine.InputSystem", "AmbientTemperatureSensor");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x158
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.AmbientTemperatureSensor
  // [TokenAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: AB7A14
  // [PreserveAttribute] Offset: FFFFFFFF
  class AmbientTemperatureSensor : public ::UnityEngine::InputSystem::Sensor {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xABA824
    // private UnityEngine.InputSystem.Controls.AxisControl <ambientTemperature>k__BackingField
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::InputSystem::Controls::AxisControl* ambientTemperature;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::InputSystem::Controls::AxisControl*
    constexpr operator ::UnityEngine::InputSystem::Controls::AxisControl*() const noexcept {
      return ambientTemperature;
    }
    // [CompilerGeneratedAttribute] Offset: 0xABA834
    // Get static field: static private UnityEngine.InputSystem.AmbientTemperatureSensor <current>k__BackingField
    static ::UnityEngine::InputSystem::AmbientTemperatureSensor* _get_$current$k__BackingField();
    // Set static field: static private UnityEngine.InputSystem.AmbientTemperatureSensor <current>k__BackingField
    static void _set_$current$k__BackingField(::UnityEngine::InputSystem::AmbientTemperatureSensor* value);
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <ambientTemperature>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$ambientTemperature$k__BackingField();
    // public UnityEngine.InputSystem.Controls.AxisControl get_ambientTemperature()
    // Offset: 0xD99AB0
    ::UnityEngine::InputSystem::Controls::AxisControl* get_ambientTemperature();
    // private System.Void set_ambientTemperature(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0xD99AB8
    void set_ambientTemperature(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // static public UnityEngine.InputSystem.AmbientTemperatureSensor get_current()
    // Offset: 0xD99AC0
    static ::UnityEngine::InputSystem::AmbientTemperatureSensor* get_current();
    // static private System.Void set_current(UnityEngine.InputSystem.AmbientTemperatureSensor value)
    // Offset: 0xD99B10
    static void set_current(::UnityEngine::InputSystem::AmbientTemperatureSensor* value);
    // public override System.Void MakeCurrent()
    // Offset: 0xD99B64
    // Implemented from: UnityEngine.InputSystem.InputDevice
    // Base method: System.Void InputDevice::MakeCurrent()
    void MakeCurrent();
    // protected override System.Void OnRemoved()
    // Offset: 0xD99BC0
    // Implemented from: UnityEngine.InputSystem.InputDevice
    // Base method: System.Void InputDevice::OnRemoved()
    void OnRemoved();
    // protected override System.Void FinishSetup()
    // Offset: 0xD99C54
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::FinishSetup()
    void FinishSetup();
    // public System.Void .ctor()
    // Offset: 0xD99CC0
    // Implemented from: UnityEngine.InputSystem.Sensor
    // Base method: System.Void Sensor::.ctor()
    // Base method: System.Void InputDevice::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AmbientTemperatureSensor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::AmbientTemperatureSensor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AmbientTemperatureSensor*, creationType>()));
    }
  }; // UnityEngine.InputSystem.AmbientTemperatureSensor
  #pragma pack(pop)
  static check_size<sizeof(AmbientTemperatureSensor), 336 + sizeof(::UnityEngine::InputSystem::Controls::AxisControl*)> __UnityEngine_InputSystem_AmbientTemperatureSensorSizeCheck;
  static_assert(sizeof(AmbientTemperatureSensor) == 0x158);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::get_ambientTemperature
// Il2CppName: get_ambientTemperature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (UnityEngine::InputSystem::AmbientTemperatureSensor::*)()>(&UnityEngine::InputSystem::AmbientTemperatureSensor::get_ambientTemperature)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AmbientTemperatureSensor*), "get_ambientTemperature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::set_ambientTemperature
// Il2CppName: set_ambientTemperature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AmbientTemperatureSensor::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&UnityEngine::InputSystem::AmbientTemperatureSensor::set_ambientTemperature)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AmbientTemperatureSensor*), "set_ambientTemperature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::AmbientTemperatureSensor* (*)()>(&UnityEngine::InputSystem::AmbientTemperatureSensor::get_current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AmbientTemperatureSensor*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::set_current
// Il2CppName: set_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::AmbientTemperatureSensor*)>(&UnityEngine::InputSystem::AmbientTemperatureSensor::set_current)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "AmbientTemperatureSensor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AmbientTemperatureSensor*), "set_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::MakeCurrent
// Il2CppName: MakeCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AmbientTemperatureSensor::*)()>(&UnityEngine::InputSystem::AmbientTemperatureSensor::MakeCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AmbientTemperatureSensor*), "MakeCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::OnRemoved
// Il2CppName: OnRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AmbientTemperatureSensor::*)()>(&UnityEngine::InputSystem::AmbientTemperatureSensor::OnRemoved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AmbientTemperatureSensor*), "OnRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AmbientTemperatureSensor::*)()>(&UnityEngine::InputSystem::AmbientTemperatureSensor::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AmbientTemperatureSensor*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AmbientTemperatureSensor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
