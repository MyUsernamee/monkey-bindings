// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: PlayMode
  struct PlayMode;
  // Forward declaring type: AnimationState
  class AnimationState;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animation
  class Animation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animation);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animation*, "UnityEngine", "Animation");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animation
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: A91428
  class Animation : public ::UnityEngine::Behaviour/*, public ::System::Collections::IEnumerable*/ {
    public:
    // Nested type: ::UnityEngine::Animation::Enumerator
    class Enumerator;
    // Creating interface conversion operator: operator ::System::Collections::IEnumerable
    operator ::System::Collections::IEnumerable() noexcept {
      return *reinterpret_cast<::System::Collections::IEnumerable*>(this);
    }
    // public System.Void Stop()
    // Offset: 0x1ACD960
    void Stop();
    // static private System.Void INTERNAL_CALL_Stop(UnityEngine.Animation self)
    // Offset: 0x1ACD9A0
    static void INTERNAL_CALL_Stop(::UnityEngine::Animation* self);
    // public System.Boolean Play()
    // Offset: 0x1ACD9E0
    bool Play();
    // public System.Boolean Play(UnityEngine.PlayMode mode)
    // Offset: 0x1ACDA24
    bool Play(::UnityEngine::PlayMode mode);
    // private System.Boolean PlayDefaultAnimation(UnityEngine.PlayMode mode)
    // Offset: 0x1ACDA74
    bool PlayDefaultAnimation(::UnityEngine::PlayMode mode);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x1ACDAC4
    ::System::Collections::IEnumerator* GetEnumerator();
    // UnityEngine.AnimationState GetStateAtIndex(System.Int32 index)
    // Offset: 0x1ACDB64
    ::UnityEngine::AnimationState* GetStateAtIndex(int index);
    // System.Int32 GetStateCount()
    // Offset: 0x1ACDBB4
    int GetStateCount();
  }; // UnityEngine.Animation
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animation::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animation::*)()>(&UnityEngine::Animation::Stop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animation::INTERNAL_CALL_Stop
// Il2CppName: INTERNAL_CALL_Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Animation*)>(&UnityEngine::Animation::INTERNAL_CALL_Stop)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "INTERNAL_CALL_Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animation::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animation::*)()>(&UnityEngine::Animation::Play)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animation::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animation::*)(::UnityEngine::PlayMode)>(&UnityEngine::Animation::Play)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "PlayMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animation::PlayDefaultAnimation
// Il2CppName: PlayDefaultAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animation::*)(::UnityEngine::PlayMode)>(&UnityEngine::Animation::PlayDefaultAnimation)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "PlayMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "PlayDefaultAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animation::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::Animation::*)()>(&UnityEngine::Animation::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animation::GetStateAtIndex
// Il2CppName: GetStateAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AnimationState* (UnityEngine::Animation::*)(int)>(&UnityEngine::Animation::GetStateAtIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "GetStateAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animation::GetStateCount
// Il2CppName: GetStateCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animation::*)()>(&UnityEngine::Animation::GetStateCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animation*), "GetStateCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
