// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.CollectionBase
#include "System/Collections/CollectionBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security
namespace Mono::Security {
  // Forward declaring type: ASN1
  class ASN1;
}
// Forward declaring namespace: Mono::Security::X509
namespace Mono::Security::X509 {
  // Forward declaring type: X509Extension
  class X509Extension;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: Mono.Security.X509
namespace Mono::Security::X509 {
  // Forward declaring type: X509ExtensionCollection
  class X509ExtensionCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Security::X509::X509ExtensionCollection);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::X509::X509ExtensionCollection*, "Mono.Security.X509", "X509ExtensionCollection");
// Type namespace: Mono.Security.X509
namespace Mono::Security::X509 {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.X509.X509ExtensionCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: A5D058
  class X509ExtensionCollection : public ::System::Collections::CollectionBase {
    public:
    public:
    // private System.Boolean readOnly
    // Size: 0x1
    // Offset: 0x18
    bool readOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::Collections::ArrayList*
    constexpr operator ::System::Collections::ArrayList*() const noexcept = delete;
    // Get instance field reference: private System.Boolean readOnly
    [[deprecated("Use field access instead!")]] bool& dyn_readOnly();
    // public System.Void .ctor()
    // Offset: 0x1B27384
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static X509ExtensionCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509ExtensionCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<X509ExtensionCollection*, creationType>()));
    }
    // public System.Void .ctor(Mono.Security.ASN1 asn1)
    // Offset: 0x1B27470
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static X509ExtensionCollection* New_ctor(::Mono::Security::ASN1* asn1) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509ExtensionCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<X509ExtensionCollection*, creationType>(asn1)));
    }
    // public System.Int32 Add(Mono.Security.X509.X509Extension extension)
    // Offset: 0x1B2834C
    int Add(::Mono::Security::X509::X509Extension* extension);
    // public System.Void AddRange(Mono.Security.X509.X509Extension[] extension)
    // Offset: 0x1B28430
    void AddRange(::ArrayW<::Mono::Security::X509::X509Extension*> extension);
    // public System.Void AddRange(Mono.Security.X509.X509ExtensionCollection collection)
    // Offset: 0x1B28554
    void AddRange(::Mono::Security::X509::X509ExtensionCollection* collection);
    // public System.Boolean Contains(Mono.Security.X509.X509Extension extension)
    // Offset: 0x1B28740
    bool Contains(::Mono::Security::X509::X509Extension* extension);
    // public System.Boolean Contains(System.String oid)
    // Offset: 0x1B288CC
    bool Contains(::StringW oid);
    // public System.Void CopyTo(Mono.Security.X509.X509Extension[] extensions, System.Int32 index)
    // Offset: 0x1B28A34
    void CopyTo(::ArrayW<::Mono::Security::X509::X509Extension*> extensions, int index);
    // public System.Int32 IndexOf(Mono.Security.X509.X509Extension extension)
    // Offset: 0x1B2875C
    int IndexOf(::Mono::Security::X509::X509Extension* extension);
    // public System.Int32 IndexOf(System.String oid)
    // Offset: 0x1B288E8
    int IndexOf(::StringW oid);
    // public System.Void Insert(System.Int32 index, Mono.Security.X509.X509Extension extension)
    // Offset: 0x1B28AEC
    void Insert(int index, ::Mono::Security::X509::X509Extension* extension);
    // public System.Void Remove(Mono.Security.X509.X509Extension extension)
    // Offset: 0x1B28BA4
    void Remove(::Mono::Security::X509::X509Extension* extension);
    // public System.Void Remove(System.String oid)
    // Offset: 0x1B28C54
    void Remove(::StringW oid);
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x1B28D2C
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public Mono.Security.X509.X509Extension get_Item(System.Int32 index)
    // Offset: 0x1B28690
    ::Mono::Security::X509::X509Extension* get_Item(int index);
    // public Mono.Security.X509.X509Extension get_Item(System.String oid)
    // Offset: 0x1B28D58
    ::Mono::Security::X509::X509Extension* get_Item(::StringW oid);
    // public System.Byte[] GetBytes()
    // Offset: 0x1B27764
    ::ArrayW<uint8_t> GetBytes();
  }; // Mono.Security.X509.X509ExtensionCollection
  #pragma pack(pop)
  static check_size<sizeof(X509ExtensionCollection), 24 + sizeof(bool)> __Mono_Security_X509_X509ExtensionCollectionSizeCheck;
  static_assert(sizeof(X509ExtensionCollection) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Security::X509::X509ExtensionCollection::*)(::Mono::Security::X509::X509Extension*)>(&Mono::Security::X509::X509ExtensionCollection::Add)> {
  static const MethodInfo* get() {
    static auto* extension = &::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509Extension")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extension});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::AddRange
// Il2CppName: AddRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::X509::X509ExtensionCollection::*)(::ArrayW<::Mono::Security::X509::X509Extension*>)>(&Mono::Security::X509::X509ExtensionCollection::AddRange)> {
  static const MethodInfo* get() {
    static auto* extension = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509Extension"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "AddRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extension});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::AddRange
// Il2CppName: AddRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::X509::X509ExtensionCollection::*)(::Mono::Security::X509::X509ExtensionCollection*)>(&Mono::Security::X509::X509ExtensionCollection::AddRange)> {
  static const MethodInfo* get() {
    static auto* collection = &::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509ExtensionCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "AddRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{collection});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Security::X509::X509ExtensionCollection::*)(::Mono::Security::X509::X509Extension*)>(&Mono::Security::X509::X509ExtensionCollection::Contains)> {
  static const MethodInfo* get() {
    static auto* extension = &::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509Extension")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extension});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Security::X509::X509ExtensionCollection::*)(::StringW)>(&Mono::Security::X509::X509ExtensionCollection::Contains)> {
  static const MethodInfo* get() {
    static auto* oid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oid});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::X509::X509ExtensionCollection::*)(::ArrayW<::Mono::Security::X509::X509Extension*>, int)>(&Mono::Security::X509::X509ExtensionCollection::CopyTo)> {
  static const MethodInfo* get() {
    static auto* extensions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509Extension"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extensions, index});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Security::X509::X509ExtensionCollection::*)(::Mono::Security::X509::X509Extension*)>(&Mono::Security::X509::X509ExtensionCollection::IndexOf)> {
  static const MethodInfo* get() {
    static auto* extension = &::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509Extension")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extension});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Security::X509::X509ExtensionCollection::*)(::StringW)>(&Mono::Security::X509::X509ExtensionCollection::IndexOf)> {
  static const MethodInfo* get() {
    static auto* oid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oid});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::X509::X509ExtensionCollection::*)(int, ::Mono::Security::X509::X509Extension*)>(&Mono::Security::X509::X509ExtensionCollection::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* extension = &::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509Extension")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, extension});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::X509::X509ExtensionCollection::*)(::Mono::Security::X509::X509Extension*)>(&Mono::Security::X509::X509ExtensionCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* extension = &::il2cpp_utils::GetClassFromName("Mono.Security.X509", "X509Extension")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extension});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::X509::X509ExtensionCollection::*)(::StringW)>(&Mono::Security::X509::X509ExtensionCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* oid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oid});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Mono::Security::X509::X509ExtensionCollection::*)()>(&Mono::Security::X509::X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Security::X509::X509Extension* (Mono::Security::X509::X509ExtensionCollection::*)(int)>(&Mono::Security::X509::X509ExtensionCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Security::X509::X509Extension* (Mono::Security::X509::X509ExtensionCollection::*)(::StringW)>(&Mono::Security::X509::X509ExtensionCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* oid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oid});
  }
};
// Writing MetadataGetter for method: Mono::Security::X509::X509ExtensionCollection::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Mono::Security::X509::X509ExtensionCollection::*)()>(&Mono::Security::X509::X509ExtensionCollection::GetBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::X509::X509ExtensionCollection*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
