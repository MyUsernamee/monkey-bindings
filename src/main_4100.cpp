// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IOnPhotonViewControllerChange
#include "Photon/Pun/IOnPhotonViewControllerChange.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IOnPhotonViewControllerChange.OnControllerChange
void Photon::Pun::IOnPhotonViewControllerChange::OnControllerChange(::Photon::Realtime::Player* newController, ::Photon::Realtime::Player* previousController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IOnPhotonViewControllerChange::OnControllerChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IOnPhotonViewControllerChange*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newController, previousController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunObservable
#include "Photon/Pun/IPunObservable.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunObservable.OnPhotonSerializeView
void Photon::Pun::IPunObservable::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunObservable::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunObservable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunOwnershipCallbacks
#include "Photon/Pun/IPunOwnershipCallbacks.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunOwnershipCallbacks.OnOwnershipRequest
void Photon::Pun::IPunOwnershipCallbacks::OnOwnershipRequest(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* requestingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunOwnershipCallbacks::OnOwnershipRequest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunOwnershipCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, requestingPlayer);
}
// Autogenerated method: Photon.Pun.IPunOwnershipCallbacks.OnOwnershipTransfered
void Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransfered(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransfered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunOwnershipCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, previousOwner);
}
// Autogenerated method: Photon.Pun.IPunOwnershipCallbacks.OnOwnershipTransferFailed
void Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransferFailed(::Photon::Pun::PhotonView* targetView, ::Photon::Realtime::Player* senderOfFailedRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunOwnershipCallbacks::OnOwnershipTransferFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunOwnershipCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetView, senderOfFailedRequest);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunInstantiateMagicCallback
#include "Photon/Pun/IPunInstantiateMagicCallback.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate
void Photon::Pun::IPunInstantiateMagicCallback::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunInstantiateMagicCallback::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunInstantiateMagicCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IPunPrefabPool
#include "Photon/Pun/IPunPrefabPool.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IPunPrefabPool.Instantiate
::UnityEngine::GameObject* Photon::Pun::IPunPrefabPool::Instantiate(::StringW prefabId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunPrefabPool::Instantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunPrefabPool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabId, position, rotation);
}
// Autogenerated method: Photon.Pun.IPunPrefabPool.Destroy
void Photon::Pun::IPunPrefabPool::Destroy(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IPunPrefabPool::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IPunPrefabPool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonHandler
#include "Photon/Pun/PhotonHandler.hpp"
// Including type: Photon.Pun.PhotonHandler/<>c
#include "Photon/Pun/PhotonHandler_--c.hpp"
// Including type: Photon.Realtime.SupportLogger
#include "Photon/Realtime/SupportLogger.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Photon.Pun.PhotonHandler instance
::Photon::Pun::PhotonHandler* Photon::Pun::PhotonHandler::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonHandler*>("Photon.Pun", "PhotonHandler", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.PhotonHandler instance
void Photon::Pun::PhotonHandler::_set_instance(::Photon::Pun::PhotonHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxDatagrams
int Photon::Pun::PhotonHandler::_get_MaxDatagrams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_MaxDatagrams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonHandler", "MaxDatagrams"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxDatagrams
void Photon::Pun::PhotonHandler::_set_MaxDatagrams(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_MaxDatagrams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "MaxDatagrams", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean SendAsap
bool Photon::Pun::PhotonHandler::_get_SendAsap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_SendAsap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonHandler", "SendAsap"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean SendAsap
void Photon::Pun::PhotonHandler::_set_SendAsap(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_SendAsap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "SendAsap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SerializeRateFrameCorrection
int Photon::Pun::PhotonHandler::_get_SerializeRateFrameCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_get_SerializeRateFrameCorrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonHandler", "SerializeRateFrameCorrection"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SerializeRateFrameCorrection
void Photon::Pun::PhotonHandler::_set_SerializeRateFrameCorrection(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::_set_SerializeRateFrameCorrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler", "SerializeRateFrameCorrection", value));
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 UpdateInterval
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_UpdateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_UpdateInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 UpdateIntervalOnSerialize
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_UpdateIntervalOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_UpdateIntervalOnSerialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateIntervalOnSerialize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextSendTickCount
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_nextSendTickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_nextSendTickCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextSendTickCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextSendTickCountOnSerialize
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonHandler::dyn_nextSendTickCountOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_nextSendTickCountOnSerialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextSendTickCountOnSerialize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.SupportLogger supportLoggerComponent
[[deprecated("Use field access instead!")]] ::Photon::Realtime::SupportLogger*& Photon::Pun::PhotonHandler::dyn_supportLoggerComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_supportLoggerComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportLoggerComponent"))->offset;
  return *reinterpret_cast<::Photon::Realtime::SupportLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Int32> reusableIntList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Photon::Pun::PhotonHandler::dyn_reusableIntList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::dyn_reusableIntList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reusableIntList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonHandler.get_Instance
::Photon::Pun::PhotonHandler* Photon::Pun::PhotonHandler::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonHandler", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnEnable
void Photon::Pun::PhotonHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.Start
void Photon::Pun::PhotonHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.FixedUpdate
void Photon::Pun::PhotonHandler::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.LateUpdate
void Photon::Pun::PhotonHandler::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.Dispatch
void Photon::Pun::PhotonHandler::Dispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::Dispatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnCreatedRoom
void Photon::Pun::PhotonHandler::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnRoomPropertiesUpdate
void Photon::Pun::PhotonHandler::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnPlayerPropertiesUpdate
void Photon::Pun::PhotonHandler::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnMasterClientSwitched
void Photon::Pun::PhotonHandler::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnFriendListUpdate
void Photon::Pun::PhotonHandler::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnCreateRoomFailed
void Photon::Pun::PhotonHandler::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnJoinRoomFailed
void Photon::Pun::PhotonHandler::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnJoinRandomFailed
void Photon::Pun::PhotonHandler::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnJoinedRoom
void Photon::Pun::PhotonHandler::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnLeftRoom
void Photon::Pun::PhotonHandler::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnPlayerEnteredRoom
void Photon::Pun::PhotonHandler::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnPlayerLeftRoom
void Photon::Pun::PhotonHandler::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.PhotonHandler..cctor
void Photon::Pun::PhotonHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.Awake
void Photon::Pun::PhotonHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler.OnDisable
void Photon::Pun::PhotonHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonHandler/<>c
#include "Photon/Pun/PhotonHandler_--c.hpp"
// Including type: UnityEngine.Events.UnityAction`2
#include "UnityEngine/Events/UnityAction_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Pun.PhotonHandler/<>c <>9
::Photon::Pun::PhotonHandler::$$c* Photon::Pun::PhotonHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonHandler::$$c*>("Photon.Pun", "PhotonHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Pun.PhotonHandler/<>c <>9
void Photon::Pun::PhotonHandler::$$c::_set_$$9(::Photon::Pun::PhotonHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> <>9__13_0
::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* Photon::Pun::PhotonHandler::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>*>("Photon.Pun", "PhotonHandler/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> <>9__13_0
void Photon::Pun::PhotonHandler::$$c::_set_$$9__13_0(::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonHandler/<>c", "<>9__13_0", value)));
}
// Autogenerated method: Photon.Pun.PhotonHandler/<>c..cctor
void Photon::Pun::PhotonHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonHandler/<>c.<Start>b__13_0
void Photon::Pun::PhotonHandler::$$c::$Start$b__13_0(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode loadingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonHandler::$$c::<Start>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(loadingMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene, loadingMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.InstantiateParameters
#include "Photon/Pun/InstantiateParameters.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32[] viewIDs
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::InstantiateParameters::dyn_viewIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_viewIDs");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewIDs"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte objLevelPrefix
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::InstantiateParameters::dyn_objLevelPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_objLevelPrefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objLevelPrefix"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object[] data
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::InstantiateParameters::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte group
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::InstantiateParameters::dyn_group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "group"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::InstantiateParameters::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::InstantiateParameters::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String prefabName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::InstantiateParameters::dyn_prefabName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_prefabName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player creator
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::InstantiateParameters::dyn_creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_creator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creator"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 timestamp
[[deprecated("Use field access instead!")]] int& Photon::Pun::InstantiateParameters::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::dyn_timestamp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.InstantiateParameters..ctor
Photon::Pun::InstantiateParameters::InstantiateParameters(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data, uint8_t objLevelPrefix, ::ArrayW<int> viewIDs, ::Photon::Realtime::Player* creator, int timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::InstantiateParameters::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(objLevelPrefix), ::il2cpp_utils::ExtractType(viewIDs), ::il2cpp_utils::ExtractType(creator), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefabName, position, rotation, group, data, objLevelPrefix, viewIDs, creator, timestamp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonNetwork
#include "Photon/Pun/PhotonNetwork.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Pun.PhotonNetwork/SerializeViewBatch
#include "Photon/Pun/PhotonNetwork_SerializeViewBatch.hpp"
// Including type: Photon.Pun.PhotonNetwork/<>c
#include "Photon/Pun/PhotonNetwork_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Pun.ServerSettings
#include "Photon/Pun/ServerSettings.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.IPunPrefabPool
#include "Photon/Pun/IPunPrefabPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Realtime.ClientState
#include "Photon/Realtime/ClientState.hpp"
// Including type: Photon.Realtime.ServerConnection
#include "Photon/Realtime/ServerConnection.hpp"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: Photon.Realtime.PhotonPortDefinition
#include "Photon/Realtime/PhotonPortDefinition.hpp"
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
// Including type: Photon.Realtime.MatchmakingMode
#include "Photon/Realtime/MatchmakingMode.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.SendOptions
#include "ExitGames/Client/Photon/SendOptions.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Photon.Pun.InstantiateParameters
#include "Photon/Pun/InstantiateParameters.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String PunVersion
::StringW Photon::Pun::PhotonNetwork::_get_PunVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PunVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "PunVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String PunVersion
void Photon::Pun::PhotonNetwork::_set_PunVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PunVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PunVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String gameVersion
::StringW Photon::Pun::PhotonNetwork::_get_gameVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_gameVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "gameVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String gameVersion
void Photon::Pun::PhotonNetwork::_set_gameVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_gameVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "gameVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LoadBalancingClient NetworkingClient
::Photon::Realtime::LoadBalancingClient* Photon::Pun::PhotonNetwork::_get_NetworkingClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_NetworkingClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LoadBalancingClient*>("Photon.Pun", "PhotonNetwork", "NetworkingClient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LoadBalancingClient NetworkingClient
void Photon::Pun::PhotonNetwork::_set_NetworkingClient(::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_NetworkingClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "NetworkingClient", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 MAX_VIEW_IDS
int Photon::Pun::PhotonNetwork::_get_MAX_VIEW_IDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_MAX_VIEW_IDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "MAX_VIEW_IDS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 MAX_VIEW_IDS
void Photon::Pun::PhotonNetwork::_set_MAX_VIEW_IDS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_MAX_VIEW_IDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "MAX_VIEW_IDS", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ServerSettingsFileName
::StringW Photon::Pun::PhotonNetwork::_get_ServerSettingsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ServerSettingsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "ServerSettingsFileName"));
}
// Autogenerated static field setter
// Set static field: static public System.String ServerSettingsFileName
void Photon::Pun::PhotonNetwork::_set_ServerSettingsFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ServerSettingsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ServerSettingsFileName", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.ServerSettings photonServerSettings
::Photon::Pun::ServerSettings* Photon::Pun::PhotonNetwork::_get_photonServerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_photonServerSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ServerSettings*>("Photon.Pun", "PhotonNetwork", "photonServerSettings"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.ServerSettings photonServerSettings
void Photon::Pun::PhotonNetwork::_set_photonServerSettings(::Photon::Pun::ServerSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_photonServerSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "photonServerSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PlayerPrefsKey
::StringW Photon::Pun::PhotonNetwork::_get_PlayerPrefsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PlayerPrefsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "PlayerPrefsKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PlayerPrefsKey
void Photon::Pun::PhotonNetwork::_set_PlayerPrefsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PlayerPrefsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PlayerPrefsKey", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectMethod
::Photon::Pun::ConnectMethod Photon::Pun::PhotonNetwork::_get_ConnectMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ConnectMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "PhotonNetwork", "ConnectMethod"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectMethod
void Photon::Pun::PhotonNetwork::_set_ConnectMethod(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ConnectMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ConnectMethod", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel LogLevel
::Photon::Pun::PunLogLevel Photon::Pun::PhotonNetwork::_get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_LogLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PhotonNetwork", "LogLevel"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel LogLevel
void Photon::Pun::PhotonNetwork::_set_LogLevel(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_LogLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "LogLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean EnableCloseConnection
bool Photon::Pun::PhotonNetwork::_get_EnableCloseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_EnableCloseConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "EnableCloseConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean EnableCloseConnection
void Photon::Pun::PhotonNetwork::_set_EnableCloseConnection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_EnableCloseConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "EnableCloseConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PrecisionForVectorSynchronization
float Photon::Pun::PhotonNetwork::_get_PrecisionForVectorSynchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrecisionForVectorSynchronization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "PrecisionForVectorSynchronization"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PrecisionForVectorSynchronization
void Photon::Pun::PhotonNetwork::_set_PrecisionForVectorSynchronization(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrecisionForVectorSynchronization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrecisionForVectorSynchronization", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PrecisionForQuaternionSynchronization
float Photon::Pun::PhotonNetwork::_get_PrecisionForQuaternionSynchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrecisionForQuaternionSynchronization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "PrecisionForQuaternionSynchronization"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PrecisionForQuaternionSynchronization
void Photon::Pun::PhotonNetwork::_set_PrecisionForQuaternionSynchronization(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrecisionForQuaternionSynchronization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrecisionForQuaternionSynchronization", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PrecisionForFloatSynchronization
float Photon::Pun::PhotonNetwork::_get_PrecisionForFloatSynchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrecisionForFloatSynchronization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "PrecisionForFloatSynchronization"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PrecisionForFloatSynchronization
void Photon::Pun::PhotonNetwork::_set_PrecisionForFloatSynchronization(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrecisionForFloatSynchronization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrecisionForFloatSynchronization", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean offlineMode
bool Photon::Pun::PhotonNetwork::_get_offlineMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_offlineMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "offlineMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean offlineMode
void Photon::Pun::PhotonNetwork::_set_offlineMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_offlineMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "offlineMode", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.Room offlineModeRoom
::Photon::Realtime::Room* Photon::Pun::PhotonNetwork::_get_offlineModeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_offlineModeRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::Room*>("Photon.Pun", "PhotonNetwork", "offlineModeRoom"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.Room offlineModeRoom
void Photon::Pun::PhotonNetwork::_set_offlineModeRoom(::Photon::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_offlineModeRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "offlineModeRoom", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean automaticallySyncScene
bool Photon::Pun::PhotonNetwork::_get_automaticallySyncScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_automaticallySyncScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "automaticallySyncScene"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean automaticallySyncScene
void Photon::Pun::PhotonNetwork::_set_automaticallySyncScene(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_automaticallySyncScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "automaticallySyncScene", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 sendFrequency
int Photon::Pun::PhotonNetwork::_get_sendFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_sendFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "sendFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sendFrequency
void Photon::Pun::PhotonNetwork::_set_sendFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_sendFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "sendFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 serializationFrequency
int Photon::Pun::PhotonNetwork::_get_serializationFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializationFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "serializationFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 serializationFrequency
void Photon::Pun::PhotonNetwork::_set_serializationFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializationFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializationFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isMessageQueueRunning
bool Photon::Pun::PhotonNetwork::_get_isMessageQueueRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_isMessageQueueRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "isMessageQueueRunning"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isMessageQueueRunning
void Photon::Pun::PhotonNetwork::_set_isMessageQueueRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_isMessageQueueRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "isMessageQueueRunning", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double frametime
double Photon::Pun::PhotonNetwork::_get_frametime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_frametime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("Photon.Pun", "PhotonNetwork", "frametime"));
}
// Autogenerated static field setter
// Set static field: static private System.Double frametime
void Photon::Pun::PhotonNetwork::_set_frametime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_frametime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "frametime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 frame
int Photon::Pun::PhotonNetwork::_get_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_frame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "frame"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 frame
void Photon::Pun::PhotonNetwork::_set_frame(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_frame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "frame", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Stopwatch StartupStopwatch
::System::Diagnostics::Stopwatch* Photon::Pun::PhotonNetwork::_get_StartupStopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_StartupStopwatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Stopwatch*>("Photon.Pun", "PhotonNetwork", "StartupStopwatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Stopwatch StartupStopwatch
void Photon::Pun::PhotonNetwork::_set_StartupStopwatch(::System::Diagnostics::Stopwatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_StartupStopwatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "StartupStopwatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MinimalTimeScaleToDispatchInFixedUpdate
float Photon::Pun::PhotonNetwork::_get_MinimalTimeScaleToDispatchInFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_MinimalTimeScaleToDispatchInFixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "MinimalTimeScaleToDispatchInFixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MinimalTimeScaleToDispatchInFixedUpdate
void Photon::Pun::PhotonNetwork::_set_MinimalTimeScaleToDispatchInFixedUpdate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_MinimalTimeScaleToDispatchInFixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "MinimalTimeScaleToDispatchInFixedUpdate", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB491C
// Autogenerated static field getter
// Get static field: static private System.Boolean <UseAlternativeUdpPorts>k__BackingField
bool Photon::Pun::PhotonNetwork::_get_$UseAlternativeUdpPorts$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_$UseAlternativeUdpPorts$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "<UseAlternativeUdpPorts>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <UseAlternativeUdpPorts>k__BackingField
void Photon::Pun::PhotonNetwork::_set_$UseAlternativeUdpPorts$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_$UseAlternativeUdpPorts$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "<UseAlternativeUdpPorts>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastUsedViewSubId
int Photon::Pun::PhotonNetwork::_get_lastUsedViewSubId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_lastUsedViewSubId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "lastUsedViewSubId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastUsedViewSubId
void Photon::Pun::PhotonNetwork::_set_lastUsedViewSubId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_lastUsedViewSubId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "lastUsedViewSubId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 lastUsedViewSubIdStatic
int Photon::Pun::PhotonNetwork::_get_lastUsedViewSubIdStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_lastUsedViewSubIdStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "lastUsedViewSubIdStatic"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastUsedViewSubIdStatic
void Photon::Pun::PhotonNetwork::_set_lastUsedViewSubIdStatic(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_lastUsedViewSubIdStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "lastUsedViewSubIdStatic", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<System.String> PrefabsWithoutMagicCallback
::System::Collections::Generic::HashSet_1<::StringW>* Photon::Pun::PhotonNetwork::_get_PrefabsWithoutMagicCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_PrefabsWithoutMagicCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::StringW>*>("Photon.Pun", "PhotonNetwork", "PrefabsWithoutMagicCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<System.String> PrefabsWithoutMagicCallback
void Photon::Pun::PhotonNetwork::_set_PrefabsWithoutMagicCallback(::System::Collections::Generic::HashSet_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_PrefabsWithoutMagicCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "PrefabsWithoutMagicCallback", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable SendInstantiateEvHashtable
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_SendInstantiateEvHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendInstantiateEvHashtable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "SendInstantiateEvHashtable"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable SendInstantiateEvHashtable
void Photon::Pun::PhotonNetwork::_set_SendInstantiateEvHashtable(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendInstantiateEvHashtable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendInstantiateEvHashtable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions SendInstantiateRaiseEventOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendInstantiateRaiseEventOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendInstantiateRaiseEventOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendInstantiateRaiseEventOptions"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions SendInstantiateRaiseEventOptions
void Photon::Pun::PhotonNetwork::_set_SendInstantiateRaiseEventOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendInstantiateRaiseEventOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendInstantiateRaiseEventOptions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Byte> allowedReceivingGroups
::System::Collections::Generic::HashSet_1<uint8_t>* Photon::Pun::PhotonNetwork::_get_allowedReceivingGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_allowedReceivingGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<uint8_t>*>("Photon.Pun", "PhotonNetwork", "allowedReceivingGroups"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Byte> allowedReceivingGroups
void Photon::Pun::PhotonNetwork::_set_allowedReceivingGroups(::System::Collections::Generic::HashSet_1<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_allowedReceivingGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "allowedReceivingGroups", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Byte> blockedSendingGroups
::System::Collections::Generic::HashSet_1<uint8_t>* Photon::Pun::PhotonNetwork::_get_blockedSendingGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_blockedSendingGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<uint8_t>*>("Photon.Pun", "PhotonNetwork", "blockedSendingGroups"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Byte> blockedSendingGroups
void Photon::Pun::PhotonNetwork::_set_blockedSendingGroups(::System::Collections::Generic::HashSet_1<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_blockedSendingGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "blockedSendingGroups", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<Photon.Pun.PhotonView> reusablePVHashset
::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>* Photon::Pun::PhotonNetwork::_get_reusablePVHashset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_reusablePVHashset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>*>("Photon.Pun", "PhotonNetwork", "reusablePVHashset"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<Photon.Pun.PhotonView> reusablePVHashset
void Photon::Pun::PhotonNetwork::_set_reusablePVHashset(::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_reusablePVHashset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "reusablePVHashset", value));
}
// Autogenerated static field getter
// Get static field: static private ExitGames.Client.Photon.NonAllocDictionary`2<System.Int32,Photon.Pun.PhotonView> photonViewList
::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>* Photon::Pun::PhotonNetwork::_get_photonViewList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_photonViewList");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>*>("Photon.Pun", "PhotonNetwork", "photonViewList")));
}
// Autogenerated static field setter
// Set static field: static private ExitGames.Client.Photon.NonAllocDictionary`2<System.Int32,Photon.Pun.PhotonView> photonViewList
void Photon::Pun::PhotonNetwork::_set_photonViewList(::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_photonViewList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "photonViewList", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB492C
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipRequestEv
::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* Photon::Pun::PhotonNetwork::_get_OnOwnershipRequestEv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OnOwnershipRequestEv");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*>("Photon.Pun", "PhotonNetwork", "OnOwnershipRequestEv")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipRequestEv
void Photon::Pun::PhotonNetwork::_set_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OnOwnershipRequestEv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OnOwnershipRequestEv", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB493C
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferedEv
::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferedEv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferedEv");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*>("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferedEv")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferedEv
void Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferedEv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferedEv", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB494C
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferFailedEv
::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferFailedEv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OnOwnershipTransferFailedEv");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*>("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferFailedEv")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferFailedEv
void Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OnOwnershipTransferFailedEv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OnOwnershipTransferFailedEv", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte currentLevelPrefix
uint8_t Photon::Pun::PhotonNetwork::_get_currentLevelPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_currentLevelPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PhotonNetwork", "currentLevelPrefix"));
}
// Autogenerated static field setter
// Set static field: static System.Byte currentLevelPrefix
void Photon::Pun::PhotonNetwork::_set_currentLevelPrefix(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_currentLevelPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "currentLevelPrefix", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean loadingLevelAndPausedNetwork
bool Photon::Pun::PhotonNetwork::_get_loadingLevelAndPausedNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_loadingLevelAndPausedNetwork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "loadingLevelAndPausedNetwork"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean loadingLevelAndPausedNetwork
void Photon::Pun::PhotonNetwork::_set_loadingLevelAndPausedNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_loadingLevelAndPausedNetwork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "loadingLevelAndPausedNetwork", value));
}
// Autogenerated static field getter
// Get static field: static System.String CurrentSceneProperty
::StringW Photon::Pun::PhotonNetwork::_get_CurrentSceneProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_CurrentSceneProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "CurrentSceneProperty"));
}
// Autogenerated static field setter
// Set static field: static System.String CurrentSceneProperty
void Photon::Pun::PhotonNetwork::_set_CurrentSceneProperty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_CurrentSceneProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "CurrentSceneProperty", value));
}
// Autogenerated static field getter
// Get static field: static System.String CurrentScenePropertyLoadAsync
::StringW Photon::Pun::PhotonNetwork::_get_CurrentScenePropertyLoadAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_CurrentScenePropertyLoadAsync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun", "PhotonNetwork", "CurrentScenePropertyLoadAsync"));
}
// Autogenerated static field setter
// Set static field: static System.String CurrentScenePropertyLoadAsync
void Photon::Pun::PhotonNetwork::_set_CurrentScenePropertyLoadAsync(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_CurrentScenePropertyLoadAsync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "CurrentScenePropertyLoadAsync", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.IPunPrefabPool prefabPool
::Photon::Pun::IPunPrefabPool* Photon::Pun::PhotonNetwork::_get_prefabPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_prefabPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::IPunPrefabPool*>("Photon.Pun", "PhotonNetwork", "prefabPool"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.IPunPrefabPool prefabPool
void Photon::Pun::PhotonNetwork::_set_prefabPool(::Photon::Pun::IPunPrefabPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_prefabPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "prefabPool", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean UseRpcMonoBehaviourCache
bool Photon::Pun::PhotonNetwork::_get_UseRpcMonoBehaviourCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_UseRpcMonoBehaviourCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "UseRpcMonoBehaviourCache"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean UseRpcMonoBehaviourCache
void Photon::Pun::PhotonNetwork::_set_UseRpcMonoBehaviourCache(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_UseRpcMonoBehaviourCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "UseRpcMonoBehaviourCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Reflection.MethodInfo>> monoRPCMethodsCache
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>* Photon::Pun::PhotonNetwork::_get_monoRPCMethodsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_monoRPCMethodsCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>*>("Photon.Pun", "PhotonNetwork", "monoRPCMethodsCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Reflection.MethodInfo>> monoRPCMethodsCache
void Photon::Pun::PhotonNetwork::_set_monoRPCMethodsCache(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_monoRPCMethodsCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "monoRPCMethodsCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> rpcShortcuts
::System::Collections::Generic::Dictionary_2<::StringW, int>* Photon::Pun::PhotonNetwork::_get_rpcShortcuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_rpcShortcuts");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, int>*>("Photon.Pun", "PhotonNetwork", "rpcShortcuts")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> rpcShortcuts
void Photon::Pun::PhotonNetwork::_set_rpcShortcuts(::System::Collections::Generic::Dictionary_2<::StringW, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_rpcShortcuts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "rpcShortcuts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean RunRpcCoroutines
bool Photon::Pun::PhotonNetwork::_get_RunRpcCoroutines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_RunRpcCoroutines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Pun", "PhotonNetwork", "RunRpcCoroutines"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean RunRpcCoroutines
void Photon::Pun::PhotonNetwork::_set_RunRpcCoroutines(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_RunRpcCoroutines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "RunRpcCoroutines", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation
::UnityEngine::AsyncOperation* Photon::Pun::PhotonNetwork::_get__AsyncLevelLoadingOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get__AsyncLevelLoadingOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AsyncOperation*>("Photon.Pun", "PhotonNetwork", "_AsyncLevelLoadingOperation"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation
void Photon::Pun::PhotonNetwork::_set__AsyncLevelLoadingOperation(::UnityEngine::AsyncOperation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set__AsyncLevelLoadingOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "_AsyncLevelLoadingOperation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single _levelLoadingProgress
float Photon::Pun::PhotonNetwork::_get__levelLoadingProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get__levelLoadingProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Photon.Pun", "PhotonNetwork", "_levelLoadingProgress"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _levelLoadingProgress
void Photon::Pun::PhotonNetwork::_set__levelLoadingProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set__levelLoadingProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "_levelLoadingProgress", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type typePunRPC
::System::Type* Photon::Pun::PhotonNetwork::_get_typePunRPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_typePunRPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Photon.Pun", "PhotonNetwork", "typePunRPC"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type typePunRPC
void Photon::Pun::PhotonNetwork::_set_typePunRPC(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_typePunRPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "typePunRPC", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type typePhotonMessageInfo
::System::Type* Photon::Pun::PhotonNetwork::_get_typePhotonMessageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_typePhotonMessageInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Photon.Pun", "PhotonNetwork", "typePhotonMessageInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type typePhotonMessageInfo
void Photon::Pun::PhotonNetwork::_set_typePhotonMessageInfo(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_typePhotonMessageInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "typePhotonMessageInfo", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteZero
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteZero"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteZero
void Photon::Pun::PhotonNetwork::_set_keyByteZero(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteZero", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteOne
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteOne"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteOne
void Photon::Pun::PhotonNetwork::_set_keyByteOne(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteOne", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteTwo
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteTwo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteTwo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteTwo
void Photon::Pun::PhotonNetwork::_set_keyByteTwo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteTwo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteTwo", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteThree
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteThree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteThree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteThree"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteThree
void Photon::Pun::PhotonNetwork::_set_keyByteThree(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteThree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteThree", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteFour
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteFour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteFour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteFour"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteFour
void Photon::Pun::PhotonNetwork::_set_keyByteFour(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteFour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteFour", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteFive
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteFive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteFive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteFive"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteFive
void Photon::Pun::PhotonNetwork::_set_keyByteFive(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteFive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteFive", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteSix
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteSix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteSix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteSix"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteSix
void Photon::Pun::PhotonNetwork::_set_keyByteSix(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteSix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteSix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteSeven
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteSeven() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteSeven");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteSeven"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteSeven
void Photon::Pun::PhotonNetwork::_set_keyByteSeven(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteSeven");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteSeven", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object keyByteEight
::Il2CppObject* Photon::Pun::PhotonNetwork::_get_keyByteEight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_keyByteEight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Pun", "PhotonNetwork", "keyByteEight"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object keyByteEight
void Photon::Pun::PhotonNetwork::_set_keyByteEight(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_keyByteEight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "keyByteEight", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] emptyObjectArray
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonNetwork::_get_emptyObjectArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_emptyObjectArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("Photon.Pun", "PhotonNetwork", "emptyObjectArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] emptyObjectArray
void Photon::Pun::PhotonNetwork::_set_emptyObjectArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_emptyObjectArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "emptyObjectArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type[] emptyTypeArray
::ArrayW<::System::Type*> Photon::Pun::PhotonNetwork::_get_emptyTypeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_emptyTypeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("Photon.Pun", "PhotonNetwork", "emptyTypeArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type[] emptyTypeArray
void Photon::Pun::PhotonNetwork::_set_emptyTypeArray(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_emptyTypeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "emptyTypeArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<Photon.Pun.PhotonView> foundPVs
::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>* Photon::Pun::PhotonNetwork::_get_foundPVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_foundPVs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>*>("Photon.Pun", "PhotonNetwork", "foundPVs"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<Photon.Pun.PhotonView> foundPVs
void Photon::Pun::PhotonNetwork::_set_foundPVs(::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_foundPVs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "foundPVs", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable removeFilter
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_removeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_removeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "removeFilter"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable removeFilter
void Photon::Pun::PhotonNetwork::_set_removeFilter(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_removeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "removeFilter", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable ServerCleanDestroyEvent
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_ServerCleanDestroyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ServerCleanDestroyEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "ServerCleanDestroyEvent"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable ServerCleanDestroyEvent
void Photon::Pun::PhotonNetwork::_set_ServerCleanDestroyEvent(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ServerCleanDestroyEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ServerCleanDestroyEvent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions ServerCleanOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_ServerCleanOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ServerCleanOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "ServerCleanOptions"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions ServerCleanOptions
void Photon::Pun::PhotonNetwork::_set_ServerCleanOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ServerCleanOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ServerCleanOptions", value));
}
// Autogenerated static field getter
// Get static field: static Photon.Realtime.RaiseEventOptions SendToAllOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendToAllOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendToAllOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendToAllOptions"));
}
// Autogenerated static field setter
// Set static field: static Photon.Realtime.RaiseEventOptions SendToAllOptions
void Photon::Pun::PhotonNetwork::_set_SendToAllOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendToAllOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendToAllOptions", value));
}
// Autogenerated static field getter
// Get static field: static Photon.Realtime.RaiseEventOptions SendToOthersOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendToOthersOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendToOthersOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendToOthersOptions"));
}
// Autogenerated static field setter
// Set static field: static Photon.Realtime.RaiseEventOptions SendToOthersOptions
void Photon::Pun::PhotonNetwork::_set_SendToOthersOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendToOthersOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendToOthersOptions", value));
}
// Autogenerated static field getter
// Get static field: static Photon.Realtime.RaiseEventOptions SendToSingleOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_SendToSingleOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SendToSingleOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "SendToSingleOptions"));
}
// Autogenerated static field setter
// Set static field: static Photon.Realtime.RaiseEventOptions SendToSingleOptions
void Photon::Pun::PhotonNetwork::_set_SendToSingleOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SendToSingleOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SendToSingleOptions", value));
}
// Autogenerated static field getter
// Get static field: static private readonly ExitGames.Client.Photon.Hashtable rpcFilterByViewId
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_rpcFilterByViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_rpcFilterByViewId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "rpcFilterByViewId"));
}
// Autogenerated static field setter
// Set static field: static private readonly ExitGames.Client.Photon.Hashtable rpcFilterByViewId
void Photon::Pun::PhotonNetwork::_set_rpcFilterByViewId(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_rpcFilterByViewId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "rpcFilterByViewId", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Realtime.RaiseEventOptions OpCleanRpcBufferOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_OpCleanRpcBufferOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_OpCleanRpcBufferOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "OpCleanRpcBufferOptions"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Realtime.RaiseEventOptions OpCleanRpcBufferOptions
void Photon::Pun::PhotonNetwork::_set_OpCleanRpcBufferOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_OpCleanRpcBufferOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "OpCleanRpcBufferOptions", value));
}
// Autogenerated static field getter
// Get static field: static private ExitGames.Client.Photon.Hashtable rpcEvent
::ExitGames::Client::Photon::Hashtable* Photon::Pun::PhotonNetwork::_get_rpcEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_rpcEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ExitGames::Client::Photon::Hashtable*>("Photon.Pun", "PhotonNetwork", "rpcEvent"));
}
// Autogenerated static field setter
// Set static field: static private ExitGames.Client.Photon.Hashtable rpcEvent
void Photon::Pun::PhotonNetwork::_set_rpcEvent(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_rpcEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "rpcEvent", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.RaiseEventOptions RpcOptionsToAll
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_RpcOptionsToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_RpcOptionsToAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "RpcOptionsToAll"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.RaiseEventOptions RpcOptionsToAll
void Photon::Pun::PhotonNetwork::_set_RpcOptionsToAll(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_RpcOptionsToAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "RpcOptionsToAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ObjectsInOneUpdate
int Photon::Pun::PhotonNetwork::_get_ObjectsInOneUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_ObjectsInOneUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "ObjectsInOneUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ObjectsInOneUpdate
void Photon::Pun::PhotonNetwork::_set_ObjectsInOneUpdate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_ObjectsInOneUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "ObjectsInOneUpdate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Pun.PhotonStream serializeStreamOut
::Photon::Pun::PhotonStream* Photon::Pun::PhotonNetwork::_get_serializeStreamOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeStreamOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonStream*>("Photon.Pun", "PhotonNetwork", "serializeStreamOut"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Pun.PhotonStream serializeStreamOut
void Photon::Pun::PhotonNetwork::_set_serializeStreamOut(::Photon::Pun::PhotonStream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeStreamOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeStreamOut", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Photon.Pun.PhotonStream serializeStreamIn
::Photon::Pun::PhotonStream* Photon::Pun::PhotonNetwork::_get_serializeStreamIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeStreamIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonStream*>("Photon.Pun", "PhotonNetwork", "serializeStreamIn"));
}
// Autogenerated static field setter
// Set static field: static private readonly Photon.Pun.PhotonStream serializeStreamIn
void Photon::Pun::PhotonNetwork::_set_serializeStreamIn(::Photon::Pun::PhotonStream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeStreamIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeStreamIn", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.RaiseEventOptions serializeRaiseEvOptions
::Photon::Realtime::RaiseEventOptions* Photon::Pun::PhotonNetwork::_get_serializeRaiseEvOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeRaiseEvOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Pun", "PhotonNetwork", "serializeRaiseEvOptions"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.RaiseEventOptions serializeRaiseEvOptions
void Photon::Pun::PhotonNetwork::_set_serializeRaiseEvOptions(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeRaiseEvOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeRaiseEvOptions", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<Photon.Pun.PhotonNetwork/RaiseEventBatch,Photon.Pun.PhotonNetwork/SerializeViewBatch> serializeViewBatches
::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>* Photon::Pun::PhotonNetwork::_get_serializeViewBatches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_serializeViewBatches");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>*>("Photon.Pun", "PhotonNetwork", "serializeViewBatches")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<Photon.Pun.PhotonNetwork/RaiseEventBatch,Photon.Pun.PhotonNetwork/SerializeViewBatch> serializeViewBatches
void Photon::Pun::PhotonNetwork::_set_serializeViewBatches(::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_serializeViewBatches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "serializeViewBatches", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncViewId
int Photon::Pun::PhotonNetwork::_get_SyncViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncViewId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncViewId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncViewId
void Photon::Pun::PhotonNetwork::_set_SyncViewId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncViewId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncViewId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncCompressed
int Photon::Pun::PhotonNetwork::_get_SyncCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncCompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncCompressed
void Photon::Pun::PhotonNetwork::_set_SyncCompressed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncNullValues
int Photon::Pun::PhotonNetwork::_get_SyncNullValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncNullValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncNullValues"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncNullValues
void Photon::Pun::PhotonNetwork::_set_SyncNullValues(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncNullValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncNullValues", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SyncFirstValue
int Photon::Pun::PhotonNetwork::_get_SyncFirstValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get_SyncFirstValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun", "PhotonNetwork", "SyncFirstValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SyncFirstValue
void Photon::Pun::PhotonNetwork::_set_SyncFirstValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set_SyncFirstValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "SyncFirstValue", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Realtime.RegionHandler _cachedRegionHandler
::Photon::Realtime::RegionHandler* Photon::Pun::PhotonNetwork::_get__cachedRegionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_get__cachedRegionHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RegionHandler*>("Photon.Pun", "PhotonNetwork", "_cachedRegionHandler"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Realtime.RegionHandler _cachedRegionHandler
void Photon::Pun::PhotonNetwork::_set__cachedRegionHandler(::Photon::Realtime::RegionHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::_set__cachedRegionHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork", "_cachedRegionHandler", value));
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_GameVersion
::StringW Photon::Pun::PhotonNetwork::get_GameVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_GameVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_GameVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_GameVersion
void Photon::Pun::PhotonNetwork::set_GameVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_GameVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_GameVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_AppVersion
::StringW Photon::Pun::PhotonNetwork::get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PhotonServerSettings
::Photon::Pun::ServerSettings* Photon::Pun::PhotonNetwork::get_PhotonServerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PhotonServerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PhotonServerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::ServerSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_PhotonServerSettings
void Photon::Pun::PhotonNetwork::set_PhotonServerSettings(::Photon::Pun::ServerSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_PhotonServerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_PhotonServerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ServerAddress
::StringW Photon::Pun::PhotonNetwork::get_ServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CloudRegion
::StringW Photon::Pun::PhotonNetwork::get_CloudRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CloudRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CloudRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CurrentCluster
::StringW Photon::Pun::PhotonNetwork::get_CurrentCluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CurrentCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CurrentCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_BestRegionSummaryInPreferences
::StringW Photon::Pun::PhotonNetwork::get_BestRegionSummaryInPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_BestRegionSummaryInPreferences
void Photon::Pun::PhotonNetwork::set_BestRegionSummaryInPreferences(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsConnected
bool Photon::Pun::PhotonNetwork::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsConnectedAndReady
bool Photon::Pun::PhotonNetwork::get_IsConnectedAndReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsConnectedAndReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsConnectedAndReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_NetworkClientState
::Photon::Realtime::ClientState Photon::Pun::PhotonNetwork::get_NetworkClientState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_NetworkClientState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_NetworkClientState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ClientState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_Server
::Photon::Realtime::ServerConnection Photon::Pun::PhotonNetwork::get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_Server");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_Server", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ServerConnection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_AuthValues
::Photon::Realtime::AuthenticationValues* Photon::Pun::PhotonNetwork::get_AuthValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::AuthenticationValues*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_AuthValues
void Photon::Pun::PhotonNetwork::set_AuthValues(::Photon::Realtime::AuthenticationValues* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CurrentLobby
::Photon::Realtime::TypedLobby* Photon::Pun::PhotonNetwork::get_CurrentLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CurrentLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CurrentLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::TypedLobby*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CurrentRoom
::Photon::Realtime::Room* Photon::Pun::PhotonNetwork::get_CurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_LocalPlayer
::Photon::Realtime::Player* Photon::Pun::PhotonNetwork::get_LocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_LocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_LocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_NickName
::StringW Photon::Pun::PhotonNetwork::get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_NickName
void Photon::Pun::PhotonNetwork::set_NickName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PlayerList
::ArrayW<::Photon::Realtime::Player*> Photon::Pun::PhotonNetwork::get_PlayerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PlayerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PlayerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Realtime::Player*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PlayerListOthers
::ArrayW<::Photon::Realtime::Player*> Photon::Pun::PhotonNetwork::get_PlayerListOthers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PlayerListOthers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PlayerListOthers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Realtime::Player*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_OfflineMode
bool Photon::Pun::PhotonNetwork::get_OfflineMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_OfflineMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_OfflineMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_OfflineMode
void Photon::Pun::PhotonNetwork::set_OfflineMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_OfflineMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_OfflineMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_AutomaticallySyncScene
bool Photon::Pun::PhotonNetwork::get_AutomaticallySyncScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_AutomaticallySyncScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_AutomaticallySyncScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_AutomaticallySyncScene
void Photon::Pun::PhotonNetwork::set_AutomaticallySyncScene(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_AutomaticallySyncScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_AutomaticallySyncScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_EnableLobbyStatistics
bool Photon::Pun::PhotonNetwork::get_EnableLobbyStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_EnableLobbyStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_EnableLobbyStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_InLobby
bool Photon::Pun::PhotonNetwork::get_InLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_InLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_InLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_SendRate
int Photon::Pun::PhotonNetwork::get_SendRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_SendRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_SendRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_SendRate
void Photon::Pun::PhotonNetwork::set_SendRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_SendRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_SendRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_SerializationRate
int Photon::Pun::PhotonNetwork::get_SerializationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_SerializationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_SerializationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_SerializationRate
void Photon::Pun::PhotonNetwork::set_SerializationRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_SerializationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_SerializationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsMessageQueueRunning
bool Photon::Pun::PhotonNetwork::get_IsMessageQueueRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsMessageQueueRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsMessageQueueRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_IsMessageQueueRunning
void Photon::Pun::PhotonNetwork::set_IsMessageQueueRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_IsMessageQueueRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_IsMessageQueueRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_Time
double Photon::Pun::PhotonNetwork::get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_Time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_Time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ServerTimestamp
int Photon::Pun::PhotonNetwork::get_ServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_KeepAliveInBackground
void Photon::Pun::PhotonNetwork::set_KeepAliveInBackground(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_KeepAliveInBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_KeepAliveInBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_KeepAliveInBackground
float Photon::Pun::PhotonNetwork::get_KeepAliveInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_KeepAliveInBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_KeepAliveInBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_IsMasterClient
bool Photon::Pun::PhotonNetwork::get_IsMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_IsMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_IsMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_MasterClient
::Photon::Realtime::Player* Photon::Pun::PhotonNetwork::get_MasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_MasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_MasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_InRoom
bool Photon::Pun::PhotonNetwork::get_InRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_InRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_InRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfPlayersOnMaster
int Photon::Pun::PhotonNetwork::get_CountOfPlayersOnMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfPlayersOnMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfPlayersOnMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfPlayersInRooms
int Photon::Pun::PhotonNetwork::get_CountOfPlayersInRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfPlayersInRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfPlayersInRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfPlayers
int Photon::Pun::PhotonNetwork::get_CountOfPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CountOfRooms
int Photon::Pun::PhotonNetwork::get_CountOfRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CountOfRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CountOfRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_NetworkStatisticsEnabled
bool Photon::Pun::PhotonNetwork::get_NetworkStatisticsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_NetworkStatisticsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_NetworkStatisticsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_NetworkStatisticsEnabled
void Photon::Pun::PhotonNetwork::set_NetworkStatisticsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_NetworkStatisticsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_NetworkStatisticsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ResentReliableCommands
int Photon::Pun::PhotonNetwork::get_ResentReliableCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ResentReliableCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ResentReliableCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_CrcCheckEnabled
bool Photon::Pun::PhotonNetwork::get_CrcCheckEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_CrcCheckEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_CrcCheckEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_CrcCheckEnabled
void Photon::Pun::PhotonNetwork::set_CrcCheckEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_CrcCheckEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_CrcCheckEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PacketLossByCrcCheck
int Photon::Pun::PhotonNetwork::get_PacketLossByCrcCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PacketLossByCrcCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PacketLossByCrcCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_MaxResendsBeforeDisconnect
int Photon::Pun::PhotonNetwork::get_MaxResendsBeforeDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_MaxResendsBeforeDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_MaxResendsBeforeDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_MaxResendsBeforeDisconnect
void Photon::Pun::PhotonNetwork::set_MaxResendsBeforeDisconnect(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_MaxResendsBeforeDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_MaxResendsBeforeDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_QuickResends
int Photon::Pun::PhotonNetwork::get_QuickResends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_QuickResends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_QuickResends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_QuickResends
void Photon::Pun::PhotonNetwork::set_QuickResends(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_QuickResends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_QuickResends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_UseAlternativeUdpPorts
bool Photon::Pun::PhotonNetwork::get_UseAlternativeUdpPorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_UseAlternativeUdpPorts
void Photon::Pun::PhotonNetwork::set_UseAlternativeUdpPorts(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ServerPortOverrides
::Photon::Realtime::PhotonPortDefinition Photon::Pun::PhotonNetwork::get_ServerPortOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ServerPortOverrides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ServerPortOverrides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::PhotonPortDefinition, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_ServerPortOverrides
void Photon::Pun::PhotonNetwork::set_ServerPortOverrides(::Photon::Realtime::PhotonPortDefinition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_ServerPortOverrides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_ServerPortOverrides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork..cctor
void Photon::Pun::PhotonNetwork::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.StaticReset
void Photon::Pun::PhotonNetwork::StaticReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::StaticReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "StaticReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectUsingSettings
bool Photon::Pun::PhotonNetwork::ConnectUsingSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectUsingSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectUsingSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectUsingSettings
bool Photon::Pun::PhotonNetwork::ConnectUsingSettings(::Photon::Realtime::AppSettings* appSettings, bool startInOfflineMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectUsingSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectUsingSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appSettings), ::il2cpp_utils::ExtractType(startInOfflineMode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appSettings, startInOfflineMode);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectToMaster
bool Photon::Pun::PhotonNetwork::ConnectToMaster(::StringW masterServerAddress, int port, ::StringW appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectToMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectToMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterServerAddress), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, masterServerAddress, port, appID);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectToBestCloudServer
bool Photon::Pun::PhotonNetwork::ConnectToBestCloudServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectToBestCloudServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectToBestCloudServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ConnectToRegion
bool Photon::Pun::PhotonNetwork::ConnectToRegion(::StringW region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ConnectToRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ConnectToRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, region);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Disconnect
void Photon::Pun::PhotonNetwork::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Reconnect
bool Photon::Pun::PhotonNetwork::Reconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Reconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Reconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkStatisticsReset
void Photon::Pun::PhotonNetwork::NetworkStatisticsReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkStatisticsReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkStatisticsReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkStatisticsToString
::StringW Photon::Pun::PhotonNetwork::NetworkStatisticsToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkStatisticsToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkStatisticsToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.VerifyCanUseNetwork
bool Photon::Pun::PhotonNetwork::VerifyCanUseNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::VerifyCanUseNetwork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "VerifyCanUseNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetPing
int Photon::Pun::PhotonNetwork::GetPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetPing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetPing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.FetchServerTimestamp
void Photon::Pun::PhotonNetwork::FetchServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::FetchServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "FetchServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendAllOutgoingCommands
void Photon::Pun::PhotonNetwork::SendAllOutgoingCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendAllOutgoingCommands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendAllOutgoingCommands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CloseConnection
bool Photon::Pun::PhotonNetwork::CloseConnection(::Photon::Realtime::Player* kickPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CloseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CloseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, kickPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetMasterClient
bool Photon::Pun::PhotonNetwork::SetMasterClient(::Photon::Realtime::Player* masterClientPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterClientPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, masterClientPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomRoom
bool Photon::Pun::PhotonNetwork::JoinRandomRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomRoom
bool Photon::Pun::PhotonNetwork::JoinRandomRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedCustomRoomProperties), ::il2cpp_utils::ExtractType(expectedMaxPlayers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedCustomRoomProperties, expectedMaxPlayers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomRoom
bool Photon::Pun::PhotonNetwork::JoinRandomRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers, ::Photon::Realtime::MatchmakingMode matchingType, ::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedCustomRoomProperties), ::il2cpp_utils::ExtractType(expectedMaxPlayers), ::il2cpp_utils::ExtractType(matchingType), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedCustomRoomProperties, expectedMaxPlayers, matchingType, typedLobby, sqlLobbyFilter, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRandomOrCreateRoom
bool Photon::Pun::PhotonNetwork::JoinRandomOrCreateRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers, ::Photon::Realtime::MatchmakingMode matchingType, ::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter, ::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRandomOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRandomOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedCustomRoomProperties), ::il2cpp_utils::ExtractType(expectedMaxPlayers), ::il2cpp_utils::ExtractType(matchingType), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter), ::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedCustomRoomProperties, expectedMaxPlayers, matchingType, typedLobby, sqlLobbyFilter, roomName, roomOptions, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CreateRoom
bool Photon::Pun::PhotonNetwork::CreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::Photon::Realtime::TypedLobby* typedLobby, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, roomOptions, typedLobby, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinOrCreateRoom
bool Photon::Pun::PhotonNetwork::JoinOrCreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::Photon::Realtime::TypedLobby* typedLobby, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, roomOptions, typedLobby, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinRoom
bool Photon::Pun::PhotonNetwork::JoinRoom(::StringW roomName, ::ArrayW<::StringW> expectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(expectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, expectedUsers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RejoinRoom
bool Photon::Pun::PhotonNetwork::RejoinRoom(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RejoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RejoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ReconnectAndRejoin
bool Photon::Pun::PhotonNetwork::ReconnectAndRejoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ReconnectAndRejoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ReconnectAndRejoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LeaveRoom
bool Photon::Pun::PhotonNetwork::LeaveRoom(bool becomeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(becomeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, becomeInactive);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.EnterOfflineRoom
void Photon::Pun::PhotonNetwork::EnterOfflineRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, bool createdRoom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::EnterOfflineRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "EnterOfflineRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(createdRoom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomName, roomOptions, createdRoom);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinLobby
bool Photon::Pun::PhotonNetwork::JoinLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.JoinLobby
bool Photon::Pun::PhotonNetwork::JoinLobby(::Photon::Realtime::TypedLobby* typedLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::JoinLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "JoinLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedLobby)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typedLobby);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LeaveLobby
bool Photon::Pun::PhotonNetwork::LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LeaveLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LeaveLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.FindFriends
bool Photon::Pun::PhotonNetwork::FindFriends(::ArrayW<::StringW> friendsToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::FindFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "FindFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendsToFind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, friendsToFind);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetCustomRoomList
bool Photon::Pun::PhotonNetwork::GetCustomRoomList(::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetCustomRoomList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetCustomRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typedLobby, sqlLobbyFilter);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetPlayerCustomProperties
bool Photon::Pun::PhotonNetwork::SetPlayerCustomProperties(::ExitGames::Client::Photon::Hashtable* customProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetPlayerCustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetPlayerCustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customProperties);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemovePlayerCustomProperties
void Photon::Pun::PhotonNetwork::RemovePlayerCustomProperties(::ArrayW<::StringW> customPropertiesToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemovePlayerCustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemovePlayerCustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customPropertiesToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customPropertiesToDelete);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RaiseEvent
bool Photon::Pun::PhotonNetwork::RaiseEvent(uint8_t eventCode, ::Il2CppObject* eventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RaiseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCode), ::il2cpp_utils::ExtractType(eventContent), ::il2cpp_utils::ExtractType(raiseEventOptions), ::il2cpp_utils::ExtractType(sendOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventCode, eventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RaiseEventInternal
bool Photon::Pun::PhotonNetwork::RaiseEventInternal(uint8_t eventCode, ::Il2CppObject* eventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RaiseEventInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCode), ::il2cpp_utils::ExtractType(eventContent), ::il2cpp_utils::ExtractType(raiseEventOptions), ::il2cpp_utils::ExtractType(sendOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventCode, eventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateViewID
bool Photon::Pun::PhotonNetwork::AllocateViewID(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateSceneViewID
bool Photon::Pun::PhotonNetwork::AllocateSceneViewID(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateSceneViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateSceneViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateRoomViewID
bool Photon::Pun::PhotonNetwork::AllocateRoomViewID(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateRoomViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateRoomViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateViewID
int Photon::Pun::PhotonNetwork::AllocateViewID(bool roomObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomObject)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomObject);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AllocateViewID
int Photon::Pun::PhotonNetwork::AllocateViewID(int ownerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AllocateViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AllocateViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ownerId);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Instantiate
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::Instantiate(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, group, data);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.InstantiateSceneObject
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::InstantiateSceneObject(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::InstantiateSceneObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "InstantiateSceneObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, group, data);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.InstantiateRoomObject
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::InstantiateRoomObject(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::InstantiateRoomObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "InstantiateRoomObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabName), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabName, position, rotation, group, data);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkInstantiate
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::NetworkInstantiate(::ExitGames::Client::Photon::Hashtable* networkEvent, ::Photon::Realtime::Player* creator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkInstantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkInstantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkEvent), ::il2cpp_utils::ExtractType(creator)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, networkEvent, creator);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NetworkInstantiate
::UnityEngine::GameObject* Photon::Pun::PhotonNetwork::NetworkInstantiate(::Photon::Pun::InstantiateParameters parameters, bool roomObject, bool instantiateEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NetworkInstantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NetworkInstantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(roomObject), ::il2cpp_utils::ExtractType(instantiateEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, roomObject, instantiateEvent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendInstantiate
bool Photon::Pun::PhotonNetwork::SendInstantiate(::Photon::Pun::InstantiateParameters parameters, bool roomObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendInstantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendInstantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(roomObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, roomObject);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Destroy
void Photon::Pun::PhotonNetwork::Destroy(::Photon::Pun::PhotonView* targetView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.Destroy
void Photon::Pun::PhotonNetwork::Destroy(::UnityEngine::GameObject* targetGo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetGo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetGo);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyPlayerObjects
void Photon::Pun::PhotonNetwork::DestroyPlayerObjects(::Photon::Realtime::Player* targetPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyPlayerObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyPlayerObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyPlayerObjects
void Photon::Pun::PhotonNetwork::DestroyPlayerObjects(int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyPlayerObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyPlayerObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPlayerId);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyAll
void Photon::Pun::PhotonNetwork::DestroyAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveRPCs
void Photon::Pun::PhotonNetwork::RemoveRPCs(::Photon::Realtime::Player* targetPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveRPCs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveRPCs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPlayer);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveRPCs
void Photon::Pun::PhotonNetwork::RemoveRPCs(::Photon::Pun::PhotonView* targetPhotonView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveRPCs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveRPCs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPhotonView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetPhotonView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RPC
void Photon::Pun::PhotonNetwork::RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Pun::RpcTarget target, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view, methodName, target, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RPC
void Photon::Pun::PhotonNetwork::RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Realtime::Player* targetPlayer, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view, methodName, targetPlayer, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.FindGameObjectsWithComponent
::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>* Photon::Pun::PhotonNetwork::FindGameObjectsWithComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::FindGameObjectsWithComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "FindGameObjectsWithComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetInterestGroups
void Photon::Pun::PhotonNetwork::SetInterestGroups(uint8_t group, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetInterestGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetInterestGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group, enabled);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadLevel
void Photon::Pun::PhotonNetwork::LoadLevel(int levelNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelNumber);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadLevel
void Photon::Pun::PhotonNetwork::LoadLevel(::StringW levelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelName);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.WebRpc
bool Photon::Pun::PhotonNetwork::WebRpc(::StringW name, ::Il2CppObject* parameters, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::WebRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "WebRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(sendAuthCookie)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, parameters, sendAuthCookie);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetupLogging
void Photon::Pun::PhotonNetwork::SetupLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetupLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetupLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadOrCreateSettings
void Photon::Pun::PhotonNetwork::LoadOrCreateSettings(bool reload) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadOrCreateSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadOrCreateSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reload)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reload);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PhotonViews
::ArrayW<::Photon::Pun::PhotonView*> Photon::Pun::PhotonNetwork::get_PhotonViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PhotonViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PhotonViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Pun::PhotonView*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PhotonViewCollection
typename ::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>::ValueIterator Photon::Pun::PhotonNetwork::get_PhotonViewCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PhotonViewCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PhotonViewCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<typename ::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>::ValueIterator, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_ViewCount
int Photon::Pun::PhotonNetwork::get_ViewCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_ViewCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_ViewCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.add_OnOwnershipRequestEv
void Photon::Pun::PhotonNetwork::add_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::add_OnOwnershipRequestEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "add_OnOwnershipRequestEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.remove_OnOwnershipRequestEv
void Photon::Pun::PhotonNetwork::remove_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::remove_OnOwnershipRequestEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "remove_OnOwnershipRequestEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.add_OnOwnershipTransferedEv
void Photon::Pun::PhotonNetwork::add_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::add_OnOwnershipTransferedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "add_OnOwnershipTransferedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.remove_OnOwnershipTransferedEv
void Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "remove_OnOwnershipTransferedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.add_OnOwnershipTransferFailedEv
void Photon::Pun::PhotonNetwork::add_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::add_OnOwnershipTransferFailedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "add_OnOwnershipTransferFailedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.remove_OnOwnershipTransferFailedEv
void Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferFailedEv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "remove_OnOwnershipTransferFailedEv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AddCallbackTarget
void Photon::Pun::PhotonNetwork::AddCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AddCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AddCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveCallbackTarget
void Photon::Pun::PhotonNetwork::RemoveCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CallbacksToString
::StringW Photon::Pun::PhotonNetwork::CallbacksToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CallbacksToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CallbacksToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_PrefabPool
::Photon::Pun::IPunPrefabPool* Photon::Pun::PhotonNetwork::get_PrefabPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_PrefabPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_PrefabPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::IPunPrefabPool*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.set_PrefabPool
void Photon::Pun::PhotonNetwork::set_PrefabPool(::Photon::Pun::IPunPrefabPool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::set_PrefabPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "set_PrefabPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.get_LevelLoadingProgress
float Photon::Pun::PhotonNetwork::get_LevelLoadingProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::get_LevelLoadingProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "get_LevelLoadingProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LeftRoomCleanup
void Photon::Pun::PhotonNetwork::LeftRoomCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LeftRoomCleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LeftRoomCleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LocalCleanupAnythingInstantiated
void Photon::Pun::PhotonNetwork::LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LocalCleanupAnythingInstantiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LocalCleanupAnythingInstantiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destroyInstantiatedGameObjects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destroyInstantiatedGameObjects);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ResetPhotonViewsOnSerialize
void Photon::Pun::PhotonNetwork::ResetPhotonViewsOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ResetPhotonViewsOnSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ResetPhotonViewsOnSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ExecuteRpc
void Photon::Pun::PhotonNetwork::ExecuteRpc(::ExitGames::Client::Photon::Hashtable* rpcData, ::Photon::Realtime::Player* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ExecuteRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ExecuteRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rpcData), ::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rpcData, sender);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CheckTypeMatch
bool Photon::Pun::PhotonNetwork::CheckTypeMatch(::ArrayW<::System::Reflection::ParameterInfo*> methodParameters, ::ArrayW<::System::Type*> callParameterTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CheckTypeMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CheckTypeMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodParameters), ::il2cpp_utils::ExtractType(callParameterTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, methodParameters, callParameterTypes);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyPlayerObjects
void Photon::Pun::PhotonNetwork::DestroyPlayerObjects(int playerId, bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyPlayerObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyPlayerObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(localOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerId, localOnly);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DestroyAll
void Photon::Pun::PhotonNetwork::DestroyAll(bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DestroyAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DestroyAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localOnly);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveInstantiatedGO
void Photon::Pun::PhotonNetwork::RemoveInstantiatedGO(::UnityEngine::GameObject* go, bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveInstantiatedGO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveInstantiatedGO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(localOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, localOnly);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.ServerCleanInstantiateAndDestroy
void Photon::Pun::PhotonNetwork::ServerCleanInstantiateAndDestroy(::Photon::Pun::PhotonView* photonView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::ServerCleanInstantiateAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "ServerCleanInstantiateAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, photonView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendDestroyOfPlayer
void Photon::Pun::PhotonNetwork::SendDestroyOfPlayer(int actorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendDestroyOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendDestroyOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNr);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendDestroyOfAll
void Photon::Pun::PhotonNetwork::SendDestroyOfAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendDestroyOfAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendDestroyOfAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpRemoveFromServerInstantiationsOfPlayer
void Photon::Pun::PhotonNetwork::OpRemoveFromServerInstantiationsOfPlayer(int actorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpRemoveFromServerInstantiationsOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpRemoveFromServerInstantiationsOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNr);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RequestOwnership
void Photon::Pun::PhotonNetwork::RequestOwnership(int viewID, int fromOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID), ::il2cpp_utils::ExtractType(fromOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID, fromOwner);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.TransferOwnership
void Photon::Pun::PhotonNetwork::TransferOwnership(int viewID, int playerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::TransferOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "TransferOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID), ::il2cpp_utils::ExtractType(playerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID, playerID);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OwnershipUpdate
void Photon::Pun::PhotonNetwork::OwnershipUpdate(::ArrayW<int> viewOwnerPairs, int targetActor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OwnershipUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OwnershipUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewOwnerPairs), ::il2cpp_utils::ExtractType(targetActor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewOwnerPairs, targetActor);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LocalCleanPhotonView
bool Photon::Pun::PhotonNetwork::LocalCleanPhotonView(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LocalCleanPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LocalCleanPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetPhotonView
::Photon::Pun::PhotonView* Photon::Pun::PhotonNetwork::GetPhotonView(int viewID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RegisterPhotonView
void Photon::Pun::PhotonNetwork::RegisterPhotonView(::Photon::Pun::PhotonView* netView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RegisterPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RegisterPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, netView);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpCleanActorRpcBuffer
void Photon::Pun::PhotonNetwork::OpCleanActorRpcBuffer(int actorNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpCleanActorRpcBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpCleanActorRpcBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNumber);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpRemoveCompleteCacheOfPlayer
void Photon::Pun::PhotonNetwork::OpRemoveCompleteCacheOfPlayer(int actorNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpRemoveCompleteCacheOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpRemoveCompleteCacheOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, actorNumber);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpRemoveCompleteCache
void Photon::Pun::PhotonNetwork::OpRemoveCompleteCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpRemoveCompleteCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpRemoveCompleteCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveCacheOfLeftPlayers
void Photon::Pun::PhotonNetwork::RemoveCacheOfLeftPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveCacheOfLeftPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveCacheOfLeftPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.CleanRpcBufferIfMine
void Photon::Pun::PhotonNetwork::CleanRpcBufferIfMine(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::CleanRpcBufferIfMine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "CleanRpcBufferIfMine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OpCleanRpcBuffer
void Photon::Pun::PhotonNetwork::OpCleanRpcBuffer(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OpCleanRpcBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OpCleanRpcBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveRPCsInGroup
void Photon::Pun::PhotonNetwork::RemoveRPCsInGroup(int group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveRPCsInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveRPCsInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RemoveBufferedRPCs
bool Photon::Pun::PhotonNetwork::RemoveBufferedRPCs(int viewId, ::StringW methodName, ::ArrayW<int> callersActorNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RemoveBufferedRPCs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RemoveBufferedRPCs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewId), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(callersActorNumbers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewId, methodName, callersActorNumbers);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetLevelPrefix
void Photon::Pun::PhotonNetwork::SetLevelPrefix(uint8_t prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetLevelPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetLevelPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RPC
void Photon::Pun::PhotonNetwork::RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Pun::RpcTarget target, ::Photon::Realtime::Player* player, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view, methodName, target, player, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetInterestGroups
void Photon::Pun::PhotonNetwork::SetInterestGroups(::ArrayW<uint8_t> disableGroups, ::ArrayW<uint8_t> enableGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetInterestGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetInterestGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disableGroups), ::il2cpp_utils::ExtractType(enableGroups)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, disableGroups, enableGroups);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetSendingEnabled
void Photon::Pun::PhotonNetwork::SetSendingEnabled(uint8_t group, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetSendingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetSendingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group, enabled);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetSendingEnabled
void Photon::Pun::PhotonNetwork::SetSendingEnabled(::ArrayW<uint8_t> disableGroups, ::ArrayW<uint8_t> enableGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetSendingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetSendingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disableGroups), ::il2cpp_utils::ExtractType(enableGroups)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, disableGroups, enableGroups);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.NewSceneLoaded
void Photon::Pun::PhotonNetwork::NewSceneLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::NewSceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "NewSceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.RunViewUpdate
void Photon::Pun::PhotonNetwork::RunViewUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RunViewUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "RunViewUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SendSerializeViewBatch
void Photon::Pun::PhotonNetwork::SendSerializeViewBatch(::Photon::Pun::PhotonNetwork::SerializeViewBatch* batch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SendSerializeViewBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SendSerializeViewBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(batch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, batch);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnSerializeWrite
::System::Collections::Generic::List_1<::Il2CppObject*>* Photon::Pun::PhotonNetwork::OnSerializeWrite(::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnSerializeWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnSerializeWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, view);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnSerializeRead
void Photon::Pun::PhotonNetwork::OnSerializeRead(::ArrayW<::Il2CppObject*> data, ::Photon::Realtime::Player* sender, int networkTime, int16_t correctPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnSerializeRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnSerializeRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(networkTime), ::il2cpp_utils::ExtractType(correctPrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, sender, networkTime, correctPrefix);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DeltaCompressionWrite
::System::Collections::Generic::List_1<::Il2CppObject*>* Photon::Pun::PhotonNetwork::DeltaCompressionWrite(::System::Collections::Generic::List_1<::Il2CppObject*>* previousContent, ::System::Collections::Generic::List_1<::Il2CppObject*>* currentContent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DeltaCompressionWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DeltaCompressionWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousContent), ::il2cpp_utils::ExtractType(currentContent)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previousContent, currentContent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.DeltaCompressionRead
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonNetwork::DeltaCompressionRead(::ArrayW<::Il2CppObject*> lastOnSerializeDataReceived, ::ArrayW<::Il2CppObject*> incomingData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::DeltaCompressionRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "DeltaCompressionRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastOnSerializeDataReceived), ::il2cpp_utils::ExtractType(incomingData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lastOnSerializeDataReceived, incomingData);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AlmostEquals
bool Photon::Pun::PhotonNetwork::AlmostEquals(::System::Collections::Generic::IList_1<::Il2CppObject*>* lastData, ::System::Collections::Generic::IList_1<::Il2CppObject*>* currentContent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastData), ::il2cpp_utils::ExtractType(currentContent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lastData, currentContent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.AlmostEquals
bool Photon::Pun::PhotonNetwork::AlmostEquals(::Il2CppObject* one, ::Il2CppObject* two) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(one), ::il2cpp_utils::ExtractType(two)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, one, two);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.GetMethod
bool Photon::Pun::PhotonNetwork::GetMethod(::UnityEngine::MonoBehaviour* monob, ::StringW methodType, ByRef<::System::Reflection::MethodInfo*> mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::GetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monob), ::il2cpp_utils::ExtractType(methodType), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MethodInfo*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, monob, methodType, byref(mi));
}
// Autogenerated method: Photon.Pun.PhotonNetwork.LoadLevelIfSynced
void Photon::Pun::PhotonNetwork::LoadLevelIfSynced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::LoadLevelIfSynced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "LoadLevelIfSynced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.SetLevelInPropsIfSynced
void Photon::Pun::PhotonNetwork::SetLevelInPropsIfSynced(::Il2CppObject* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SetLevelInPropsIfSynced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "SetLevelInPropsIfSynced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelId);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnEvent
void Photon::Pun::PhotonNetwork::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, photonEvent);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnOperation
void Photon::Pun::PhotonNetwork::OnOperation(::ExitGames::Client::Photon::OperationResponse* opResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, opResponse);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnClientStateChanged
void Photon::Pun::PhotonNetwork::OnClientStateChanged(::Photon::Realtime::ClientState previousState, ::Photon::Realtime::ClientState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnClientStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnClientStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousState), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previousState, state);
}
// Autogenerated method: Photon.Pun.PhotonNetwork.OnRegionsPinged
void Photon::Pun::PhotonNetwork::OnRegionsPinged(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::OnRegionsPinged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork", "OnRegionsPinged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, regionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonNetwork/RaiseEventBatch
#include "Photon/Pun/PhotonNetwork.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Group
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Group");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Reliable
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::dyn_Reliable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/RaiseEventBatch.Equals
bool Photon::Pun::PhotonNetwork::RaiseEventBatch::Equals(::Photon::Pun::PhotonNetwork::RaiseEventBatch other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Photon::Pun::PhotonNetwork::RaiseEventBatch), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/RaiseEventBatch.GetHashCode
int Photon::Pun::PhotonNetwork::RaiseEventBatch::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::RaiseEventBatch::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonNetwork/SerializeViewBatch
#include "Photon/Pun/PhotonNetwork_SerializeViewBatch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Photon.Pun.PhotonNetwork/RaiseEventBatch Batch
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonNetwork::RaiseEventBatch& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_Batch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_Batch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Batch"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonNetwork::RaiseEventBatch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Object> ObjectUpdates
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_ObjectUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_ObjectUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObjectUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultSize
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_defaultSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 offset
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Equals
bool Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals(::Photon::Pun::PhotonNetwork::SerializeViewBatch* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonNetwork::SerializeViewBatch*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Equals
bool Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals(::Photon::Pun::PhotonNetwork::RaiseEventBatch other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonNetwork::SerializeViewBatch*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Clear
void Photon::Pun::PhotonNetwork::SerializeViewBatch::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Add
void Photon::Pun::PhotonNetwork::SerializeViewBatch::Add(::System::Collections::Generic::List_1<::Il2CppObject*>* viewData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewData);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.GetHashCode
int Photon::Pun::PhotonNetwork::SerializeViewBatch::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/SerializeViewBatch.Equals
bool Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::SerializeViewBatch::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonNetwork/<>c
#include "Photon/Pun/PhotonNetwork_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.IConnectionCallbacks
#include "Photon/Realtime/IConnectionCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Pun.PhotonNetwork/<>c <>9
::Photon::Pun::PhotonNetwork::$$c* Photon::Pun::PhotonNetwork::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonNetwork::$$c*>("Photon.Pun", "PhotonNetwork/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Pun.PhotonNetwork/<>c <>9
void Photon::Pun::PhotonNetwork::$$c::_set_$$9(::Photon::Pun::PhotonNetwork::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__47_0
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__47_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__47_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__47_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__47_0
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__47_0(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__47_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__47_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__49_0
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__49_0
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_0(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Boolean> <>9__49_1
::System::Func_2<::Photon::Realtime::Player*, bool>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__49_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, bool>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Boolean> <>9__49_1
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_1(::System::Func_2<::Photon::Realtime::Player*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__49_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__49_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.IConnectionCallbacks,System.String> <>9__217_0
::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>* Photon::Pun::PhotonNetwork::$$c::_get_$$9__217_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_get_$$9__217_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>*>("Photon.Pun", "PhotonNetwork/<>c", "<>9__217_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.IConnectionCallbacks,System.String> <>9__217_0
void Photon::Pun::PhotonNetwork::$$c::_set_$$9__217_0(::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::_set_$$9__217_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonNetwork/<>c", "<>9__217_0", value)));
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c..cctor
void Photon::Pun::PhotonNetwork::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonNetwork/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<get_PlayerList>b__47_0
int Photon::Pun::PhotonNetwork::$$c::$get_PlayerList$b__47_0(::Photon::Realtime::Player* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<get_PlayerList>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_PlayerList>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<get_PlayerListOthers>b__49_0
int Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_0(::Photon::Realtime::Player* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<get_PlayerListOthers>b__49_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_PlayerListOthers>b__49_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<get_PlayerListOthers>b__49_1
bool Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_1(::Photon::Realtime::Player* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<get_PlayerListOthers>b__49_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_PlayerListOthers>b__49_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Photon.Pun.PhotonNetwork/<>c.<CallbacksToString>b__217_0
::StringW Photon::Pun::PhotonNetwork::$$c::$CallbacksToString$b__217_0(::Photon::Realtime::IConnectionCallbacks* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::<CallbacksToString>b__217_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CallbacksToString>b__217_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonStreamQueue
#include "Photon/Pun/PhotonStreamQueue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleRate
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_SampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleCount
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_SampleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_SampleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ObjectsPerSample
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_ObjectsPerSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_ObjectsPerSample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectsPerSample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastSampleTime
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonStreamQueue::dyn_m_LastSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_LastSampleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastSampleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LastFrameCount
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_LastFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_LastFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NextObjectIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStreamQueue::dyn_m_NextObjectIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_NextObjectIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextObjectIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> m_Objects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonStreamQueue::dyn_m_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_Objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Objects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsWriting
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonStreamQueue::dyn_m_IsWriting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::dyn_m_IsWriting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsWriting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.BeginWritePackage
void Photon::Pun::PhotonStreamQueue::BeginWritePackage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::BeginWritePackage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWritePackage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.Reset
void Photon::Pun::PhotonStreamQueue::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.SendNext
void Photon::Pun::PhotonStreamQueue::SendNext(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::SendNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.HasQueuedObjects
bool Photon::Pun::PhotonStreamQueue::HasQueuedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::HasQueuedObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasQueuedObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.ReceiveNext
::Il2CppObject* Photon::Pun::PhotonStreamQueue::ReceiveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::ReceiveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.Serialize
void Photon::Pun::PhotonStreamQueue::Serialize(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonStreamQueue.Deserialize
void Photon::Pun::PhotonStreamQueue::Deserialize(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStreamQueue::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Photon.Pun.IOnPhotonViewPreNetDestroy
#include "Photon/Pun/IOnPhotonViewPreNetDestroy.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Photon.Pun.IOnPhotonViewOwnerChange
#include "Photon/Pun/IOnPhotonViewOwnerChange.hpp"
// Including type: Photon.Pun.IOnPhotonViewControllerChange
#include "Photon/Pun/IOnPhotonViewControllerChange.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Photon.Pun.IPhotonViewCallback
#include "Photon/Pun/IPhotonViewCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Group
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::PhotonView::dyn_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Group"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 prefixField
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_prefixField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_prefixField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefixField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object[] instantiationDataField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::PhotonView::dyn_instantiationDataField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_instantiationDataField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instantiationDataField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Generic.List`1<System.Object> lastOnSerializeDataSent
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonView::dyn_lastOnSerializeDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_lastOnSerializeDataSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastOnSerializeDataSent"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Generic.List`1<System.Object> syncValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonView::dyn_syncValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_syncValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Object[] lastOnSerializeDataReceived
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::PhotonView::dyn_lastOnSerializeDataReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_lastOnSerializeDataReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastOnSerializeDataReceived"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.ViewSynchronization Synchronization
[[deprecated("Use field access instead!")]] ::Photon::Pun::ViewSynchronization& Photon::Pun::PhotonView::dyn_Synchronization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_Synchronization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Synchronization"))->offset;
  return *reinterpret_cast<::Photon::Pun::ViewSynchronization*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean mixedModeIsReliable
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_mixedModeIsReliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_mixedModeIsReliable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedModeIsReliable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.OwnershipOption OwnershipTransfer
[[deprecated("Use field access instead!")]] ::Photon::Pun::OwnershipOption& Photon::Pun::PhotonView::dyn_OwnershipTransfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OwnershipTransfer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnershipTransfer"))->offset;
  return *reinterpret_cast<::Photon::Pun::OwnershipOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonView/ObservableSearch observableSearch
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView::ObservableSearch& Photon::Pun::PhotonView::dyn_observableSearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_observableSearch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "observableSearch"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView::ObservableSearch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Component> ObservedComponents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Component*>*& Photon::Pun::PhotonView::dyn_ObservedComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_ObservedComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObservedComponents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Component*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.MonoBehaviour[] RpcMonoBehaviours
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MonoBehaviour*>& Photon::Pun::PhotonView::dyn_RpcMonoBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_RpcMonoBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RpcMonoBehaviours"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MonoBehaviour*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsMine>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_$IsMine$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$IsMine$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsMine>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player <Controller>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::PhotonView::dyn_$Controller$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$Controller$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Controller>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CreatorActorNr>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_$CreatorActorNr$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$CreatorActorNr$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CreatorActorNr>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AmOwner>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_$AmOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$AmOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AmOwner>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player <Owner>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::PhotonView::dyn_$Owner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_$Owner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Owner>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ownerActorNr
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_ownerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_ownerActorNr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerActorNr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 controllerActorNr
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_controllerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_controllerActorNr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerActorNr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneViewId
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_sceneViewId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_sceneViewId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneViewId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 viewIdField
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_viewIdField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_viewIdField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewIdField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InstantiationId
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::dyn_InstantiationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_InstantiationId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstantiationId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRuntimeInstantiated
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_isRuntimeInstantiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_isRuntimeInstantiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRuntimeInstantiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean removedFromLocalViewList
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::dyn_removedFromLocalViewList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_removedFromLocalViewList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "removedFromLocalViewList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Photon.Pun.PhotonView/CallbackTargetChange> CallbackChangeQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Photon::Pun::PhotonView::CallbackTargetChange>*& Photon::Pun::PhotonView::dyn_CallbackChangeQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_CallbackChangeQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CallbackChangeQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Photon::Pun::PhotonView::CallbackTargetChange>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.IOnPhotonViewPreNetDestroy> OnPreNetDestroyCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewPreNetDestroy*>*& Photon::Pun::PhotonView::dyn_OnPreNetDestroyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OnPreNetDestroyCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreNetDestroyCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewPreNetDestroy*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.IOnPhotonViewOwnerChange> OnOwnerChangeCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewOwnerChange*>*& Photon::Pun::PhotonView::dyn_OnOwnerChangeCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OnOwnerChangeCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOwnerChangeCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewOwnerChange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.IOnPhotonViewControllerChange> OnControllerChangeCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewControllerChange*>*& Photon::Pun::PhotonView::dyn_OnControllerChangeCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::dyn_OnControllerChangeCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnControllerChangeCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::IOnPhotonViewControllerChange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonView.get_Prefix
int Photon::Pun::PhotonView::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_Prefix
void Photon::Pun::PhotonView::set_Prefix(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_InstantiationData
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonView::get_InstantiationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_InstantiationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstantiationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_InstantiationData
void Photon::Pun::PhotonView::set_InstantiationData(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_InstantiationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstantiationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsSceneView
bool Photon::Pun::PhotonView::get_IsSceneView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsSceneView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSceneView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsRoomView
bool Photon::Pun::PhotonView::get_IsRoomView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsRoomView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRoomView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsOwnerActive
bool Photon::Pun::PhotonView::get_IsOwnerActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsOwnerActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOwnerActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_IsMine
bool Photon::Pun::PhotonView::get_IsMine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_IsMine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_IsMine
void Photon::Pun::PhotonView::set_IsMine(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_IsMine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsMine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_AmController
bool Photon::Pun::PhotonView::get_AmController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_AmController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AmController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.get_Controller
::Photon::Realtime::Player* Photon::Pun::PhotonView::get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_Controller
void Photon::Pun::PhotonView::set_Controller(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_Controller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Controller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_CreatorActorNr
int Photon::Pun::PhotonView::get_CreatorActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_CreatorActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreatorActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_CreatorActorNr
void Photon::Pun::PhotonView::set_CreatorActorNr(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_CreatorActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CreatorActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_AmOwner
bool Photon::Pun::PhotonView::get_AmOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_AmOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AmOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_AmOwner
void Photon::Pun::PhotonView::set_AmOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_AmOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AmOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_Owner
::Photon::Realtime::Player* Photon::Pun::PhotonView::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_Owner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_Owner
void Photon::Pun::PhotonView::set_Owner(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_Owner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Owner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_OwnerActorNr
int Photon::Pun::PhotonView::get_OwnerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_OwnerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_OwnerActorNr
void Photon::Pun::PhotonView::set_OwnerActorNr(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_OwnerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OwnerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_ControllerActorNr
int Photon::Pun::PhotonView::get_ControllerActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_ControllerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ControllerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_ControllerActorNr
void Photon::Pun::PhotonView::set_ControllerActorNr(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_ControllerActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ControllerActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.get_ViewID
int Photon::Pun::PhotonView::get_ViewID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::get_ViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.set_ViewID
void Photon::Pun::PhotonView::set_ViewID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::set_ViewID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ViewID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonView.Awake
void Photon::Pun::PhotonView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.ResetPhotonView
void Photon::Pun::PhotonView::ResetPhotonView(bool resetOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ResetPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resetOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resetOwner);
}
// Autogenerated method: Photon.Pun.PhotonView.RebuildControllerCache
void Photon::Pun::PhotonView::RebuildControllerCache(bool ownerHasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RebuildControllerCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildControllerCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ownerHasChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ownerHasChanged);
}
// Autogenerated method: Photon.Pun.PhotonView.OnPreNetDestroy
void Photon::Pun::PhotonView::OnPreNetDestroy(::Photon::Pun::PhotonView* rootView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::OnPreNetDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreNetDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootView);
}
// Autogenerated method: Photon.Pun.PhotonView.OnDestroy
void Photon::Pun::PhotonView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.RequestOwnership
void Photon::Pun::PhotonView::RequestOwnership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RequestOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.TransferOwnership
void Photon::Pun::PhotonView::TransferOwnership(::Photon::Realtime::Player* newOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::TransferOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwner);
}
// Autogenerated method: Photon.Pun.PhotonView.TransferOwnership
void Photon::Pun::PhotonView::TransferOwnership(int newOwnerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::TransferOwnership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferOwnership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newOwnerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwnerId);
}
// Autogenerated method: Photon.Pun.PhotonView.FindObservables
void Photon::Pun::PhotonView::FindObservables(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::FindObservables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindObservables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: Photon.Pun.PhotonView.SerializeView
void Photon::Pun::PhotonView::SerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::SerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.DeserializeView
void Photon::Pun::PhotonView::DeserializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::DeserializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.DeserializeComponent
void Photon::Pun::PhotonView::DeserializeComponent(::UnityEngine::Component* component, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::DeserializeComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.SerializeComponent
void Photon::Pun::PhotonView::SerializeComponent(::UnityEngine::Component* component, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::SerializeComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonView.RefreshRpcMonoBehaviourCache
void Photon::Pun::PhotonView::RefreshRpcMonoBehaviourCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RefreshRpcMonoBehaviourCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshRpcMonoBehaviourCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.RPC
void Photon::Pun::PhotonView::RPC(::StringW methodName, ::Photon::Pun::RpcTarget target, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, target, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.RpcSecure
void Photon::Pun::PhotonView::RpcSecure(::StringW methodName, ::Photon::Pun::RpcTarget target, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RpcSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RpcSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, target, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.RPC
void Photon::Pun::PhotonView::RPC(::StringW methodName, ::Photon::Realtime::Player* targetPlayer, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RPC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, targetPlayer, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.RpcSecure
void Photon::Pun::PhotonView::RpcSecure(::StringW methodName, ::Photon::Realtime::Player* targetPlayer, bool encrypt, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RpcSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RpcSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(targetPlayer), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, targetPlayer, encrypt, parameters);
}
// Autogenerated method: Photon.Pun.PhotonView.Get
::Photon::Pun::PhotonView* Photon::Pun::PhotonView::Get(::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonView", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component);
}
// Autogenerated method: Photon.Pun.PhotonView.Get
::Photon::Pun::PhotonView* Photon::Pun::PhotonView::Get(::UnityEngine::GameObject* gameObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonView", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObj);
}
// Autogenerated method: Photon.Pun.PhotonView.Find
::Photon::Pun::PhotonView* Photon::Pun::PhotonView::Find(int viewID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PhotonView", "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewID);
}
// Autogenerated method: Photon.Pun.PhotonView.AddCallbackTarget
void Photon::Pun::PhotonView::AddCallbackTarget(::Photon::Pun::IPhotonViewCallback* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::AddCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonView.RemoveCallbackTarget
void Photon::Pun::PhotonView::RemoveCallbackTarget(::Photon::Pun::IPhotonViewCallback* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::RemoveCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonView.UpdateCallbackLists
void Photon::Pun::PhotonView::UpdateCallbackLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::UpdateCallbackLists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCallbackLists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonView.ToString
::StringW Photon::Pun::PhotonView::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Object*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonView/ObservableSearch
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonView/ObservableSearch Manual
::Photon::Pun::PhotonView::ObservableSearch Photon::Pun::PhotonView::ObservableSearch::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonView::ObservableSearch>("Photon.Pun", "PhotonView/ObservableSearch", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonView/ObservableSearch Manual
void Photon::Pun::PhotonView::ObservableSearch::_set_Manual(::Photon::Pun::PhotonView::ObservableSearch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonView/ObservableSearch", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindActive
::Photon::Pun::PhotonView::ObservableSearch Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonView::ObservableSearch>("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindActive"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindActive
void Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindActive(::Photon::Pun::PhotonView::ObservableSearch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindActive", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindAll
::Photon::Pun::PhotonView::ObservableSearch Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_get_AutoFindAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonView::ObservableSearch>("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindAll"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonView/ObservableSearch AutoFindAll
void Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindAll(::Photon::Pun::PhotonView::ObservableSearch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::_set_AutoFindAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonView/ObservableSearch", "AutoFindAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonView::ObservableSearch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::ObservableSearch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonView/CallbackTargetChange
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.IPhotonViewCallback
#include "Photon/Pun/IPhotonViewCallback.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.IPhotonViewCallback obj
[[deprecated("Use field access instead!")]] ::Photon::Pun::IPhotonViewCallback*& Photon::Pun::PhotonView::CallbackTargetChange::dyn_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::CallbackTargetChange::dyn_obj");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj"))->offset;
  return *reinterpret_cast<::Photon::Pun::IPhotonViewCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Photon::Pun::PhotonView::CallbackTargetChange::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::CallbackTargetChange::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean add
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonView::CallbackTargetChange::dyn_add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonView::CallbackTargetChange::dyn_add");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "add"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonView/CallbackTargetChange..ctor
// ABORTED elsewhere.  Photon::Pun::PhotonView::CallbackTargetChange::CallbackTargetChange(::Photon::Pun::IPhotonViewCallback* obj, ::System::Type* type, bool add)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunRPC
#include "Photon/Pun/PunRPC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.MonoBehaviourPun
#include "Photon/Pun/MonoBehaviourPun.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView pvCache
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::MonoBehaviourPun::dyn_pvCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPun::dyn_pvCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pvCache"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPun.get_photonView
::Photon::Pun::PhotonView* Photon::Pun::MonoBehaviourPun::get_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPun::get_photonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_photonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.MonoBehaviourPunCallbacks
#include "Photon/Pun/MonoBehaviourPunCallbacks.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnEnable
void Photon::Pun::MonoBehaviourPunCallbacks::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnDisable
void Photon::Pun::MonoBehaviourPunCallbacks::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnConnected
void Photon::Pun::MonoBehaviourPunCallbacks::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnLeftRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnMasterClientSwitched
void Photon::Pun::MonoBehaviourPunCallbacks::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCreateRoomFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinRoomFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCreatedRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinedLobby
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnLeftLobby
void Photon::Pun::MonoBehaviourPunCallbacks::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnDisconnected
void Photon::Pun::MonoBehaviourPunCallbacks::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnRegionListReceived
void Photon::Pun::MonoBehaviourPunCallbacks::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnRoomListUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinedRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerEnteredRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerLeftRoom
void Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnJoinRandomFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnConnectedToMaster
void Photon::Pun::MonoBehaviourPunCallbacks::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnRoomPropertiesUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnPlayerPropertiesUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnFriendListUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCustomAuthenticationResponse
void Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnCustomAuthenticationFailed
void Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnWebRpcResponse
void Photon::Pun::MonoBehaviourPunCallbacks::OnWebRpcResponse(::ExitGames::Client::Photon::OperationResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnWebRpcResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnLobbyStatisticsUpdate
void Photon::Pun::MonoBehaviourPunCallbacks::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated method: Photon.Pun.MonoBehaviourPunCallbacks.OnErrorInfo
void Photon::Pun::MonoBehaviourPunCallbacks::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::MonoBehaviourPunCallbacks::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 timeInt
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonMessageInfo::dyn_timeInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::dyn_timeInt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Photon.Realtime.Player Sender
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::PhotonMessageInfo::dyn_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::dyn_Sender");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sender"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Photon.Pun.PhotonView photonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::PhotonMessageInfo::dyn_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::dyn_photonView");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo..ctor
Photon::Pun::PhotonMessageInfo::PhotonMessageInfo(::Photon::Realtime::Player* player, int timestamp, ::Photon::Pun::PhotonView* view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, timestamp, view);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.get_timestamp
double Photon::Pun::PhotonMessageInfo::get_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::get_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.get_SentServerTime
double Photon::Pun::PhotonMessageInfo::get_SentServerTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::get_SentServerTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SentServerTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.get_SentServerTimestamp
int Photon::Pun::PhotonMessageInfo::get_SentServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::get_SentServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SentServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonMessageInfo.ToString
::StringW Photon::Pun::PhotonMessageInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonMessageInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunEvent
#include "Photon/Pun/PunEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte RPC
uint8_t Photon::Pun::PunEvent::_get_RPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_RPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "RPC"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RPC
void Photon::Pun::PunEvent::_set_RPC(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_RPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "RPC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendSerialize
uint8_t Photon::Pun::PunEvent::_get_SendSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_SendSerialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "SendSerialize"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendSerialize
void Photon::Pun::PunEvent::_set_SendSerialize(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_SendSerialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "SendSerialize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Instantiation
uint8_t Photon::Pun::PunEvent::_get_Instantiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_Instantiation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "Instantiation"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Instantiation
void Photon::Pun::PunEvent::_set_Instantiation(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_Instantiation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "Instantiation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CloseConnection
uint8_t Photon::Pun::PunEvent::_get_CloseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_CloseConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "CloseConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CloseConnection
void Photon::Pun::PunEvent::_set_CloseConnection(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_CloseConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "CloseConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Destroy
uint8_t Photon::Pun::PunEvent::_get_Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_Destroy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "Destroy"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Destroy
void Photon::Pun::PunEvent::_set_Destroy(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_Destroy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "Destroy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RemoveCachedRPCs
uint8_t Photon::Pun::PunEvent::_get_RemoveCachedRPCs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_RemoveCachedRPCs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "RemoveCachedRPCs"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RemoveCachedRPCs
void Photon::Pun::PunEvent::_set_RemoveCachedRPCs(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_RemoveCachedRPCs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "RemoveCachedRPCs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendSerializeReliable
uint8_t Photon::Pun::PunEvent::_get_SendSerializeReliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_SendSerializeReliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "SendSerializeReliable"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendSerializeReliable
void Photon::Pun::PunEvent::_set_SendSerializeReliable(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_SendSerializeReliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "SendSerializeReliable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte DestroyPlayer
uint8_t Photon::Pun::PunEvent::_get_DestroyPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_DestroyPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "DestroyPlayer"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte DestroyPlayer
void Photon::Pun::PunEvent::_set_DestroyPlayer(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_DestroyPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "DestroyPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte OwnershipRequest
uint8_t Photon::Pun::PunEvent::_get_OwnershipRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_OwnershipRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "OwnershipRequest"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte OwnershipRequest
void Photon::Pun::PunEvent::_set_OwnershipRequest(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_OwnershipRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "OwnershipRequest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte OwnershipTransfer
uint8_t Photon::Pun::PunEvent::_get_OwnershipTransfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_OwnershipTransfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "OwnershipTransfer"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte OwnershipTransfer
void Photon::Pun::PunEvent::_set_OwnershipTransfer(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_OwnershipTransfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "OwnershipTransfer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte VacantViewIds
uint8_t Photon::Pun::PunEvent::_get_VacantViewIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_VacantViewIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "VacantViewIds"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte VacantViewIds
void Photon::Pun::PunEvent::_set_VacantViewIds(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_VacantViewIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "VacantViewIds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte OwnershipUpdate
uint8_t Photon::Pun::PunEvent::_get_OwnershipUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_get_OwnershipUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun", "PunEvent", "OwnershipUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte OwnershipUpdate
void Photon::Pun::PunEvent::_set_OwnershipUpdate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunEvent::_set_OwnershipUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunEvent", "OwnershipUpdate", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> writeData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Pun::PhotonStream::dyn_writeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_writeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] readData
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Photon::Pun::PhotonStream::dyn_readData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_readData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readData"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentItem
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonStream::dyn_currentItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_currentItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWriting>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonStream::dyn_$IsWriting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::dyn_$IsWriting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWriting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonStream.get_IsWriting
bool Photon::Pun::PhotonStream::get_IsWriting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::get_IsWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.set_IsWriting
void Photon::Pun::PhotonStream::set_IsWriting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::set_IsWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.PhotonStream.get_IsReading
bool Photon::Pun::PhotonStream::get_IsReading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::get_IsReading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.get_Count
int Photon::Pun::PhotonStream::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.SetReadStream
void Photon::Pun::PhotonStream::SetReadStream(::ArrayW<::Il2CppObject*> incomingData, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::SetReadStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(incomingData), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, incomingData, pos);
}
// Autogenerated method: Photon.Pun.PhotonStream.SetWriteStream
void Photon::Pun::PhotonStream::SetWriteStream(::System::Collections::Generic::List_1<::Il2CppObject*>* newWriteData, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::SetWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newWriteData), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newWriteData, pos);
}
// Autogenerated method: Photon.Pun.PhotonStream.GetWriteStream
::System::Collections::Generic::List_1<::Il2CppObject*>* Photon::Pun::PhotonStream::GetWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::GetWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.ResetWriteStream
void Photon::Pun::PhotonStream::ResetWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::ResetWriteStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWriteStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.ReceiveNext
::Il2CppObject* Photon::Pun::PhotonStream::ReceiveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::ReceiveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.PeekNext
::Il2CppObject* Photon::Pun::PhotonStream::PeekNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::PeekNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.SendNext
void Photon::Pun::PhotonStream::SendNext(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::SendNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Pun.PhotonStream.CopyToListAndClear
bool Photon::Pun::PhotonStream::CopyToListAndClear(::System::Collections::Generic::List_1<::Il2CppObject*>* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::CopyToListAndClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToListAndClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: Photon.Pun.PhotonStream.ToArray
::ArrayW<::Il2CppObject*> Photon::Pun::PhotonStream::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<bool> myBool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myBool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(myBool));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<int> myInt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myInt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(myInt));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<float> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::Photon::Realtime::Player*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::UnityEngine::Vector3> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::UnityEngine::Vector2> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated method: Photon.Pun.PhotonStream.Serialize
void Photon::Pun::PhotonStream::Serialize(ByRef<::UnityEngine::Quaternion> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonStream::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(obj));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.SceneManagerHelper
#include "Photon/Pun/SceneManagerHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.SceneManagerHelper.get_ActiveSceneName
::StringW Photon::Pun::SceneManagerHelper::get_ActiveSceneName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::SceneManagerHelper::get_ActiveSceneName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "SceneManagerHelper", "get_ActiveSceneName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.SceneManagerHelper.get_ActiveSceneBuildIndex
int Photon::Pun::SceneManagerHelper::get_ActiveSceneBuildIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::SceneManagerHelper::get_ActiveSceneBuildIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "SceneManagerHelper", "get_ActiveSceneBuildIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.DefaultPool
#include "Photon/Pun/DefaultPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> ResourceCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& Photon::Pun::DefaultPool::dyn_ResourceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::DefaultPool::dyn_ResourceCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResourceCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.DefaultPool.Instantiate
::UnityEngine::GameObject* Photon::Pun::DefaultPool::Instantiate(::StringW prefabId, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::DefaultPool::Instantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::DefaultPool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabId, position, rotation);
}
// Autogenerated method: Photon.Pun.DefaultPool.Destroy
void Photon::Pun::DefaultPool::Destroy(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::DefaultPool::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::DefaultPool*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunExtensions
#include "Photon/Pun/PunExtensions.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.Reflection.MethodInfo,System.Reflection.ParameterInfo[]> ParametersOfMethods
::System::Collections::Generic::Dictionary_2<::System::Reflection::MethodInfo*, ::ArrayW<::System::Reflection::ParameterInfo*>>* Photon::Pun::PunExtensions::_get_ParametersOfMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::_get_ParametersOfMethods");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Reflection::MethodInfo*, ::ArrayW<::System::Reflection::ParameterInfo*>>*>("Photon.Pun", "PunExtensions", "ParametersOfMethods")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.Reflection.MethodInfo,System.Reflection.ParameterInfo[]> ParametersOfMethods
void Photon::Pun::PunExtensions::_set_ParametersOfMethods(::System::Collections::Generic::Dictionary_2<::System::Reflection::MethodInfo*, ::ArrayW<::System::Reflection::ParameterInfo*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::_set_ParametersOfMethods");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunExtensions", "ParametersOfMethods", value));
}
// Autogenerated method: Photon.Pun.PunExtensions.GetCachedParemeters
::ArrayW<::System::Reflection::ParameterInfo*> Photon::Pun::PunExtensions::GetCachedParemeters(::System::Reflection::MethodInfo* mo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::GetCachedParemeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "GetCachedParemeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mo);
}
// Autogenerated method: Photon.Pun.PunExtensions.GetPhotonViewsInChildren
::ArrayW<::Photon::Pun::PhotonView*> Photon::Pun::PunExtensions::GetPhotonViewsInChildren(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::GetPhotonViewsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "GetPhotonViewsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Pun::PhotonView*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: Photon.Pun.PunExtensions.GetPhotonView
::Photon::Pun::PhotonView* Photon::Pun::PunExtensions::GetPhotonView(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::GetPhotonView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "GetPhotonView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(::UnityEngine::Vector3 target, ::UnityEngine::Vector3 second, float sqrMagnitudePrecision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(sqrMagnitudePrecision)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, sqrMagnitudePrecision);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(::UnityEngine::Vector2 target, ::UnityEngine::Vector2 second, float sqrMagnitudePrecision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(sqrMagnitudePrecision)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, sqrMagnitudePrecision);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(::UnityEngine::Quaternion target, ::UnityEngine::Quaternion second, float maxAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(maxAngle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, maxAngle);
}
// Autogenerated method: Photon.Pun.PunExtensions.AlmostEquals
bool Photon::Pun::PunExtensions::AlmostEquals(float target, float second, float floatDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::AlmostEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "AlmostEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(floatDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, second, floatDiff);
}
// Autogenerated method: Photon.Pun.PunExtensions.CheckIsAssignableFrom
bool Photon::Pun::PunExtensions::CheckIsAssignableFrom(::System::Type* to, ::System::Type* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::CheckIsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "CheckIsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(from)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, to, from);
}
// Autogenerated method: Photon.Pun.PunExtensions.CheckIsInterface
bool Photon::Pun::PunExtensions::CheckIsInterface(::System::Type* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::CheckIsInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", "CheckIsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, to);
}
// Autogenerated method: Photon.Pun.PunExtensions..cctor
void Photon::Pun::PunExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "PunExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.ServerSettings
#include "Photon/Pun/ServerSettings.hpp"
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.AppSettings AppSettings
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AppSettings*& Photon::Pun::ServerSettings::dyn_AppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_AppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppSettings"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AppSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DevRegion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::ServerSettings::dyn_DevRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_DevRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DevRegion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PunLogLevel PunLogging
[[deprecated("Use field access instead!")]] ::Photon::Pun::PunLogLevel& Photon::Pun::ServerSettings::dyn_PunLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_PunLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PunLogging"))->offset;
  return *reinterpret_cast<::Photon::Pun::PunLogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableSupportLogger
[[deprecated("Use field access instead!")]] bool& Photon::Pun::ServerSettings::dyn_EnableSupportLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_EnableSupportLogger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableSupportLogger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RunInBackground
[[deprecated("Use field access instead!")]] bool& Photon::Pun::ServerSettings::dyn_RunInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_RunInBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RunInBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean StartInOfflineMode
[[deprecated("Use field access instead!")]] bool& Photon::Pun::ServerSettings::dyn_StartInOfflineMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_StartInOfflineMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartInOfflineMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> RpcList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Photon::Pun::ServerSettings::dyn_RpcList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::dyn_RpcList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RpcList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.ServerSettings.UseCloud
void Photon::Pun::ServerSettings::UseCloud(::StringW cloudAppid, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::UseCloud");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseCloud", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cloudAppid), ::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cloudAppid, code);
}
// Autogenerated method: Photon.Pun.ServerSettings.IsAppId
bool Photon::Pun::ServerSettings::IsAppId(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::IsAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "ServerSettings", "IsAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: Photon.Pun.ServerSettings.get_BestRegionSummaryInPreferences
::StringW Photon::Pun::ServerSettings::get_BestRegionSummaryInPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::get_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "ServerSettings", "get_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.ServerSettings.ResetBestRegionCodeInPreferences
void Photon::Pun::ServerSettings::ResetBestRegionCodeInPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::ResetBestRegionCodeInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "ServerSettings", "ResetBestRegionCodeInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.ServerSettings.ToString
::StringW Photon::Pun::ServerSettings::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ServerSettings::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Object*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.NestedComponentUtilities
#include "Photon/Pun/NestedComponentUtilities.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<UnityEngine.Transform> nodesQueue
::System::Collections::Generic::Queue_1<::UnityEngine::Transform*>* Photon::Pun::NestedComponentUtilities::_get_nodesQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_get_nodesQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::UnityEngine::Transform*>*>("Photon.Pun", "NestedComponentUtilities", "nodesQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<UnityEngine.Transform> nodesQueue
void Photon::Pun::NestedComponentUtilities::_set_nodesQueue(::System::Collections::Generic::Queue_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_set_nodesQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "NestedComponentUtilities", "nodesQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.Type,System.Collections.ICollection> searchLists
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::ICollection*>* Photon::Pun::NestedComponentUtilities::_get_searchLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_get_searchLists");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::ICollection*>*>("Photon.Pun", "NestedComponentUtilities", "searchLists")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.Type,System.Collections.ICollection> searchLists
void Photon::Pun::NestedComponentUtilities::_set_searchLists(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::ICollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_set_searchLists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "NestedComponentUtilities", "searchLists", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Stack`1<UnityEngine.Transform> nodeStack
::System::Collections::Generic::Stack_1<::UnityEngine::Transform*>* Photon::Pun::NestedComponentUtilities::_get_nodeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_get_nodeStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Stack_1<::UnityEngine::Transform*>*>("Photon.Pun", "NestedComponentUtilities", "nodeStack"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Stack`1<UnityEngine.Transform> nodeStack
void Photon::Pun::NestedComponentUtilities::_set_nodeStack(::System::Collections::Generic::Stack_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::_set_nodeStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "NestedComponentUtilities", "nodeStack", value));
}
// Autogenerated method: Photon.Pun.NestedComponentUtilities..cctor
void Photon::Pun::NestedComponentUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::NestedComponentUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "NestedComponentUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView
#include "Photon/Pun/PhotonAnimatorView.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/ParameterType
#include "Photon/Pun/PhotonAnimatorView_ParameterType.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizeType
#include "Photon/Pun/PhotonAnimatorView_SynchronizeType.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass18_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass18_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass19_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass19_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass22_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass22_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass23_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass23_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass24_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass24_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass25_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass25_0.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: Photon.Pun.PhotonStreamQueue
#include "Photon/Pun/PhotonStreamQueue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean TriggerUsageWarningDone
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_TriggerUsageWarningDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_TriggerUsageWarningDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerUsageWarningDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_Animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Photon::Pun::PhotonAnimatorView::dyn_m_Animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_Animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonStreamQueue m_StreamQueue
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonStreamQueue*& Photon::Pun::PhotonAnimatorView::dyn_m_StreamQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_StreamQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StreamQueue"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonStreamQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ShowLayerWeightsInspector
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_ShowLayerWeightsInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_ShowLayerWeightsInspector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowLayerWeightsInspector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ShowParameterInspector
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_ShowParameterInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_ShowParameterInspector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowParameterInspector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.PhotonAnimatorView/SynchronizedParameter> m_SynchronizeParameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>*& Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeParameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.PhotonAnimatorView/SynchronizedLayer> m_SynchronizeLayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>*& Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_SynchronizeLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeLayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReceiverPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonAnimatorView::dyn_m_ReceiverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_ReceiverPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReceiverPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastDeserializeTime
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonAnimatorView::dyn_m_LastDeserializeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_LastDeserializeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastDeserializeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasSynchronizeTypeChanged
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonAnimatorView::dyn_m_WasSynchronizeTypeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_WasSynchronizeTypeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasSynchronizeTypeChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> m_raisedDiscreteTriggersCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Photon::Pun::PhotonAnimatorView::dyn_m_raisedDiscreteTriggersCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::dyn_m_raisedDiscreteTriggersCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_raisedDiscreteTriggersCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.Awake
void Photon::Pun::PhotonAnimatorView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.Update
void Photon::Pun::PhotonAnimatorView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.CacheDiscreteTriggers
void Photon::Pun::PhotonAnimatorView::CacheDiscreteTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::CacheDiscreteTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheDiscreteTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DoesLayerSynchronizeTypeExist
bool Photon::Pun::PhotonAnimatorView::DoesLayerSynchronizeTypeExist(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DoesLayerSynchronizeTypeExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesLayerSynchronizeTypeExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DoesParameterSynchronizeTypeExist
bool Photon::Pun::PhotonAnimatorView::DoesParameterSynchronizeTypeExist(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DoesParameterSynchronizeTypeExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoesParameterSynchronizeTypeExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetSynchronizedLayers
::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>* Photon::Pun::PhotonAnimatorView::GetSynchronizedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetSynchronizedLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSynchronizedLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetSynchronizedParameters
::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>* Photon::Pun::PhotonAnimatorView::GetSynchronizedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetSynchronizedParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSynchronizedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetLayerSynchronizeType
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::GetLayerSynchronizeType(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetLayerSynchronizeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerSynchronizeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonAnimatorView::SynchronizeType, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.GetParameterSynchronizeType
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::GetParameterSynchronizeType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::GetParameterSynchronizeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterSynchronizeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonAnimatorView::SynchronizeType, false>(this, ___internal__method, name);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SetLayerSynchronized
void Photon::Pun::PhotonAnimatorView::SetLayerSynchronized(int layerIndex, ::Photon::Pun::PhotonAnimatorView::SynchronizeType synchronizeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SetLayerSynchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayerSynchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(synchronizeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, synchronizeType);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SetParameterSynchronized
void Photon::Pun::PhotonAnimatorView::SetParameterSynchronized(::StringW name, ::Photon::Pun::PhotonAnimatorView::ParameterType type, ::Photon::Pun::PhotonAnimatorView::SynchronizeType synchronizeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SetParameterSynchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterSynchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(synchronizeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, type, synchronizeType);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SerializeDataContinuously
void Photon::Pun::PhotonAnimatorView::SerializeDataContinuously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SerializeDataContinuously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDataContinuously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DeserializeDataContinuously
void Photon::Pun::PhotonAnimatorView::DeserializeDataContinuously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DeserializeDataContinuously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataContinuously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SerializeDataDiscretly
void Photon::Pun::PhotonAnimatorView::SerializeDataDiscretly(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SerializeDataDiscretly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDataDiscretly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DeserializeDataDiscretly
void Photon::Pun::PhotonAnimatorView::DeserializeDataDiscretly(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DeserializeDataDiscretly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataDiscretly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.SerializeSynchronizationTypeState
void Photon::Pun::PhotonAnimatorView::SerializeSynchronizationTypeState(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SerializeSynchronizationTypeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSynchronizationTypeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.DeserializeSynchronizationTypeState
void Photon::Pun::PhotonAnimatorView::DeserializeSynchronizationTypeState(::Photon::Pun::PhotonStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::DeserializeSynchronizationTypeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSynchronizationTypeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView.OnPhotonSerializeView
void Photon::Pun::PhotonAnimatorView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonAnimatorView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/ParameterType
#include "Photon/Pun/PhotonAnimatorView_ParameterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Float
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Float
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Float(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Int
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Int
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Int(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Bool
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Bool
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Bool(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Trigger
::Photon::Pun::PhotonAnimatorView::ParameterType Photon::Pun::PhotonAnimatorView::ParameterType::_get_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_get_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::ParameterType>("Photon.Pun", "PhotonAnimatorView/ParameterType", "Trigger"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/ParameterType Trigger
void Photon::Pun::PhotonAnimatorView::ParameterType::_set_Trigger(::Photon::Pun::PhotonAnimatorView::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::_set_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/ParameterType", "Trigger", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::ParameterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::ParameterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizeType
#include "Photon/Pun/PhotonAnimatorView_SynchronizeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Disabled
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::SynchronizeType>("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Disabled
void Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Disabled(::Photon::Pun::PhotonAnimatorView::SynchronizeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Discrete
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::SynchronizeType>("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Discrete
void Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Discrete(::Photon::Pun::PhotonAnimatorView::SynchronizeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Continuous
::Photon::Pun::PhotonAnimatorView::SynchronizeType Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonAnimatorView::SynchronizeType>("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonAnimatorView/SynchronizeType Continuous
void Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Continuous(::Photon::Pun::PhotonAnimatorView::SynchronizeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonAnimatorView/SynchronizeType", "Continuous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::SynchronizeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonAnimatorView/ParameterType Type
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::ParameterType& Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonAnimatorView::ParameterType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonAnimatorView/SynchronizeType SynchronizeType
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::SynchronizeType& Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_SynchronizeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_SynchronizeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeType"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonAnimatorView::SynchronizeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedParameter::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonAnimatorView/SynchronizeType SynchronizeType
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::SynchronizeType& Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_SynchronizeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_SynchronizeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeType"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonAnimatorView::SynchronizeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LayerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_LayerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedLayer::dyn_LayerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LayerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass18_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass18_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass18_0.<DoesLayerSynchronizeTypeExist>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::$DoesLayerSynchronizeTypeExist$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass18_0::<DoesLayerSynchronizeTypeExist>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoesLayerSynchronizeTypeExist>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass19_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass19_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass19_0.<DoesParameterSynchronizeTypeExist>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::$DoesParameterSynchronizeTypeExist$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass19_0::<DoesParameterSynchronizeTypeExist>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoesParameterSynchronizeTypeExist>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass22_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass22_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass22_0.<GetLayerSynchronizeType>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::$GetLayerSynchronizeType$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass22_0::<GetLayerSynchronizeType>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLayerSynchronizeType>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass23_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass23_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass23_0.<GetParameterSynchronizeType>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::$GetParameterSynchronizeType$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass23_0::<GetParameterSynchronizeType>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParameterSynchronizeType>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass24_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass24_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedLayer
#include "Photon/Pun/PhotonAnimatorView_SynchronizedLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass24_0.<SetLayerSynchronized>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::$SetLayerSynchronized$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass24_0::<SetLayerSynchronized>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetLayerSynchronized>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass25_0
#include "Photon/Pun/PhotonAnimatorView_--c__DisplayClass25_0.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/SynchronizedParameter
#include "Photon/Pun/PhotonAnimatorView_SynchronizedParameter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonAnimatorView/<>c__DisplayClass25_0.<SetParameterSynchronized>b__0
bool Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::$SetParameterSynchronized$b__0(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::$$c__DisplayClass25_0::<SetParameterSynchronized>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetParameterSynchronized>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonRigidbody2DView
#include "Photon/Pun/PhotonRigidbody2DView.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Angle
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody2D m_Body
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& Photon::Pun::PhotonRigidbody2DView::dyn_m_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_Body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Body"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NetworkRotation
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeAngularVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_SynchronizeAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeAngularVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_TeleportEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_TeleportIfDistanceGreaterThan
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportIfDistanceGreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::dyn_m_TeleportIfDistanceGreaterThan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportIfDistanceGreaterThan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonRigidbody2DView.Awake
void Photon::Pun::PhotonRigidbody2DView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbody2DView.FixedUpdate
void Photon::Pun::PhotonRigidbody2DView::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbody2DView.OnPhotonSerializeView
void Photon::Pun::PhotonRigidbody2DView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbody2DView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonRigidbody2DView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonRigidbodyView
#include "Photon/Pun/PhotonRigidbodyView.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbodyView::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Angle
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbodyView::dyn_m_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody m_Body
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Photon::Pun::PhotonRigidbodyView::dyn_m_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_Body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Body"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_NetworkRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeAngularVelocity
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_SynchronizeAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeAngularVelocity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_TeleportEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_TeleportIfDistanceGreaterThan
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportIfDistanceGreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::dyn_m_TeleportIfDistanceGreaterThan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TeleportIfDistanceGreaterThan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonRigidbodyView.Awake
void Photon::Pun::PhotonRigidbodyView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbodyView.FixedUpdate
void Photon::Pun::PhotonRigidbodyView::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonRigidbodyView.OnPhotonSerializeView
void Photon::Pun::PhotonRigidbodyView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonRigidbodyView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonRigidbodyView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformView
#include "Photon/Pun/PhotonTransformView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformView::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Angle
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformView::dyn_m_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_Angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformView::dyn_m_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformView::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_StoredPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformView::dyn_m_StoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_StoredPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StoredPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_NetworkRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::PhotonTransformView::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizePosition
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_SynchronizePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_SynchronizePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizePosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeRotation
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_SynchronizeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_SynchronizeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_SynchronizeScale
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_SynchronizeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_SynchronizeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizeScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_UseLocal
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_UseLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_UseLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_firstTake
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformView::dyn_m_firstTake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::dyn_m_firstTake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstTake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.Awake
void Photon::Pun::PhotonTransformView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.Reset
void Photon::Pun::PhotonTransformView::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.OnEnable
void Photon::Pun::PhotonTransformView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.Update
void Photon::Pun::PhotonTransformView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformView.OnPhotonSerializeView
void Photon::Pun::PhotonTransformView::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformView::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonTransformView*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewClassic
#include "Photon/Pun/PhotonTransformViewClassic.hpp"
// Including type: Photon.Pun.PhotonTransformViewPositionModel
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
// Including type: Photon.Pun.PhotonTransformViewRotationModel
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
// Including type: Photon.Pun.PhotonTransformViewScaleModel
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
// Including type: Photon.Pun.PhotonTransformViewPositionControl
#include "Photon/Pun/PhotonTransformViewPositionControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewRotationControl
#include "Photon/Pun/PhotonTransformViewRotationControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewScaleControl
#include "Photon/Pun/PhotonTransformViewScaleControl.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewPositionModel m_PositionModel
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel*& Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionModel"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewRotationModel m_RotationModel
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationModel*& Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationModel"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewScaleModel m_ScaleModel
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleModel*& Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScaleModel"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewPositionControl m_PositionControl
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionControl*& Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_PositionControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionControl"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewRotationControl m_RotationControl
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationControl*& Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_RotationControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationControl"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewScaleControl m_ScaleControl
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleControl*& Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_ScaleControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScaleControl"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView m_PhotonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::PhotonTransformViewClassic::dyn_m_PhotonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_PhotonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PhotonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReceivedNetworkUpdate
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewClassic::dyn_m_ReceivedNetworkUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_ReceivedNetworkUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReceivedNetworkUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_firstTake
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewClassic::dyn_m_firstTake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::dyn_m_firstTake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstTake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.Awake
void Photon::Pun::PhotonTransformViewClassic::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.OnEnable
void Photon::Pun::PhotonTransformViewClassic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.Update
void Photon::Pun::PhotonTransformViewClassic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.UpdatePosition
void Photon::Pun::PhotonTransformViewClassic::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.UpdateRotation
void Photon::Pun::PhotonTransformViewClassic::UpdateRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::UpdateRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.UpdateScale
void Photon::Pun::PhotonTransformViewClassic::UpdateScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::UpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.SetSynchronizedValues
void Photon::Pun::PhotonTransformViewClassic::SetSynchronizedValues(::UnityEngine::Vector3 speed, float turnSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::SetSynchronizedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSynchronizedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed), ::il2cpp_utils::ExtractType(turnSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed, turnSpeed);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewClassic.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewClassic::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewClassic::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::PhotonTransformViewClassic*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionModel
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean SynchronizeEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionModel::dyn_SynchronizeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_SynchronizeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TeleportEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TeleportIfDistanceGreaterThan
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportIfDistanceGreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_TeleportIfDistanceGreaterThan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportIfDistanceGreaterThan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions InterpolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions& Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateMoveTowardsSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateMoveTowardsSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateMoveTowardsSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateMoveTowardsSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateLerpSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_InterpolateLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions ExtrapolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ExtrapolateSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ExtrapolateIncludingRoundTripTime
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateIncludingRoundTripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateIncludingRoundTripTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateIncludingRoundTripTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ExtrapolateNumberOfStoredPositions
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateNumberOfStoredPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::dyn_ExtrapolateNumberOfStoredPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtrapolateNumberOfStoredPositions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Disabled
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Disabled
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions FixedSpeed
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_FixedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_FixedSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "FixedSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions FixedSpeed
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_FixedSpeed(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_FixedSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "FixedSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions EstimatedSpeed
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_EstimatedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_EstimatedSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "EstimatedSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions EstimatedSpeed
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_EstimatedSpeed(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_EstimatedSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "EstimatedSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions SynchronizeValues
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_SynchronizeValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_SynchronizeValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "SynchronizeValues"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions SynchronizeValues
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_SynchronizeValues(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_SynchronizeValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "SynchronizeValues", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Lerp
::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_get_Lerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Lerp"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/InterpolateOptions Lerp
void Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Lerp(::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::_set_Lerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/InterpolateOptions", "Lerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::InterpolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions Disabled
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions Disabled
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions SynchronizeValues
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_SynchronizeValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_SynchronizeValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "SynchronizeValues"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions SynchronizeValues
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_SynchronizeValues(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_SynchronizeValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "SynchronizeValues", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions EstimateSpeedAndTurn
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_EstimateSpeedAndTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_EstimateSpeedAndTurn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "EstimateSpeedAndTurn"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions EstimateSpeedAndTurn
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_EstimateSpeedAndTurn(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_EstimateSpeedAndTurn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "EstimateSpeedAndTurn", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions FixedSpeed
::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_FixedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_get_FixedSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions>("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "FixedSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewPositionModel/ExtrapolateOptions FixedSpeed
void Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_FixedSpeed(::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::_set_FixedSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewPositionModel/ExtrapolateOptions", "FixedSpeed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionModel::ExtrapolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewPositionControl
#include "Photon/Pun/PhotonTransformViewPositionControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewPositionModel
#include "Photon/Pun/PhotonTransformViewPositionModel.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewPositionModel m_Model
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel*& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_Model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Model"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewPositionModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_CurrentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_CurrentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_LastSerializeTime
[[deprecated("Use field access instead!")]] double& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_LastSerializeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_LastSerializeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastSerializeTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_SynchronizedSpeed
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizedSpeed"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SynchronizedTurnSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedTurnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_SynchronizedTurnSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SynchronizedTurnSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_NetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_NetworkPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<UnityEngine.Vector3> m_OldNetworkPositions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::UnityEngine::Vector3>*& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_OldNetworkPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_OldNetworkPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OldNetworkPositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UpdatedPositionAfterOnSerialize
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewPositionControl::dyn_m_UpdatedPositionAfterOnSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::dyn_m_UpdatedPositionAfterOnSerialize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatedPositionAfterOnSerialize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.GetOldestStoredNetworkPosition
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::GetOldestStoredNetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::GetOldestStoredNetworkPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOldestStoredNetworkPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.SetSynchronizedValues
void Photon::Pun::PhotonTransformViewPositionControl::SetSynchronizedValues(::UnityEngine::Vector3 speed, float turnSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::SetSynchronizedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSynchronizedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed), ::il2cpp_utils::ExtractType(turnSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed, turnSpeed);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.UpdatePosition
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::UpdatePosition(::UnityEngine::Vector3 currentPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, currentPosition);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.GetNetworkPosition
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::GetNetworkPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::GetNetworkPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.GetExtrapolatedPositionOffset
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewPositionControl::GetExtrapolatedPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::GetExtrapolatedPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtrapolatedPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewPositionControl::OnPhotonSerializeView(::UnityEngine::Vector3 currentPosition, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::OnPhotonSerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPhotonSerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPosition, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.SerializeData
void Photon::Pun::PhotonTransformViewPositionControl::SerializeData(::UnityEngine::Vector3 currentPosition, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::SerializeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPosition, stream, info);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewPositionControl.DeserializeData
void Photon::Pun::PhotonTransformViewPositionControl::DeserializeData(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::DeserializeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewRotationModel
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean SynchronizeEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewRotationModel::dyn_SynchronizeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_SynchronizeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions InterpolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions& Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateRotateTowardsSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateRotateTowardsSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateRotateTowardsSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateRotateTowardsSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateLerpSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::dyn_InterpolateLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Disabled
::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Disabled
void Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions RotateTowards
::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_RotateTowards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_RotateTowards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "RotateTowards"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions RotateTowards
void Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_RotateTowards(::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_RotateTowards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "RotateTowards", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Lerp
::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_get_Lerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Lerp"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewRotationModel/InterpolateOptions Lerp
void Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Lerp(::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::_set_Lerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewRotationModel/InterpolateOptions", "Lerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationModel::InterpolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewRotationControl
#include "Photon/Pun/PhotonTransformViewRotationControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewRotationModel
#include "Photon/Pun/PhotonTransformViewRotationModel.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewRotationModel m_Model
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewRotationModel*& Photon::Pun::PhotonTransformViewRotationControl::dyn_m_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::dyn_m_Model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Model"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewRotationModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_NetworkRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::PhotonTransformViewRotationControl::dyn_m_NetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::dyn_m_NetworkRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewRotationControl.GetNetworkRotation
::UnityEngine::Quaternion Photon::Pun::PhotonTransformViewRotationControl::GetNetworkRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::GetNetworkRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewRotationControl.GetRotation
::UnityEngine::Quaternion Photon::Pun::PhotonTransformViewRotationControl::GetRotation(::UnityEngine::Quaternion currentRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentRotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, currentRotation);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewRotationControl.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewRotationControl::OnPhotonSerializeView(::UnityEngine::Quaternion currentRotation, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewRotationControl::OnPhotonSerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPhotonSerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentRotation), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentRotation, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewScaleModel
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean SynchronizeEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Pun::PhotonTransformViewScaleModel::dyn_SynchronizeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_SynchronizeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SynchronizeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions InterpolateOption
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions& Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateOption"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateMoveTowardsSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateMoveTowardsSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateMoveTowardsSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateMoveTowardsSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InterpolateLerpSpeed
[[deprecated("Use field access instead!")]] float& Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::dyn_InterpolateLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterpolateLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Disabled
::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Disabled
void Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Disabled(::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions MoveTowards
::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_MoveTowards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_MoveTowards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "MoveTowards"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions MoveTowards
void Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_MoveTowards(::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_MoveTowards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "MoveTowards", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Lerp
::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Lerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_get_Lerp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions>("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Lerp"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PhotonTransformViewScaleModel/InterpolateOptions Lerp
void Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Lerp(::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::_set_Lerp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PhotonTransformViewScaleModel/InterpolateOptions", "Lerp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleModel::InterpolateOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PhotonTransformViewScaleControl
#include "Photon/Pun/PhotonTransformViewScaleControl.hpp"
// Including type: Photon.Pun.PhotonTransformViewScaleModel
#include "Photon/Pun/PhotonTransformViewScaleModel.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonTransformViewScaleModel m_Model
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewScaleModel*& Photon::Pun::PhotonTransformViewScaleControl::dyn_m_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::dyn_m_Model");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Model"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonTransformViewScaleModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_NetworkScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::PhotonTransformViewScaleControl::dyn_m_NetworkScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::dyn_m_NetworkScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewScaleControl.GetNetworkScale
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewScaleControl::GetNetworkScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::GetNetworkScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewScaleControl.GetScale
::UnityEngine::Vector3 Photon::Pun::PhotonTransformViewScaleControl::GetScale(::UnityEngine::Vector3 currentScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::GetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentScale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, currentScale);
}
// Autogenerated method: Photon.Pun.PhotonTransformViewScaleControl.OnPhotonSerializeView
void Photon::Pun::PhotonTransformViewScaleControl::OnPhotonSerializeView(::UnityEngine::Vector3 currentScale, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewScaleControl::OnPhotonSerializeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPhotonSerializeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentScale), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentScale, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CullArea
#include "Photon/Pun/UtilityScripts/CullArea.hpp"
// Including type: Photon.Pun.UtilityScripts.CellTree
#include "Photon/Pun/UtilityScripts/CellTree.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Photon.Pun.UtilityScripts.CellTreeNode
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_NUMBER_OF_ALLOWED_CELLS
int Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_ALLOWED_CELLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_ALLOWED_CELLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_ALLOWED_CELLS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_NUMBER_OF_ALLOWED_CELLS
void Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_ALLOWED_CELLS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_ALLOWED_CELLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_ALLOWED_CELLS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_NUMBER_OF_SUBDIVISIONS
int Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_SUBDIVISIONS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_get_MAX_NUMBER_OF_SUBDIVISIONS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_SUBDIVISIONS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_NUMBER_OF_SUBDIVISIONS
void Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_SUBDIVISIONS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::_set_MAX_NUMBER_OF_SUBDIVISIONS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CullArea", "MAX_NUMBER_OF_SUBDIVISIONS", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte FIRST_GROUP_ID
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CullArea::dyn_FIRST_GROUP_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_FIRST_GROUP_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FIRST_GROUP_ID"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] SUBDIVISION_FIRST_LEVEL_ORDER
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_FIRST_LEVEL_ORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_FIRST_LEVEL_ORDER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SUBDIVISION_FIRST_LEVEL_ORDER"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] SUBDIVISION_SECOND_LEVEL_ORDER
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_SECOND_LEVEL_ORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_SECOND_LEVEL_ORDER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SUBDIVISION_SECOND_LEVEL_ORDER"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] SUBDIVISION_THIRD_LEVEL_ORDER
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_THIRD_LEVEL_ORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_SUBDIVISION_THIRD_LEVEL_ORDER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SUBDIVISION_THIRD_LEVEL_ORDER"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Photon::Pun::UtilityScripts::CullArea::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Photon::Pun::UtilityScripts::CullArea::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2[] Subdivisions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& Photon::Pun::UtilityScripts::CullArea::dyn_Subdivisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_Subdivisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Subdivisions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumberOfSubdivisions
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CullArea::dyn_NumberOfSubdivisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_NumberOfSubdivisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfSubdivisions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CellCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CullArea::dyn_$CellCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_$CellCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CellCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.CellTree <CellTree>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTree*& Photon::Pun::UtilityScripts::CullArea::dyn_$CellTree$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_$CellTree$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CellTree>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.GameObject> <Map>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>*& Photon::Pun::UtilityScripts::CullArea::dyn_$Map$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_$Map$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Map>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean YIsUpAxis
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::CullArea::dyn_YIsUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_YIsUpAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "YIsUpAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RecreateCellHierarchy
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::CullArea::dyn_RecreateCellHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_RecreateCellHierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecreateCellHierarchy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte idCounter
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CullArea::dyn_idCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::dyn_idCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idCounter"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.get_CellCount
int Photon::Pun::UtilityScripts::CullArea::get_CellCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::get_CellCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CellCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.set_CellCount
void Photon::Pun::UtilityScripts::CullArea::set_CellCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::set_CellCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CellCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.get_CellTree
::Photon::Pun::UtilityScripts::CellTree* Photon::Pun::UtilityScripts::CullArea::get_CellTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::get_CellTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CellTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::CellTree*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.set_CellTree
void Photon::Pun::UtilityScripts::CullArea::set_CellTree(::Photon::Pun::UtilityScripts::CellTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::set_CellTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CellTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.get_Map
::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>* Photon::Pun::UtilityScripts::CullArea::get_Map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::get_Map");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Map", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.set_Map
void Photon::Pun::UtilityScripts::CullArea::set_Map(::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::set_Map");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Map", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.Awake
void Photon::Pun::UtilityScripts::CullArea::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.OnDrawGizmos
void Photon::Pun::UtilityScripts::CullArea::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.CreateCellHierarchy
void Photon::Pun::UtilityScripts::CullArea::CreateCellHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::CreateCellHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCellHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.CreateChildCells
void Photon::Pun::UtilityScripts::CullArea::CreateChildCells(::Photon::Pun::UtilityScripts::CellTreeNode* parent, int cellLevelInHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::CreateChildCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(cellLevelInHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, cellLevelInHierarchy);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.DrawCells
void Photon::Pun::UtilityScripts::CullArea::DrawCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::DrawCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.IsCellCountAllowed
bool Photon::Pun::UtilityScripts::CullArea::IsCellCountAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::IsCellCountAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCellCountAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullArea.GetActiveCells
::System::Collections::Generic::List_1<uint8_t>* Photon::Pun::UtilityScripts::CullArea::GetActiveCells(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullArea::GetActiveCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<uint8_t>*, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CellTree
#include "Photon/Pun/UtilityScripts/CellTree.hpp"
// Including type: Photon.Pun.UtilityScripts.CellTreeNode
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.CellTreeNode <RootNode>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTreeNode*& Photon::Pun::UtilityScripts::CellTree::dyn_$RootNode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTree::dyn_$RootNode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RootNode>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTree.get_RootNode
::Photon::Pun::UtilityScripts::CellTreeNode* Photon::Pun::UtilityScripts::CellTree::get_RootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTree::get_RootNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::CellTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTree.set_RootNode
void Photon::Pun::UtilityScripts::CellTree::set_RootNode(::Photon::Pun::UtilityScripts::CellTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTree::set_RootNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RootNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CellTreeNode
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Id
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 TopLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_TopLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TopLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 BottomRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CellTreeNode::dyn_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_BottomRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BottomRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType NodeType
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType& Photon::Pun::UtilityScripts::CellTreeNode::dyn_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_NodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NodeType"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.CellTreeNode Parent
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CellTreeNode*& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parent"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CellTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Pun.UtilityScripts.CellTreeNode> Childs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::CellTreeNode*>*& Photon::Pun::UtilityScripts::CellTreeNode::dyn_Childs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_Childs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Childs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::CellTreeNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxDistance
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CellTreeNode::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.AddChild
void Photon::Pun::UtilityScripts::CellTreeNode::AddChild(::Photon::Pun::UtilityScripts::CellTreeNode* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.Draw
void Photon::Pun::UtilityScripts::CellTreeNode::Draw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::Draw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.GetActiveCells
void Photon::Pun::UtilityScripts::CellTreeNode::GetActiveCells(::System::Collections::Generic::List_1<uint8_t>* activeCells, bool yIsUpAxis, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::GetActiveCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeCells), ::il2cpp_utils::ExtractType(yIsUpAxis), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeCells, yIsUpAxis, position);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.IsPointInsideCell
bool Photon::Pun::UtilityScripts::CellTreeNode::IsPointInsideCell(bool yIsUpAxis, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::IsPointInsideCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointInsideCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(yIsUpAxis), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, yIsUpAxis, point);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CellTreeNode.IsPointNearCell
bool Photon::Pun::UtilityScripts::CellTreeNode::IsPointNearCell(bool yIsUpAxis, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::IsPointNearCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointNearCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(yIsUpAxis), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, yIsUpAxis, point);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CellTreeNode/ENodeType
#include "Photon/Pun/UtilityScripts/CellTreeNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Root
::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType>("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Root"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Root
void Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Root(::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Node
::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Node");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType>("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Node"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Node
void Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Node(::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Node");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Node", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Leaf
::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Leaf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_get_Leaf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType>("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Leaf"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.CellTreeNode/ENodeType Leaf
void Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Leaf(::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::_set_Leaf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CellTreeNode/ENodeType", "Leaf", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CellTreeNode::ENodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ByteComparer
#include "Photon/Pun/UtilityScripts/ByteComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.ByteComparer.Compare
int Photon::Pun::UtilityScripts::ByteComparer::Compare(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ByteComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::ByteComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CullingHandler
#include "Photon/Pun/UtilityScripts/CullingHandler.hpp"
// Including type: Photon.Pun.UtilityScripts.CullArea
#include "Photon/Pun/UtilityScripts/CullArea.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 orderIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CullingHandler::dyn_orderIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_orderIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orderIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.CullArea cullArea
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::CullArea*& Photon::Pun::UtilityScripts::CullingHandler::dyn_cullArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_cullArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cullArea"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::CullArea**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Byte> previousActiveCells
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint8_t>*& Photon::Pun::UtilityScripts::CullingHandler::dyn_previousActiveCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_previousActiveCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousActiveCells"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Byte> activeCells
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint8_t>*& Photon::Pun::UtilityScripts::CullingHandler::dyn_activeCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_activeCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeCells"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView pView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Pun::UtilityScripts::CullingHandler::dyn_pView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_pView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CullingHandler::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::CullingHandler::dyn_currentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_currentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeSinceUpdate
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CullingHandler::dyn_timeSinceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_timeSinceUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSinceUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeBetweenUpdatesMin
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CullingHandler::dyn_timeBetweenUpdatesMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::dyn_timeBetweenUpdatesMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeBetweenUpdatesMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.OnEnable
void Photon::Pun::UtilityScripts::CullingHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.Start
void Photon::Pun::UtilityScripts::CullingHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.Update
void Photon::Pun::UtilityScripts::CullingHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.OnGUI
void Photon::Pun::UtilityScripts::CullingHandler::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.HaveActiveCellsChanged
bool Photon::Pun::UtilityScripts::CullingHandler::HaveActiveCellsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::HaveActiveCellsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HaveActiveCellsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.UpdateInterestGroups
void Photon::Pun::UtilityScripts::CullingHandler::UpdateInterestGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::UpdateInterestGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInterestGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CullingHandler.OnPhotonSerializeView
void Photon::Pun::UtilityScripts::CullingHandler::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CullingHandler::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CullingHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonLagSimulationGui
#include "Photon/Pun/UtilityScripts/PhotonLagSimulationGui.hpp"
// Including type: ExitGames.Client.Photon.PhotonPeer
#include "ExitGames/Client/Photon/PhotonPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect WindowRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindowId
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_WindowId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Visible
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_Visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.PhotonPeer <Peer>k__BackingField
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::PhotonPeer*& Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_$Peer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::dyn_$Peer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Peer>k__BackingField"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::PhotonPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.get_Peer
::ExitGames::Client::Photon::PhotonPeer* Photon::Pun::UtilityScripts::PhotonLagSimulationGui::get_Peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::get_Peer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Peer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::PhotonPeer*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.set_Peer
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::set_Peer(::ExitGames::Client::Photon::PhotonPeer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::set_Peer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Peer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.Start
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.OnGUI
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.NetSimHasNoPeerWindow
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimHasNoPeerWindow(int windowId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimHasNoPeerWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetSimHasNoPeerWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowId);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonLagSimulationGui.NetSimWindow
void Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimWindow(int windowId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonLagSimulationGui::NetSimWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetSimWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonStatsGui
#include "Photon/Pun/UtilityScripts/PhotonStatsGui.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean statsWindowOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsWindowOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsWindowOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsWindowOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean statsOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean healthStatsVisible
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_healthStatsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_healthStatsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "healthStatsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean trafficStatsOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_trafficStatsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_trafficStatsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trafficStatsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean buttonsOn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_buttonsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_buttonsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect statsRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_statsRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindowId
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_WindowId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::dyn_WindowId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.Start
void Photon::Pun::UtilityScripts::PhotonStatsGui::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.Update
void Photon::Pun::UtilityScripts::PhotonStatsGui::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.OnGUI
void Photon::Pun::UtilityScripts::PhotonStatsGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonStatsGui.TrafficStatsWindow
void Photon::Pun::UtilityScripts::PhotonStatsGui::TrafficStatsWindow(int windowID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonStatsGui::TrafficStatsWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrafficStatsWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo
#include "Photon/Pun/UtilityScripts/PointedAtGameObjectInfo.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PointedAtGameObjectInfo Instance
::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo* Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo*>("Photon.Pun.UtilityScripts", "PointedAtGameObjectInfo", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PointedAtGameObjectInfo Instance
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_set_Instance(::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PointedAtGameObjectInfo", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform focus
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_focus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::dyn_focus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focus"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.Start
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.SetFocus
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::SetFocus(::Photon::Pun::PhotonView* pv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::SetFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pv)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pv);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.RemoveFocus
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::RemoveFocus(::Photon::Pun::PhotonView* pv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::RemoveFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pv)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pv);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo.LateUpdate
void Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.StatesGui
#include "Photon/Pun/UtilityScripts/StatesGui.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.StatesGui Instance
::Photon::Pun::UtilityScripts::StatesGui* Photon::Pun::UtilityScripts::StatesGui::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::StatesGui*>("Photon.Pun.UtilityScripts", "StatesGui", "Instance"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.StatesGui Instance
void Photon::Pun::UtilityScripts::StatesGui::_set_Instance(::Photon::Pun::UtilityScripts::StatesGui* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "StatesGui", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect GuiOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::StatesGui::dyn_GuiOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_GuiOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GuiOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DontDestroy
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_DontDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_DontDestroy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DontDestroy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ServerTimestamp
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_ServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_ServerTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerTimestamp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DetailedConnection
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_DetailedConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_DetailedConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DetailedConnection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Server
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Server"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AppVersion
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_AppVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppVersion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UserId
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Room
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RoomProps
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_RoomProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_RoomProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomProps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EventsIn
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_EventsIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_EventsIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventsIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LocalPlayer
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_LocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_LocalPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PlayerProps
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_PlayerProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_PlayerProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerProps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Others
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Others() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Others");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Others"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Buttons
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_Buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buttons"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ExpectedUsers
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::StatesGui::dyn_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_ExpectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedUsers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect GuiRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Pun::UtilityScripts::StatesGui::dyn_GuiRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_GuiRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GuiRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single native_width
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::StatesGui::dyn_native_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_native_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single native_height
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::StatesGui::dyn_native_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::dyn_native_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native_height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.Awake
void Photon::Pun::UtilityScripts::StatesGui::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.OnDisable
void Photon::Pun::UtilityScripts::StatesGui::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.OnGUI
void Photon::Pun::UtilityScripts::StatesGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.StatesGui.PlayerToString
::StringW Photon::Pun::UtilityScripts::StatesGui::PlayerToString(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::StatesGui::PlayerToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.PhotonTeam
#include "Photon/Pun/UtilityScripts/PhotonTeam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::UtilityScripts::PhotonTeam::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeam::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Code
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::PhotonTeam::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeam::dyn_Code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeam.ToString
::StringW Photon::Pun::UtilityScripts::PhotonTeam::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeam::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonTeamsManager
#include "Photon/Pun/UtilityScripts/PhotonTeamsManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Pun.UtilityScripts.PhotonTeam
#include "Photon/Pun/UtilityScripts/PhotonTeam.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String TeamPlayerProp
::StringW Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_TeamPlayerProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_TeamPlayerProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "TeamPlayerProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String TeamPlayerProp
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_TeamPlayerProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_TeamPlayerProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "TeamPlayerProp", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAF1038
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerJoinedTeam
::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerJoinedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerJoinedTeam");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerJoinedTeam")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerJoinedTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerJoinedTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerJoinedTeam", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAF1048
// Autogenerated static field getter
// Get static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerLeftTeam
::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerLeftTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_PlayerLeftTeam");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerLeftTeam")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerLeftTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_PlayerLeftTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "PlayerLeftTeam", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.PhotonTeamsManager instance
::Photon::Pun::UtilityScripts::PhotonTeamsManager* Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PhotonTeamsManager*>("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.PhotonTeamsManager instance
void Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_instance(::Photon::Pun::UtilityScripts::PhotonTeamsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Pun.UtilityScripts.PhotonTeam> teamsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::PhotonTeam*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teamsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::PhotonTeam*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Byte,Photon.Pun.UtilityScripts.PhotonTeam> teamsByCode
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Pun::UtilityScripts::PhotonTeam*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teamsByCode"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Pun::UtilityScripts::PhotonTeam*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,Photon.Pun.UtilityScripts.PhotonTeam> teamsByName
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Pun::UtilityScripts::PhotonTeam*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_teamsByName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teamsByName"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Pun::UtilityScripts::PhotonTeam*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Byte,System.Collections.Generic.HashSet`1<Photon.Realtime.Player>> playersPerTeam
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>*& Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_playersPerTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::dyn_playersPerTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersPerTeam"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.add_PlayerJoinedTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerJoinedTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "add_PlayerJoinedTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.remove_PlayerJoinedTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerJoinedTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "remove_PlayerJoinedTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.add_PlayerLeftTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerLeftTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "add_PlayerLeftTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.remove_PlayerLeftTeam
void Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerLeftTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "remove_PlayerLeftTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.get_Instance
::Photon::Pun::UtilityScripts::PhotonTeamsManager* Photon::Pun::UtilityScripts::PhotonTeamsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::PhotonTeamsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Awake
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.OnEnable
void Photon::Pun::UtilityScripts::PhotonTeamsManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.OnDisable
void Photon::Pun::UtilityScripts::PhotonTeamsManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Init
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.UpdateTeams
void Photon::Pun::UtilityScripts::PhotonTeamsManager::UpdateTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::UpdateTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.ClearTeams
void Photon::Pun::UtilityScripts::PhotonTeamsManager::ClearTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::ClearTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamByCode
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByCode(uint8_t code, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*> team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamByCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractIndependentType<::Photon::Pun::UtilityScripts::PhotonTeam*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, code, byref(team));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamByName
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByName(::StringW teamName, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*> team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teamName), ::il2cpp_utils::ExtractIndependentType<::Photon::Pun::UtilityScripts::PhotonTeam*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, teamName, byref(team));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetAvailableTeams
::ArrayW<::Photon::Pun::UtilityScripts::PhotonTeam*> Photon::Pun::UtilityScripts::PhotonTeamsManager::GetAvailableTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetAvailableTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAvailableTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Pun::UtilityScripts::PhotonTeam*>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMembers
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers(uint8_t code, ByRef<::ArrayW<::Photon::Realtime::Player*>> members) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, code, byref(members));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMembers
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers(::StringW teamName, ByRef<::ArrayW<::Photon::Realtime::Player*>> members) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(teamName), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, teamName, byref(members));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMembers
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers(::Photon::Pun::UtilityScripts::PhotonTeam* team, ByRef<::ArrayW<::Photon::Realtime::Player*>> members) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(team), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, team, byref(members));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.TryGetTeamMatesOfPlayer
bool Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMatesOfPlayer(::Photon::Realtime::Player* player, ByRef<::ArrayW<::Photon::Realtime::Player*>> teamMates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMatesOfPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTeamMatesOfPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player, byref(teamMates));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetTeamMembersCount
int Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount(uint8_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTeamMembersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, code);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetTeamMembersCount
int Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTeamMembersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.GetTeamMembersCount
int Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount(::Photon::Pun::UtilityScripts::PhotonTeam* team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTeamMembersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(team)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, team);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamsManager.Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PhotonTeamsManager*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PhotonTeamExtensions
#include "Photon/Pun/UtilityScripts/PhotonTeamExtensions.hpp"
// Including type: Photon.Pun.UtilityScripts.PhotonTeam
#include "Photon/Pun/UtilityScripts/PhotonTeam.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.GetPhotonTeam
::Photon::Pun::UtilityScripts::PhotonTeam* Photon::Pun::UtilityScripts::PhotonTeamExtensions::GetPhotonTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::GetPhotonTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "GetPhotonTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::PhotonTeam*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.JoinTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PhotonTeam* team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "JoinTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(team)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, team);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.JoinTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam(::Photon::Realtime::Player* player, uint8_t teamCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "JoinTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamCode);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.JoinTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam(::Photon::Realtime::Player* player, ::StringW teamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "JoinTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamName);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.SwitchTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PhotonTeam* team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "SwitchTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(team)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, team);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.SwitchTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam(::Photon::Realtime::Player* player, uint8_t teamCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "SwitchTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamCode);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.SwitchTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam(::Photon::Realtime::Player* player, ::StringW teamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "SwitchTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(teamName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, teamName);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.LeaveCurrentTeam
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::LeaveCurrentTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::LeaveCurrentTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "LeaveCurrentTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PhotonTeamExtensions.TryGetTeamMates
bool Photon::Pun::UtilityScripts::PhotonTeamExtensions::TryGetTeamMates(::Photon::Realtime::Player* player, ByRef<::ArrayW<::Photon::Realtime::Player*>> teamMates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamExtensions::TryGetTeamMates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PhotonTeamExtensions", "TryGetTeamMates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Photon::Realtime::Player*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, byref(teamMates));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering
#include "Photon/Pun/UtilityScripts/PlayerNumbering.hpp"
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged
#include "Photon/Pun/UtilityScripts/PlayerNumbering_PlayerNumberingChanged.hpp"
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/<>c
#include "Photon/Pun/UtilityScripts/PlayerNumbering_--c.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PlayerNumbering instance
::Photon::Pun::UtilityScripts::PlayerNumbering* Photon::Pun::UtilityScripts::PlayerNumbering::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PlayerNumbering*>("Photon.Pun.UtilityScripts", "PlayerNumbering", "instance"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PlayerNumbering instance
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_instance(::Photon::Pun::UtilityScripts::PlayerNumbering* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "instance", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.Player[] SortedPlayers
::ArrayW<::Photon::Realtime::Player*> Photon::Pun::UtilityScripts::PlayerNumbering::_get_SortedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_SortedPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Photon::Realtime::Player*>>("Photon.Pun.UtilityScripts", "PlayerNumbering", "SortedPlayers"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.Player[] SortedPlayers
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_SortedPlayers(::ArrayW<::Photon::Realtime::Player*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_SortedPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "SortedPlayers", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAF1058
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged OnPlayerNumberingChanged
::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* Photon::Pun::UtilityScripts::PlayerNumbering::_get_OnPlayerNumberingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_OnPlayerNumberingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*>("Photon.Pun.UtilityScripts", "PlayerNumbering", "OnPlayerNumberingChanged"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged OnPlayerNumberingChanged
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_OnPlayerNumberingChanged(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_OnPlayerNumberingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "OnPlayerNumberingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.String RoomPlayerIndexedProp
::StringW Photon::Pun::UtilityScripts::PlayerNumbering::_get_RoomPlayerIndexedProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_get_RoomPlayerIndexedProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PlayerNumbering", "RoomPlayerIndexedProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String RoomPlayerIndexedProp
void Photon::Pun::UtilityScripts::PlayerNumbering::_set_RoomPlayerIndexedProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::_set_RoomPlayerIndexedProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering", "RoomPlayerIndexedProp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dontDestroyOnLoad
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PlayerNumbering::dyn_dontDestroyOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::dyn_dontDestroyOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dontDestroyOnLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.add_OnPlayerNumberingChanged
void Photon::Pun::UtilityScripts::PlayerNumbering::add_OnPlayerNumberingChanged(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::add_OnPlayerNumberingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumbering", "add_OnPlayerNumberingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.remove_OnPlayerNumberingChanged
void Photon::Pun::UtilityScripts::PlayerNumbering::remove_OnPlayerNumberingChanged(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::remove_OnPlayerNumberingChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumbering", "remove_OnPlayerNumberingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.Awake
void Photon::Pun::UtilityScripts::PlayerNumbering::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.RefreshData
void Photon::Pun::UtilityScripts::PlayerNumbering::RefreshData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::RefreshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnJoinedRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnLeftRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnPlayerEnteredRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnPlayerLeftRoom
void Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering.OnPlayerPropertiesUpdate
void Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged
#include "Photon/Pun/UtilityScripts/PlayerNumbering_PlayerNumberingChanged.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged.Invoke
void Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged.BeginInvoke
::System::IAsyncResult* Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/PlayerNumberingChanged.EndInvoke
void Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PlayerNumbering::PlayerNumberingChanged*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PlayerNumbering/<>c
#include "Photon/Pun/UtilityScripts/PlayerNumbering_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Pun.UtilityScripts.PlayerNumbering/<>c <>9
::Photon::Pun::UtilityScripts::PlayerNumbering::$$c* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PlayerNumbering::$$c*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Pun.UtilityScripts.PlayerNumbering/<>c <>9
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9(::Photon::Pun::UtilityScripts::PlayerNumbering::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_0
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_0
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_0(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_1
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_1
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_1(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_2
::System::Func_2<::Photon::Realtime::Player*, int>* Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_get_$$9__14_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Realtime::Player*, int>*>("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__14_2
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_2(::System::Func_2<::Photon::Realtime::Player*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_set_$$9__14_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", "<>9__14_2", value)));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c..cctor
void Photon::Pun::UtilityScripts::PlayerNumbering::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumbering/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c.<RefreshData>b__14_0
int Photon::Pun::UtilityScripts::PlayerNumbering::$$c::$RefreshData$b__14_0(::Photon::Realtime::Player* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::<RefreshData>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshData>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c.<RefreshData>b__14_1
int Photon::Pun::UtilityScripts::PlayerNumbering::$$c::$RefreshData$b__14_1(::Photon::Realtime::Player* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::<RefreshData>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshData>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumbering/<>c.<RefreshData>b__14_2
int Photon::Pun::UtilityScripts::PlayerNumbering::$$c::$RefreshData$b__14_2(::Photon::Realtime::Player* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumbering::$$c::<RefreshData>b__14_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshData>b__14_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PlayerNumberingExtensions
#include "Photon/Pun/UtilityScripts/PlayerNumberingExtensions.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumberingExtensions.GetPlayerNumber
int Photon::Pun::UtilityScripts::PlayerNumberingExtensions::GetPlayerNumber(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumberingExtensions::GetPlayerNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumberingExtensions", "GetPlayerNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PlayerNumberingExtensions.SetPlayerNumber
void Photon::Pun::UtilityScripts::PlayerNumberingExtensions::SetPlayerNumber(::Photon::Realtime::Player* player, int playerNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PlayerNumberingExtensions::SetPlayerNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "PlayerNumberingExtensions", "SetPlayerNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(playerNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, playerNumber);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PunPlayerScores
#include "Photon/Pun/UtilityScripts/PunPlayerScores.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String PlayerScoreProp
::StringW Photon::Pun::UtilityScripts::PunPlayerScores::_get_PlayerScoreProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunPlayerScores::_get_PlayerScoreProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PunPlayerScores", "PlayerScoreProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String PlayerScoreProp
void Photon::Pun::UtilityScripts::PunPlayerScores::_set_PlayerScoreProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunPlayerScores::_set_PlayerScoreProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunPlayerScores", "PlayerScoreProp", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ScoreExtensions
#include "Photon/Pun/UtilityScripts/ScoreExtensions.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.ScoreExtensions.SetScore
void Photon::Pun::UtilityScripts::ScoreExtensions::SetScore(::Photon::Realtime::Player* player, int newScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ScoreExtensions::SetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "ScoreExtensions", "SetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(newScore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, newScore);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ScoreExtensions.AddScore
void Photon::Pun::UtilityScripts::ScoreExtensions::AddScore(::Photon::Realtime::Player* player, int scoreToAddToCurrent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ScoreExtensions::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "ScoreExtensions", "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(scoreToAddToCurrent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, scoreToAddToCurrent);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ScoreExtensions.GetScore
int Photon::Pun::UtilityScripts::ScoreExtensions::GetScore(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ScoreExtensions::GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "ScoreExtensions", "GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PunTeams
#include "Photon/Pun/UtilityScripts/PunTeams.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0xAF1068
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<Photon.Pun.UtilityScripts.PunTeams/Team,System.Collections.Generic.List`1<Photon.Realtime.Player>> PlayersPerTeam
::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>* Photon::Pun::UtilityScripts::PunTeams::_get_PlayersPerTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_get_PlayersPerTeam");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>*>("Photon.Pun.UtilityScripts", "PunTeams", "PlayersPerTeam")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<Photon.Pun.UtilityScripts.PunTeams/Team,System.Collections.Generic.List`1<Photon.Realtime.Player>> PlayersPerTeam
void Photon::Pun::UtilityScripts::PunTeams::_set_PlayersPerTeam(::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_set_PlayersPerTeam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams", "PlayersPerTeam", value));
}
// [ObsoleteAttribute] Offset: 0xAF10A0
// Autogenerated static field getter
// Get static field: static public System.String TeamPlayerProp
::StringW Photon::Pun::UtilityScripts::PunTeams::_get_TeamPlayerProp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_get_TeamPlayerProp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "PunTeams", "TeamPlayerProp"));
}
// Autogenerated static field setter
// Set static field: static public System.String TeamPlayerProp
void Photon::Pun::UtilityScripts::PunTeams::_set_TeamPlayerProp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::_set_TeamPlayerProp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams", "TeamPlayerProp", value));
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.Start
void Photon::Pun::UtilityScripts::PunTeams::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.UpdateTeams
void Photon::Pun::UtilityScripts::PunTeams::UpdateTeams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::UpdateTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnDisable
void Photon::Pun::UtilityScripts::PunTeams::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnJoinedRoom
void Photon::Pun::UtilityScripts::PunTeams::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnLeftRoom
void Photon::Pun::UtilityScripts::PunTeams::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnPlayerPropertiesUpdate
void Photon::Pun::UtilityScripts::PunTeams::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnPlayerLeftRoom
void Photon::Pun::UtilityScripts::PunTeams::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTeams.OnPlayerEnteredRoom
void Photon::Pun::UtilityScripts::PunTeams::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.PunTeams/Team
#include "Photon/Pun/UtilityScripts/PunTeams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Team none
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::PunTeams::Team::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PunTeams::Team>("Photon.Pun.UtilityScripts", "PunTeams/Team", "none"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Team none
void Photon::Pun::UtilityScripts::PunTeams::Team::_set_none(::Photon::Pun::UtilityScripts::PunTeams::Team value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams/Team", "none", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Team red
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::PunTeams::Team::_get_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_get_red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PunTeams::Team>("Photon.Pun.UtilityScripts", "PunTeams/Team", "red"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Team red
void Photon::Pun::UtilityScripts::PunTeams::Team::_set_red(::Photon::Pun::UtilityScripts::PunTeams::Team value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_set_red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams/Team", "red", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Team blue
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::PunTeams::Team::_get_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_get_blue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::PunTeams::Team>("Photon.Pun.UtilityScripts", "PunTeams/Team", "blue"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Team blue
void Photon::Pun::UtilityScripts::PunTeams::Team::_set_blue(::Photon::Pun::UtilityScripts::PunTeams::Team value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::_set_blue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTeams/Team", "blue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::PunTeams::Team::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::Team::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TeamExtensions
#include "Photon/Pun/UtilityScripts/TeamExtensions.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.TeamExtensions.GetTeam
::Photon::Pun::UtilityScripts::PunTeams::Team Photon::Pun::UtilityScripts::TeamExtensions::GetTeam(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TeamExtensions::GetTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TeamExtensions", "GetTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::UtilityScripts::PunTeams::Team, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TeamExtensions.SetTeam
void Photon::Pun::UtilityScripts::TeamExtensions::SetTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PunTeams::Team team) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TeamExtensions::SetTeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TeamExtensions", "SetTeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(team)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, team);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.SmoothSyncMovement
#include "Photon/Pun/UtilityScripts/SmoothSyncMovement.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single SmoothingDelay
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_SmoothingDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_SmoothingDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmoothingDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 correctPlayerPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "correctPlayerPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion correctPlayerRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::dyn_correctPlayerRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "correctPlayerRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.SmoothSyncMovement.Awake
void Photon::Pun::UtilityScripts::SmoothSyncMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.SmoothSyncMovement.OnPhotonSerializeView
void Photon::Pun::UtilityScripts::SmoothSyncMovement::OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::SmoothSyncMovement*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: Photon.Pun.UtilityScripts.SmoothSyncMovement.Update
void Photon::Pun::UtilityScripts::SmoothSyncMovement::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::SmoothSyncMovement::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ConnectAndJoinRandom
#include "Photon/Pun/UtilityScripts/ConnectAndJoinRandom.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoConnect
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_AutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_AutoConnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoConnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Version
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte MaxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_MaxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playerTTL
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_playerTTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::dyn_playerTTL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTTL"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.Start
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.ConnectNow
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::ConnectNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::ConnectNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnConnectedToMaster
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnJoinedLobby
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnJoinRandomFailed
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnDisconnected
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ConnectAndJoinRandom.OnJoinedRoom
void Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.MoveByKeys
#include "Photon/Pun/UtilityScripts/MoveByKeys.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single JumpForce
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JumpForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single JumpTimeout
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_JumpTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JumpTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isSprite
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::MoveByKeys::dyn_isSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_isSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSprite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single jumpingTime
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::MoveByKeys::dyn_jumpingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_jumpingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody body
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& Photon::Pun::UtilityScripts::MoveByKeys::dyn_body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "body"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody2D body2d
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& Photon::Pun::UtilityScripts::MoveByKeys::dyn_body2d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::dyn_body2d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "body2d"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.MoveByKeys.Start
void Photon::Pun::UtilityScripts::MoveByKeys::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.MoveByKeys.FixedUpdate
void Photon::Pun::UtilityScripts::MoveByKeys::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::MoveByKeys::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickDestroy
#include "Photon/Pun/UtilityScripts/OnClickDestroy.hpp"
// Including type: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4
#include "Photon/Pun/UtilityScripts/OnClickDestroy_-DestroyRpc-d__4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData/InputButton Button
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& Photon::Pun::UtilityScripts::OnClickDestroy::dyn_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::dyn_Button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Button"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::InputButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode ModifierKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Photon::Pun::UtilityScripts::OnClickDestroy::dyn_ModifierKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::dyn_ModifierKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModifierKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DestroyByRpc
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnClickDestroy::dyn_DestroyByRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::dyn_DestroyByRpc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestroyByRpc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy.UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
void Photon::Pun::UtilityScripts::OnClickDestroy::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy.DestroyRpc
::System::Collections::IEnumerator* Photon::Pun::UtilityScripts::OnClickDestroy::DestroyRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::DestroyRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4
#include "Photon/Pun/UtilityScripts/OnClickDestroy_-DestroyRpc-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.OnClickDestroy <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnClickDestroy*& Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnClickDestroy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.IDisposable.Dispose
void Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.MoveNext
bool Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.Collections.IEnumerator.Reset
void Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickDestroy/<DestroyRpc>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickDestroy::$DestroyRpc$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickInstantiate
#include "Photon/Pun/UtilityScripts/OnClickInstantiate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData/InputButton Button
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Button"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::InputButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode ModifierKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_ModifierKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_ModifierKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModifierKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject Prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_Prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption InstantiateType
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption& Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_InstantiateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::dyn_InstantiateType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstantiateType"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickInstantiate.UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
void Photon::Pun::UtilityScripts::OnClickInstantiate::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickInstantiate*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption
#include "Photon/Pun/UtilityScripts/OnClickInstantiate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Mine
::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Mine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Mine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption>("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Mine"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Mine
void Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Mine(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Mine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Mine", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Scene
::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_get_Scene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption>("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Scene"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/InstantiateOption Scene
void Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Scene(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::_set_Scene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption", "Scene", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnClickRpc
#include "Photon/Pun/UtilityScripts/OnClickRpc.hpp"
// Including type: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8
#include "Photon/Pun/UtilityScripts/OnClickRpc_-ClickFlash-d__8.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData/InputButton Button
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& Photon::Pun::UtilityScripts::OnClickRpc::dyn_Button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_Button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Button"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::InputButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode ModifierKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Photon::Pun::UtilityScripts::OnClickRpc::dyn_ModifierKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_ModifierKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModifierKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.RpcTarget Target
[[deprecated("Use field access instead!")]] ::Photon::Pun::RpcTarget& Photon::Pun::UtilityScripts::OnClickRpc::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::Photon::Pun::RpcTarget*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material originalMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color originalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_originalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isFlashing
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnClickRpc::dyn_isFlashing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::dyn_isFlashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFlashing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc.UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
void Photon::Pun::UtilityScripts::OnClickRpc::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc.ClickRpc
void Photon::Pun::UtilityScripts::OnClickRpc::ClickRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::ClickRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClickRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc.ClickFlash
::System::Collections::IEnumerator* Photon::Pun::UtilityScripts::OnClickRpc::ClickFlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::ClickFlash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClickFlash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8
#include "Photon/Pun/UtilityScripts/OnClickRpc_-ClickFlash-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.OnClickRpc <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnClickRpc*& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnClickRpc**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <wasEmissive>5__2
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$wasEmissive$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$wasEmissive$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wasEmissive>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <f>5__3
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$f$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::dyn_$f$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<f>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.IDisposable.Dispose
void Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.MoveNext
bool Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.Collections.IEnumerator.Reset
void Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnClickRpc/<ClickFlash>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnClickRpc::$ClickFlash$d__8*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnEscapeQuit
#include "Photon/Pun/UtilityScripts/OnEscapeQuit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.OnEscapeQuit.Update
void Photon::Pun::UtilityScripts::OnEscapeQuit::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnEscapeQuit::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnJoinedInstantiate
#include "Photon/Pun/UtilityScripts/OnJoinedInstantiate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform SpawnPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpawnPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Sequence
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_Sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_Sequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sequence"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Transform> SpawnPoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpawnPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseRandomOffset
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_UseRandomOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_UseRandomOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseRandomOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RandomOffset
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_RandomOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_RandomOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RandomOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ClampY
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_ClampY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_ClampY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClampY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> PrefabsToInstantiate
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_PrefabsToInstantiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_PrefabsToInstantiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrefabsToInstantiate"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoSpawnObjects
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_AutoSpawnObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_AutoSpawnObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoSpawnObjects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Stack`1<UnityEngine.GameObject> SpawnedObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>*& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnedObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_SpawnedObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpawnedObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 spawnedAsActorId
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_spawnedAsActorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_spawnedAsActorId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnedAsActorId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 lastUsedSpawnPointIndex
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_lastUsedSpawnPointIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::dyn_lastUsedSpawnPointIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUsedSpawnPointIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnEnable
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnDisable
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnJoinedRoom
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.SpawnObjects
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.DespawnObjects
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::DespawnObjects(bool localOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::DespawnObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localOnly);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnFriendListUpdate
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnCreatedRoom
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnCreateRoomFailed
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnJoinRoomFailed
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnJoinRandomFailed
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.OnLeftRoom
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.GetSpawnPoint
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint(ByRef<::UnityEngine::Vector3> spawnPos, ByRef<::UnityEngine::Quaternion> spawnRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(spawnPos), byref(spawnRot));
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.GetSpawnPoint
::UnityEngine::Transform* Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnJoinedInstantiate.GetRandomOffset
::UnityEngine::Vector3 Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetRandomOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetRandomOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence
#include "Photon/Pun/UtilityScripts/OnJoinedInstantiate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Connection
::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Connection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence>("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Connection"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Connection
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Connection(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Connection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Connection", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Random
::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence>("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Random"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence Random
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Random(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence RoundRobin
::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_RoundRobin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_get_RoundRobin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence>("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "RoundRobin"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/SpawnSequence RoundRobin
void Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_RoundRobin(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::_set_RoundRobin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence", "RoundRobin", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnStartDelete
#include "Photon/Pun/UtilityScripts/OnStartDelete.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.OnStartDelete.Start
void Photon::Pun::UtilityScripts::OnStartDelete::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnStartDelete::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.CountdownTimer
#include "Photon/Pun/UtilityScripts/CountdownTimer.hpp"
// Including type: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired
#include "Photon/Pun/UtilityScripts/CountdownTimer_CountdownTimerHasExpired.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String CountdownStartTime
::StringW Photon::Pun::UtilityScripts::CountdownTimer::_get_CountdownStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_get_CountdownStartTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "CountdownTimer", "CountdownStartTime"));
}
// Autogenerated static field setter
// Set static field: static public System.String CountdownStartTime
void Photon::Pun::UtilityScripts::CountdownTimer::_set_CountdownStartTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_set_CountdownStartTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CountdownTimer", "CountdownStartTime", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAF1324
// Autogenerated static field getter
// Get static field: static private Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired OnCountdownTimerHasExpired
::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* Photon::Pun::UtilityScripts::CountdownTimer::_get_OnCountdownTimerHasExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_get_OnCountdownTimerHasExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*>("Photon.Pun.UtilityScripts", "CountdownTimer", "OnCountdownTimerHasExpired"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired OnCountdownTimerHasExpired
void Photon::Pun::UtilityScripts::CountdownTimer::_set_OnCountdownTimerHasExpired(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::_set_OnCountdownTimerHasExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "CountdownTimer", "OnCountdownTimerHasExpired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single Countdown
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::CountdownTimer::dyn_Countdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_Countdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Countdown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isTimerRunning
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::CountdownTimer::dyn_isTimerRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_isTimerRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isTimerRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startTime
[[deprecated("Use field access instead!")]] int& Photon::Pun::UtilityScripts::CountdownTimer::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text Text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::CountdownTimer::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.add_OnCountdownTimerHasExpired
void Photon::Pun::UtilityScripts::CountdownTimer::add_OnCountdownTimerHasExpired(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::add_OnCountdownTimerHasExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "add_OnCountdownTimerHasExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.remove_OnCountdownTimerHasExpired
void Photon::Pun::UtilityScripts::CountdownTimer::remove_OnCountdownTimerHasExpired(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::remove_OnCountdownTimerHasExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "remove_OnCountdownTimerHasExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.Start
void Photon::Pun::UtilityScripts::CountdownTimer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.Update
void Photon::Pun::UtilityScripts::CountdownTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnTimerRuns
void Photon::Pun::UtilityScripts::CountdownTimer::OnTimerRuns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnTimerRuns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimerRuns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnTimerEnds
void Photon::Pun::UtilityScripts::CountdownTimer::OnTimerEnds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnTimerEnds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTimerEnds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.Initialize
void Photon::Pun::UtilityScripts::CountdownTimer::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.TimeRemaining
float Photon::Pun::UtilityScripts::CountdownTimer::TimeRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::TimeRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimeRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.TryGetStartTime
bool Photon::Pun::UtilityScripts::CountdownTimer::TryGetStartTime(ByRef<int> startTimestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::TryGetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "TryGetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(startTimestamp));
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.SetStartTime
void Photon::Pun::UtilityScripts::CountdownTimer::SetStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "CountdownTimer", "SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnEnable
void Photon::Pun::UtilityScripts::CountdownTimer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnDisable
void Photon::Pun::UtilityScripts::CountdownTimer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer.OnRoomPropertiesUpdate
void Photon::Pun::UtilityScripts::CountdownTimer::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired
#include "Photon/Pun/UtilityScripts/CountdownTimer_CountdownTimerHasExpired.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired.Invoke
void Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired.BeginInvoke
::System::IAsyncResult* Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Photon.Pun.UtilityScripts.CountdownTimer/CountdownTimerHasExpired.EndInvoke
void Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::CountdownTimer::CountdownTimerHasExpired*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.PunTurnManager
#include "Photon/Pun/UtilityScripts/PunTurnManager.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks
#include "Photon/Pun/UtilityScripts/IPunTurnManagerCallbacks.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte TurnManagerEventOffset
uint8_t Photon::Pun::UtilityScripts::PunTurnManager::_get_TurnManagerEventOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_get_TurnManagerEventOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun.UtilityScripts", "PunTurnManager", "TurnManagerEventOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte TurnManagerEventOffset
void Photon::Pun::UtilityScripts::PunTurnManager::_set_TurnManagerEventOffset(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_set_TurnManagerEventOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTurnManager", "TurnManagerEventOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EvMove
uint8_t Photon::Pun::UtilityScripts::PunTurnManager::_get_EvMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_get_EvMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun.UtilityScripts", "PunTurnManager", "EvMove"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EvMove
void Photon::Pun::UtilityScripts::PunTurnManager::_set_EvMove(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_set_EvMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTurnManager", "EvMove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EvFinalMove
uint8_t Photon::Pun::UtilityScripts::PunTurnManager::_get_EvFinalMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_get_EvFinalMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Pun.UtilityScripts", "PunTurnManager", "EvFinalMove"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EvFinalMove
void Photon::Pun::UtilityScripts::PunTurnManager::_set_EvFinalMove(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::_set_EvFinalMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "PunTurnManager", "EvFinalMove", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player sender
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Pun::UtilityScripts::PunTurnManager::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TurnDuration
[[deprecated("Use field access instead!")]] float& Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TurnDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks TurnManagerListener
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*& Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnManagerListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_TurnManagerListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TurnManagerListener"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<Photon.Realtime.Player> finishedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*& Photon::Pun::UtilityScripts::PunTurnManager::dyn_finishedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn_finishedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOverCallProcessed
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::PunTurnManager::dyn__isOverCallProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::dyn__isOverCallProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOverCallProcessed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_Turn
int Photon::Pun::UtilityScripts::PunTurnManager::get_Turn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_Turn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Turn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.set_Turn
void Photon::Pun::UtilityScripts::PunTurnManager::set_Turn(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::set_Turn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Turn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_ElapsedTimeInTurn
float Photon::Pun::UtilityScripts::PunTurnManager::get_ElapsedTimeInTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_ElapsedTimeInTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedTimeInTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_RemainingSecondsInTurn
float Photon::Pun::UtilityScripts::PunTurnManager::get_RemainingSecondsInTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_RemainingSecondsInTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemainingSecondsInTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_IsCompletedByAll
bool Photon::Pun::UtilityScripts::PunTurnManager::get_IsCompletedByAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_IsCompletedByAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompletedByAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_IsFinishedByMe
bool Photon::Pun::UtilityScripts::PunTurnManager::get_IsFinishedByMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_IsFinishedByMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFinishedByMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.get_IsOver
bool Photon::Pun::UtilityScripts::PunTurnManager::get_IsOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::get_IsOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.Start
void Photon::Pun::UtilityScripts::PunTurnManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.Update
void Photon::Pun::UtilityScripts::PunTurnManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.BeginTurn
void Photon::Pun::UtilityScripts::PunTurnManager::BeginTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::BeginTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.SendMove
void Photon::Pun::UtilityScripts::PunTurnManager::SendMove(::Il2CppObject* move, bool finished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::SendMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move), ::il2cpp_utils::ExtractType(finished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, move, finished);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.GetPlayerFinishedTurn
bool Photon::Pun::UtilityScripts::PunTurnManager::GetPlayerFinishedTurn(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::GetPlayerFinishedTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerFinishedTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.ProcessOnEvent
void Photon::Pun::UtilityScripts::PunTurnManager::ProcessOnEvent(uint8_t eventCode, ::Il2CppObject* content, int senderId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::ProcessOnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCode), ::il2cpp_utils::ExtractType(content), ::il2cpp_utils::ExtractType(senderId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventCode, content, senderId);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.OnEvent
void Photon::Pun::UtilityScripts::PunTurnManager::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::PunTurnManager*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated method: Photon.Pun.UtilityScripts.PunTurnManager.OnRoomPropertiesUpdate
void Photon::Pun::UtilityScripts::PunTurnManager::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTurnManager::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks
#include "Photon/Pun/UtilityScripts/IPunTurnManagerCallbacks.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnTurnBegins
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnBegins(int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnBegins");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnTurnCompleted
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnCompleted(int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnPlayerMove
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerMove(::Photon::Realtime::Player* player, int turn, ::Il2CppObject* move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, turn, move);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnPlayerFinished
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerFinished(::Photon::Realtime::Player* player, int turn, ::Il2CppObject* move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnPlayerFinished");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, turn, move);
}
// Autogenerated method: Photon.Pun.UtilityScripts.IPunTurnManagerCallbacks.OnTurnTimeEnds
void Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnTimeEnds(int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks::OnTurnTimeEnds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::IPunTurnManagerCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TurnExtensions
#include "Photon/Pun/UtilityScripts/TurnExtensions.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String TurnPropKey
::StringW Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnPropKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnPropKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnPropKey"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String TurnPropKey
void Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnPropKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnPropKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnPropKey", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String TurnStartPropKey
::StringW Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnStartPropKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_get_TurnStartPropKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnStartPropKey"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String TurnStartPropKey
void Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnStartPropKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_set_TurnStartPropKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "TurnExtensions", "TurnStartPropKey", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String FinishedTurnPropKey
::StringW Photon::Pun::UtilityScripts::TurnExtensions::_get_FinishedTurnPropKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_get_FinishedTurnPropKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Pun.UtilityScripts", "TurnExtensions", "FinishedTurnPropKey"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String FinishedTurnPropKey
void Photon::Pun::UtilityScripts::TurnExtensions::_set_FinishedTurnPropKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::_set_FinishedTurnPropKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun.UtilityScripts", "TurnExtensions", "FinishedTurnPropKey", value));
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.SetTurn
void Photon::Pun::UtilityScripts::TurnExtensions::SetTurn(::Photon::Realtime::Room* room, int turn, bool setStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::SetTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "SetTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room), ::il2cpp_utils::ExtractType(turn), ::il2cpp_utils::ExtractType(setStartTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room, turn, setStartTime);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.GetTurn
int Photon::Pun::UtilityScripts::TurnExtensions::GetTurn(::Photon::Realtime::RoomInfo* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::GetTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "GetTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.GetTurnStart
int Photon::Pun::UtilityScripts::TurnExtensions::GetTurnStart(::Photon::Realtime::RoomInfo* room) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::GetTurnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "GetTurnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(room)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, room);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.GetFinishedTurn
int Photon::Pun::UtilityScripts::TurnExtensions::GetFinishedTurn(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::GetFinishedTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "GetFinishedTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions.SetFinishedTurn
void Photon::Pun::UtilityScripts::TurnExtensions::SetFinishedTurn(::Photon::Realtime::Player* player, int turn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::SetFinishedTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", "SetFinishedTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(turn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player, turn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TurnExtensions..cctor
void Photon::Pun::UtilityScripts::TurnExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TurnExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun.UtilityScripts", "TurnExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.ButtonInsideScrollList
#include "Photon/Pun/UtilityScripts/ButtonInsideScrollList.hpp"
// Including type: UnityEngine.UI.ScrollRect
#include "UnityEngine/UI/ScrollRect.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ScrollRect scrollRect
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect*& Photon::Pun::UtilityScripts::ButtonInsideScrollList::dyn_scrollRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::dyn_scrollRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollRect"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ScrollRect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ButtonInsideScrollList.Start
void Photon::Pun::UtilityScripts::ButtonInsideScrollList::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ButtonInsideScrollList.UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown
void Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine_EventSystems_IPointerDownHandler_OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::ButtonInsideScrollList*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.ButtonInsideScrollList.UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp
void Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine_EventSystems_IPointerUpHandler_OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ButtonInsideScrollList::UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::ButtonInsideScrollList*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.EventSystemSpawner
#include "Photon/Pun/UtilityScripts/EventSystemSpawner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.EventSystemSpawner.OnEnable
void Photon::Pun::UtilityScripts::EventSystemSpawner::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::EventSystemSpawner::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition
#include "Photon/Pun/UtilityScripts/GraphicToggleIsOnTransition.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic _graphic
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn__graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn__graphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphic"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_NormalOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_HoverOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isHover
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_isHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::dyn_isHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnPointerEnter
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnPointerExit
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnEnable
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnDisable
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.GraphicToggleIsOnTransition.OnValueChanged
void Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::GraphicToggleIsOnTransition::OnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.OnPointerOverTooltip
#include "Photon/Pun/UtilityScripts/OnPointerOverTooltip.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.UtilityScripts.OnPointerOverTooltip.OnDestroy
void Photon::Pun::UtilityScripts::OnPointerOverTooltip::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnPointerOverTooltip::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnPointerOverTooltip.UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit
void Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine_EventSystems_IPointerExitHandler_OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnPointerOverTooltip*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.OnPointerOverTooltip.UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter
void Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine_EventSystems_IPointerEnterHandler_OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnPointerOverTooltip::UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::OnPointerOverTooltip*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager
#include "Photon/Pun/UtilityScripts/TabViewManager.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/TabChangeEvent
#include "Photon/Pun/UtilityScripts/TabViewManager_TabChangeEvent.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/Tab
#include "Photon/Pun/UtilityScripts/TabViewManager_Tab.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/<>c__DisplayClass7_0
#include "Photon/Pun/UtilityScripts/TabViewManager_--c__DisplayClass7_0.hpp"
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ToggleGroup ToggleGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ToggleGroup*& Photon::Pun::UtilityScripts::TabViewManager::dyn_ToggleGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_ToggleGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToggleGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ToggleGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager/Tab[] Tabs
[[deprecated("Use field access instead!")]] ::ArrayW<::Photon::Pun::UtilityScripts::TabViewManager::Tab*>& Photon::Pun::UtilityScripts::TabViewManager::dyn_Tabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_Tabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tabs"))->offset;
  return *reinterpret_cast<::ArrayW<::Photon::Pun::UtilityScripts::TabViewManager::Tab*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager/TabChangeEvent OnTabChanged
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager::TabChangeEvent*& Photon::Pun::UtilityScripts::TabViewManager::dyn_OnTabChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_OnTabChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTabChanged"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager::TabChangeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Pun.UtilityScripts.TabViewManager/Tab CurrentTab
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager::Tab*& Photon::Pun::UtilityScripts::TabViewManager::dyn_CurrentTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_CurrentTab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentTab"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager::Tab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.UI.Toggle,Photon.Pun.UtilityScripts.TabViewManager/Tab> Tab_lut
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::UI::Toggle*, ::Photon::Pun::UtilityScripts::TabViewManager::Tab*>*& Photon::Pun::UtilityScripts::TabViewManager::dyn_Tab_lut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::dyn_Tab_lut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tab_lut"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::UI::Toggle*, ::Photon::Pun::UtilityScripts::TabViewManager::Tab*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager.Start
void Photon::Pun::UtilityScripts::TabViewManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager.SelectTab
void Photon::Pun::UtilityScripts::TabViewManager::SelectTab(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::SelectTab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectTab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager.OnTabSelected
void Photon::Pun::UtilityScripts::TabViewManager::OnTabSelected(::Photon::Pun::UtilityScripts::TabViewManager::Tab* tab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::OnTabSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTabSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tab);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager/TabChangeEvent
#include "Photon/Pun/UtilityScripts/TabViewManager_TabChangeEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager/Tab
#include "Photon/Pun/UtilityScripts/TabViewManager_Tab.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ID
[[deprecated("Use field access instead!")]] ::StringW& Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle Toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_Toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RectTransform View
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_View() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::Tab::dyn_View");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "View"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TabViewManager/<>c__DisplayClass7_0
#include "Photon/Pun/UtilityScripts/TabViewManager_--c__DisplayClass7_0.hpp"
// Including type: Photon.Pun.UtilityScripts.TabViewManager/Tab
#include "Photon/Pun/UtilityScripts/TabViewManager_Tab.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager/Tab _tab
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager::Tab*& Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn__tab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn__tab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tab"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager::Tab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.UtilityScripts.TabViewManager <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::TabViewManager*& Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Pun::UtilityScripts::TabViewManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TabViewManager/<>c__DisplayClass7_0.<Start>b__0
void Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::$Start$b__0(bool isSelected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TabViewManager::$$c__DisplayClass7_0::<Start>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSelected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isSelected);
}
