// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TextButtonTransition
#include "Photon/Pun/UtilityScripts/TextButtonTransition.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::TextButtonTransition::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Selectable Selectable
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable*& Photon::Pun::UtilityScripts::TextButtonTransition::dyn_Selectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn_Selectable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Selectable"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextButtonTransition::dyn_NormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn_NormalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextButtonTransition::dyn_HoverColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::dyn_HoverColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.Awake
void Photon::Pun::UtilityScripts::TextButtonTransition::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnEnable
void Photon::Pun::UtilityScripts::TextButtonTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnDisable
void Photon::Pun::UtilityScripts::TextButtonTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnPointerEnter
void Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextButtonTransition*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextButtonTransition.OnPointerExit
void Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextButtonTransition::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextButtonTransition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.UtilityScripts.TextToggleIsOnTransition
#include "Photon/Pun/UtilityScripts/TextToggleIsOnTransition.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color NormalOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_NormalOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NormalOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOnColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color HoverOffColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOffColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_HoverOffColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoverOffColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isHover
[[deprecated("Use field access instead!")]] bool& Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_isHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::dyn_isHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnEnable
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnDisable
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnValueChanged
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnPointerEnter
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextToggleIsOnTransition*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Pun.UtilityScripts.TextToggleIsOnTransition.OnPointerExit
void Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::TextToggleIsOnTransition::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::UtilityScripts::TextToggleIsOnTransition*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.OpusLib
#include "POpusCodec/OpusLib.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: POpusCodec.OpusLib.get_Version
::StringW POpusCodec::OpusLib::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusLib::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "OpusLib", "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.OpusEncoder
#include "POpusCodec/OpusEncoder.hpp"
// Including type: POpusCodec.Enums.Bandwidth
#include "POpusCodec/Enums/Bandwidth.hpp"
// Including type: POpusCodec.Enums.Complexity
#include "POpusCodec/Enums/Complexity.hpp"
// Including type: POpusCodec.Enums.SignalHint
#include "POpusCodec/Enums/SignalHint.hpp"
// Including type: POpusCodec.Enums.ForceChannels
#include "POpusCodec/Enums/ForceChannels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 BitrateMax
int POpusCodec::OpusEncoder::_get_BitrateMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_get_BitrateMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("POpusCodec", "OpusEncoder", "BitrateMax"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BitrateMax
void POpusCodec::OpusEncoder::_set_BitrateMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_set_BitrateMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "OpusEncoder", "BitrateMax", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RecommendedMaxPacketSize
int POpusCodec::OpusEncoder::_get_RecommendedMaxPacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_get_RecommendedMaxPacketSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("POpusCodec", "OpusEncoder", "RecommendedMaxPacketSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RecommendedMaxPacketSize
void POpusCodec::OpusEncoder::_set_RecommendedMaxPacketSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_set_RecommendedMaxPacketSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "OpusEncoder", "RecommendedMaxPacketSize", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.ArraySegment`1<System.Byte> EmptyBuffer
::System::ArraySegment_1<uint8_t> POpusCodec::OpusEncoder::_get_EmptyBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_get_EmptyBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ArraySegment_1<uint8_t>>("POpusCodec", "OpusEncoder", "EmptyBuffer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.ArraySegment`1<System.Byte> EmptyBuffer
void POpusCodec::OpusEncoder::_set_EmptyBuffer(::System::ArraySegment_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::_set_EmptyBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "OpusEncoder", "EmptyBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _handle
[[deprecated("Use field access instead!")]] ::System::IntPtr& POpusCodec::OpusEncoder::dyn__handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameSizePerChannel
[[deprecated("Use field access instead!")]] int& POpusCodec::OpusEncoder::dyn__frameSizePerChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__frameSizePerChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameSizePerChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.SamplingRate _inputSamplingRate
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::SamplingRate& POpusCodec::OpusEncoder::dyn__inputSamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__inputSamplingRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputSamplingRate"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::SamplingRate*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.Channels _inputChannels
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::Channels& POpusCodec::OpusEncoder::dyn__inputChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__inputChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputChannels"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::Channels*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] writePacket
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& POpusCodec::OpusEncoder::dyn_writePacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn_writePacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writePacket"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.Delay _encoderDelay
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::Delay& POpusCodec::OpusEncoder::dyn__encoderDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::dyn__encoderDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoderDelay"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::Delay*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_InputSamplingRate
::POpusCodec::Enums::SamplingRate POpusCodec::OpusEncoder::get_InputSamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_InputSamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputSamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SamplingRate, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_InputChannels
::POpusCodec::Enums::Channels POpusCodec::OpusEncoder::get_InputChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_InputChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Channels, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_EncoderDelay
void POpusCodec::OpusEncoder::set_EncoderDelay(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_EncoderDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EncoderDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_EncoderDelay
::POpusCodec::Enums::Delay POpusCodec::OpusEncoder::get_EncoderDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_EncoderDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncoderDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Delay, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_FrameSizePerChannel
int POpusCodec::OpusEncoder::get_FrameSizePerChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_FrameSizePerChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameSizePerChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_Bitrate
int POpusCodec::OpusEncoder::get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_Bitrate
void POpusCodec::OpusEncoder::set_Bitrate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_MaxBandwidth
::POpusCodec::Enums::Bandwidth POpusCodec::OpusEncoder::get_MaxBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_MaxBandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxBandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Bandwidth, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_MaxBandwidth
void POpusCodec::OpusEncoder::set_MaxBandwidth(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_MaxBandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxBandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_Complexity
::POpusCodec::Enums::Complexity POpusCodec::OpusEncoder::get_Complexity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_Complexity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Complexity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::Complexity, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_Complexity
void POpusCodec::OpusEncoder::set_Complexity(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_Complexity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Complexity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_ExpectedPacketLossPercentage
int POpusCodec::OpusEncoder::get_ExpectedPacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_ExpectedPacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedPacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_ExpectedPacketLossPercentage
void POpusCodec::OpusEncoder::set_ExpectedPacketLossPercentage(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_ExpectedPacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedPacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_SignalHint
::POpusCodec::Enums::SignalHint POpusCodec::OpusEncoder::get_SignalHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_SignalHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignalHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SignalHint, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_SignalHint
void POpusCodec::OpusEncoder::set_SignalHint(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_SignalHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SignalHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_ForceChannels
::POpusCodec::Enums::ForceChannels POpusCodec::OpusEncoder::get_ForceChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_ForceChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForceChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::ForceChannels, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_ForceChannels
void POpusCodec::OpusEncoder::set_ForceChannels(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_ForceChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ForceChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_UseInbandFEC
bool POpusCodec::OpusEncoder::get_UseInbandFEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_UseInbandFEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseInbandFEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_UseInbandFEC
void POpusCodec::OpusEncoder::set_UseInbandFEC(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_UseInbandFEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseInbandFEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_PacketLossPercentage
int POpusCodec::OpusEncoder::get_PacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_PacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_PacketLossPercentage
void POpusCodec::OpusEncoder::set_PacketLossPercentage(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_PacketLossPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PacketLossPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_UseUnconstrainedVBR
bool POpusCodec::OpusEncoder::get_UseUnconstrainedVBR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_UseUnconstrainedVBR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseUnconstrainedVBR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_UseUnconstrainedVBR
void POpusCodec::OpusEncoder::set_UseUnconstrainedVBR(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_UseUnconstrainedVBR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseUnconstrainedVBR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.get_DtxEnabled
bool POpusCodec::OpusEncoder::get_DtxEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::get_DtxEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtxEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder.set_DtxEnabled
void POpusCodec::OpusEncoder::set_DtxEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::set_DtxEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtxEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: POpusCodec.OpusEncoder.Encode
::System::ArraySegment_1<uint8_t> POpusCodec::OpusEncoder::Encode(::ArrayW<float> pcmSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method, pcmSamples);
}
// Autogenerated method: POpusCodec.OpusEncoder.Encode
::System::ArraySegment_1<uint8_t> POpusCodec::OpusEncoder::Encode(::ArrayW<int16_t> pcmSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method, pcmSamples);
}
// Autogenerated method: POpusCodec.OpusEncoder.Dispose
void POpusCodec::OpusEncoder::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::POpusCodec::OpusEncoder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: POpusCodec.OpusEncoder..cctor
void POpusCodec::OpusEncoder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusEncoder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "OpusEncoder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.OpusException
#include "POpusCodec/OpusException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.OpusStatusCode _statusCode
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::OpusStatusCode& POpusCodec::OpusException::dyn__statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusException::dyn__statusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statusCode"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::OpusStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: POpusCodec.OpusException.get_StatusCode
::POpusCodec::Enums::OpusStatusCode POpusCodec::OpusException::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::OpusException::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::OpusStatusCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Wrapper
#include "POpusCodec/Wrapper.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: POpusCodec.Enums.Channels
#include "POpusCodec/Enums/Channels.hpp"
// Including type: POpusCodec.Enums.OpusStatusCode
#include "POpusCodec/Enums/OpusStatusCode.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: POpusCodec.Enums.SamplingRate
#include "POpusCodec/Enums/SamplingRate.hpp"
// Including type: POpusCodec.Enums.OpusApplicationType
#include "POpusCodec/Enums/OpusApplicationType.hpp"
// Including type: POpusCodec.Enums.OpusCtlSetRequest
#include "POpusCodec/Enums/OpusCtlSetRequest.hpp"
// Including type: POpusCodec.Enums.OpusCtlGetRequest
#include "POpusCodec/Enums/OpusCtlGetRequest.hpp"
// Including type: Photon.Voice.FrameBuffer
#include "Photon/Voice/FrameBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String lib_name
::StringW POpusCodec::Wrapper::_get_lib_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_get_lib_name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("POpusCodec", "Wrapper", "lib_name"));
}
// Autogenerated static field setter
// Set static field: static private System.String lib_name
void POpusCodec::Wrapper::_set_lib_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_set_lib_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "Wrapper", "lib_name", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ctl_entry_point_set
::StringW POpusCodec::Wrapper::_get_ctl_entry_point_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_get_ctl_entry_point_set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("POpusCodec", "Wrapper", "ctl_entry_point_set"));
}
// Autogenerated static field setter
// Set static field: static private System.String ctl_entry_point_set
void POpusCodec::Wrapper::_set_ctl_entry_point_set(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_set_ctl_entry_point_set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "Wrapper", "ctl_entry_point_set", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ctl_entry_point_get
::StringW POpusCodec::Wrapper::_get_ctl_entry_point_get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_get_ctl_entry_point_get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("POpusCodec", "Wrapper", "ctl_entry_point_get"));
}
// Autogenerated static field setter
// Set static field: static private System.String ctl_entry_point_get
void POpusCodec::Wrapper::_set_ctl_entry_point_get(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::_set_ctl_entry_point_get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec", "Wrapper", "ctl_entry_point_get", value));
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_get_size
int POpusCodec::Wrapper::opus_encoder_get_size(::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_init
::POpusCodec::Enums::OpusStatusCode POpusCodec::Wrapper::opus_encoder_init(::System::IntPtr st, ::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels, ::POpusCodec::Enums::OpusApplicationType application) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(application)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::OpusStatusCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, Fs, channels, application);
}
// Autogenerated method: POpusCodec.Wrapper.opus_get_version_string
::System::IntPtr POpusCodec::Wrapper::opus_get_version_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_get_version_string");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_get_version_string", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode
int POpusCodec::Wrapper::opus_encode(::System::IntPtr st, ::ArrayW<int16_t> pcm, int frame_size, ::ArrayW<uint8_t> data, int max_data_bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(max_data_bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data, max_data_bytes);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode_float
int POpusCodec::Wrapper::opus_encode_float(::System::IntPtr st, ::ArrayW<float> pcm, int frame_size, ::ArrayW<uint8_t> data, int max_data_bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode_float");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode_float", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(max_data_bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data, max_data_bytes);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_ctl_set
int POpusCodec::Wrapper::opus_encoder_ctl_set(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_ctl_set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_ctl_set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_ctl_get
int POpusCodec::Wrapper::opus_encoder_ctl_get(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_ctl_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_ctl_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, byref(value));
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_ctl_set
int POpusCodec::Wrapper::opus_decoder_ctl_set(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_ctl_set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_ctl_set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_ctl_get
int POpusCodec::Wrapper::opus_decoder_ctl_get(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_ctl_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_ctl_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, byref(value));
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_get_size
int POpusCodec::Wrapper::opus_decoder_get_size(::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_init
::POpusCodec::Enums::OpusStatusCode POpusCodec::Wrapper::opus_decoder_init(::System::IntPtr st, ::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::OpusStatusCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, Fs, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode
int POpusCodec::Wrapper::opus_decode(::System::IntPtr st, ::System::IntPtr data, int len, ::ArrayW<int16_t> pcm, int frame_size, int decode_fec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(decode_fec)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, len, pcm, frame_size, decode_fec);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode_float
int POpusCodec::Wrapper::opus_decode_float(::System::IntPtr st, ::System::IntPtr data, int len, ::ArrayW<float> pcm, int frame_size, int decode_fec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode_float");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode_float", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(decode_fec)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, len, pcm, frame_size, decode_fec);
}
// Autogenerated method: POpusCodec.Wrapper.opus_packet_get_bandwidth
int POpusCodec::Wrapper::opus_packet_get_bandwidth(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_packet_get_bandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_packet_get_bandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_packet_get_nb_channels
int POpusCodec::Wrapper::opus_packet_get_nb_channels(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_packet_get_nb_channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_packet_get_nb_channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_strerror
::System::IntPtr POpusCodec::Wrapper::opus_strerror(::POpusCodec::Enums::OpusStatusCode error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_strerror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_strerror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_create
::System::IntPtr POpusCodec::Wrapper::opus_encoder_create(::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels, ::POpusCodec::Enums::OpusApplicationType application) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(application)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Fs, channels, application);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode
int POpusCodec::Wrapper::opus_encode(::System::IntPtr st, ::ArrayW<int16_t> pcm, int frame_size, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encode
int POpusCodec::Wrapper::opus_encode(::System::IntPtr st, ::ArrayW<float> pcm, int frame_size, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(frame_size), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, pcm, frame_size, data);
}
// Autogenerated method: POpusCodec.Wrapper.opus_encoder_destroy
void POpusCodec::Wrapper::opus_encoder_destroy(::System::IntPtr st) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_encoder_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_encoder_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st);
}
// Autogenerated method: POpusCodec.Wrapper.get_opus_encoder_ctl
int POpusCodec::Wrapper::get_opus_encoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::get_opus_encoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "get_opus_encoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request);
}
// Autogenerated method: POpusCodec.Wrapper.set_opus_encoder_ctl
void POpusCodec::Wrapper::set_opus_encoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::set_opus_encoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "set_opus_encoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.get_opus_decoder_ctl
int POpusCodec::Wrapper::get_opus_decoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlGetRequest request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::get_opus_decoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "get_opus_decoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request);
}
// Autogenerated method: POpusCodec.Wrapper.set_opus_decoder_ctl
void POpusCodec::Wrapper::set_opus_decoder_ctl(::System::IntPtr st, ::POpusCodec::Enums::OpusCtlSetRequest request, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::set_opus_decoder_ctl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "set_opus_decoder_ctl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, request, value);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_create
::System::IntPtr POpusCodec::Wrapper::opus_decoder_create(::POpusCodec::Enums::SamplingRate Fs, ::POpusCodec::Enums::Channels channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Fs), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Fs, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decoder_destroy
void POpusCodec::Wrapper::opus_decoder_destroy(::System::IntPtr st) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decoder_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decoder_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode
int POpusCodec::Wrapper::opus_decode(::System::IntPtr st, ::Photon::Voice::FrameBuffer data, ::ArrayW<int16_t> pcm, int decode_fec, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(decode_fec), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, pcm, decode_fec, channels);
}
// Autogenerated method: POpusCodec.Wrapper.opus_decode
int POpusCodec::Wrapper::opus_decode(::System::IntPtr st, ::Photon::Voice::FrameBuffer data, ::ArrayW<float> pcm, int decode_fec, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::opus_decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "opus_decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(st), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pcm), ::il2cpp_utils::ExtractType(decode_fec), ::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, st, data, pcm, decode_fec, channels);
}
// Autogenerated method: POpusCodec.Wrapper.HandleStatusCode
void POpusCodec::Wrapper::HandleStatusCode(::POpusCodec::Enums::OpusStatusCode statusCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Wrapper::HandleStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("POpusCodec", "Wrapper", "HandleStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, statusCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Bandwidth
#include "POpusCodec/Enums/Bandwidth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Narrowband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Narrowband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Narrowband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Narrowband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Narrowband
void POpusCodec::Enums::Bandwidth::_set_Narrowband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Narrowband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Narrowband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Mediumband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Mediumband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Mediumband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Mediumband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Mediumband
void POpusCodec::Enums::Bandwidth::_set_Mediumband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Mediumband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Mediumband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Wideband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Wideband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Wideband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Wideband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Wideband
void POpusCodec::Enums::Bandwidth::_set_Wideband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Wideband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Wideband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth SuperWideband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_SuperWideband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_SuperWideband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "SuperWideband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth SuperWideband
void POpusCodec::Enums::Bandwidth::_set_SuperWideband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_SuperWideband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "SuperWideband", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Bandwidth Fullband
::POpusCodec::Enums::Bandwidth POpusCodec::Enums::Bandwidth::_get_Fullband() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_get_Fullband");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Bandwidth>("POpusCodec.Enums", "Bandwidth", "Fullband"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Bandwidth Fullband
void POpusCodec::Enums::Bandwidth::_set_Fullband(::POpusCodec::Enums::Bandwidth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::_set_Fullband");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Bandwidth", "Fullband", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Bandwidth::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Bandwidth::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Channels
#include "POpusCodec/Enums/Channels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Channels Mono
::POpusCodec::Enums::Channels POpusCodec::Enums::Channels::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Channels>("POpusCodec.Enums", "Channels", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Channels Mono
void POpusCodec::Enums::Channels::_set_Mono(::POpusCodec::Enums::Channels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Channels", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Channels Stereo
::POpusCodec::Enums::Channels POpusCodec::Enums::Channels::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Channels>("POpusCodec.Enums", "Channels", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Channels Stereo
void POpusCodec::Enums::Channels::_set_Stereo(::POpusCodec::Enums::Channels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Channels", "Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Channels::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Channels::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Complexity
#include "POpusCodec/Enums/Complexity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity0
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity0"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity0
void POpusCodec::Enums::Complexity::_set_Complexity0(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity0", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity1
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity1"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity1
void POpusCodec::Enums::Complexity::_set_Complexity1(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity1", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity2
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity2"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity2
void POpusCodec::Enums::Complexity::_set_Complexity2(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity2", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity3
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity3"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity3
void POpusCodec::Enums::Complexity::_set_Complexity3(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity3", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity4
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity4"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity4
void POpusCodec::Enums::Complexity::_set_Complexity4(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity4", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity5
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity5"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity5
void POpusCodec::Enums::Complexity::_set_Complexity5(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity5", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity6
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity6"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity6
void POpusCodec::Enums::Complexity::_set_Complexity6(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity6", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity7
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity7"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity7
void POpusCodec::Enums::Complexity::_set_Complexity7(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity7", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity8
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity8"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity8
void POpusCodec::Enums::Complexity::_set_Complexity8(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity8", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity9
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity9"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity9
void POpusCodec::Enums::Complexity::_set_Complexity9(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity9", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Complexity Complexity10
::POpusCodec::Enums::Complexity POpusCodec::Enums::Complexity::_get_Complexity10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_get_Complexity10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Complexity>("POpusCodec.Enums", "Complexity", "Complexity10"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Complexity Complexity10
void POpusCodec::Enums::Complexity::_set_Complexity10(::POpusCodec::Enums::Complexity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::_set_Complexity10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Complexity", "Complexity10", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Complexity::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Complexity::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.Delay
#include "POpusCodec/Enums/Delay.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay2dot5ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay2dot5ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay2dot5ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay2dot5ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay2dot5ms
void POpusCodec::Enums::Delay::_set_Delay2dot5ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay2dot5ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay2dot5ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay5ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay5ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay5ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay5ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay5ms
void POpusCodec::Enums::Delay::_set_Delay5ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay5ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay5ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay10ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay10ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay10ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay10ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay10ms
void POpusCodec::Enums::Delay::_set_Delay10ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay10ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay10ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay20ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay20ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay20ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay20ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay20ms
void POpusCodec::Enums::Delay::_set_Delay20ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay20ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay20ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay40ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay40ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay40ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay40ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay40ms
void POpusCodec::Enums::Delay::_set_Delay40ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay40ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay40ms", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.Delay Delay60ms
::POpusCodec::Enums::Delay POpusCodec::Enums::Delay::_get_Delay60ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_get_Delay60ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::Delay>("POpusCodec.Enums", "Delay", "Delay60ms"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.Delay Delay60ms
void POpusCodec::Enums::Delay::_set_Delay60ms(::POpusCodec::Enums::Delay value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::_set_Delay60ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "Delay", "Delay60ms", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::Delay::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::Delay::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.ForceChannels
#include "POpusCodec/Enums/ForceChannels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.ForceChannels NoForce
::POpusCodec::Enums::ForceChannels POpusCodec::Enums::ForceChannels::_get_NoForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_get_NoForce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::ForceChannels>("POpusCodec.Enums", "ForceChannels", "NoForce"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.ForceChannels NoForce
void POpusCodec::Enums::ForceChannels::_set_NoForce(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_set_NoForce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "ForceChannels", "NoForce", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.ForceChannels Mono
::POpusCodec::Enums::ForceChannels POpusCodec::Enums::ForceChannels::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::ForceChannels>("POpusCodec.Enums", "ForceChannels", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.ForceChannels Mono
void POpusCodec::Enums::ForceChannels::_set_Mono(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "ForceChannels", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.ForceChannels Stereo
::POpusCodec::Enums::ForceChannels POpusCodec::Enums::ForceChannels::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::ForceChannels>("POpusCodec.Enums", "ForceChannels", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.ForceChannels Stereo
void POpusCodec::Enums::ForceChannels::_set_Stereo(::POpusCodec::Enums::ForceChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "ForceChannels", "Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::ForceChannels::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::ForceChannels::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusApplicationType
#include "POpusCodec/Enums/OpusApplicationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusApplicationType Voip
::POpusCodec::Enums::OpusApplicationType POpusCodec::Enums::OpusApplicationType::_get_Voip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_get_Voip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusApplicationType>("POpusCodec.Enums", "OpusApplicationType", "Voip"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusApplicationType Voip
void POpusCodec::Enums::OpusApplicationType::_set_Voip(::POpusCodec::Enums::OpusApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_set_Voip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusApplicationType", "Voip", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusApplicationType Audio
::POpusCodec::Enums::OpusApplicationType POpusCodec::Enums::OpusApplicationType::_get_Audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_get_Audio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusApplicationType>("POpusCodec.Enums", "OpusApplicationType", "Audio"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusApplicationType Audio
void POpusCodec::Enums::OpusApplicationType::_set_Audio(::POpusCodec::Enums::OpusApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_set_Audio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusApplicationType", "Audio", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusApplicationType RestrictedLowDelay
::POpusCodec::Enums::OpusApplicationType POpusCodec::Enums::OpusApplicationType::_get_RestrictedLowDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_get_RestrictedLowDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusApplicationType>("POpusCodec.Enums", "OpusApplicationType", "RestrictedLowDelay"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusApplicationType RestrictedLowDelay
void POpusCodec::Enums::OpusApplicationType::_set_RestrictedLowDelay(::POpusCodec::Enums::OpusApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::_set_RestrictedLowDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusApplicationType", "RestrictedLowDelay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusApplicationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusApplicationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusCtlGetRequest
#include "POpusCodec/Enums/OpusCtlGetRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Application
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Application"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Application
void POpusCodec::Enums::OpusCtlGetRequest::_set_Application(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Bitrate
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Bitrate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Bitrate"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Bitrate
void POpusCodec::Enums::OpusCtlGetRequest::_set_Bitrate(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Bitrate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Bitrate", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest MaxBandwidth
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_MaxBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_MaxBandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "MaxBandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest MaxBandwidth
void POpusCodec::Enums::OpusCtlGetRequest::_set_MaxBandwidth(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_MaxBandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "MaxBandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest VBR
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_VBR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_VBR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "VBR"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest VBR
void POpusCodec::Enums::OpusCtlGetRequest::_set_VBR(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_VBR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "VBR", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Bandwidth
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Bandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Bandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Bandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Bandwidth
void POpusCodec::Enums::OpusCtlGetRequest::_set_Bandwidth(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Bandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Bandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Complexity
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Complexity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Complexity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Complexity"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Complexity
void POpusCodec::Enums::OpusCtlGetRequest::_set_Complexity(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Complexity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Complexity", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest InbandFec
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_InbandFec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_InbandFec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "InbandFec"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest InbandFec
void POpusCodec::Enums::OpusCtlGetRequest::_set_InbandFec(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_InbandFec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "InbandFec", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest PacketLossPercentage
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_PacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_PacketLossPercentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "PacketLossPercentage"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest PacketLossPercentage
void POpusCodec::Enums::OpusCtlGetRequest::_set_PacketLossPercentage(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_PacketLossPercentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "PacketLossPercentage", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Dtx
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Dtx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Dtx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Dtx"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Dtx
void POpusCodec::Enums::OpusCtlGetRequest::_set_Dtx(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Dtx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Dtx", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest VBRConstraint
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_VBRConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_VBRConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "VBRConstraint"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest VBRConstraint
void POpusCodec::Enums::OpusCtlGetRequest::_set_VBRConstraint(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_VBRConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "VBRConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest ForceChannels
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_ForceChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_ForceChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "ForceChannels"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest ForceChannels
void POpusCodec::Enums::OpusCtlGetRequest::_set_ForceChannels(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_ForceChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "ForceChannels", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Signal
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Signal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Signal"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Signal
void POpusCodec::Enums::OpusCtlGetRequest::_set_Signal(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Signal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Signal", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest LookAhead
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_LookAhead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_LookAhead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "LookAhead"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest LookAhead
void POpusCodec::Enums::OpusCtlGetRequest::_set_LookAhead(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_LookAhead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "LookAhead", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest SampleRate
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_SampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "SampleRate"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest SampleRate
void POpusCodec::Enums::OpusCtlGetRequest::_set_SampleRate(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_SampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "SampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest FinalRange
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_FinalRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_FinalRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "FinalRange"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest FinalRange
void POpusCodec::Enums::OpusCtlGetRequest::_set_FinalRange(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_FinalRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "FinalRange", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Pitch
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Pitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Pitch"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Pitch
void POpusCodec::Enums::OpusCtlGetRequest::_set_Pitch(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Pitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Pitch", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest Gain
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_Gain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "Gain"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest Gain
void POpusCodec::Enums::OpusCtlGetRequest::_set_Gain(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_Gain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "Gain", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest LsbDepth
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_LsbDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_LsbDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "LsbDepth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest LsbDepth
void POpusCodec::Enums::OpusCtlGetRequest::_set_LsbDepth(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_LsbDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "LsbDepth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlGetRequest LastPacketDurationRequest
::POpusCodec::Enums::OpusCtlGetRequest POpusCodec::Enums::OpusCtlGetRequest::_get_LastPacketDurationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_get_LastPacketDurationRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlGetRequest>("POpusCodec.Enums", "OpusCtlGetRequest", "LastPacketDurationRequest"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlGetRequest LastPacketDurationRequest
void POpusCodec::Enums::OpusCtlGetRequest::_set_LastPacketDurationRequest(::POpusCodec::Enums::OpusCtlGetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::_set_LastPacketDurationRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlGetRequest", "LastPacketDurationRequest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusCtlGetRequest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlGetRequest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusCtlSetRequest
#include "POpusCodec/Enums/OpusCtlSetRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Application
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Application"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Application
void POpusCodec::Enums::OpusCtlSetRequest::_set_Application(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Bitrate
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Bitrate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Bitrate"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Bitrate
void POpusCodec::Enums::OpusCtlSetRequest::_set_Bitrate(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Bitrate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Bitrate", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest MaxBandwidth
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_MaxBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_MaxBandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "MaxBandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest MaxBandwidth
void POpusCodec::Enums::OpusCtlSetRequest::_set_MaxBandwidth(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_MaxBandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "MaxBandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest VBR
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_VBR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_VBR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "VBR"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest VBR
void POpusCodec::Enums::OpusCtlSetRequest::_set_VBR(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_VBR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "VBR", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Bandwidth
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Bandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Bandwidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Bandwidth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Bandwidth
void POpusCodec::Enums::OpusCtlSetRequest::_set_Bandwidth(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Bandwidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Bandwidth", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Complexity
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Complexity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Complexity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Complexity"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Complexity
void POpusCodec::Enums::OpusCtlSetRequest::_set_Complexity(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Complexity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Complexity", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest InbandFec
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_InbandFec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_InbandFec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "InbandFec"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest InbandFec
void POpusCodec::Enums::OpusCtlSetRequest::_set_InbandFec(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_InbandFec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "InbandFec", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest PacketLossPercentage
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_PacketLossPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_PacketLossPercentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "PacketLossPercentage"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest PacketLossPercentage
void POpusCodec::Enums::OpusCtlSetRequest::_set_PacketLossPercentage(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_PacketLossPercentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "PacketLossPercentage", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Dtx
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Dtx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Dtx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Dtx"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Dtx
void POpusCodec::Enums::OpusCtlSetRequest::_set_Dtx(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Dtx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Dtx", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest VBRConstraint
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_VBRConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_VBRConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "VBRConstraint"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest VBRConstraint
void POpusCodec::Enums::OpusCtlSetRequest::_set_VBRConstraint(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_VBRConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "VBRConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest ForceChannels
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_ForceChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_ForceChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "ForceChannels"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest ForceChannels
void POpusCodec::Enums::OpusCtlSetRequest::_set_ForceChannels(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_ForceChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "ForceChannels", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Signal
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Signal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Signal"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Signal
void POpusCodec::Enums::OpusCtlSetRequest::_set_Signal(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Signal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Signal", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest Gain
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_Gain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "Gain"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest Gain
void POpusCodec::Enums::OpusCtlSetRequest::_set_Gain(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_Gain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "Gain", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusCtlSetRequest LsbDepth
::POpusCodec::Enums::OpusCtlSetRequest POpusCodec::Enums::OpusCtlSetRequest::_get_LsbDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_get_LsbDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusCtlSetRequest>("POpusCodec.Enums", "OpusCtlSetRequest", "LsbDepth"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusCtlSetRequest LsbDepth
void POpusCodec::Enums::OpusCtlSetRequest::_set_LsbDepth(::POpusCodec::Enums::OpusCtlSetRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::_set_LsbDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusCtlSetRequest", "LsbDepth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusCtlSetRequest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusCtlSetRequest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.OpusStatusCode
#include "POpusCodec/Enums/OpusStatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode OK
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "OK"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode OK
void POpusCodec::Enums::OpusStatusCode::_set_OK(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode BadArguments
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_BadArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_BadArguments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "BadArguments"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode BadArguments
void POpusCodec::Enums::OpusStatusCode::_set_BadArguments(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_BadArguments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "BadArguments", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode BufferTooSmall
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode BufferTooSmall
void POpusCodec::Enums::OpusStatusCode::_set_BufferTooSmall(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode InternalError
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_InternalError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_InternalError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "InternalError"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode InternalError
void POpusCodec::Enums::OpusStatusCode::_set_InternalError(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_InternalError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "InternalError", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode InvalidPacket
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_InvalidPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_InvalidPacket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "InvalidPacket"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode InvalidPacket
void POpusCodec::Enums::OpusStatusCode::_set_InvalidPacket(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_InvalidPacket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "InvalidPacket", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode Unimplemented
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_Unimplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_Unimplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "Unimplemented"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode Unimplemented
void POpusCodec::Enums::OpusStatusCode::_set_Unimplemented(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_Unimplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "Unimplemented", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode InvalidState
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_InvalidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_InvalidState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "InvalidState"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode InvalidState
void POpusCodec::Enums::OpusStatusCode::_set_InvalidState(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_InvalidState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "InvalidState", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.OpusStatusCode AllocFail
::POpusCodec::Enums::OpusStatusCode POpusCodec::Enums::OpusStatusCode::_get_AllocFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_get_AllocFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::OpusStatusCode>("POpusCodec.Enums", "OpusStatusCode", "AllocFail"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.OpusStatusCode AllocFail
void POpusCodec::Enums::OpusStatusCode::_set_AllocFail(::POpusCodec::Enums::OpusStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::_set_AllocFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "OpusStatusCode", "AllocFail", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::OpusStatusCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::OpusStatusCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.SamplingRate
#include "POpusCodec/Enums/SamplingRate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling08000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling08000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling08000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling08000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling08000
void POpusCodec::Enums::SamplingRate::_set_Sampling08000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling08000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling08000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling12000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling12000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling12000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling12000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling12000
void POpusCodec::Enums::SamplingRate::_set_Sampling12000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling12000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling12000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling16000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling16000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling16000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling16000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling16000
void POpusCodec::Enums::SamplingRate::_set_Sampling16000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling16000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling16000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling24000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling24000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling24000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling24000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling24000
void POpusCodec::Enums::SamplingRate::_set_Sampling24000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling24000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling24000", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SamplingRate Sampling48000
::POpusCodec::Enums::SamplingRate POpusCodec::Enums::SamplingRate::_get_Sampling48000() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_get_Sampling48000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SamplingRate>("POpusCodec.Enums", "SamplingRate", "Sampling48000"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SamplingRate Sampling48000
void POpusCodec::Enums::SamplingRate::_set_Sampling48000(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::_set_Sampling48000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SamplingRate", "Sampling48000", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::SamplingRate::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SamplingRate::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: POpusCodec.Enums.SignalHint
#include "POpusCodec/Enums/SignalHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SignalHint Auto
::POpusCodec::Enums::SignalHint POpusCodec::Enums::SignalHint::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SignalHint>("POpusCodec.Enums", "SignalHint", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SignalHint Auto
void POpusCodec::Enums::SignalHint::_set_Auto(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SignalHint", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SignalHint Voice
::POpusCodec::Enums::SignalHint POpusCodec::Enums::SignalHint::_get_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_get_Voice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SignalHint>("POpusCodec.Enums", "SignalHint", "Voice"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SignalHint Voice
void POpusCodec::Enums::SignalHint::_set_Voice(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_set_Voice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SignalHint", "Voice", value));
}
// Autogenerated static field getter
// Get static field: static public POpusCodec.Enums.SignalHint Music
::POpusCodec::Enums::SignalHint POpusCodec::Enums::SignalHint::_get_Music() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_get_Music");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::POpusCodec::Enums::SignalHint>("POpusCodec.Enums", "SignalHint", "Music"));
}
// Autogenerated static field setter
// Set static field: static public POpusCodec.Enums.SignalHint Music
void POpusCodec::Enums::SignalHint::_set_Music(::POpusCodec::Enums::SignalHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::_set_Music");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("POpusCodec.Enums", "SignalHint", "Music", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& POpusCodec::Enums::SignalHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::POpusCodec::Enums::SignalHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil
#include "Photon/Voice/AudioUtil.hpp"
// Including type: Photon.Voice.AudioUtil/ToneAudioReader`1
#include "Photon/Voice/AudioUtil_ToneAudioReader_1.hpp"
// Including type: Photon.Voice.AudioUtil/ToneAudioPusher`1
#include "Photon/Voice/AudioUtil_ToneAudioPusher_1.hpp"
// Including type: Photon.Voice.AudioUtil/TempoUp`1
#include "Photon/Voice/AudioUtil_TempoUp_1.hpp"
// Including type: Photon.Voice.AudioUtil/Resampler`1
#include "Photon/Voice/AudioUtil_Resampler_1.hpp"
// Including type: Photon.Voice.AudioUtil/ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeterDummy
#include "Photon/Voice/AudioUtil_LevelMeterDummy.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeter`1
#include "Photon/Voice/AudioUtil_LevelMeter_1.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeterFloat
#include "Photon/Voice/AudioUtil_LevelMeterFloat.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeterShort
#include "Photon/Voice/AudioUtil_LevelMeterShort.hpp"
// Including type: Photon.Voice.AudioUtil/IVoiceDetector
#include "Photon/Voice/AudioUtil_IVoiceDetector.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorCalibration`1
#include "Photon/Voice/AudioUtil_VoiceDetectorCalibration_1.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorDummy
#include "Photon/Voice/AudioUtil_VoiceDetectorDummy.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetector`1
#include "Photon/Voice/AudioUtil_VoiceDetector_1.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorFloat
#include "Photon/Voice/AudioUtil_VoiceDetectorFloat.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorShort
#include "Photon/Voice/AudioUtil_VoiceDetectorShort.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceLevelDetectCalibrate`1
#include "Photon/Voice/AudioUtil_VoiceLevelDetectCalibrate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil.ResampleAndConvert
void Photon::Voice::AudioUtil::ResampleAndConvert(::ArrayW<int16_t> src, ::ArrayW<float> dst, int dstCount, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ResampleAndConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "ResampleAndConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount, channels);
}
// Autogenerated method: Photon.Voice.AudioUtil.ResampleAndConvert
void Photon::Voice::AudioUtil::ResampleAndConvert(::ArrayW<float> src, ::ArrayW<int16_t> dst, int dstCount, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ResampleAndConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "ResampleAndConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount, channels);
}
// Autogenerated method: Photon.Voice.AudioUtil.Convert
void Photon::Voice::AudioUtil::Convert(::ArrayW<float> src, ::ArrayW<int16_t> dst, int dstCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount);
}
// Autogenerated method: Photon.Voice.AudioUtil.Convert
void Photon::Voice::AudioUtil::Convert(::ArrayW<int16_t> src, ::ArrayW<float> dst, int dstCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "AudioUtil", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(dstCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dst, dstCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.get_CurrentAvgAmp
float Photon::Voice::AudioUtil::ILevelMeter::get_CurrentAvgAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::get_CurrentAvgAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.get_CurrentPeakAmp
float Photon::Voice::AudioUtil::ILevelMeter::get_CurrentPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::get_CurrentPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.get_AccumAvgPeakAmp
float Photon::Voice::AudioUtil::ILevelMeter::get_AccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::get_AccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/ILevelMeter.ResetAccumAvgPeakAmp
void Photon::Voice::AudioUtil::ILevelMeter::ResetAccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::ILevelMeter::ResetAccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::ILevelMeter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/LevelMeterDummy
#include "Photon/Voice/AudioUtil_LevelMeterDummy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.get_CurrentAvgAmp
float Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentAvgAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentAvgAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.get_CurrentPeakAmp
float Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.get_AccumAvgPeakAmp
float Photon::Voice::AudioUtil::LevelMeterDummy::get_AccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::get_AccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterDummy.ResetAccumAvgPeakAmp
void Photon::Voice::AudioUtil::LevelMeterDummy::ResetAccumAvgPeakAmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::ResetAccumAvgPeakAmp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterDummy*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/LevelMeterFloat
#include "Photon/Voice/AudioUtil_LevelMeterFloat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterFloat.Process
::ArrayW<float> Photon::Voice::AudioUtil::LevelMeterFloat::Process(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterFloat::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterFloat*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/LevelMeterShort
#include "Photon/Voice/AudioUtil_LevelMeterShort.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/LevelMeterShort.Process
::ArrayW<int16_t> Photon::Voice::AudioUtil::LevelMeterShort::Process(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterShort::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::LevelMeterShort*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/IVoiceDetector
#include "Photon/Voice/AudioUtil_IVoiceDetector.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.get_On
bool Photon::Voice::AudioUtil::IVoiceDetector::get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::get_On");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.set_On
void Photon::Voice::AudioUtil::IVoiceDetector::set_On(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::set_On");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.get_Threshold
float Photon::Voice::AudioUtil::IVoiceDetector::get_Threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::get_Threshold");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.set_Threshold
void Photon::Voice::AudioUtil::IVoiceDetector::set_Threshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::set_Threshold");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.get_Detected
bool Photon::Voice::AudioUtil::IVoiceDetector::get_Detected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::get_Detected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.get_DetectedTime
::System::DateTime Photon::Voice::AudioUtil::IVoiceDetector::get_DetectedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::get_DetectedTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.add_OnDetected
void Photon::Voice::AudioUtil::IVoiceDetector::add_OnDetected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::add_OnDetected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.remove_OnDetected
void Photon::Voice::AudioUtil::IVoiceDetector::remove_OnDetected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::remove_OnDetected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.get_ActivityDelayMs
int Photon::Voice::AudioUtil::IVoiceDetector::get_ActivityDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::get_ActivityDelayMs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/IVoiceDetector.set_ActivityDelayMs
void Photon::Voice::AudioUtil::IVoiceDetector::set_ActivityDelayMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::IVoiceDetector::set_ActivityDelayMs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::IVoiceDetector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/VoiceDetectorDummy
#include "Photon/Voice/AudioUtil_VoiceDetectorDummy.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.DateTime <DetectedTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& Photon::Voice::AudioUtil::VoiceDetectorDummy::dyn_$DetectedTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::dyn_$DetectedTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DetectedTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.get_On
bool Photon::Voice::AudioUtil::VoiceDetectorDummy::get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::get_On");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.set_On
void Photon::Voice::AudioUtil::VoiceDetectorDummy::set_On(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::set_On");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.get_Threshold
float Photon::Voice::AudioUtil::VoiceDetectorDummy::get_Threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::get_Threshold");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.set_Threshold
void Photon::Voice::AudioUtil::VoiceDetectorDummy::set_Threshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::set_Threshold");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.get_Detected
bool Photon::Voice::AudioUtil::VoiceDetectorDummy::get_Detected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::get_Detected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.get_ActivityDelayMs
int Photon::Voice::AudioUtil::VoiceDetectorDummy::get_ActivityDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::get_ActivityDelayMs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.set_ActivityDelayMs
void Photon::Voice::AudioUtil::VoiceDetectorDummy::set_ActivityDelayMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::set_ActivityDelayMs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.get_DetectedTime
::System::DateTime Photon::Voice::AudioUtil::VoiceDetectorDummy::get_DetectedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::get_DetectedTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.set_DetectedTime
void Photon::Voice::AudioUtil::VoiceDetectorDummy::set_DetectedTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::set_DetectedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DetectedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.add_OnDetected
void Photon::Voice::AudioUtil::VoiceDetectorDummy::add_OnDetected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::add_OnDetected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorDummy.remove_OnDetected
void Photon::Voice::AudioUtil::VoiceDetectorDummy::remove_OnDetected(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorDummy::remove_OnDetected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorDummy*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/VoiceDetectorFloat
#include "Photon/Voice/AudioUtil_VoiceDetectorFloat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorFloat.Process
::ArrayW<float> Photon::Voice::AudioUtil::VoiceDetectorFloat::Process(::ArrayW<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorFloat::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorFloat*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioUtil/VoiceDetectorShort
#include "Photon/Voice/AudioUtil_VoiceDetectorShort.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioUtil/VoiceDetectorShort.Process
::ArrayW<int16_t> Photon::Voice::AudioUtil::VoiceDetectorShort::Process(::ArrayW<int16_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::VoiceDetectorShort::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioUtil::VoiceDetectorShort*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioOutDelayControl
#include "Photon/Voice/AudioOutDelayControl.hpp"
// Including type: Photon.Voice.AudioOutDelayControl/PlayDelayConfig
#include "Photon/Voice/AudioOutDelayControl_PlayDelayConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioOutDelayControl/PlayDelayConfig
#include "Photon/Voice/AudioOutDelayControl_PlayDelayConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Low>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$Low$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$Low$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Low>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <High>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$High$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$High$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<High>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Max>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$Max$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$Max$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Max>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SpeedUpPerc>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$SpeedUpPerc$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::dyn_$SpeedUpPerc$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SpeedUpPerc>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.get_Low
int Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_Low");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Low", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.set_Low
void Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_Low(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_Low");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Low", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.get_High
int Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_High");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_High", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.set_High
void Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_High(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_High");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_High", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.get_Max
int Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.set_Max
void Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_Max(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.get_SpeedUpPerc
int Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_SpeedUpPerc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::get_SpeedUpPerc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpeedUpPerc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.set_SpeedUpPerc
void Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_SpeedUpPerc(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::set_SpeedUpPerc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SpeedUpPerc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioOutDelayControl/PlayDelayConfig.Clone
::Photon::Voice::AudioOutDelayControl::PlayDelayConfig* Photon::Voice::AudioOutDelayControl::PlayDelayConfig::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioOutDelayControl::PlayDelayConfig::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::AudioOutDelayControl::PlayDelayConfig*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.DeviceInfo
#include "Photon/Voice/DeviceInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Voice.DeviceInfo Default
::Photon::Voice::DeviceInfo Photon::Voice::DeviceInfo::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::DeviceInfo>("Photon.Voice", "DeviceInfo", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Voice.DeviceInfo Default
void Photon::Voice::DeviceInfo::_set_Default(::Photon::Voice::DeviceInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "DeviceInfo", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsDefault>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::DeviceInfo::dyn_$IsDefault$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::dyn_$IsDefault$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsDefault>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <IDInt>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::DeviceInfo::dyn_$IDInt$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::dyn_$IDInt$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IDInt>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <IDString>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::DeviceInfo::dyn_$IDString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::dyn_$IDString$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IDString>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::DeviceInfo::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::dyn_$Name$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useStringID
[[deprecated("Use field access instead!")]] bool& Photon::Voice::DeviceInfo::dyn_useStringID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::dyn_useStringID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useStringID"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.DeviceInfo..ctor
Photon::Voice::DeviceInfo::DeviceInfo(bool isDefault, int idInt, ::StringW idString, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDefault), ::il2cpp_utils::ExtractType(idInt), ::il2cpp_utils::ExtractType(idString), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isDefault, idInt, idString, name);
}
// Autogenerated method: Photon.Voice.DeviceInfo..ctor
Photon::Voice::DeviceInfo::DeviceInfo(int id, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, name);
}
// Autogenerated method: Photon.Voice.DeviceInfo..ctor
Photon::Voice::DeviceInfo::DeviceInfo(::StringW id, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, name);
}
// Autogenerated method: Photon.Voice.DeviceInfo..ctor
Photon::Voice::DeviceInfo::DeviceInfo(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Photon.Voice.DeviceInfo.get_IsDefault
bool Photon::Voice::DeviceInfo::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::get_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceInfo.set_IsDefault
void Photon::Voice::DeviceInfo::set_IsDefault(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::set_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.DeviceInfo.get_IDInt
int Photon::Voice::DeviceInfo::get_IDInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::get_IDInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IDInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceInfo.set_IDInt
void Photon::Voice::DeviceInfo::set_IDInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::set_IDInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IDInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.DeviceInfo.get_IDString
::StringW Photon::Voice::DeviceInfo::get_IDString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::get_IDString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IDString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceInfo.set_IDString
void Photon::Voice::DeviceInfo::set_IDString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::set_IDString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IDString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.DeviceInfo.get_Name
::StringW Photon::Voice::DeviceInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceInfo.set_Name
void Photon::Voice::DeviceInfo::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.DeviceInfo..cctor
void Photon::Voice::DeviceInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "DeviceInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceInfo.Equals
bool Photon::Voice::DeviceInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Voice.DeviceInfo.GetHashCode
int Photon::Voice::DeviceInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceInfo.ToString
::StringW Photon::Voice::DeviceInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceInfo.op_Equality
bool Photon::Voice::operator ==(const ::Photon::Voice::DeviceInfo& d1, const ::Photon::Voice::DeviceInfo& d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "DeviceInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(d2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, d2);
}
// Autogenerated method: Photon.Voice.DeviceInfo.op_Inequality
bool Photon::Voice::operator !=(const ::Photon::Voice::DeviceInfo& d1, const ::Photon::Voice::DeviceInfo& d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "DeviceInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(d2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, d2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IDeviceEnumerator
#include "Photon/Voice/IDeviceEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IDeviceEnumerator.get_IsSupported
bool Photon::Voice::IDeviceEnumerator::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDeviceEnumerator::get_IsSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDeviceEnumerator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IDeviceEnumerator.Refresh
void Photon::Voice::IDeviceEnumerator::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDeviceEnumerator::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDeviceEnumerator*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IDeviceEnumerator.get_Error
::StringW Photon::Voice::IDeviceEnumerator::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDeviceEnumerator::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDeviceEnumerator*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.DeviceEnumeratorBase
#include "Photon/Voice/DeviceEnumeratorBase.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<Photon.Voice.DeviceInfo> devices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Voice::DeviceInfo>*& Photon::Voice::DeviceEnumeratorBase::dyn_devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::dyn_devices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Voice::DeviceInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Voice.ILogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::ILogger*& Photon::Voice::DeviceEnumeratorBase::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::ILogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::DeviceEnumeratorBase::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorBase.get_IsSupported
bool Photon::Voice::DeviceEnumeratorBase::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::get_IsSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorBase.get_Error
::StringW Photon::Voice::DeviceEnumeratorBase::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorBase.set_Error
void Photon::Voice::DeviceEnumeratorBase::set_Error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::set_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorBase.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Photon::Voice::DeviceInfo>* Photon::Voice::DeviceEnumeratorBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Photon::Voice::DeviceInfo>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorBase.Refresh
void Photon::Voice::DeviceEnumeratorBase::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorBase.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Photon::Voice::DeviceEnumeratorBase::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorBase.Dispose
void Photon::Voice::DeviceEnumeratorBase::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorBase::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.DeviceEnumeratorNotSupported
#include "Photon/Voice/DeviceEnumeratorNotSupported.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String message
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::DeviceEnumeratorNotSupported::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorNotSupported::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorNotSupported.get_IsSupported
bool Photon::Voice::DeviceEnumeratorNotSupported::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorNotSupported::get_IsSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorNotSupported.Refresh
void Photon::Voice::DeviceEnumeratorNotSupported::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorNotSupported::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorNotSupported.get_Error
::StringW Photon::Voice::DeviceEnumeratorNotSupported::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorNotSupported::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.DeviceEnumeratorNotSupported.Dispose
void Photon::Voice::DeviceEnumeratorNotSupported::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::DeviceEnumeratorNotSupported::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioInEnumeratorNotSupported
#include "Photon/Voice/AudioInEnumeratorNotSupported.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VideoInEnumeratorNotSupported
#include "Photon/Voice/VideoInEnumeratorNotSupported.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IAudioInChangeNotifier
#include "Photon/Voice/IAudioInChangeNotifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IAudioInChangeNotifier.get_IsSupported
bool Photon::Voice::IAudioInChangeNotifier::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IAudioInChangeNotifier::get_IsSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IAudioInChangeNotifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IAudioInChangeNotifier.get_Error
::StringW Photon::Voice::IAudioInChangeNotifier::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IAudioInChangeNotifier::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IAudioInChangeNotifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioInChangeNotifierNotSupported
#include "Photon/Voice/AudioInChangeNotifierNotSupported.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.AudioInChangeNotifierNotSupported.get_IsSupported
bool Photon::Voice::AudioInChangeNotifierNotSupported::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioInChangeNotifierNotSupported::get_IsSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioInChangeNotifierNotSupported*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioInChangeNotifierNotSupported.get_Error
::StringW Photon::Voice::AudioInChangeNotifierNotSupported::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioInChangeNotifierNotSupported::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioInChangeNotifierNotSupported*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioInChangeNotifierNotSupported.Dispose
void Photon::Voice::AudioInChangeNotifierNotSupported::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioInChangeNotifierNotSupported::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioInChangeNotifierNotSupported*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.FrameBuffer
#include "Photon/Voice/FrameBuffer.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 statDisposerCreated
int Photon::Voice::FrameBuffer::_get_statDisposerCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_get_statDisposerCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "FrameBuffer", "statDisposerCreated"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 statDisposerCreated
void Photon::Voice::FrameBuffer::_set_statDisposerCreated(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_set_statDisposerCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameBuffer", "statDisposerCreated", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 statDisposerDisposed
int Photon::Voice::FrameBuffer::_get_statDisposerDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_get_statDisposerDisposed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "FrameBuffer", "statDisposerDisposed"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 statDisposerDisposed
void Photon::Voice::FrameBuffer::_set_statDisposerDisposed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_set_statDisposerDisposed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameBuffer", "statDisposerDisposed", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 statPinned
int Photon::Voice::FrameBuffer::_get_statPinned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_get_statPinned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "FrameBuffer", "statPinned"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 statPinned
void Photon::Voice::FrameBuffer::_set_statPinned(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_set_statPinned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameBuffer", "statPinned", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 statUnpinned
int Photon::Voice::FrameBuffer::_get_statUnpinned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_get_statUnpinned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "FrameBuffer", "statUnpinned"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 statUnpinned
void Photon::Voice::FrameBuffer::_set_statUnpinned(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::_set_statUnpinned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameBuffer", "statUnpinned", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] array
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Photon::Voice::FrameBuffer::dyn_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 offset
[[deprecated("Use field access instead!")]] int& Photon::Voice::FrameBuffer::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 count
[[deprecated("Use field access instead!")]] int& Photon::Voice::FrameBuffer::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IDisposable disposer
[[deprecated("Use field access instead!")]] ::System::IDisposable*& Photon::Voice::FrameBuffer::dyn_disposer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_disposer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposer"))->offset;
  return *reinterpret_cast<::System::IDisposable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& Photon::Voice::FrameBuffer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_disposed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 refCnt
[[deprecated("Use field access instead!")]] int& Photon::Voice::FrameBuffer::dyn_refCnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_refCnt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refCnt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle gcHandle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& Photon::Voice::FrameBuffer::dyn_gcHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_gcHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gcHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& Photon::Voice::FrameBuffer::dyn_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_ptr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pinned
[[deprecated("Use field access instead!")]] bool& Photon::Voice::FrameBuffer::dyn_pinned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_pinned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pinned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Voice.FrameFlags <Flags>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::FrameFlags& Photon::Voice::FrameBuffer::dyn_$Flags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::dyn_$Flags$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Flags>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::FrameFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.FrameBuffer..ctor
Photon::Voice::FrameBuffer::FrameBuffer(::ArrayW<uint8_t> array, int offset, int count, ::Photon::Voice::FrameFlags flags, ::System::IDisposable* disposer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(disposer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count, flags, disposer);
}
// Autogenerated method: Photon.Voice.FrameBuffer..ctor
Photon::Voice::FrameBuffer::FrameBuffer(::ArrayW<uint8_t> array, ::Photon::Voice::FrameFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, flags);
}
// Autogenerated method: Photon.Voice.FrameBuffer.get_Ptr
::System::IntPtr Photon::Voice::FrameBuffer::get_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::get_Ptr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Ptr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.FrameBuffer.Retain
void Photon::Voice::FrameBuffer::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::Retain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Retain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.FrameBuffer.Release
void Photon::Voice::FrameBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.FrameBuffer.Dispose
void Photon::Voice::FrameBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.FrameBuffer.get_Array
::ArrayW<uint8_t> Photon::Voice::FrameBuffer::get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::get_Array");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Array", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.FrameBuffer.get_Length
int Photon::Voice::FrameBuffer::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.FrameBuffer.get_Offset
int Photon::Voice::FrameBuffer::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.FrameBuffer.get_Flags
::Photon::Voice::FrameFlags Photon::Voice::FrameBuffer::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameBuffer::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::FrameFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.OpusCodec
#include "Photon/Voice/OpusCodec.hpp"
// Including type: Photon.Voice.OpusCodec/FrameDuration
#include "Photon/Voice/OpusCodec_FrameDuration.hpp"
// Including type: Photon.Voice.OpusCodec/Factory
#include "Photon/Voice/OpusCodec_Factory.hpp"
// Including type: Photon.Voice.OpusCodec/DecoderFactory
#include "Photon/Voice/OpusCodec_DecoderFactory.hpp"
// Including type: Photon.Voice.OpusCodec/Encoder`1
#include "Photon/Voice/OpusCodec_Encoder_1.hpp"
// Including type: Photon.Voice.OpusCodec/EncoderFloat
#include "Photon/Voice/OpusCodec_EncoderFloat.hpp"
// Including type: Photon.Voice.OpusCodec/EncoderShort
#include "Photon/Voice/OpusCodec_EncoderShort.hpp"
// Including type: Photon.Voice.OpusCodec/Decoder`1
#include "Photon/Voice/OpusCodec_Decoder_1.hpp"
// Including type: Photon.Voice.OpusCodec/Util
#include "Photon/Voice/OpusCodec_Util.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.OpusCodec.get_Version
::StringW Photon::Voice::OpusCodec::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "OpusCodec", "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.OpusCodec/FrameDuration
#include "Photon/Voice/OpusCodec_FrameDuration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.OpusCodec/FrameDuration Frame2dot5ms
::Photon::Voice::OpusCodec::FrameDuration Photon::Voice::OpusCodec::FrameDuration::_get_Frame2dot5ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_get_Frame2dot5ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::OpusCodec::FrameDuration>("Photon.Voice", "OpusCodec/FrameDuration", "Frame2dot5ms"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.OpusCodec/FrameDuration Frame2dot5ms
void Photon::Voice::OpusCodec::FrameDuration::_set_Frame2dot5ms(::Photon::Voice::OpusCodec::FrameDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_set_Frame2dot5ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "OpusCodec/FrameDuration", "Frame2dot5ms", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.OpusCodec/FrameDuration Frame5ms
::Photon::Voice::OpusCodec::FrameDuration Photon::Voice::OpusCodec::FrameDuration::_get_Frame5ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_get_Frame5ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::OpusCodec::FrameDuration>("Photon.Voice", "OpusCodec/FrameDuration", "Frame5ms"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.OpusCodec/FrameDuration Frame5ms
void Photon::Voice::OpusCodec::FrameDuration::_set_Frame5ms(::Photon::Voice::OpusCodec::FrameDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_set_Frame5ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "OpusCodec/FrameDuration", "Frame5ms", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.OpusCodec/FrameDuration Frame10ms
::Photon::Voice::OpusCodec::FrameDuration Photon::Voice::OpusCodec::FrameDuration::_get_Frame10ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_get_Frame10ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::OpusCodec::FrameDuration>("Photon.Voice", "OpusCodec/FrameDuration", "Frame10ms"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.OpusCodec/FrameDuration Frame10ms
void Photon::Voice::OpusCodec::FrameDuration::_set_Frame10ms(::Photon::Voice::OpusCodec::FrameDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_set_Frame10ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "OpusCodec/FrameDuration", "Frame10ms", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.OpusCodec/FrameDuration Frame20ms
::Photon::Voice::OpusCodec::FrameDuration Photon::Voice::OpusCodec::FrameDuration::_get_Frame20ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_get_Frame20ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::OpusCodec::FrameDuration>("Photon.Voice", "OpusCodec/FrameDuration", "Frame20ms"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.OpusCodec/FrameDuration Frame20ms
void Photon::Voice::OpusCodec::FrameDuration::_set_Frame20ms(::Photon::Voice::OpusCodec::FrameDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_set_Frame20ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "OpusCodec/FrameDuration", "Frame20ms", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.OpusCodec/FrameDuration Frame40ms
::Photon::Voice::OpusCodec::FrameDuration Photon::Voice::OpusCodec::FrameDuration::_get_Frame40ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_get_Frame40ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::OpusCodec::FrameDuration>("Photon.Voice", "OpusCodec/FrameDuration", "Frame40ms"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.OpusCodec/FrameDuration Frame40ms
void Photon::Voice::OpusCodec::FrameDuration::_set_Frame40ms(::Photon::Voice::OpusCodec::FrameDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_set_Frame40ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "OpusCodec/FrameDuration", "Frame40ms", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.OpusCodec/FrameDuration Frame60ms
::Photon::Voice::OpusCodec::FrameDuration Photon::Voice::OpusCodec::FrameDuration::_get_Frame60ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_get_Frame60ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::OpusCodec::FrameDuration>("Photon.Voice", "OpusCodec/FrameDuration", "Frame60ms"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.OpusCodec/FrameDuration Frame60ms
void Photon::Voice::OpusCodec::FrameDuration::_set_Frame60ms(::Photon::Voice::OpusCodec::FrameDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::_set_Frame60ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "OpusCodec/FrameDuration", "Frame60ms", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::OpusCodec::FrameDuration::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::FrameDuration::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.OpusCodec/Factory
#include "Photon/Voice/OpusCodec_Factory.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.OpusCodec/DecoderFactory
#include "Photon/Voice/OpusCodec_DecoderFactory.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.OpusCodec/EncoderFloat
#include "Photon/Voice/OpusCodec_EncoderFloat.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.OpusCodec/EncoderFloat.encodeTyped
::System::ArraySegment_1<uint8_t> Photon::Voice::OpusCodec::EncoderFloat::encodeTyped(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::EncoderFloat::encodeTyped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::OpusCodec::EncoderFloat*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.OpusCodec/EncoderShort
#include "Photon/Voice/OpusCodec_EncoderShort.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.OpusCodec/EncoderShort.encodeTyped
::System::ArraySegment_1<uint8_t> Photon::Voice::OpusCodec::EncoderShort::encodeTyped(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::EncoderShort::encodeTyped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::OpusCodec::EncoderShort*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.OpusCodec/Util
#include "Photon/Voice/OpusCodec_Util.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.OpusCodec/Util.bestEncoderSampleRate
int Photon::Voice::OpusCodec::Util::bestEncoderSampleRate(int f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::Util::bestEncoderSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "OpusCodec/Util", "bestEncoderSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Platform
#include "Photon/Voice/Platform.hpp"
// Including type: Photon.Voice.IDeviceEnumerator
#include "Photon/Voice/IDeviceEnumerator.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: Photon.Voice.IAudioInChangeNotifier
#include "Photon/Voice/IAudioInChangeNotifier.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Platform.CreateAudioInEnumerator
::Photon::Voice::IDeviceEnumerator* Photon::Voice::Platform::CreateAudioInEnumerator(::Photon::Voice::ILogger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Platform::CreateAudioInEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Platform", "CreateAudioInEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logger)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IDeviceEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logger);
}
// Autogenerated method: Photon.Voice.Platform.CreateAudioInChangeNotifier
::Photon::Voice::IAudioInChangeNotifier* Photon::Voice::Platform::CreateAudioInChangeNotifier(::System::Action* callback, ::Photon::Voice::ILogger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Platform::CreateAudioInChangeNotifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Platform", "CreateAudioInChangeNotifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(logger)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IAudioInChangeNotifier*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, logger);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.RawCodec
#include "Photon/Voice/RawCodec.hpp"
// Including type: Photon.Voice.RawCodec/Encoder`1
#include "Photon/Voice/RawCodec_Encoder_1.hpp"
// Including type: Photon.Voice.RawCodec/Decoder`1
#include "Photon/Voice/RawCodec_Decoder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.SpacingProfile
#include "Photon/Voice/SpacingProfile.hpp"
// Including type: Photon.Voice.SpacingProfile/<>c
#include "Photon/Voice/SpacingProfile_--c.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int16[] buf
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Photon::Voice::SpacingProfile::dyn_buf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::dyn_buf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] info
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Photon::Voice::SpacingProfile::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::dyn_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 capacity
[[deprecated("Use field access instead!")]] int& Photon::Voice::SpacingProfile::dyn_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::dyn_capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ptr
[[deprecated("Use field access instead!")]] int& Photon::Voice::SpacingProfile::dyn_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::dyn_ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ptr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch watch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Photon::Voice::SpacingProfile::dyn_watch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::dyn_watch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 watchLast
[[deprecated("Use field access instead!")]] int64_t& Photon::Voice::SpacingProfile::dyn_watchLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::dyn_watchLast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchLast"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean flushed
[[deprecated("Use field access instead!")]] bool& Photon::Voice::SpacingProfile::dyn_flushed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::dyn_flushed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flushed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.SpacingProfile.Start
void Photon::Voice::SpacingProfile::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.SpacingProfile.Update
void Photon::Voice::SpacingProfile::Update(bool lost, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lost), ::il2cpp_utils::ExtractType(flush)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lost, flush);
}
// Autogenerated method: Photon.Voice.SpacingProfile.get_Dump
::StringW Photon::Voice::SpacingProfile::get_Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::get_Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.SpacingProfile.get_Max
int Photon::Voice::SpacingProfile::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.SpacingProfile.<get_Dump>b__11_0
::StringW Photon::Voice::SpacingProfile::$get_Dump$b__11_0(int16_t v, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::<get_Dump>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Dump>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, v, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.SpacingProfile/<>c
#include "Photon/Voice/SpacingProfile_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Voice.SpacingProfile/<>c <>9
::Photon::Voice::SpacingProfile::$$c* Photon::Voice::SpacingProfile::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Voice::SpacingProfile::$$c*>("Photon.Voice", "SpacingProfile/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Voice.SpacingProfile/<>c <>9
void Photon::Voice::SpacingProfile::$$c::_set_$$9(::Photon::Voice::SpacingProfile::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice", "SpacingProfile/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Int16,System.Int16> <>9__13_0
::System::Func_2<int16_t, int16_t>* Photon::Voice::SpacingProfile::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<int16_t, int16_t>*>("Photon.Voice", "SpacingProfile/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Int16,System.Int16> <>9__13_0
void Photon::Voice::SpacingProfile::$$c::_set_$$9__13_0(::System::Func_2<int16_t, int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice", "SpacingProfile/<>c", "<>9__13_0", value)));
}
// Autogenerated method: Photon.Voice.SpacingProfile/<>c..cctor
void Photon::Voice::SpacingProfile::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "SpacingProfile/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.SpacingProfile/<>c.<get_Max>b__13_0
int16_t Photon::Voice::SpacingProfile::$$c::$get_Max$b__13_0(int16_t v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::SpacingProfile::$$c::<get_Max>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Max>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Util
#include "Photon/Voice/Util.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Util.SetThreadName
void Photon::Voice::Util::SetThreadName(::System::Threading::Thread* t, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Util::SetThreadName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Util", "SetThreadName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IServiceable
#include "Photon/Voice/IServiceable.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IServiceable.Service
void Photon::Voice::IServiceable::Service(::Photon::Voice::LocalVoice* localVoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IServiceable::Service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IServiceable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localVoice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: Photon.Voice.IServiceable
#include "Photon/Voice/IServiceable.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Voice.SpacingProfile
#include "Photon/Voice/SpacingProfile.hpp"
// Including type: Photon.Voice.FrameFlags
#include "Photon/Voice/FrameFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DATA_POOL_CAPACITY
int Photon::Voice::LocalVoice::_get_DATA_POOL_CAPACITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::_get_DATA_POOL_CAPACITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "LocalVoice", "DATA_POOL_CAPACITY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DATA_POOL_CAPACITY
void Photon::Voice::LocalVoice::_set_DATA_POOL_CAPACITY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::_set_DATA_POOL_CAPACITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "LocalVoice", "DATA_POOL_CAPACITY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NO_TRANSMIT_TIMEOUT_MS
int Photon::Voice::LocalVoice::_get_NO_TRANSMIT_TIMEOUT_MS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::_get_NO_TRANSMIT_TIMEOUT_MS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "LocalVoice", "NO_TRANSMIT_TIMEOUT_MS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NO_TRANSMIT_TIMEOUT_MS
void Photon::Voice::LocalVoice::_set_NO_TRANSMIT_TIMEOUT_MS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::_set_NO_TRANSMIT_TIMEOUT_MS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "LocalVoice", "NO_TRANSMIT_TIMEOUT_MS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte <InterestGroup>k__BackingField
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::LocalVoice::dyn_$InterestGroup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_$InterestGroup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InterestGroup>k__BackingField"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean transmitEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Voice::LocalVoice::dyn_transmitEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_transmitEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transmitEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <FramesSent>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::LocalVoice::dyn_$FramesSent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_$FramesSent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FramesSent>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <FramesSentBytes>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::LocalVoice::dyn_$FramesSentBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_$FramesSentBytes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FramesSentBytes>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Reliable>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::LocalVoice::dyn_$Reliable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_$Reliable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Reliable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Encrypt>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::LocalVoice::dyn_$Encrypt$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_$Encrypt$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Encrypt>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.IServiceable <LocalUserServiceable>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::IServiceable*& Photon::Voice::LocalVoice::dyn_$LocalUserServiceable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_$LocalUserServiceable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalUserServiceable>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::IServiceable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debugEchoMode
[[deprecated("Use field access instead!")]] bool& Photon::Voice::LocalVoice::dyn_debugEchoMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_debugEchoMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugEchoMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Voice.VoiceInfo info
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceInfo& Photon::Voice::LocalVoice::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Voice.IEncoder encoder
[[deprecated("Use field access instead!")]] ::Photon::Voice::IEncoder*& Photon::Voice::LocalVoice::dyn_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoder"))->offset;
  return *reinterpret_cast<::Photon::Voice::IEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte id
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::LocalVoice::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 channelId
[[deprecated("Use field access instead!")]] int& Photon::Voice::LocalVoice::dyn_channelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_channelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channelId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte evNumber
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::LocalVoice::dyn_evNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_evNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "evNumber"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Voice.VoiceClient voiceClient
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::LocalVoice::dyn_voiceClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_voiceClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceClient"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.ArraySegment`1<System.Byte> configFrame
[[deprecated("Use field access instead!")]] ::System::ArraySegment_1<uint8_t>& Photon::Voice::LocalVoice::dyn_configFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_configFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configFrame"))->offset;
  return *reinterpret_cast<::System::ArraySegment_1<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& Photon::Voice::LocalVoice::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object disposeLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Voice::LocalVoice::dyn_disposeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_disposeLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastTransmitTime
[[deprecated("Use field access instead!")]] int& Photon::Voice::LocalVoice::dyn_lastTransmitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_lastTransmitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTransmitTime"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.Byte,System.Int32> eventTimestamps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, int>*& Photon::Voice::LocalVoice::dyn_eventTimestamps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_eventTimestamps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventTimestamps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint8_t, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.SpacingProfile sendSpacingProfile
[[deprecated("Use field access instead!")]] ::Photon::Voice::SpacingProfile*& Photon::Voice::LocalVoice::dyn_sendSpacingProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::dyn_sendSpacingProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendSpacingProfile"))->offset;
  return *reinterpret_cast<::Photon::Voice::SpacingProfile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_Group
uint8_t Photon::Voice::LocalVoice::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_Group
void Photon::Voice::LocalVoice::set_Group(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_InterestGroup
uint8_t Photon::Voice::LocalVoice::get_InterestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_InterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_InterestGroup
void Photon::Voice::LocalVoice::set_InterestGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_InterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_Info
::Photon::Voice::VoiceInfo Photon::Voice::LocalVoice::get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceInfo, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_TransmitEnabled
bool Photon::Voice::LocalVoice::get_TransmitEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_TransmitEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransmitEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_TransmitEnabled
void Photon::Voice::LocalVoice::set_TransmitEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_TransmitEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransmitEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_IsCurrentlyTransmitting
bool Photon::Voice::LocalVoice::get_IsCurrentlyTransmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_IsCurrentlyTransmitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCurrentlyTransmitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_FramesSent
int Photon::Voice::LocalVoice::get_FramesSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_FramesSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_FramesSent
void Photon::Voice::LocalVoice::set_FramesSent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_FramesSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FramesSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_FramesSentBytes
int Photon::Voice::LocalVoice::get_FramesSentBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_FramesSentBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesSentBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_FramesSentBytes
void Photon::Voice::LocalVoice::set_FramesSentBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_FramesSentBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FramesSentBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_Reliable
bool Photon::Voice::LocalVoice::get_Reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_Reliable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reliable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_Reliable
void Photon::Voice::LocalVoice::set_Reliable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_Reliable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Reliable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_Encrypt
bool Photon::Voice::LocalVoice::get_Encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_Encrypt
void Photon::Voice::LocalVoice::set_Encrypt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_LocalUserServiceable
::Photon::Voice::IServiceable* Photon::Voice::LocalVoice::get_LocalUserServiceable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_LocalUserServiceable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalUserServiceable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IServiceable*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_LocalUserServiceable
void Photon::Voice::LocalVoice::set_LocalUserServiceable(::Photon::Voice::IServiceable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_LocalUserServiceable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalUserServiceable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_DebugEchoMode
bool Photon::Voice::LocalVoice::get_DebugEchoMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_DebugEchoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugEchoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.set_DebugEchoMode
void Photon::Voice::LocalVoice::set_DebugEchoMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::set_DebugEchoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DebugEchoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LocalVoice.SendSpacingProfileStart
void Photon::Voice::LocalVoice::SendSpacingProfileStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::SendSpacingProfileStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSpacingProfileStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_SendSpacingProfileDump
::StringW Photon::Voice::LocalVoice::get_SendSpacingProfileDump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_SendSpacingProfileDump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendSpacingProfileDump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_SendSpacingProfileMax
int Photon::Voice::LocalVoice::get_SendSpacingProfileMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_SendSpacingProfileMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendSpacingProfileMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_shortName
::StringW Photon::Voice::LocalVoice::get_shortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_shortName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_Name
::StringW Photon::Voice::LocalVoice::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.get_LogPrefix
::StringW Photon::Voice::LocalVoice::get_LogPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::get_LogPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.service
void Photon::Voice::LocalVoice::service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LocalVoice*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.sendConfigFrame
void Photon::Voice::LocalVoice::sendConfigFrame(int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::sendConfigFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendConfigFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayerId);
}
// Autogenerated method: Photon.Voice.LocalVoice.sendFrame
void Photon::Voice::LocalVoice::sendFrame(::System::ArraySegment_1<uint8_t> compressed, ::Photon::Voice::FrameFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::sendFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, compressed, flags);
}
// Autogenerated method: Photon.Voice.LocalVoice.sendFrame0
void Photon::Voice::LocalVoice::sendFrame0(::System::ArraySegment_1<uint8_t> compressed, ::Photon::Voice::FrameFlags flags, int targetPlayerId, bool reliable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::sendFrame0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendFrame0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(targetPlayerId), ::il2cpp_utils::ExtractType(reliable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, compressed, flags, targetPlayerId, reliable);
}
// Autogenerated method: Photon.Voice.LocalVoice.RemoveSelf
void Photon::Voice::LocalVoice::RemoveSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::RemoveSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoice.Dispose
void Photon::Voice::LocalVoice::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoice::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LocalVoice*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.RemoteVoiceOptions
#include "Photon/Voice/RemoteVoiceOptions.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Photon.Voice.IDecoder
#include "Photon/Voice/IDecoder.hpp"
// Including type: Photon.Voice.FrameOut`1
#include "Photon/Voice/FrameOut_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action <OnRemoteVoiceRemoveAction>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action*& Photon::Voice::RemoteVoiceOptions::dyn_$OnRemoteVoiceRemoveAction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::dyn_$OnRemoteVoiceRemoveAction$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnRemoteVoiceRemoveAction>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.IDecoder <Decoder>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::IDecoder*& Photon::Voice::RemoteVoiceOptions::dyn_$Decoder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::dyn_$Decoder$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Decoder>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::IDecoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ImageFormat <OutputImageFormat>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::ImageFormat& Photon::Voice::RemoteVoiceOptions::dyn_$OutputImageFormat$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::dyn_$OutputImageFormat$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OutputImageFormat>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::ImageFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.RemoteVoiceOptions/OutputType <outType>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::RemoteVoiceOptions::OutputType& Photon::Voice::RemoteVoiceOptions::dyn_$outType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::dyn_$outType$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<outType>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::RemoteVoiceOptions::OutputType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <output>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Voice::RemoteVoiceOptions::dyn_$output$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::dyn_$output$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<output>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.SetOutput
void Photon::Voice::RemoteVoiceOptions::SetOutput(::System::Action_1<::Photon::Voice::FrameOut_1<float>*>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::SetOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.SetOutput
void Photon::Voice::RemoteVoiceOptions::SetOutput(::System::Action_1<::Photon::Voice::FrameOut_1<int16_t>*>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::SetOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.SetOutput
void Photon::Voice::RemoteVoiceOptions::SetOutput(::System::Action_1<::Photon::Voice::ImageOutputBuf>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::SetOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.get_OnRemoteVoiceRemoveAction
::System::Action* Photon::Voice::RemoteVoiceOptions::get_OnRemoteVoiceRemoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::get_OnRemoteVoiceRemoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OnRemoteVoiceRemoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.set_OnRemoteVoiceRemoveAction
void Photon::Voice::RemoteVoiceOptions::set_OnRemoteVoiceRemoveAction(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::set_OnRemoteVoiceRemoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_OnRemoteVoiceRemoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.get_Decoder
::Photon::Voice::IDecoder* Photon::Voice::RemoteVoiceOptions::get_Decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::get_Decoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Decoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IDecoder*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.set_Decoder
void Photon::Voice::RemoteVoiceOptions::set_Decoder(::Photon::Voice::IDecoder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::set_Decoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Decoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.get_OutputImageFormat
::Photon::Voice::ImageFormat Photon::Voice::RemoteVoiceOptions::get_OutputImageFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::get_OutputImageFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OutputImageFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::ImageFormat, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.set_OutputImageFormat
void Photon::Voice::RemoteVoiceOptions::set_OutputImageFormat(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::set_OutputImageFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_OutputImageFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.get_outType
::Photon::Voice::RemoteVoiceOptions::OutputType Photon::Voice::RemoteVoiceOptions::get_outType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::get_outType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_outType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::RemoteVoiceOptions::OutputType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.set_outType
void Photon::Voice::RemoteVoiceOptions::set_outType(::Photon::Voice::RemoteVoiceOptions::OutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::set_outType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_outType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.get_output
::Il2CppObject* Photon::Voice::RemoteVoiceOptions::get_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::get_output");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_output", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceOptions.set_output
void Photon::Voice::RemoteVoiceOptions::set_output(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::set_output");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_output", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.RemoteVoiceOptions/OutputType
#include "Photon/Voice/RemoteVoiceOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.RemoteVoiceOptions/OutputType None
::Photon::Voice::RemoteVoiceOptions::OutputType Photon::Voice::RemoteVoiceOptions::OutputType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::RemoteVoiceOptions::OutputType>("Photon.Voice", "RemoteVoiceOptions/OutputType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.RemoteVoiceOptions/OutputType None
void Photon::Voice::RemoteVoiceOptions::OutputType::_set_None(::Photon::Voice::RemoteVoiceOptions::OutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "RemoteVoiceOptions/OutputType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.RemoteVoiceOptions/OutputType Float
::Photon::Voice::RemoteVoiceOptions::OutputType Photon::Voice::RemoteVoiceOptions::OutputType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::RemoteVoiceOptions::OutputType>("Photon.Voice", "RemoteVoiceOptions/OutputType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.RemoteVoiceOptions/OutputType Float
void Photon::Voice::RemoteVoiceOptions::OutputType::_set_Float(::Photon::Voice::RemoteVoiceOptions::OutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "RemoteVoiceOptions/OutputType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.RemoteVoiceOptions/OutputType Short
::Photon::Voice::RemoteVoiceOptions::OutputType Photon::Voice::RemoteVoiceOptions::OutputType::_get_Short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_get_Short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::RemoteVoiceOptions::OutputType>("Photon.Voice", "RemoteVoiceOptions/OutputType", "Short"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.RemoteVoiceOptions/OutputType Short
void Photon::Voice::RemoteVoiceOptions::OutputType::_set_Short(::Photon::Voice::RemoteVoiceOptions::OutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_set_Short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "RemoteVoiceOptions/OutputType", "Short", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.RemoteVoiceOptions/OutputType Image
::Photon::Voice::RemoteVoiceOptions::OutputType Photon::Voice::RemoteVoiceOptions::OutputType::_get_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_get_Image");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::RemoteVoiceOptions::OutputType>("Photon.Voice", "RemoteVoiceOptions/OutputType", "Image"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.RemoteVoiceOptions/OutputType Image
void Photon::Voice::RemoteVoiceOptions::OutputType::_set_Image(::Photon::Voice::RemoteVoiceOptions::OutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::_set_Image");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "RemoteVoiceOptions/OutputType", "Image", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::RemoteVoiceOptions::OutputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceOptions::OutputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.RemoteVoice
#include "Photon/Voice/RemoteVoice.hpp"
// Including type: Photon.Voice.SpacingProfile
#include "Photon/Voice/SpacingProfile.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: Photon.Voice.IDecoder
#include "Photon/Voice/IDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.VoiceInfo <Info>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceInfo& Photon::Voice::RemoteVoice::dyn_$Info$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_$Info$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Info>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Voice.RemoteVoiceOptions options
[[deprecated("Use field access instead!")]] ::Photon::Voice::RemoteVoiceOptions& Photon::Voice::RemoteVoice::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::Photon::Voice::RemoteVoiceOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 channelId
[[deprecated("Use field access instead!")]] int& Photon::Voice::RemoteVoice::dyn_channelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_channelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channelId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <DelayFrames>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::RemoteVoice::dyn_$DelayFrames$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_$DelayFrames$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DelayFrames>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playerId
[[deprecated("Use field access instead!")]] int& Photon::Voice::RemoteVoice::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte voiceId
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::RemoteVoice::dyn_voiceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_voiceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& Photon::Voice::RemoteVoice::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object disposeLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Voice::RemoteVoice::dyn_disposeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_disposeLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.SpacingProfile receiveSpacingProfile
[[deprecated("Use field access instead!")]] ::Photon::Voice::SpacingProfile*& Photon::Voice::RemoteVoice::dyn_receiveSpacingProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_receiveSpacingProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiveSpacingProfile"))->offset;
  return *reinterpret_cast<::Photon::Voice::SpacingProfile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte lastEvNumber
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::RemoteVoice::dyn_lastEvNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_lastEvNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastEvNumber"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.VoiceClient voiceClient
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::RemoteVoice::dyn_voiceClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_voiceClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceClient"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<Photon.Voice.FrameBuffer> frameQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Photon::Voice::FrameBuffer>*& Photon::Voice::RemoteVoice::dyn_frameQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_frameQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Photon::Voice::FrameBuffer>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AutoResetEvent frameQueueReady
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& Photon::Voice::RemoteVoice::dyn_frameQueueReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_frameQueueReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameQueueReady"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 flushingFramePosInQueue
[[deprecated("Use field access instead!")]] int& Photon::Voice::RemoteVoice::dyn_flushingFramePosInQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_flushingFramePosInQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flushingFramePosInQueue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.FrameBuffer nullFrame
[[deprecated("Use field access instead!")]] ::Photon::Voice::FrameBuffer& Photon::Voice::RemoteVoice::dyn_nullFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::dyn_nullFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nullFrame"))->offset;
  return *reinterpret_cast<::Photon::Voice::FrameBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.RemoteVoice.get_Info
::Photon::Voice::VoiceInfo Photon::Voice::RemoteVoice::get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::get_Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceInfo, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.set_Info
void Photon::Voice::RemoteVoice::set_Info(::Photon::Voice::VoiceInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::set_Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoice.get_DelayFrames
int Photon::Voice::RemoteVoice::get_DelayFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::get_DelayFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DelayFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.set_DelayFrames
void Photon::Voice::RemoteVoice::set_DelayFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::set_DelayFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DelayFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoice.get_shortName
::StringW Photon::Voice::RemoteVoice::get_shortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::get_shortName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.get_Name
::StringW Photon::Voice::RemoteVoice::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.get_LogPrefix
::StringW Photon::Voice::RemoteVoice::get_LogPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::get_LogPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.ReceiveSpacingProfileStart
void Photon::Voice::RemoteVoice::ReceiveSpacingProfileStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::ReceiveSpacingProfileStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveSpacingProfileStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.get_ReceiveSpacingProfileDump
::StringW Photon::Voice::RemoteVoice::get_ReceiveSpacingProfileDump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::get_ReceiveSpacingProfileDump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceiveSpacingProfileDump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.get_ReceiveSpacingProfileMax
int Photon::Voice::RemoteVoice::get_ReceiveSpacingProfileMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::get_ReceiveSpacingProfileMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceiveSpacingProfileMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.byteDiff
uint8_t Photon::Voice::RemoteVoice::byteDiff(uint8_t latest, uint8_t last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::byteDiff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "RemoteVoice", "byteDiff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latest), ::il2cpp_utils::ExtractType(last)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, latest, last);
}
// Autogenerated method: Photon.Voice.RemoteVoice.receiveBytes
void Photon::Voice::RemoteVoice::receiveBytes(ByRef<::Photon::Voice::FrameBuffer> receivedBytes, uint8_t evNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::receiveBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "receiveBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receivedBytes), ::il2cpp_utils::ExtractType(evNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(receivedBytes), evNumber);
}
// Autogenerated method: Photon.Voice.RemoteVoice.receiveFrame
void Photon::Voice::RemoteVoice::receiveFrame(ByRef<::Photon::Voice::FrameBuffer> frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::receiveFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "receiveFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(frame));
}
// Autogenerated method: Photon.Voice.RemoteVoice.receiveNullFrames
void Photon::Voice::RemoteVoice::receiveNullFrames(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::receiveNullFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "receiveNullFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Photon.Voice.RemoteVoice.createDefaultDecoder
::Photon::Voice::IDecoder* Photon::Voice::RemoteVoice::createDefaultDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::createDefaultDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createDefaultDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IDecoder*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.decodeThread
void Photon::Voice::RemoteVoice::decodeThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::decodeThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "decodeThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.removeAndDispose
void Photon::Voice::RemoteVoice::removeAndDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::removeAndDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "removeAndDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.Dispose
void Photon::Voice::RemoteVoice::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::RemoteVoice*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoice.<.ctor>b__14_0
void Photon::Voice::RemoteVoice::$_ctor$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoice::<.ctor>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IResettable
#include "Photon/Voice/IResettable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IResettable.Reset
void Photon::Voice::IResettable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IResettable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IResettable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IAudioDesc
#include "Photon/Voice/IAudioDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IAudioDesc.get_SamplingRate
int Photon::Voice::IAudioDesc::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IAudioDesc::get_SamplingRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IAudioDesc*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IAudioDesc.get_Channels
int Photon::Voice::IAudioDesc::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IAudioDesc::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IAudioDesc*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IAudioDesc.get_Error
::StringW Photon::Voice::IAudioDesc::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IAudioDesc::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IAudioDesc*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioDesc
#include "Photon/Voice/AudioDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SamplingRate>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::AudioDesc::dyn_$SamplingRate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::dyn_$SamplingRate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SamplingRate>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Channels>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::AudioDesc::dyn_$Channels$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::dyn_$Channels$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Channels>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::AudioDesc::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.AudioDesc.get_SamplingRate
int Photon::Voice::AudioDesc::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::get_SamplingRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioDesc*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioDesc.set_SamplingRate
void Photon::Voice::AudioDesc::set_SamplingRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::set_SamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioDesc.get_Channels
int Photon::Voice::AudioDesc::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioDesc*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioDesc.set_Channels
void Photon::Voice::AudioDesc::set_Channels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::set_Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioDesc.get_Error
::StringW Photon::Voice::AudioDesc::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioDesc*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.AudioDesc.set_Error
void Photon::Voice::AudioDesc::set_Error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::set_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.AudioDesc.Dispose
void Photon::Voice::AudioDesc::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioDesc::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioDesc*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.ILocalVoiceAudio
#include "Photon/Voice/ILocalVoiceAudio.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Voice.AudioUtil/IVoiceDetector
#include "Photon/Voice/AudioUtil_IVoiceDetector.hpp"
// Including type: Photon.Voice.AudioUtil/ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.ILocalVoiceAudio.get_VoiceDetector
::Photon::Voice::AudioUtil::IVoiceDetector* Photon::Voice::ILocalVoiceAudio::get_VoiceDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILocalVoiceAudio::get_VoiceDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILocalVoiceAudio*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::AudioUtil::IVoiceDetector*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ILocalVoiceAudio.get_LevelMeter
::Photon::Voice::AudioUtil::ILevelMeter* Photon::Voice::ILocalVoiceAudio::get_LevelMeter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILocalVoiceAudio::get_LevelMeter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILocalVoiceAudio*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::AudioUtil::ILevelMeter*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ILocalVoiceAudio.get_VoiceDetectorCalibrating
bool Photon::Voice::ILocalVoiceAudio::get_VoiceDetectorCalibrating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILocalVoiceAudio::get_VoiceDetectorCalibrating");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILocalVoiceAudio*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ILocalVoiceAudio.VoiceDetectorCalibrate
void Photon::Voice::ILocalVoiceAudio::VoiceDetectorCalibrate(int durationMs, ::System::Action_1<float>* onCalibrated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILocalVoiceAudio::VoiceDetectorCalibrate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILocalVoiceAudio*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, durationMs, onCalibrated);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.AudioSampleType
#include "Photon/Voice/AudioSampleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.AudioSampleType Source
::Photon::Voice::AudioSampleType Photon::Voice::AudioSampleType::_get_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioSampleType::_get_Source");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::AudioSampleType>("Photon.Voice", "AudioSampleType", "Source"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.AudioSampleType Source
void Photon::Voice::AudioSampleType::_set_Source(::Photon::Voice::AudioSampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioSampleType::_set_Source");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "AudioSampleType", "Source", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.AudioSampleType Short
::Photon::Voice::AudioSampleType Photon::Voice::AudioSampleType::_get_Short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioSampleType::_get_Short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::AudioSampleType>("Photon.Voice", "AudioSampleType", "Short"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.AudioSampleType Short
void Photon::Voice::AudioSampleType::_set_Short(::Photon::Voice::AudioSampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioSampleType::_set_Short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "AudioSampleType", "Short", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.AudioSampleType Float
::Photon::Voice::AudioSampleType Photon::Voice::AudioSampleType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioSampleType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::AudioSampleType>("Photon.Voice", "AudioSampleType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.AudioSampleType Float
void Photon::Voice::AudioSampleType::_set_Float(::Photon::Voice::AudioSampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioSampleType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "AudioSampleType", "Float", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::AudioSampleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioSampleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.LocalVoiceAudioDummy
#include "Photon/Voice/LocalVoiceAudioDummy.hpp"
// Including type: Photon.Voice.AudioUtil/VoiceDetectorDummy
#include "Photon/Voice/AudioUtil_VoiceDetectorDummy.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Voice.AudioUtil/LevelMeterDummy
#include "Photon/Voice/AudioUtil_LevelMeterDummy.hpp"
// Including type: Photon.Voice.AudioUtil/IVoiceDetector
#include "Photon/Voice/AudioUtil_IVoiceDetector.hpp"
// Including type: Photon.Voice.AudioUtil/ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.LocalVoiceAudioDummy Dummy
::Photon::Voice::LocalVoiceAudioDummy* Photon::Voice::LocalVoiceAudioDummy::_get_Dummy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::_get_Dummy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::LocalVoiceAudioDummy*>("Photon.Voice", "LocalVoiceAudioDummy", "Dummy"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.LocalVoiceAudioDummy Dummy
void Photon::Voice::LocalVoiceAudioDummy::_set_Dummy(::Photon::Voice::LocalVoiceAudioDummy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::_set_Dummy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "LocalVoiceAudioDummy", "Dummy", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.AudioUtil/VoiceDetectorDummy voiceDetector
[[deprecated("Use field access instead!")]] ::Photon::Voice::AudioUtil::VoiceDetectorDummy*& Photon::Voice::LocalVoiceAudioDummy::dyn_voiceDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::dyn_voiceDetector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceDetector"))->offset;
  return *reinterpret_cast<::Photon::Voice::AudioUtil::VoiceDetectorDummy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.AudioUtil/LevelMeterDummy levelMeter
[[deprecated("Use field access instead!")]] ::Photon::Voice::AudioUtil::LevelMeterDummy*& Photon::Voice::LocalVoiceAudioDummy::dyn_levelMeter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::dyn_levelMeter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelMeter"))->offset;
  return *reinterpret_cast<::Photon::Voice::AudioUtil::LevelMeterDummy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.LocalVoiceAudioDummy.get_VoiceDetector
::Photon::Voice::AudioUtil::IVoiceDetector* Photon::Voice::LocalVoiceAudioDummy::get_VoiceDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::get_VoiceDetector");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LocalVoiceAudioDummy*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::AudioUtil::IVoiceDetector*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoiceAudioDummy.get_LevelMeter
::Photon::Voice::AudioUtil::ILevelMeter* Photon::Voice::LocalVoiceAudioDummy::get_LevelMeter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::get_LevelMeter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LocalVoiceAudioDummy*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::AudioUtil::ILevelMeter*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoiceAudioDummy.get_VoiceDetectorCalibrating
bool Photon::Voice::LocalVoiceAudioDummy::get_VoiceDetectorCalibrating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::get_VoiceDetectorCalibrating");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LocalVoiceAudioDummy*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoiceAudioDummy.VoiceDetectorCalibrate
void Photon::Voice::LocalVoiceAudioDummy::VoiceDetectorCalibrate(int durationMs, ::System::Action_1<float>* onCalibrated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::VoiceDetectorCalibrate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LocalVoiceAudioDummy*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, durationMs, onCalibrated);
}
// Autogenerated method: Photon.Voice.LocalVoiceAudioDummy..cctor
void Photon::Voice::LocalVoiceAudioDummy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceAudioDummy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "LocalVoiceAudioDummy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.LocalVoiceAudioFloat
#include "Photon/Voice/LocalVoiceAudioFloat.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: Photon.Voice.IAudioDesc
#include "Photon/Voice/IAudioDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.LocalVoiceAudioShort
#include "Photon/Voice/LocalVoiceAudioShort.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: Photon.Voice.IAudioDesc
#include "Photon/Voice/IAudioDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.ILogger.LogError
void Photon::Voice::ILogger::LogError(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILogger::LogError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.ILogger.LogWarning
void Photon::Voice::ILogger::LogWarning(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.ILogger.LogInfo
void Photon::Voice::ILogger::LogInfo(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILogger::LogInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.ILogger.LogDebug
void Photon::Voice::ILogger::LogDebug(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ILogger::LogDebug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ILogger*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IVoiceTransport
#include "Photon/Voice/IVoiceTransport.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: Photon.Voice.FrameFlags
#include "Photon/Voice/FrameFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IVoiceTransport.IsChannelJoined
bool Photon::Voice::IVoiceTransport::IsChannelJoined(int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IVoiceTransport::IsChannelJoined");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IVoiceTransport*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelId);
}
// Autogenerated method: Photon.Voice.IVoiceTransport.SendVoicesInfo
void Photon::Voice::IVoiceTransport::SendVoicesInfo(::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>* voices, int channelId, int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IVoiceTransport::SendVoicesInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IVoiceTransport*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voices, channelId, targetPlayerId);
}
// Autogenerated method: Photon.Voice.IVoiceTransport.SendVoiceRemove
void Photon::Voice::IVoiceTransport::SendVoiceRemove(::Photon::Voice::LocalVoice* voice, int channelId, int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IVoiceTransport::SendVoiceRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IVoiceTransport*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voice, channelId, targetPlayerId);
}
// Autogenerated method: Photon.Voice.IVoiceTransport.SendFrame
void Photon::Voice::IVoiceTransport::SendFrame(::System::ArraySegment_1<uint8_t> data, ::Photon::Voice::FrameFlags flags, uint8_t evNumber, uint8_t voiceId, int channelId, int targetPlayerId, bool reliable, ::Photon::Voice::LocalVoice* localVoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IVoiceTransport::SendFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IVoiceTransport*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, flags, evNumber, voiceId, channelId, targetPlayerId, reliable, localVoice);
}
// Autogenerated method: Photon.Voice.IVoiceTransport.ChannelIdStr
::StringW Photon::Voice::IVoiceTransport::ChannelIdStr(int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IVoiceTransport::ChannelIdStr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IVoiceTransport*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, channelId);
}
// Autogenerated method: Photon.Voice.IVoiceTransport.PlayerIdStr
::StringW Photon::Voice::IVoiceTransport::PlayerIdStr(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IVoiceTransport::PlayerIdStr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IVoiceTransport*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, playerId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate
#include "Photon/Voice/VoiceClient_RemoteVoiceInfoDelegate.hpp"
// Including type: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40
#include "Photon/Voice/VoiceClient_-get_RemoteVoiceInfos-d__40.hpp"
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass48_0
#include "Photon/Voice/VoiceClient_--c__DisplayClass48_0.hpp"
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass49_0`1
#include "Photon/Voice/VoiceClient_--c__DisplayClass49_0_1.hpp"
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass50_0`1
#include "Photon/Voice/VoiceClient_--c__DisplayClass50_0_1.hpp"
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_0
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_0.hpp"
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_1
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_1.hpp"
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_2
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_2.hpp"
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_3
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_3.hpp"
// Including type: Photon.Voice.VoiceClient/<>c
#include "Photon/Voice/VoiceClient_--c.hpp"
// Including type: Photon.Voice.IVoiceTransport
#include "Photon/Voice/IVoiceTransport.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Voice.RemoteVoice
#include "Photon/Voice/RemoteVoice.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Photon.Voice.RemoteVoiceInfo
#include "Photon/Voice/RemoteVoiceInfo.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Photon.Voice.LocalVoiceAudio`1
#include "Photon/Voice/LocalVoiceAudio_1.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: Photon.Voice.LocalVoiceFramed`1
#include "Photon/Voice/LocalVoiceFramed_1.hpp"
// Including type: Photon.Voice.IAudioDesc
#include "Photon/Voice/IAudioDesc.hpp"
// Including type: Photon.Voice.AudioSampleType
#include "Photon/Voice/AudioSampleType.hpp"
// Including type: Photon.Voice.FrameBuffer
#include "Photon/Voice/FrameBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Photon.Voice.IVoiceTransport transport
[[deprecated("Use field access instead!")]] ::Photon::Voice::IVoiceTransport*& Photon::Voice::VoiceClient::dyn_transport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_transport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transport"))->offset;
  return *reinterpret_cast<::Photon::Voice::IVoiceTransport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Voice.ILogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::ILogger*& Photon::Voice::VoiceClient::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::ILogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <FramesLost>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::dyn_$FramesLost$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_$FramesLost$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FramesLost>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <FramesReceived>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::dyn_$FramesReceived$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_$FramesReceived$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FramesReceived>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <RoundTripTime>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::dyn_$RoundTripTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_$RoundTripTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RoundTripTime>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <RoundTripTimeVariance>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::dyn_$RoundTripTimeVariance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_$RoundTripTimeVariance$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RoundTripTimeVariance>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressInfoDuplicateWarning>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::VoiceClient::dyn_$SuppressInfoDuplicateWarning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_$SuppressInfoDuplicateWarning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressInfoDuplicateWarning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate <OnRemoteVoiceInfoAction>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate*& Photon::Voice::VoiceClient::dyn_$OnRemoteVoiceInfoAction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_$OnRemoteVoiceInfoAction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnRemoteVoiceInfoAction>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <DebugLostPercent>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::dyn_$DebugLostPercent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_$DebugLostPercent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DebugLostPercent>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 prevRtt
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::dyn_prevRtt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_prevRtt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevRtt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Photon.Voice.Codec,System.Int32> remoteVoiceDelayFrames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Photon::Voice::Codec, int>*& Photon::Voice::VoiceClient::dyn_remoteVoiceDelayFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_remoteVoiceDelayFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteVoiceDelayFrames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Photon::Voice::Codec, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte globalInterestGroup
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::VoiceClient::dyn_globalInterestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_globalInterestGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalInterestGroup"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte voiceIdCnt
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::VoiceClient::dyn_voiceIdCnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_voiceIdCnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceIdCnt"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Byte,Photon.Voice.LocalVoice> localVoices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::LocalVoice*>*& Photon::Voice::VoiceClient::dyn_localVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_localVoices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localVoices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::LocalVoice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<Photon.Voice.LocalVoice>> localVoicesPerChannel
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::Photon::Voice::LocalVoice*>*>*& Photon::Voice::VoiceClient::dyn_localVoicesPerChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_localVoicesPerChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localVoicesPerChannel"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::Photon::Voice::LocalVoice*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.Byte,Photon.Voice.RemoteVoice>> remoteVoices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>*>*& Photon::Voice::VoiceClient::dyn_remoteVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_remoteVoices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteVoices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Random rnd
[[deprecated("Use field access instead!")]] ::System::Random*& Photon::Voice::VoiceClient::dyn_rnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::dyn_rnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rnd"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_FramesLost
int Photon::Voice::VoiceClient::get_FramesLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_FramesLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_FramesLost
void Photon::Voice::VoiceClient::set_FramesLost(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_FramesLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FramesLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_FramesReceived
int Photon::Voice::VoiceClient::get_FramesReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_FramesReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_FramesReceived
void Photon::Voice::VoiceClient::set_FramesReceived(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_FramesReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FramesReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_FramesSent
int Photon::Voice::VoiceClient::get_FramesSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_FramesSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_FramesSentBytes
int Photon::Voice::VoiceClient::get_FramesSentBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_FramesSentBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesSentBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_RoundTripTime
int Photon::Voice::VoiceClient::get_RoundTripTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_RoundTripTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoundTripTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_RoundTripTime
void Photon::Voice::VoiceClient::set_RoundTripTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_RoundTripTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RoundTripTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_RoundTripTimeVariance
int Photon::Voice::VoiceClient::get_RoundTripTimeVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_RoundTripTimeVariance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoundTripTimeVariance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_RoundTripTimeVariance
void Photon::Voice::VoiceClient::set_RoundTripTimeVariance(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_RoundTripTimeVariance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RoundTripTimeVariance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_SuppressInfoDuplicateWarning
bool Photon::Voice::VoiceClient::get_SuppressInfoDuplicateWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_SuppressInfoDuplicateWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressInfoDuplicateWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_SuppressInfoDuplicateWarning
void Photon::Voice::VoiceClient::set_SuppressInfoDuplicateWarning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_SuppressInfoDuplicateWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressInfoDuplicateWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_OnRemoteVoiceInfoAction
::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate* Photon::Voice::VoiceClient::get_OnRemoteVoiceInfoAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_OnRemoteVoiceInfoAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnRemoteVoiceInfoAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_OnRemoteVoiceInfoAction
void Photon::Voice::VoiceClient::set_OnRemoteVoiceInfoAction(::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_OnRemoteVoiceInfoAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnRemoteVoiceInfoAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_DebugLostPercent
int Photon::Voice::VoiceClient::get_DebugLostPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_DebugLostPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugLostPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_DebugLostPercent
void Photon::Voice::VoiceClient::set_DebugLostPercent(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_DebugLostPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DebugLostPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_LocalVoices
::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>* Photon::Voice::VoiceClient::get_LocalVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_LocalVoices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalVoices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.LocalVoicesInChannel
::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>* Photon::Voice::VoiceClient::LocalVoicesInChannel(int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::LocalVoicesInChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalVoicesInChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>*, false>(this, ___internal__method, channelId);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_RemoteVoiceInfos
::System::Collections::Generic::IEnumerable_1<::Photon::Voice::RemoteVoiceInfo*>* Photon::Voice::VoiceClient::get_RemoteVoiceInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_RemoteVoiceInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteVoiceInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Photon::Voice::RemoteVoiceInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.LogSpacingProfiles
void Photon::Voice::VoiceClient::LogSpacingProfiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::LogSpacingProfiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogSpacingProfiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.LogStats
void Photon::Voice::VoiceClient::LogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::LogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.SetRemoteVoiceDelayFrames
void Photon::Voice::VoiceClient::SetRemoteVoiceDelayFrames(::Photon::Voice::Codec codec, int delayFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::SetRemoteVoiceDelayFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRemoteVoiceDelayFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(delayFrames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, codec, delayFrames);
}
// Autogenerated method: Photon.Voice.VoiceClient.Service
void Photon::Voice::VoiceClient::Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.createLocalVoice
::Photon::Voice::LocalVoice* Photon::Voice::VoiceClient::createLocalVoice(int channelId, ::System::Func_3<uint8_t, int, ::Photon::Voice::LocalVoice*>* voiceFactory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::createLocalVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createLocalVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(voiceFactory)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::LocalVoice*, false>(this, ___internal__method, channelId, voiceFactory);
}
// Autogenerated method: Photon.Voice.VoiceClient.CreateLocalVoice
::Photon::Voice::LocalVoice* Photon::Voice::VoiceClient::CreateLocalVoice(::Photon::Voice::VoiceInfo voiceInfo, int channelId, ::Photon::Voice::IEncoder* encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::CreateLocalVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLocalVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceInfo), ::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(encoder)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::LocalVoice*, false>(this, ___internal__method, voiceInfo, channelId, encoder);
}
// Autogenerated method: Photon.Voice.VoiceClient.CreateLocalVoiceAudioFromSource
::Photon::Voice::LocalVoice* Photon::Voice::VoiceClient::CreateLocalVoiceAudioFromSource(::Photon::Voice::VoiceInfo voiceInfo, ::Photon::Voice::IAudioDesc* source, ::Photon::Voice::AudioSampleType sampleType, ::Photon::Voice::IEncoder* encoder, int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::CreateLocalVoiceAudioFromSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLocalVoiceAudioFromSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceInfo), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sampleType), ::il2cpp_utils::ExtractType(encoder), ::il2cpp_utils::ExtractType(channelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::LocalVoice*, false>(this, ___internal__method, voiceInfo, source, sampleType, encoder, channelId);
}
// Autogenerated method: Photon.Voice.VoiceClient.getNewVoiceId
uint8_t Photon::Voice::VoiceClient::getNewVoiceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::getNewVoiceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getNewVoiceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.addVoice
void Photon::Voice::VoiceClient::addVoice(uint8_t newId, int channelId, ::Photon::Voice::LocalVoice* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::addVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "addVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newId), ::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newId, channelId, v);
}
// Autogenerated method: Photon.Voice.VoiceClient.RemoveLocalVoice
void Photon::Voice::VoiceClient::RemoveLocalVoice(::Photon::Voice::LocalVoice* voice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::RemoveLocalVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLocalVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voice);
}
// Autogenerated method: Photon.Voice.VoiceClient.sendChannelVoicesInfo
void Photon::Voice::VoiceClient::sendChannelVoicesInfo(int channelId, int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::sendChannelVoicesInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendChannelVoicesInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(targetPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, targetPlayerId);
}
// Autogenerated method: Photon.Voice.VoiceClient.sendVoicesInfoAndConfigFrame
void Photon::Voice::VoiceClient::sendVoicesInfoAndConfigFrame(::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>* voiceList, int channelId, int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::sendVoicesInfoAndConfigFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendVoicesInfoAndConfigFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceList), ::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(targetPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voiceList, channelId, targetPlayerId);
}
// Autogenerated method: Photon.Voice.VoiceClient.get_GlobalInterestGroup
uint8_t Photon::Voice::VoiceClient::get_GlobalInterestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::get_GlobalInterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalInterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.set_GlobalInterestGroup
void Photon::Voice::VoiceClient::set_GlobalInterestGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::set_GlobalInterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalInterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceClient.clearRemoteVoices
void Photon::Voice::VoiceClient::clearRemoteVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::clearRemoteVoices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "clearRemoteVoices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.clearRemoteVoicesInChannel
void Photon::Voice::VoiceClient::clearRemoteVoicesInChannel(int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::clearRemoteVoicesInChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "clearRemoteVoicesInChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId);
}
// Autogenerated method: Photon.Voice.VoiceClient.clearRemoteVoicesInChannelForPlayer
void Photon::Voice::VoiceClient::clearRemoteVoicesInChannelForPlayer(int channelId, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::clearRemoteVoicesInChannelForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "clearRemoteVoicesInChannelForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId);
}
// Autogenerated method: Photon.Voice.VoiceClient.onJoinChannel
void Photon::Voice::VoiceClient::onJoinChannel(int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onJoinChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onJoinChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel);
}
// Autogenerated method: Photon.Voice.VoiceClient.onLeaveChannel
void Photon::Voice::VoiceClient::onLeaveChannel(int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onLeaveChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onLeaveChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel);
}
// Autogenerated method: Photon.Voice.VoiceClient.onLeaveAllChannels
void Photon::Voice::VoiceClient::onLeaveAllChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onLeaveAllChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onLeaveAllChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient.onPlayerJoin
void Photon::Voice::VoiceClient::onPlayerJoin(int channelId, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onPlayerJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPlayerJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId);
}
// Autogenerated method: Photon.Voice.VoiceClient.onPlayerLeave
void Photon::Voice::VoiceClient::onPlayerLeave(int channelId, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onPlayerLeave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPlayerLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId);
}
// Autogenerated method: Photon.Voice.VoiceClient.onVoiceInfo
void Photon::Voice::VoiceClient::onVoiceInfo(int channelId, int playerId, uint8_t voiceId, uint8_t eventNumber, ::Photon::Voice::VoiceInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onVoiceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onVoiceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(voiceId), ::il2cpp_utils::ExtractType(eventNumber), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId, voiceId, eventNumber, info);
}
// Autogenerated method: Photon.Voice.VoiceClient.onVoiceRemove
void Photon::Voice::VoiceClient::onVoiceRemove(int channelId, int playerId, ::ArrayW<uint8_t> voiceIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onVoiceRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onVoiceRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(voiceIds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId, voiceIds);
}
// Autogenerated method: Photon.Voice.VoiceClient.onFrame
void Photon::Voice::VoiceClient::onFrame(int channelId, int playerId, uint8_t voiceId, uint8_t evNumber, ByRef<::Photon::Voice::FrameBuffer> receivedBytes, bool isLocalPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::onFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(voiceId), ::il2cpp_utils::ExtractType(evNumber), ::il2cpp_utils::ExtractType(receivedBytes), ::il2cpp_utils::ExtractType(isLocalPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId, voiceId, evNumber, byref(receivedBytes), isLocalPlayer);
}
// Autogenerated method: Photon.Voice.VoiceClient.channelStr
::StringW Photon::Voice::VoiceClient::channelStr(int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::channelStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "channelStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, channelId);
}
// Autogenerated method: Photon.Voice.VoiceClient.playerStr
::StringW Photon::Voice::VoiceClient::playerStr(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::playerStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "playerStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, playerId);
}
// Autogenerated method: Photon.Voice.VoiceClient.Dispose
void Photon::Voice::VoiceClient::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate
#include "Photon/Voice/VoiceClient_RemoteVoiceInfoDelegate.hpp"
// Including type: Photon.Voice.VoiceInfo
#include "Photon/Voice/VoiceInfo.hpp"
// Including type: Photon.Voice.RemoteVoiceOptions
#include "Photon/Voice/RemoteVoiceOptions.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate.Invoke
void Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate::Invoke(int channelId, int playerId, uint8_t voiceId, ::Photon::Voice::VoiceInfo voiceInfo, ByRef<::Photon::Voice::RemoteVoiceOptions> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId, voiceId, voiceInfo, byref(options));
}
// Autogenerated method: Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate.BeginInvoke
::System::IAsyncResult* Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate::BeginInvoke(int channelId, int playerId, uint8_t voiceId, ::Photon::Voice::VoiceInfo voiceInfo, ByRef<::Photon::Voice::RemoteVoiceOptions> options, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, channelId, playerId, voiceId, voiceInfo, byref(options), callback, object);
}
// Autogenerated method: Photon.Voice.VoiceClient/RemoteVoiceInfoDelegate.EndInvoke
void Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate::EndInvoke(ByRef<::Photon::Voice::RemoteVoiceOptions> options, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::RemoteVoiceInfoDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(options), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40
#include "Photon/Voice/VoiceClient_-get_RemoteVoiceInfos-d__40.hpp"
// Including type: Photon.Voice.RemoteVoiceInfo
#include "Photon/Voice/RemoteVoiceInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Voice.RemoteVoice
#include "Photon/Voice/RemoteVoice.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.RemoteVoiceInfo <>2__current
[[deprecated("Use field access instead!")]] ::Photon::Voice::RemoteVoiceInfo*& Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Photon::Voice::RemoteVoiceInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.VoiceClient <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Collections.Generic.Dictionary`2<System.Byte,Photon.Voice.RemoteVoice>> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>*>::Enumerator& Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.Int32,System.Collections.Generic.Dictionary`2<System.Byte,Photon.Voice.RemoteVoice>> <playerVoices>5__3
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>*>& Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$playerVoices$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$playerVoices$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerVoices>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<int, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/Enumerator<System.Byte,Photon.Voice.RemoteVoice> <>7__wrap3
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>::Enumerator& Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::dyn_$$7__wrap3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Voice::RemoteVoice*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.System.IDisposable.Dispose
void Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.MoveNext
bool Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.<>m__Finally1
void Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.<>m__Finally2
void Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.System.Collections.Generic.IEnumerator<Photon.Voice.RemoteVoiceInfo>.get_Current
::Photon::Voice::RemoteVoiceInfo* Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System_Collections_Generic_IEnumerator$Photon_Voice_RemoteVoiceInfo$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System.Collections.Generic.IEnumerator<Photon.Voice.RemoteVoiceInfo>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::RemoteVoiceInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.System.Collections.IEnumerator.Reset
void Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.System.Collections.Generic.IEnumerable<Photon.Voice.RemoteVoiceInfo>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Photon::Voice::RemoteVoiceInfo*>* Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System_Collections_Generic_IEnumerable$Photon_Voice_RemoteVoiceInfo$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System.Collections.Generic.IEnumerable<Photon.Voice.RemoteVoiceInfo>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Photon::Voice::RemoteVoiceInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<get_RemoteVoiceInfos>d__40.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::VoiceClient::$get_RemoteVoiceInfos$d__40*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass48_0
#include "Photon/Voice/VoiceClient_--c__DisplayClass48_0.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.VoiceClient <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::VoiceClient::$$c__DisplayClass48_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass48_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.IEncoder encoder
[[deprecated("Use field access instead!")]] ::Photon::Voice::IEncoder*& Photon::Voice::VoiceClient::$$c__DisplayClass48_0::dyn_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass48_0::dyn_encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoder"))->offset;
  return *reinterpret_cast<::Photon::Voice::IEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.VoiceInfo voiceInfo
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceInfo& Photon::Voice::VoiceClient::$$c__DisplayClass48_0::dyn_voiceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass48_0::dyn_voiceInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceInfo"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceClient/<>c__DisplayClass48_0.<CreateLocalVoice>b__0
::Photon::Voice::LocalVoice* Photon::Voice::VoiceClient::$$c__DisplayClass48_0::$CreateLocalVoice$b__0(uint8_t vId, int chId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass48_0::<CreateLocalVoice>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalVoice>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vId), ::il2cpp_utils::ExtractType(chId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::LocalVoice*, false>(this, ___internal__method, vId, chId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_0
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_0.hpp"
// Including type: Photon.Voice.LocalVoiceAudio`1
#include "Photon/Voice/LocalVoiceAudio_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.LocalVoiceAudio`1<System.Int16> localVoice
[[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoiceAudio_1<int16_t>*& Photon::Voice::VoiceClient::$$c__DisplayClass51_0::dyn_localVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_0::dyn_localVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localVoice"))->offset;
  return *reinterpret_cast<::Photon::Voice::LocalVoiceAudio_1<int16_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceClient/<>c__DisplayClass51_0.<CreateLocalVoiceAudioFromSource>b__0
void Photon::Voice::VoiceClient::$$c__DisplayClass51_0::$CreateLocalVoiceAudioFromSource$b__0(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_0::<CreateLocalVoiceAudioFromSource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalVoiceAudioFromSource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf);
}
