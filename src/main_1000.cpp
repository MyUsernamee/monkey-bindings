// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509Stores/Names
#include "Mono/Security/X509/X509Stores_Names.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String Personal
::StringW Mono::Security::X509::X509Stores::Names::_get_Personal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_get_Personal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.X509", "X509Stores/Names", "Personal"));
}
// Autogenerated static field setter
// Set static field: static public System.String Personal
void Mono::Security::X509::X509Stores::Names::_set_Personal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_set_Personal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Stores/Names", "Personal", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OtherPeople
::StringW Mono::Security::X509::X509Stores::Names::_get_OtherPeople() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_get_OtherPeople");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.X509", "X509Stores/Names", "OtherPeople"));
}
// Autogenerated static field setter
// Set static field: static public System.String OtherPeople
void Mono::Security::X509::X509Stores::Names::_set_OtherPeople(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_set_OtherPeople");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Stores/Names", "OtherPeople", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IntermediateCA
::StringW Mono::Security::X509::X509Stores::Names::_get_IntermediateCA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_get_IntermediateCA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.X509", "X509Stores/Names", "IntermediateCA"));
}
// Autogenerated static field setter
// Set static field: static public System.String IntermediateCA
void Mono::Security::X509::X509Stores::Names::_set_IntermediateCA(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_set_IntermediateCA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Stores/Names", "IntermediateCA", value));
}
// Autogenerated static field getter
// Get static field: static public System.String TrustedRoot
::StringW Mono::Security::X509::X509Stores::Names::_get_TrustedRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_get_TrustedRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.X509", "X509Stores/Names", "TrustedRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.String TrustedRoot
void Mono::Security::X509::X509Stores::Names::_set_TrustedRoot(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_set_TrustedRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Stores/Names", "TrustedRoot", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Untrusted
::StringW Mono::Security::X509::X509Stores::Names::_get_Untrusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_get_Untrusted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.X509", "X509Stores/Names", "Untrusted"));
}
// Autogenerated static field setter
// Set static field: static public System.String Untrusted
void Mono::Security::X509::X509Stores::Names::_set_Untrusted(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Stores::Names::_set_Untrusted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Stores/Names", "Untrusted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520
#include "Mono/Security/X509/X520.hpp"
// Including type: Mono.Security.X509.X520/AttributeTypeAndValue
#include "Mono/Security/X509/X520_AttributeTypeAndValue.hpp"
// Including type: Mono.Security.X509.X520/Name
#include "Mono/Security/X509/X520_Name.hpp"
// Including type: Mono.Security.X509.X520/CommonName
#include "Mono/Security/X509/X520_CommonName.hpp"
// Including type: Mono.Security.X509.X520/SerialNumber
#include "Mono/Security/X509/X520_SerialNumber.hpp"
// Including type: Mono.Security.X509.X520/LocalityName
#include "Mono/Security/X509/X520_LocalityName.hpp"
// Including type: Mono.Security.X509.X520/StateOrProvinceName
#include "Mono/Security/X509/X520_StateOrProvinceName.hpp"
// Including type: Mono.Security.X509.X520/OrganizationName
#include "Mono/Security/X509/X520_OrganizationName.hpp"
// Including type: Mono.Security.X509.X520/OrganizationalUnitName
#include "Mono/Security/X509/X520_OrganizationalUnitName.hpp"
// Including type: Mono.Security.X509.X520/EmailAddress
#include "Mono/Security/X509/X520_EmailAddress.hpp"
// Including type: Mono.Security.X509.X520/DomainComponent
#include "Mono/Security/X509/X520_DomainComponent.hpp"
// Including type: Mono.Security.X509.X520/UserId
#include "Mono/Security/X509/X520_UserId.hpp"
// Including type: Mono.Security.X509.X520/Oid
#include "Mono/Security/X509/X520_Oid.hpp"
// Including type: Mono.Security.X509.X520/Title
#include "Mono/Security/X509/X520_Title.hpp"
// Including type: Mono.Security.X509.X520/CountryName
#include "Mono/Security/X509/X520_CountryName.hpp"
// Including type: Mono.Security.X509.X520/DnQualifier
#include "Mono/Security/X509/X520_DnQualifier.hpp"
// Including type: Mono.Security.X509.X520/Surname
#include "Mono/Security/X509/X520_Surname.hpp"
// Including type: Mono.Security.X509.X520/GivenName
#include "Mono/Security/X509/X520_GivenName.hpp"
// Including type: Mono.Security.X509.X520/Initial
#include "Mono/Security/X509/X520_Initial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/AttributeTypeAndValue
#include "Mono/Security/X509/X520_AttributeTypeAndValue.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String oid
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::X520::AttributeTypeAndValue::dyn_oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::dyn_oid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String attrValue
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::X520::AttributeTypeAndValue::dyn_attrValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::dyn_attrValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 upperBound
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::X520::AttributeTypeAndValue::dyn_upperBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::dyn_upperBound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upperBound"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte encoding
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::X509::X520::AttributeTypeAndValue::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.get_Value
::StringW Mono::Security::X509::X520::AttributeTypeAndValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.set_Value
void Mono::Security::X509::X520::AttributeTypeAndValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.get_ASN1
::Mono::Security::ASN1* Mono::Security::X509::X520::AttributeTypeAndValue::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::get_ASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.GetASN1
::Mono::Security::ASN1* Mono::Security::X509::X520::AttributeTypeAndValue::GetASN1(uint8_t encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::GetASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method, encoding);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.GetASN1
::Mono::Security::ASN1* Mono::Security::X509::X520::AttributeTypeAndValue::GetASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::GetASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.GetBytes
::ArrayW<uint8_t> Mono::Security::X509::X520::AttributeTypeAndValue::GetBytes(uint8_t encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, encoding);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.GetBytes
::ArrayW<uint8_t> Mono::Security::X509::X520::AttributeTypeAndValue::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X520/AttributeTypeAndValue.SelectBestEncoding
uint8_t Mono::Security::X509::X520::AttributeTypeAndValue::SelectBestEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X520::AttributeTypeAndValue::SelectBestEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectBestEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/Name
#include "Mono/Security/X509/X520_Name.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/CommonName
#include "Mono/Security/X509/X520_CommonName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/SerialNumber
#include "Mono/Security/X509/X520_SerialNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/LocalityName
#include "Mono/Security/X509/X520_LocalityName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/StateOrProvinceName
#include "Mono/Security/X509/X520_StateOrProvinceName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/OrganizationName
#include "Mono/Security/X509/X520_OrganizationName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/OrganizationalUnitName
#include "Mono/Security/X509/X520_OrganizationalUnitName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/EmailAddress
#include "Mono/Security/X509/X520_EmailAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/DomainComponent
#include "Mono/Security/X509/X520_DomainComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/UserId
#include "Mono/Security/X509/X520_UserId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/Oid
#include "Mono/Security/X509/X520_Oid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/Title
#include "Mono/Security/X509/X520_Title.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/CountryName
#include "Mono/Security/X509/X520_CountryName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/DnQualifier
#include "Mono/Security/X509/X520_DnQualifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/Surname
#include "Mono/Security/X509/X520_Surname.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/GivenName
#include "Mono/Security/X509/X520_GivenName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X520/Initial
#include "Mono/Security/X509/X520_Initial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension
#include "Mono/Security/X509/Extensions/AuthorityKeyIdentifierExtension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] aki
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::dyn_aki() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::dyn_aki");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aki"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.get_Identifier
::ArrayW<uint8_t> Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.Decode
void Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.Encode
void Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Encode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.get_Name
::StringW Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.ToString
::StringW Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.BasicConstraintsExtension
#include "Mono/Security/X509/Extensions/BasicConstraintsExtension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean cA
[[deprecated("Use field access instead!")]] bool& Mono::Security::X509::Extensions::BasicConstraintsExtension::dyn_cA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::BasicConstraintsExtension::dyn_cA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cA"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pathLenConstraint
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::Extensions::BasicConstraintsExtension::dyn_pathLenConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::BasicConstraintsExtension::dyn_pathLenConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathLenConstraint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.BasicConstraintsExtension.get_CertificateAuthority
bool Mono::Security::X509::Extensions::BasicConstraintsExtension::get_CertificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::BasicConstraintsExtension::get_CertificateAuthority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateAuthority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.BasicConstraintsExtension.Decode
void Mono::Security::X509::Extensions::BasicConstraintsExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::BasicConstraintsExtension::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.BasicConstraintsExtension.Encode
void Mono::Security::X509::Extensions::BasicConstraintsExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::BasicConstraintsExtension::Encode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.BasicConstraintsExtension.get_Name
::StringW Mono::Security::X509::Extensions::BasicConstraintsExtension::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::BasicConstraintsExtension::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.BasicConstraintsExtension.ToString
::StringW Mono::Security::X509::Extensions::BasicConstraintsExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::BasicConstraintsExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.ExtendedKeyUsageExtension
#include "Mono/Security/X509/Extensions/ExtendedKeyUsageExtension.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList keyPurpose
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::dyn_keyPurpose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::dyn_keyPurpose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyPurpose"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.ExtendedKeyUsageExtension.get_KeyPurpose
::System::Collections::ArrayList* Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::get_KeyPurpose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::get_KeyPurpose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyPurpose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.ExtendedKeyUsageExtension.Decode
void Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.ExtendedKeyUsageExtension.Encode
void Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::Encode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.ExtendedKeyUsageExtension.get_Name
::StringW Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.ExtendedKeyUsageExtension.ToString
::StringW Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::ExtendedKeyUsageExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.Extensions.GeneralNames
#include "Mono/Security/X509/Extensions/GeneralNames.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList rfc822Name
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::Extensions::GeneralNames::dyn_rfc822Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::dyn_rfc822Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rfc822Name"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList dnsName
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::Extensions::GeneralNames::dyn_dnsName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::dyn_dnsName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dnsName"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList directoryNames
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::Extensions::GeneralNames::dyn_directoryNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::dyn_directoryNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directoryNames"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList uris
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::Extensions::GeneralNames::dyn_uris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::dyn_uris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uris"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList ipAddr
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::Extensions::GeneralNames::dyn_ipAddr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::dyn_ipAddr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ipAddr"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.GeneralNames.get_DNSNames
::ArrayW<::StringW> Mono::Security::X509::Extensions::GeneralNames::get_DNSNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::get_DNSNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DNSNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.GeneralNames.get_IPAddresses
::ArrayW<::StringW> Mono::Security::X509::Extensions::GeneralNames::get_IPAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::get_IPAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IPAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.GeneralNames.ToString
::StringW Mono::Security::X509::Extensions::GeneralNames::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::GeneralNames::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.KeyUsages
#include "Mono/Security/X509/Extensions/KeyUsages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages digitalSignature
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_digitalSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_digitalSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "digitalSignature"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages digitalSignature
void Mono::Security::X509::Extensions::KeyUsages::_set_digitalSignature(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_digitalSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "digitalSignature", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages nonRepudiation
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_nonRepudiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_nonRepudiation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "nonRepudiation"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages nonRepudiation
void Mono::Security::X509::Extensions::KeyUsages::_set_nonRepudiation(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_nonRepudiation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "nonRepudiation", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages keyEncipherment
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_keyEncipherment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_keyEncipherment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "keyEncipherment"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages keyEncipherment
void Mono::Security::X509::Extensions::KeyUsages::_set_keyEncipherment(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_keyEncipherment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "keyEncipherment", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages dataEncipherment
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_dataEncipherment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_dataEncipherment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "dataEncipherment"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages dataEncipherment
void Mono::Security::X509::Extensions::KeyUsages::_set_dataEncipherment(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_dataEncipherment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "dataEncipherment", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages keyAgreement
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_keyAgreement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_keyAgreement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "keyAgreement"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages keyAgreement
void Mono::Security::X509::Extensions::KeyUsages::_set_keyAgreement(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_keyAgreement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "keyAgreement", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages keyCertSign
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_keyCertSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_keyCertSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "keyCertSign"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages keyCertSign
void Mono::Security::X509::Extensions::KeyUsages::_set_keyCertSign(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_keyCertSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "keyCertSign", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages cRLSign
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_cRLSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_cRLSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "cRLSign"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages cRLSign
void Mono::Security::X509::Extensions::KeyUsages::_set_cRLSign(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_cRLSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "cRLSign", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages encipherOnly
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_encipherOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_encipherOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "encipherOnly"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages encipherOnly
void Mono::Security::X509::Extensions::KeyUsages::_set_encipherOnly(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_encipherOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "encipherOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages decipherOnly
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_decipherOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_decipherOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "decipherOnly"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages decipherOnly
void Mono::Security::X509::Extensions::KeyUsages::_set_decipherOnly(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_decipherOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "decipherOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.KeyUsages none
::Mono::Security::X509::Extensions::KeyUsages Mono::Security::X509::Extensions::KeyUsages::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::KeyUsages>("Mono.Security.X509.Extensions", "KeyUsages", "none"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.KeyUsages none
void Mono::Security::X509::Extensions::KeyUsages::_set_none(::Mono::Security::X509::Extensions::KeyUsages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "KeyUsages", "none", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::Extensions::KeyUsages::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsages::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.KeyUsageExtension
#include "Mono/Security/X509/Extensions/KeyUsageExtension.hpp"
// Including type: Mono.Security.X509.Extensions.KeyUsages
#include "Mono/Security/X509/Extensions/KeyUsages.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 kubits
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::Extensions::KeyUsageExtension::dyn_kubits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsageExtension::dyn_kubits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kubits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.KeyUsageExtension.Support
bool Mono::Security::X509::Extensions::KeyUsageExtension::Support(::Mono::Security::X509::Extensions::KeyUsages usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsageExtension::Support");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Support", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage);
}
// Autogenerated method: Mono.Security.X509.Extensions.KeyUsageExtension.Decode
void Mono::Security::X509::Extensions::KeyUsageExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsageExtension::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.KeyUsageExtension.Encode
void Mono::Security::X509::Extensions::KeyUsageExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsageExtension::Encode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.KeyUsageExtension.get_Name
::StringW Mono::Security::X509::Extensions::KeyUsageExtension::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsageExtension::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.KeyUsageExtension.ToString
::StringW Mono::Security::X509::Extensions::KeyUsageExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::KeyUsageExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.NetscapeCertTypeExtension
#include "Mono/Security/X509/Extensions/NetscapeCertTypeExtension.hpp"
// Including type: Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes
#include "Mono/Security/X509/Extensions/NetscapeCertTypeExtension_CertTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 ctbits
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::Extensions::NetscapeCertTypeExtension::dyn_ctbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::dyn_ctbits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctbits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.NetscapeCertTypeExtension.Support
bool Mono::Security::X509::Extensions::NetscapeCertTypeExtension::Support(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::Support");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Support", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, usage);
}
// Autogenerated method: Mono.Security.X509.Extensions.NetscapeCertTypeExtension.Decode
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.NetscapeCertTypeExtension.get_Name
::StringW Mono::Security::X509::Extensions::NetscapeCertTypeExtension::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.NetscapeCertTypeExtension.ToString
::StringW Mono::Security::X509::Extensions::NetscapeCertTypeExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes
#include "Mono/Security/X509/Extensions/NetscapeCertTypeExtension_CertTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SslClient
::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SslClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SslClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes>("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SslClient"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SslClient
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SslClient(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SslClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SslClient", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SslServer
::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SslServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SslServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes>("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SslServer"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SslServer
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SslServer(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SslServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SslServer", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes Smime
::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_Smime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_Smime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes>("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "Smime"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes Smime
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_Smime(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_Smime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "Smime", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes ObjectSigning
::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_ObjectSigning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_ObjectSigning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes>("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "ObjectSigning"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes ObjectSigning
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_ObjectSigning(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_ObjectSigning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "ObjectSigning", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SslCA
::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SslCA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SslCA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes>("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SslCA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SslCA
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SslCA(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SslCA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SslCA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SmimeCA
::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SmimeCA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_SmimeCA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes>("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SmimeCA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes SmimeCA
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SmimeCA(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_SmimeCA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "SmimeCA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes ObjectSigningCA
::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_ObjectSigningCA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_get_ObjectSigningCA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes>("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "ObjectSigningCA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.X509.Extensions.NetscapeCertTypeExtension/CertTypes ObjectSigningCA
void Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_ObjectSigningCA(::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::_set_ObjectSigningCA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509.Extensions", "NetscapeCertTypeExtension/CertTypes", "ObjectSigningCA", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::NetscapeCertTypeExtension::CertTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.SubjectAltNameExtension
#include "Mono/Security/X509/Extensions/SubjectAltNameExtension.hpp"
// Including type: Mono.Security.X509.Extensions.GeneralNames
#include "Mono/Security/X509/Extensions/GeneralNames.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.Extensions.GeneralNames _names
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::Extensions::GeneralNames*& Mono::Security::X509::Extensions::SubjectAltNameExtension::dyn__names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectAltNameExtension::dyn__names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_names"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::Extensions::GeneralNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectAltNameExtension.get_DNSNames
::ArrayW<::StringW> Mono::Security::X509::Extensions::SubjectAltNameExtension::get_DNSNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectAltNameExtension::get_DNSNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DNSNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectAltNameExtension.get_IPAddresses
::ArrayW<::StringW> Mono::Security::X509::Extensions::SubjectAltNameExtension::get_IPAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectAltNameExtension::get_IPAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IPAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectAltNameExtension.Decode
void Mono::Security::X509::Extensions::SubjectAltNameExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectAltNameExtension::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectAltNameExtension.get_Name
::StringW Mono::Security::X509::Extensions::SubjectAltNameExtension::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectAltNameExtension::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectAltNameExtension.ToString
::StringW Mono::Security::X509::Extensions::SubjectAltNameExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectAltNameExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.Extensions.SubjectKeyIdentifierExtension
#include "Mono/Security/X509/Extensions/SubjectKeyIdentifierExtension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] ski
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::dyn_ski() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::dyn_ski");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ski"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectKeyIdentifierExtension.get_Identifier
::ArrayW<uint8_t> Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectKeyIdentifierExtension.Decode
void Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectKeyIdentifierExtension.Encode
void Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::Encode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectKeyIdentifierExtension.get_Name
::StringW Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.SubjectKeyIdentifierExtension.ToString
::StringW Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::Extensions::SubjectKeyIdentifierExtension::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::X509::X509Extension*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.AlertLevel
#include "Mono/Security/Protocol/Tls/AlertLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertLevel Warning
::Mono::Security::Protocol::Tls::AlertLevel Mono::Security::Protocol::Tls::AlertLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertLevel>("Mono.Security.Protocol.Tls", "AlertLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertLevel Warning
void Mono::Security::Protocol::Tls::AlertLevel::_set_Warning(::Mono::Security::Protocol::Tls::AlertLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertLevel Fatal
::Mono::Security::Protocol::Tls::AlertLevel Mono::Security::Protocol::Tls::AlertLevel::_get_Fatal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertLevel::_get_Fatal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertLevel>("Mono.Security.Protocol.Tls", "AlertLevel", "Fatal"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertLevel Fatal
void Mono::Security::Protocol::Tls::AlertLevel::_set_Fatal(::Mono::Security::Protocol::Tls::AlertLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertLevel::_set_Fatal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertLevel", "Fatal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::AlertLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.AlertDescription
#include "Mono/Security/Protocol/Tls/AlertDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription CloseNotify
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_CloseNotify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_CloseNotify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "CloseNotify"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription CloseNotify
void Mono::Security::Protocol::Tls::AlertDescription::_set_CloseNotify(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_CloseNotify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "CloseNotify", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription UnexpectedMessage
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_UnexpectedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_UnexpectedMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "UnexpectedMessage"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription UnexpectedMessage
void Mono::Security::Protocol::Tls::AlertDescription::_set_UnexpectedMessage(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_UnexpectedMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "UnexpectedMessage", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription BadRecordMAC
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_BadRecordMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_BadRecordMAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "BadRecordMAC"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription BadRecordMAC
void Mono::Security::Protocol::Tls::AlertDescription::_set_BadRecordMAC(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_BadRecordMAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "BadRecordMAC", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription DecryptionFailed
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_DecryptionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_DecryptionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "DecryptionFailed"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription DecryptionFailed
void Mono::Security::Protocol::Tls::AlertDescription::_set_DecryptionFailed(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_DecryptionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "DecryptionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription RecordOverflow
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_RecordOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_RecordOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "RecordOverflow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription RecordOverflow
void Mono::Security::Protocol::Tls::AlertDescription::_set_RecordOverflow(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_RecordOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "RecordOverflow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription DecompressionFailiure
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_DecompressionFailiure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_DecompressionFailiure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "DecompressionFailiure"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription DecompressionFailiure
void Mono::Security::Protocol::Tls::AlertDescription::_set_DecompressionFailiure(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_DecompressionFailiure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "DecompressionFailiure", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription HandshakeFailiure
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_HandshakeFailiure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_HandshakeFailiure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "HandshakeFailiure"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription HandshakeFailiure
void Mono::Security::Protocol::Tls::AlertDescription::_set_HandshakeFailiure(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_HandshakeFailiure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "HandshakeFailiure", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription NoCertificate
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_NoCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_NoCertificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "NoCertificate"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription NoCertificate
void Mono::Security::Protocol::Tls::AlertDescription::_set_NoCertificate(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_NoCertificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "NoCertificate", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription BadCertificate
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_BadCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_BadCertificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "BadCertificate"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription BadCertificate
void Mono::Security::Protocol::Tls::AlertDescription::_set_BadCertificate(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_BadCertificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "BadCertificate", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription UnsupportedCertificate
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_UnsupportedCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_UnsupportedCertificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "UnsupportedCertificate"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription UnsupportedCertificate
void Mono::Security::Protocol::Tls::AlertDescription::_set_UnsupportedCertificate(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_UnsupportedCertificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "UnsupportedCertificate", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription CertificateRevoked
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_CertificateRevoked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_CertificateRevoked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "CertificateRevoked"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription CertificateRevoked
void Mono::Security::Protocol::Tls::AlertDescription::_set_CertificateRevoked(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_CertificateRevoked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "CertificateRevoked", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription CertificateExpired
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_CertificateExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_CertificateExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "CertificateExpired"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription CertificateExpired
void Mono::Security::Protocol::Tls::AlertDescription::_set_CertificateExpired(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_CertificateExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "CertificateExpired", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription CertificateUnknown
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_CertificateUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_CertificateUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "CertificateUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription CertificateUnknown
void Mono::Security::Protocol::Tls::AlertDescription::_set_CertificateUnknown(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_CertificateUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "CertificateUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription IlegalParameter
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_IlegalParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_IlegalParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "IlegalParameter"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription IlegalParameter
void Mono::Security::Protocol::Tls::AlertDescription::_set_IlegalParameter(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_IlegalParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "IlegalParameter", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription UnknownCA
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_UnknownCA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_UnknownCA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "UnknownCA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription UnknownCA
void Mono::Security::Protocol::Tls::AlertDescription::_set_UnknownCA(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_UnknownCA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "UnknownCA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription AccessDenied
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription AccessDenied
void Mono::Security::Protocol::Tls::AlertDescription::_set_AccessDenied(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription DecodeError
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_DecodeError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_DecodeError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "DecodeError"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription DecodeError
void Mono::Security::Protocol::Tls::AlertDescription::_set_DecodeError(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_DecodeError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "DecodeError", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription DecryptError
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_DecryptError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_DecryptError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "DecryptError"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription DecryptError
void Mono::Security::Protocol::Tls::AlertDescription::_set_DecryptError(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_DecryptError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "DecryptError", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription ExportRestriction
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_ExportRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_ExportRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "ExportRestriction"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription ExportRestriction
void Mono::Security::Protocol::Tls::AlertDescription::_set_ExportRestriction(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_ExportRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "ExportRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription ProtocolVersion
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_ProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "ProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription ProtocolVersion
void Mono::Security::Protocol::Tls::AlertDescription::_set_ProtocolVersion(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_ProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "ProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription InsuficientSecurity
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_InsuficientSecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_InsuficientSecurity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "InsuficientSecurity"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription InsuficientSecurity
void Mono::Security::Protocol::Tls::AlertDescription::_set_InsuficientSecurity(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_InsuficientSecurity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "InsuficientSecurity", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription InternalError
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_InternalError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_InternalError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "InternalError"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription InternalError
void Mono::Security::Protocol::Tls::AlertDescription::_set_InternalError(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_InternalError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "InternalError", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription UserCancelled
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_UserCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_UserCancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "UserCancelled"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription UserCancelled
void Mono::Security::Protocol::Tls::AlertDescription::_set_UserCancelled(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_UserCancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "UserCancelled", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.AlertDescription NoRenegotiation
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::AlertDescription::_get_NoRenegotiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_get_NoRenegotiation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::AlertDescription>("Mono.Security.Protocol.Tls", "AlertDescription", "NoRenegotiation"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.AlertDescription NoRenegotiation
void Mono::Security::Protocol::Tls::AlertDescription::_set_NoRenegotiation(::Mono::Security::Protocol::Tls::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::_set_NoRenegotiation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "AlertDescription", "NoRenegotiation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::AlertDescription::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::AlertDescription::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Alert
#include "Mono/Security/Protocol/Tls/Alert.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.AlertLevel level
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::AlertLevel& Mono::Security::Protocol::Tls::Alert::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::AlertLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.AlertDescription description
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::AlertDescription& Mono::Security::Protocol::Tls::Alert::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::AlertDescription*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Alert.get_Level
::Mono::Security::Protocol::Tls::AlertLevel Mono::Security::Protocol::Tls::Alert::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::AlertLevel, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Alert.get_Description
::Mono::Security::Protocol::Tls::AlertDescription Mono::Security::Protocol::Tls::Alert::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::get_Description");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::AlertDescription, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Alert.get_Message
::StringW Mono::Security::Protocol::Tls::Alert::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Alert.get_IsWarning
bool Mono::Security::Protocol::Tls::Alert::get_IsWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::get_IsWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Alert.get_IsCloseNotify
bool Mono::Security::Protocol::Tls::Alert::get_IsCloseNotify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::get_IsCloseNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCloseNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Alert.inferAlertLevel
::Mono::Security::Protocol::Tls::AlertLevel Mono::Security::Protocol::Tls::Alert::inferAlertLevel(::Mono::Security::Protocol::Tls::AlertDescription description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::inferAlertLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "Alert", "inferAlertLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::AlertLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, description);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Alert.GetAlertMessage
::StringW Mono::Security::Protocol::Tls::Alert::GetAlertMessage(::Mono::Security::Protocol::Tls::AlertDescription description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Alert::GetAlertMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "Alert", "GetAlertMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, description);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.CipherAlgorithmType
#include "Mono/Security/Protocol/Tls/CipherAlgorithmType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Des
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Des() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Des");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CipherAlgorithmType>("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Des"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Des
void Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Des(::Mono::Security::Protocol::Tls::CipherAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Des");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Des", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType None
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CipherAlgorithmType>("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType None
void Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_None(::Mono::Security::Protocol::Tls::CipherAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Rc2
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Rc2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Rc2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CipherAlgorithmType>("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Rc2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Rc2
void Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Rc2(::Mono::Security::Protocol::Tls::CipherAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Rc2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Rc2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Rc4
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Rc4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Rc4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CipherAlgorithmType>("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Rc4"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Rc4
void Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Rc4(::Mono::Security::Protocol::Tls::CipherAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Rc4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Rc4", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Rijndael
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Rijndael() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_Rijndael");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CipherAlgorithmType>("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Rijndael"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType Rijndael
void Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Rijndael(::Mono::Security::Protocol::Tls::CipherAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_Rijndael");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "Rijndael", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType SkipJack
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_SkipJack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_SkipJack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CipherAlgorithmType>("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "SkipJack"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType SkipJack
void Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_SkipJack(::Mono::Security::Protocol::Tls::CipherAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_SkipJack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "SkipJack", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType TripleDes
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_TripleDes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_get_TripleDes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CipherAlgorithmType>("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "TripleDes"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CipherAlgorithmType TripleDes
void Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_TripleDes(::Mono::Security::Protocol::Tls::CipherAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::_set_TripleDes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherAlgorithmType", "TripleDes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::CipherAlgorithmType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherAlgorithmType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.CipherSuite
#include "Mono/Security/Protocol/Tls/CipherSuite.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
// Including type: System.Security.Cryptography.KeyedHashAlgorithm
#include "System/Security/Cryptography/KeyedHashAlgorithm.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: Mono.Security.Protocol.Tls.ContentType
#include "Mono/Security/Protocol/Tls/ContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte[] EmptyArray
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::CipherSuite::_get_EmptyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::_get_EmptyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Tls", "CipherSuite", "EmptyArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte[] EmptyArray
void Mono::Security::Protocol::Tls::CipherSuite::_set_EmptyArray(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::_set_EmptyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "CipherSuite", "EmptyArray", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 code
[[deprecated("Use field access instead!")]] int16_t& Mono::Security::Protocol::Tls::CipherSuite::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Protocol::Tls::CipherSuite::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CipherAlgorithmType cipherAlgorithmType
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CipherAlgorithmType& Mono::Security::Protocol::Tls::CipherSuite::dyn_cipherAlgorithmType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_cipherAlgorithmType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cipherAlgorithmType"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CipherAlgorithmType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.HashAlgorithmType hashAlgorithmType
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::HashAlgorithmType& Mono::Security::Protocol::Tls::CipherSuite::dyn_hashAlgorithmType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_hashAlgorithmType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashAlgorithmType"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::HashAlgorithmType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.ExchangeAlgorithmType exchangeAlgorithmType
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::ExchangeAlgorithmType& Mono::Security::Protocol::Tls::CipherSuite::dyn_exchangeAlgorithmType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_exchangeAlgorithmType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exchangeAlgorithmType"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isExportable
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::CipherSuite::dyn_isExportable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_isExportable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isExportable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CipherMode cipherMode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CipherMode& Mono::Security::Protocol::Tls::CipherSuite::dyn_cipherMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_cipherMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cipherMode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CipherMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte keyMaterialSize
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::CipherSuite::dyn_keyMaterialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_keyMaterialSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyMaterialSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 keyBlockSize
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::CipherSuite::dyn_keyBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_keyBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyBlockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte expandedKeyMaterialSize
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::CipherSuite::dyn_expandedKeyMaterialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_expandedKeyMaterialSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandedKeyMaterialSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 effectiveKeyBits
[[deprecated("Use field access instead!")]] int16_t& Mono::Security::Protocol::Tls::CipherSuite::dyn_effectiveKeyBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_effectiveKeyBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectiveKeyBits"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte ivSize
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::CipherSuite::dyn_ivSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_ivSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ivSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte blockSize
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::CipherSuite::dyn_blockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_blockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Context context
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Context*& Mono::Security::Protocol::Tls::CipherSuite::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Context**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.SymmetricAlgorithm encryptionAlgorithm
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::SymmetricAlgorithm*& Mono::Security::Protocol::Tls::CipherSuite::dyn_encryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_encryptionAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encryptionAlgorithm"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::SymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.ICryptoTransform encryptionCipher
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::ICryptoTransform*& Mono::Security::Protocol::Tls::CipherSuite::dyn_encryptionCipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_encryptionCipher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encryptionCipher"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::ICryptoTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.SymmetricAlgorithm decryptionAlgorithm
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::SymmetricAlgorithm*& Mono::Security::Protocol::Tls::CipherSuite::dyn_decryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_decryptionAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decryptionAlgorithm"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::SymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.ICryptoTransform decryptionCipher
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::ICryptoTransform*& Mono::Security::Protocol::Tls::CipherSuite::dyn_decryptionCipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_decryptionCipher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decryptionCipher"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::ICryptoTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.KeyedHashAlgorithm clientHMAC
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::KeyedHashAlgorithm*& Mono::Security::Protocol::Tls::CipherSuite::dyn_clientHMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_clientHMAC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientHMAC"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::KeyedHashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.KeyedHashAlgorithm serverHMAC
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::KeyedHashAlgorithm*& Mono::Security::Protocol::Tls::CipherSuite::dyn_serverHMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::dyn_serverHMAC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverHMAC"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::KeyedHashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_EncryptionCipher
::System::Security::Cryptography::ICryptoTransform* Mono::Security::Protocol::Tls::CipherSuite::get_EncryptionCipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_EncryptionCipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptionCipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_DecryptionCipher
::System::Security::Cryptography::ICryptoTransform* Mono::Security::Protocol::Tls::CipherSuite::get_DecryptionCipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_DecryptionCipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DecryptionCipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_ClientHMAC
::System::Security::Cryptography::KeyedHashAlgorithm* Mono::Security::Protocol::Tls::CipherSuite::get_ClientHMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_ClientHMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientHMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeyedHashAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_ServerHMAC
::System::Security::Cryptography::KeyedHashAlgorithm* Mono::Security::Protocol::Tls::CipherSuite::get_ServerHMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_ServerHMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerHMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::KeyedHashAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_CipherAlgorithmType
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::CipherSuite::get_CipherAlgorithmType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_CipherAlgorithmType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CipherAlgorithmType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherAlgorithmType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_HashAlgorithmName
::StringW Mono::Security::Protocol::Tls::CipherSuite::get_HashAlgorithmName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_HashAlgorithmName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashAlgorithmName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.CreateHashAlgorithm
::System::Security::Cryptography::HashAlgorithm* Mono::Security::Protocol::Tls::CipherSuite::CreateHashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::CreateHashAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_HashAlgorithmType
::Mono::Security::Protocol::Tls::HashAlgorithmType Mono::Security::Protocol::Tls::CipherSuite::get_HashAlgorithmType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_HashAlgorithmType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashAlgorithmType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::HashAlgorithmType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_HashSize
int Mono::Security::Protocol::Tls::CipherSuite::get_HashSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_HashSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_ExchangeAlgorithmType
::Mono::Security::Protocol::Tls::ExchangeAlgorithmType Mono::Security::Protocol::Tls::CipherSuite::get_ExchangeAlgorithmType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_ExchangeAlgorithmType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExchangeAlgorithmType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_CipherMode
::System::Security::Cryptography::CipherMode Mono::Security::Protocol::Tls::CipherSuite::get_CipherMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_CipherMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CipherMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_Code
int16_t Mono::Security::Protocol::Tls::CipherSuite::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_Name
::StringW Mono::Security::Protocol::Tls::CipherSuite::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_IsExportable
bool Mono::Security::Protocol::Tls::CipherSuite::get_IsExportable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_IsExportable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExportable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_KeyMaterialSize
uint8_t Mono::Security::Protocol::Tls::CipherSuite::get_KeyMaterialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_KeyMaterialSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyMaterialSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_KeyBlockSize
int Mono::Security::Protocol::Tls::CipherSuite::get_KeyBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_KeyBlockSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_ExpandedKeyMaterialSize
uint8_t Mono::Security::Protocol::Tls::CipherSuite::get_ExpandedKeyMaterialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_ExpandedKeyMaterialSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpandedKeyMaterialSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_EffectiveKeyBits
int16_t Mono::Security::Protocol::Tls::CipherSuite::get_EffectiveKeyBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_EffectiveKeyBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EffectiveKeyBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_IvSize
uint8_t Mono::Security::Protocol::Tls::CipherSuite::get_IvSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_IvSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IvSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.get_Context
::Mono::Security::Protocol::Tls::Context* Mono::Security::Protocol::Tls::CipherSuite::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Context*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.set_Context
void Mono::Security::Protocol::Tls::CipherSuite::set_Context(::Mono::Security::Protocol::Tls::Context* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::set_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.Write
void Mono::Security::Protocol::Tls::CipherSuite::Write(::ArrayW<uint8_t> array, int offset, int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.Write
void Mono::Security::Protocol::Tls::CipherSuite::Write(::ArrayW<uint8_t> array, int offset, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.InitializeCipher
void Mono::Security::Protocol::Tls::CipherSuite::InitializeCipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::InitializeCipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeCipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.EncryptRecord
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::CipherSuite::EncryptRecord(::ArrayW<uint8_t> fragment, ::ArrayW<uint8_t> mac) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::EncryptRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fragment), ::il2cpp_utils::ExtractType(mac)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, fragment, mac);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.DecryptRecord
void Mono::Security::Protocol::Tls::CipherSuite::DecryptRecord(::ArrayW<uint8_t> fragment, ByRef<::ArrayW<uint8_t>> dcrFragment, ByRef<::ArrayW<uint8_t>> dcrMAC) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::DecryptRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecryptRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fragment), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fragment, byref(dcrFragment), byref(dcrMAC));
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.ComputeClientRecordMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::CipherSuite::ComputeClientRecordMAC(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::ComputeClientRecordMAC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.ComputeServerRecordMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::CipherSuite::ComputeServerRecordMAC(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::ComputeServerRecordMAC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.ComputeMasterSecret
void Mono::Security::Protocol::Tls::CipherSuite::ComputeMasterSecret(::ArrayW<uint8_t> preMasterSecret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::ComputeMasterSecret");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preMasterSecret);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.ComputeKeys
void Mono::Security::Protocol::Tls::CipherSuite::ComputeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::ComputeKeys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.CreatePremasterSecret
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::CipherSuite::CreatePremasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::CreatePremasterSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePremasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.PRF
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::CipherSuite::PRF(::ArrayW<uint8_t> secret, ::StringW label, ::ArrayW<uint8_t> data, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::PRF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PRF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, secret, label, data, length);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.Expand
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::CipherSuite::Expand(::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> secret, ::ArrayW<uint8_t> seed, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, hash, secret, seed, length);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.createEncryptionCipher
void Mono::Security::Protocol::Tls::CipherSuite::createEncryptionCipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::createEncryptionCipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createEncryptionCipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite.createDecryptionCipher
void Mono::Security::Protocol::Tls::CipherSuite::createDecryptionCipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::createDecryptionCipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createDecryptionCipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuite..cctor
void Mono::Security::Protocol::Tls::CipherSuite::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuite::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "CipherSuite", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.CipherSuiteCollection
#include "Mono/Security/Protocol/Tls/CipherSuiteCollection.hpp"
// Including type: Mono.Security.Protocol.Tls.CipherSuite
#include "Mono/Security/Protocol/Tls/CipherSuite.hpp"
// Including type: Mono.Security.Protocol.Tls.CipherAlgorithmType
#include "Mono/Security/Protocol/Tls/CipherAlgorithmType.hpp"
// Including type: Mono.Security.Protocol.Tls.HashAlgorithmType
#include "Mono/Security/Protocol/Tls/HashAlgorithmType.hpp"
// Including type: Mono.Security.Protocol.Tls.ExchangeAlgorithmType
#include "Mono/Security/Protocol/Tls/ExchangeAlgorithmType.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityProtocolType protocol
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityProtocolType& Mono::Security::Protocol::Tls::CipherSuiteCollection::dyn_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::dyn_protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocol"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityProtocolType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteCollection.get_Item
::Mono::Security::Protocol::Tls::CipherSuite* Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherSuite*, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteCollection.get_Item
::Mono::Security::Protocol::Tls::CipherSuite* Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item(int16_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherSuite*, false>(this, ___internal__method, code);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteCollection.IndexOf
int Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteCollection.IndexOf
int Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf(int16_t code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, code);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteCollection.Add
void Mono::Security::Protocol::Tls::CipherSuiteCollection::Add(int16_t code, ::StringW name, ::Mono::Security::Protocol::Tls::CipherAlgorithmType cipherType, ::Mono::Security::Protocol::Tls::HashAlgorithmType hashType, ::Mono::Security::Protocol::Tls::ExchangeAlgorithmType exchangeType, bool exportable, bool blockMode, uint8_t keyMaterialSize, uint8_t expandedKeyMaterialSize, int16_t effectiveKeyBytes, uint8_t ivSize, uint8_t blockSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(cipherType), ::il2cpp_utils::ExtractType(hashType), ::il2cpp_utils::ExtractType(exchangeType), ::il2cpp_utils::ExtractType(exportable), ::il2cpp_utils::ExtractType(blockMode), ::il2cpp_utils::ExtractType(keyMaterialSize), ::il2cpp_utils::ExtractType(expandedKeyMaterialSize), ::il2cpp_utils::ExtractType(effectiveKeyBytes), ::il2cpp_utils::ExtractType(ivSize), ::il2cpp_utils::ExtractType(blockSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, name, cipherType, hashType, exchangeType, exportable, blockMode, keyMaterialSize, expandedKeyMaterialSize, effectiveKeyBytes, ivSize, blockSize);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteCollection.GetNames
::System::Collections::Generic::IList_1<::StringW>* Mono::Security::Protocol::Tls::CipherSuiteCollection::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::GetNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.CipherSuiteFactory
#include "Mono/Security/Protocol/Tls/CipherSuiteFactory.hpp"
// Including type: Mono.Security.Protocol.Tls.CipherSuiteCollection
#include "Mono/Security/Protocol/Tls/CipherSuiteCollection.hpp"
// Including type: Mono.Security.Protocol.Tls.SecurityProtocolType
#include "Mono/Security/Protocol/Tls/SecurityProtocolType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteFactory.GetSupportedCiphers
::Mono::Security::Protocol::Tls::CipherSuiteCollection* Mono::Security::Protocol::Tls::CipherSuiteFactory::GetSupportedCiphers(bool server, ::Mono::Security::Protocol::Tls::SecurityProtocolType protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteFactory::GetSupportedCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "CipherSuiteFactory", "GetSupportedCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(protocol)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherSuiteCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, server, protocol);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteFactory.GetTls1SupportedCiphers
::Mono::Security::Protocol::Tls::CipherSuiteCollection* Mono::Security::Protocol::Tls::CipherSuiteFactory::GetTls1SupportedCiphers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteFactory::GetTls1SupportedCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "CipherSuiteFactory", "GetTls1SupportedCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherSuiteCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CipherSuiteFactory.GetSsl3SupportedCiphers
::Mono::Security::Protocol::Tls::CipherSuiteCollection* Mono::Security::Protocol::Tls::CipherSuiteFactory::GetSsl3SupportedCiphers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteFactory::GetSsl3SupportedCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "CipherSuiteFactory", "GetSsl3SupportedCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherSuiteCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.ClientContext
#include "Mono/Security/Protocol/Tls/ClientContext.hpp"
// Including type: Mono.Security.Protocol.Tls.SslClientStream
#include "Mono/Security/Protocol/Tls/SslClientStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SslClientStream sslStream
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SslClientStream*& Mono::Security::Protocol::Tls::ClientContext::dyn_sslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientContext::dyn_sslStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sslStream"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SslClientStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 clientHelloProtocol
[[deprecated("Use field access instead!")]] int16_t& Mono::Security::Protocol::Tls::ClientContext::dyn_clientHelloProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientContext::dyn_clientHelloProtocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientHelloProtocol"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientContext.get_SslStream
::Mono::Security::Protocol::Tls::SslClientStream* Mono::Security::Protocol::Tls::ClientContext::get_SslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientContext::get_SslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SslClientStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientContext.get_ClientHelloProtocol
int16_t Mono::Security::Protocol::Tls::ClientContext::get_ClientHelloProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientContext::get_ClientHelloProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientHelloProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientContext.set_ClientHelloProtocol
void Mono::Security::Protocol::Tls::ClientContext::set_ClientHelloProtocol(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientContext::set_ClientHelloProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientHelloProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientContext.Clear
void Mono::Security::Protocol::Tls::ClientContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientContext::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Context*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.ClientRecordProtocol
#include "Mono/Security/Protocol/Tls/ClientRecordProtocol.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Protocol.Tls.ClientContext
#include "Mono/Security/Protocol/Tls/ClientContext.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeMessage.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeType
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeType.hpp"
// Including type: Mono.Security.Protocol.Tls.TlsStream
#include "Mono/Security/Protocol/Tls/TlsStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.ClientRecordProtocol.createClientHandshakeMessage
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::ClientRecordProtocol::createClientHandshakeMessage(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientRecordProtocol::createClientHandshakeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createClientHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method, type);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientRecordProtocol.createServerHandshakeMessage
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::ClientRecordProtocol::createServerHandshakeMessage(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientRecordProtocol::createServerHandshakeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createServerHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method, type, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientRecordProtocol.GetMessage
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::ClientRecordProtocol::GetMessage(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientRecordProtocol::GetMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method, type);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientRecordProtocol.ProcessHandshakeMessage
void Mono::Security::Protocol::Tls::ClientRecordProtocol::ProcessHandshakeMessage(::Mono::Security::Protocol::Tls::TlsStream* handMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientRecordProtocol::ProcessHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handMsg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.ClientSessionInfo
#include "Mono/Security/Protocol/Tls/ClientSessionInfo.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DefaultValidityInterval
int Mono::Security::Protocol::Tls::ClientSessionInfo::_get_DefaultValidityInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::_get_DefaultValidityInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.Protocol.Tls", "ClientSessionInfo", "DefaultValidityInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DefaultValidityInterval
void Mono::Security::Protocol::Tls::ClientSessionInfo::_set_DefaultValidityInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::_set_DefaultValidityInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ClientSessionInfo", "DefaultValidityInterval", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 ValidityInterval
int Mono::Security::Protocol::Tls::ClientSessionInfo::_get_ValidityInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::_get_ValidityInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.Protocol.Tls", "ClientSessionInfo", "ValidityInterval"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 ValidityInterval
void Mono::Security::Protocol::Tls::ClientSessionInfo::_set_ValidityInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::_set_ValidityInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ClientSessionInfo", "ValidityInterval", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime validuntil
[[deprecated("Use field access instead!")]] ::System::DateTime& Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_validuntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_validuntil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validuntil"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String host
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] sid
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_sid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_sid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sid"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] masterSecret
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_masterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::dyn_masterSecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "masterSecret"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo..cctor
void Mono::Security::Protocol::Tls::ClientSessionInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "ClientSessionInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.get_HostName
::StringW Mono::Security::Protocol::Tls::ClientSessionInfo::get_HostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::get_HostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.get_Id
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::ClientSessionInfo::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.get_Valid
bool Mono::Security::Protocol::Tls::ClientSessionInfo::get_Valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::get_Valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.GetContext
void Mono::Security::Protocol::Tls::ClientSessionInfo::GetContext(::Mono::Security::Protocol::Tls::Context* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::GetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.SetContext
void Mono::Security::Protocol::Tls::ClientSessionInfo::SetContext(::Mono::Security::Protocol::Tls::Context* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::SetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.KeepAlive
void Mono::Security::Protocol::Tls::ClientSessionInfo::KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::KeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.Dispose
void Mono::Security::Protocol::Tls::ClientSessionInfo::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::ClientSessionInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.Dispose
void Mono::Security::Protocol::Tls::ClientSessionInfo::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.CheckDisposed
void Mono::Security::Protocol::Tls::ClientSessionInfo::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionInfo.Finalize
void Mono::Security::Protocol::Tls::ClientSessionInfo::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionInfo::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.ClientSessionCache
#include "Mono/Security/Protocol/Tls/ClientSessionCache.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: Mono.Security.Protocol.Tls.ClientSessionInfo
#include "Mono/Security/Protocol/Tls/ClientSessionInfo.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable cache
::System::Collections::Hashtable* Mono::Security::Protocol::Tls::ClientSessionCache::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::_get_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("Mono.Security.Protocol.Tls", "ClientSessionCache", "cache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable cache
void Mono::Security::Protocol::Tls::ClientSessionCache::_set_cache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ClientSessionCache", "cache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* Mono::Security::Protocol::Tls::ClientSessionCache::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Security.Protocol.Tls", "ClientSessionCache", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void Mono::Security::Protocol::Tls::ClientSessionCache::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ClientSessionCache", "locker", value));
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionCache..cctor
void Mono::Security::Protocol::Tls::ClientSessionCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "ClientSessionCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionCache.Add
void Mono::Security::Protocol::Tls::ClientSessionCache::Add(::StringW host, ::ArrayW<uint8_t> id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "ClientSessionCache", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, id);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionCache.FromHost
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::ClientSessionCache::FromHost(::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::FromHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "ClientSessionCache", "FromHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionCache.FromContext
::Mono::Security::Protocol::Tls::ClientSessionInfo* Mono::Security::Protocol::Tls::ClientSessionCache::FromContext(::Mono::Security::Protocol::Tls::Context* context, bool checkValidity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::FromContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "ClientSessionCache", "FromContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(checkValidity)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::ClientSessionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, checkValidity);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionCache.SetContextInCache
bool Mono::Security::Protocol::Tls::ClientSessionCache::SetContextInCache(::Mono::Security::Protocol::Tls::Context* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::SetContextInCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "ClientSessionCache", "SetContextInCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ClientSessionCache.SetContextFromCache
bool Mono::Security::Protocol::Tls::ClientSessionCache::SetContextFromCache(::Mono::Security::Protocol::Tls::Context* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ClientSessionCache::SetContextFromCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "ClientSessionCache", "SetContextFromCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.ContentType
#include "Mono/Security/Protocol/Tls/ContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ContentType ChangeCipherSpec
::Mono::Security::Protocol::Tls::ContentType Mono::Security::Protocol::Tls::ContentType::_get_ChangeCipherSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_get_ChangeCipherSpec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ContentType>("Mono.Security.Protocol.Tls", "ContentType", "ChangeCipherSpec"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ContentType ChangeCipherSpec
void Mono::Security::Protocol::Tls::ContentType::_set_ChangeCipherSpec(::Mono::Security::Protocol::Tls::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_set_ChangeCipherSpec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ContentType", "ChangeCipherSpec", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ContentType Alert
::Mono::Security::Protocol::Tls::ContentType Mono::Security::Protocol::Tls::ContentType::_get_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_get_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ContentType>("Mono.Security.Protocol.Tls", "ContentType", "Alert"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ContentType Alert
void Mono::Security::Protocol::Tls::ContentType::_set_Alert(::Mono::Security::Protocol::Tls::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_set_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ContentType", "Alert", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ContentType Handshake
::Mono::Security::Protocol::Tls::ContentType Mono::Security::Protocol::Tls::ContentType::_get_Handshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_get_Handshake");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ContentType>("Mono.Security.Protocol.Tls", "ContentType", "Handshake"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ContentType Handshake
void Mono::Security::Protocol::Tls::ContentType::_set_Handshake(::Mono::Security::Protocol::Tls::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_set_Handshake");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ContentType", "Handshake", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ContentType ApplicationData
::Mono::Security::Protocol::Tls::ContentType Mono::Security::Protocol::Tls::ContentType::_get_ApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_get_ApplicationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ContentType>("Mono.Security.Protocol.Tls", "ContentType", "ApplicationData"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ContentType ApplicationData
void Mono::Security::Protocol::Tls::ContentType::_set_ApplicationData(::Mono::Security::Protocol::Tls::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::_set_ApplicationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ContentType", "ApplicationData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::ContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: Mono.Security.Protocol.Tls.TlsServerSettings
#include "Mono/Security/Protocol/Tls/TlsServerSettings.hpp"
// Including type: Mono.Security.Protocol.Tls.TlsClientSettings
#include "Mono/Security/Protocol/Tls/TlsClientSettings.hpp"
// Including type: Mono.Security.Protocol.Tls.SecurityParameters
#include "Mono/Security/Protocol/Tls/SecurityParameters.hpp"
// Including type: Mono.Security.Protocol.Tls.CipherSuiteCollection
#include "Mono/Security/Protocol/Tls/CipherSuiteCollection.hpp"
// Including type: Mono.Security.Protocol.Tls.TlsStream
#include "Mono/Security/Protocol/Tls/TlsStream.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: Mono.Security.Protocol.Tls.RecordProtocol
#include "Mono/Security/Protocol/Tls/RecordProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int16 MAX_FRAGMENT_SIZE
int16_t Mono::Security::Protocol::Tls::Context::_get_MAX_FRAGMENT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_get_MAX_FRAGMENT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("Mono.Security.Protocol.Tls", "Context", "MAX_FRAGMENT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static System.Int16 MAX_FRAGMENT_SIZE
void Mono::Security::Protocol::Tls::Context::_set_MAX_FRAGMENT_SIZE(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_set_MAX_FRAGMENT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "Context", "MAX_FRAGMENT_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int16 TLS1_PROTOCOL_CODE
int16_t Mono::Security::Protocol::Tls::Context::_get_TLS1_PROTOCOL_CODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_get_TLS1_PROTOCOL_CODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("Mono.Security.Protocol.Tls", "Context", "TLS1_PROTOCOL_CODE"));
}
// Autogenerated static field setter
// Set static field: static System.Int16 TLS1_PROTOCOL_CODE
void Mono::Security::Protocol::Tls::Context::_set_TLS1_PROTOCOL_CODE(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_set_TLS1_PROTOCOL_CODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "Context", "TLS1_PROTOCOL_CODE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int16 SSL3_PROTOCOL_CODE
int16_t Mono::Security::Protocol::Tls::Context::_get_SSL3_PROTOCOL_CODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_get_SSL3_PROTOCOL_CODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int16_t>("Mono.Security.Protocol.Tls", "Context", "SSL3_PROTOCOL_CODE"));
}
// Autogenerated static field setter
// Set static field: static System.Int16 SSL3_PROTOCOL_CODE
void Mono::Security::Protocol::Tls::Context::_set_SSL3_PROTOCOL_CODE(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_set_SSL3_PROTOCOL_CODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "Context", "SSL3_PROTOCOL_CODE", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 UNIX_BASE_TICKS
int64_t Mono::Security::Protocol::Tls::Context::_get_UNIX_BASE_TICKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_get_UNIX_BASE_TICKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Mono.Security.Protocol.Tls", "Context", "UNIX_BASE_TICKS"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 UNIX_BASE_TICKS
void Mono::Security::Protocol::Tls::Context::_set_UNIX_BASE_TICKS(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::_set_UNIX_BASE_TICKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "Context", "UNIX_BASE_TICKS", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityProtocolType securityProtocol
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityProtocolType& Mono::Security::Protocol::Tls::Context::dyn_securityProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_securityProtocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "securityProtocol"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityProtocolType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] sessionId
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_sessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_sessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionId"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityCompressionType compressionMethod
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityCompressionType& Mono::Security::Protocol::Tls::Context::dyn_compressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_compressionMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressionMethod"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityCompressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.TlsServerSettings serverSettings
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::TlsServerSettings*& Mono::Security::Protocol::Tls::Context::dyn_serverSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_serverSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverSettings"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::TlsServerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.TlsClientSettings clientSettings
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::TlsClientSettings*& Mono::Security::Protocol::Tls::Context::dyn_clientSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_clientSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientSettings"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::TlsClientSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityParameters current
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityParameters*& Mono::Security::Protocol::Tls::Context::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityParameters negotiating
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityParameters*& Mono::Security::Protocol::Tls::Context::dyn_negotiating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_negotiating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negotiating"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityParameters read
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityParameters*& Mono::Security::Protocol::Tls::Context::dyn_read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_read");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "read"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityParameters write
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityParameters*& Mono::Security::Protocol::Tls::Context::dyn_write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_write");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "write"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CipherSuiteCollection supportedCiphers
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CipherSuiteCollection*& Mono::Security::Protocol::Tls::Context::dyn_supportedCiphers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_supportedCiphers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportedCiphers"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CipherSuiteCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Handshake.HandshakeType lastHandshakeMsg
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Handshake::HandshakeType& Mono::Security::Protocol::Tls::Context::dyn_lastHandshakeMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_lastHandshakeMsg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHandshakeMsg"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Handshake::HandshakeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.HandshakeState handshakeState
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::HandshakeState& Mono::Security::Protocol::Tls::Context::dyn_handshakeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_handshakeState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handshakeState"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::HandshakeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean abbreviatedHandshake
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::Context::dyn_abbreviatedHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_abbreviatedHandshake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbreviatedHandshake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean receivedConnectionEnd
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::Context::dyn_receivedConnectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_receivedConnectionEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedConnectionEnd"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean sentConnectionEnd
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::Context::dyn_sentConnectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_sentConnectionEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sentConnectionEnd"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean protocolNegotiated
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::Context::dyn_protocolNegotiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_protocolNegotiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolNegotiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 writeSequenceNumber
[[deprecated("Use field access instead!")]] uint64_t& Mono::Security::Protocol::Tls::Context::dyn_writeSequenceNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_writeSequenceNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeSequenceNumber"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 readSequenceNumber
[[deprecated("Use field access instead!")]] uint64_t& Mono::Security::Protocol::Tls::Context::dyn_readSequenceNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_readSequenceNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readSequenceNumber"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] serverRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] randomCS
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_randomCS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_randomCS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomCS"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] randomSC
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_randomSC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_randomSC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomSC"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] masterSecret
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_masterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_masterSecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "masterSecret"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] clientWriteKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_clientWriteKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_clientWriteKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientWriteKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] serverWriteKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_serverWriteKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_serverWriteKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverWriteKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] clientWriteIV
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_clientWriteIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_clientWriteIV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientWriteIV"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] serverWriteIV
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Context::dyn_serverWriteIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_serverWriteIV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverWriteIV"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.TlsStream handshakeMessages
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::TlsStream*& Mono::Security::Protocol::Tls::Context::dyn_handshakeMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_handshakeMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handshakeMessages"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::TlsStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator random
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::Protocol::Tls::Context::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.RecordProtocol recordProtocol
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::RecordProtocol*& Mono::Security::Protocol::Tls::Context::dyn_recordProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_recordProtocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordProtocol"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::RecordProtocol**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ChangeCipherSpecDone>k__BackingField
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::Context::dyn_$ChangeCipherSpecDone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::dyn_$ChangeCipherSpecDone$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ChangeCipherSpecDone>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_AbbreviatedHandshake
bool Mono::Security::Protocol::Tls::Context::get_AbbreviatedHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_AbbreviatedHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_AbbreviatedHandshake
void Mono::Security::Protocol::Tls::Context::set_AbbreviatedHandshake(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_AbbreviatedHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AbbreviatedHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ProtocolNegotiated
bool Mono::Security::Protocol::Tls::Context::get_ProtocolNegotiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ProtocolNegotiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolNegotiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ProtocolNegotiated
void Mono::Security::Protocol::Tls::Context::set_ProtocolNegotiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ProtocolNegotiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolNegotiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ChangeCipherSpecDone
bool Mono::Security::Protocol::Tls::Context::get_ChangeCipherSpecDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ChangeCipherSpecDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChangeCipherSpecDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ChangeCipherSpecDone
void Mono::Security::Protocol::Tls::Context::set_ChangeCipherSpecDone(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ChangeCipherSpecDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChangeCipherSpecDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_SecurityProtocol
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::Context::get_SecurityProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_SecurityProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecurityProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityProtocolType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_SecurityProtocol
void Mono::Security::Protocol::Tls::Context::set_SecurityProtocol(::Mono::Security::Protocol::Tls::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_SecurityProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SecurityProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_SecurityProtocolFlags
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::Context::get_SecurityProtocolFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_SecurityProtocolFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecurityProtocolFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityProtocolType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_Protocol
int16_t Mono::Security::Protocol::Tls::Context::get_Protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_Protocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Protocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_SessionId
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_SessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_SessionId
void Mono::Security::Protocol::Tls::Context::set_SessionId(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_SessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_CompressionMethod
::Mono::Security::Protocol::Tls::SecurityCompressionType Mono::Security::Protocol::Tls::Context::get_CompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityCompressionType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_CompressionMethod
void Mono::Security::Protocol::Tls::Context::set_CompressionMethod(::Mono::Security::Protocol::Tls::SecurityCompressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ServerSettings
::Mono::Security::Protocol::Tls::TlsServerSettings* Mono::Security::Protocol::Tls::Context::get_ServerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ServerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::TlsServerSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ClientSettings
::Mono::Security::Protocol::Tls::TlsClientSettings* Mono::Security::Protocol::Tls::Context::get_ClientSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ClientSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::TlsClientSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_LastHandshakeMsg
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Context::get_LastHandshakeMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_LastHandshakeMsg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastHandshakeMsg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_LastHandshakeMsg
void Mono::Security::Protocol::Tls::Context::set_LastHandshakeMsg(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_LastHandshakeMsg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastHandshakeMsg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_HandshakeState
::Mono::Security::Protocol::Tls::HandshakeState Mono::Security::Protocol::Tls::Context::get_HandshakeState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_HandshakeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandshakeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::HandshakeState, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_HandshakeState
void Mono::Security::Protocol::Tls::Context::set_HandshakeState(::Mono::Security::Protocol::Tls::HandshakeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_HandshakeState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandshakeState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ReceivedConnectionEnd
bool Mono::Security::Protocol::Tls::Context::get_ReceivedConnectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ReceivedConnectionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceivedConnectionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ReceivedConnectionEnd
void Mono::Security::Protocol::Tls::Context::set_ReceivedConnectionEnd(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ReceivedConnectionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedConnectionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_SentConnectionEnd
bool Mono::Security::Protocol::Tls::Context::get_SentConnectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_SentConnectionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SentConnectionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_SentConnectionEnd
void Mono::Security::Protocol::Tls::Context::set_SentConnectionEnd(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_SentConnectionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SentConnectionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_SupportedCiphers
::Mono::Security::Protocol::Tls::CipherSuiteCollection* Mono::Security::Protocol::Tls::Context::get_SupportedCiphers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_SupportedCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportedCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherSuiteCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_SupportedCiphers
void Mono::Security::Protocol::Tls::Context::set_SupportedCiphers(::Mono::Security::Protocol::Tls::CipherSuiteCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_SupportedCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SupportedCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_HandshakeMessages
::Mono::Security::Protocol::Tls::TlsStream* Mono::Security::Protocol::Tls::Context::get_HandshakeMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_HandshakeMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandshakeMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::TlsStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_WriteSequenceNumber
uint64_t Mono::Security::Protocol::Tls::Context::get_WriteSequenceNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_WriteSequenceNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteSequenceNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_WriteSequenceNumber
void Mono::Security::Protocol::Tls::Context::set_WriteSequenceNumber(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_WriteSequenceNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WriteSequenceNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ReadSequenceNumber
uint64_t Mono::Security::Protocol::Tls::Context::get_ReadSequenceNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ReadSequenceNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadSequenceNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ReadSequenceNumber
void Mono::Security::Protocol::Tls::Context::set_ReadSequenceNumber(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ReadSequenceNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadSequenceNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ClientRandom
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_ClientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ClientRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ClientRandom
void Mono::Security::Protocol::Tls::Context::set_ClientRandom(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ClientRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ServerRandom
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_ServerRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ServerRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ServerRandom
void Mono::Security::Protocol::Tls::Context::set_ServerRandom(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ServerRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_RandomCS
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_RandomCS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_RandomCS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RandomCS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_RandomCS
void Mono::Security::Protocol::Tls::Context::set_RandomCS(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_RandomCS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RandomCS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_RandomSC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_RandomSC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_RandomSC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RandomSC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_RandomSC
void Mono::Security::Protocol::Tls::Context::set_RandomSC(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_RandomSC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RandomSC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_MasterSecret
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_MasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_MasterSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_MasterSecret
void Mono::Security::Protocol::Tls::Context::set_MasterSecret(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_MasterSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ClientWriteKey
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_ClientWriteKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ClientWriteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientWriteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ClientWriteKey
void Mono::Security::Protocol::Tls::Context::set_ClientWriteKey(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ClientWriteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientWriteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ServerWriteKey
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_ServerWriteKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ServerWriteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerWriteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ServerWriteKey
void Mono::Security::Protocol::Tls::Context::set_ServerWriteKey(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ServerWriteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerWriteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ClientWriteIV
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_ClientWriteIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ClientWriteIV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientWriteIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ClientWriteIV
void Mono::Security::Protocol::Tls::Context::set_ClientWriteIV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ClientWriteIV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientWriteIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_ServerWriteIV
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::get_ServerWriteIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_ServerWriteIV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerWriteIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_ServerWriteIV
void Mono::Security::Protocol::Tls::Context::set_ServerWriteIV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_ServerWriteIV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerWriteIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_RecordProtocol
::Mono::Security::Protocol::Tls::RecordProtocol* Mono::Security::Protocol::Tls::Context::get_RecordProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_RecordProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::RecordProtocol*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.set_RecordProtocol
void Mono::Security::Protocol::Tls::Context::set_RecordProtocol(::Mono::Security::Protocol::Tls::RecordProtocol* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::set_RecordProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecordProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.GetUnixTime
int Mono::Security::Protocol::Tls::Context::GetUnixTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::GetUnixTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnixTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.GetSecureRandomBytes
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Context::GetSecureRandomBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::GetSecureRandomBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureRandomBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, count);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.Clear
void Mono::Security::Protocol::Tls::Context::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Context*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.ClearKeyInfo
void Mono::Security::Protocol::Tls::Context::ClearKeyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::ClearKeyInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Context*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.DecodeProtocolCode
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::Context::DecodeProtocolCode(int16_t code, bool allowFallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::DecodeProtocolCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeProtocolCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(allowFallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityProtocolType, false>(this, ___internal__method, code, allowFallback);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.ChangeProtocol
void Mono::Security::Protocol::Tls::Context::ChangeProtocol(int16_t protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::ChangeProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocol);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_Current
::Mono::Security::Protocol::Tls::SecurityParameters* Mono::Security::Protocol::Tls::Context::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_Negotiating
::Mono::Security::Protocol::Tls::SecurityParameters* Mono::Security::Protocol::Tls::Context::get_Negotiating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_Negotiating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Negotiating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_Read
::Mono::Security::Protocol::Tls::SecurityParameters* Mono::Security::Protocol::Tls::Context::get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.get_Write
::Mono::Security::Protocol::Tls::SecurityParameters* Mono::Security::Protocol::Tls::Context::get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::get_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.StartSwitchingSecurityParameters
void Mono::Security::Protocol::Tls::Context::StartSwitchingSecurityParameters(bool client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::StartSwitchingSecurityParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSwitchingSecurityParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Context.EndSwitchingSecurityParameters
void Mono::Security::Protocol::Tls::Context::EndSwitchingSecurityParameters(bool client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Context::EndSwitchingSecurityParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSwitchingSecurityParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.DebugHelper
#include "Mono/Security/Protocol/Tls/DebugHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean isInitialized
bool Mono::Security::Protocol::Tls::DebugHelper::_get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::_get_isInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Protocol.Tls", "DebugHelper", "isInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isInitialized
void Mono::Security::Protocol::Tls::DebugHelper::_set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::_set_isInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "DebugHelper", "isInitialized", value));
}
// Autogenerated method: Mono.Security.Protocol.Tls.DebugHelper.Initialize
void Mono::Security::Protocol::Tls::DebugHelper::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "DebugHelper", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.DebugHelper.WriteLine
void Mono::Security::Protocol::Tls::DebugHelper::WriteLine(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "DebugHelper", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: Mono.Security.Protocol.Tls.DebugHelper.WriteLine
void Mono::Security::Protocol::Tls::DebugHelper::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "DebugHelper", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Tls.DebugHelper.WriteLine
void Mono::Security::Protocol::Tls::DebugHelper::WriteLine(::StringW message, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "DebugHelper", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.DebugHelper.WriteBuffer
void Mono::Security::Protocol::Tls::DebugHelper::WriteBuffer(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::WriteBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "DebugHelper", "WriteBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.DebugHelper.WriteBuffer
void Mono::Security::Protocol::Tls::DebugHelper::WriteBuffer(::ArrayW<uint8_t> buffer, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::DebugHelper::WriteBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "DebugHelper", "WriteBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.ExchangeAlgorithmType
#include "Mono/Security/Protocol/Tls/ExchangeAlgorithmType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType DiffieHellman
::Mono::Security::Protocol::Tls::ExchangeAlgorithmType Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_DiffieHellman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_DiffieHellman");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType>("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "DiffieHellman"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType DiffieHellman
void Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_DiffieHellman(::Mono::Security::Protocol::Tls::ExchangeAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_DiffieHellman");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "DiffieHellman", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType Fortezza
::Mono::Security::Protocol::Tls::ExchangeAlgorithmType Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_Fortezza() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_Fortezza");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType>("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "Fortezza"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType Fortezza
void Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_Fortezza(::Mono::Security::Protocol::Tls::ExchangeAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_Fortezza");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "Fortezza", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType None
::Mono::Security::Protocol::Tls::ExchangeAlgorithmType Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType>("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType None
void Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_None(::Mono::Security::Protocol::Tls::ExchangeAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType RsaKeyX
::Mono::Security::Protocol::Tls::ExchangeAlgorithmType Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_RsaKeyX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_RsaKeyX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType>("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "RsaKeyX"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType RsaKeyX
void Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_RsaKeyX(::Mono::Security::Protocol::Tls::ExchangeAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_RsaKeyX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "RsaKeyX", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType RsaSign
::Mono::Security::Protocol::Tls::ExchangeAlgorithmType Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_RsaSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_get_RsaSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType>("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "RsaSign"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.ExchangeAlgorithmType RsaSign
void Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_RsaSign(::Mono::Security::Protocol::Tls::ExchangeAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::_set_RsaSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType", "RsaSign", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::ExchangeAlgorithmType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ExchangeAlgorithmType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.HandshakeState
#include "Mono/Security/Protocol/Tls/HandshakeState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.HandshakeState None
::Mono::Security::Protocol::Tls::HandshakeState Mono::Security::Protocol::Tls::HandshakeState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HandshakeState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::HandshakeState>("Mono.Security.Protocol.Tls", "HandshakeState", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.HandshakeState None
void Mono::Security::Protocol::Tls::HandshakeState::_set_None(::Mono::Security::Protocol::Tls::HandshakeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HandshakeState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HandshakeState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.HandshakeState Started
::Mono::Security::Protocol::Tls::HandshakeState Mono::Security::Protocol::Tls::HandshakeState::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HandshakeState::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::HandshakeState>("Mono.Security.Protocol.Tls", "HandshakeState", "Started"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.HandshakeState Started
void Mono::Security::Protocol::Tls::HandshakeState::_set_Started(::Mono::Security::Protocol::Tls::HandshakeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HandshakeState::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HandshakeState", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.HandshakeState Finished
::Mono::Security::Protocol::Tls::HandshakeState Mono::Security::Protocol::Tls::HandshakeState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HandshakeState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::HandshakeState>("Mono.Security.Protocol.Tls", "HandshakeState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.HandshakeState Finished
void Mono::Security::Protocol::Tls::HandshakeState::_set_Finished(::Mono::Security::Protocol::Tls::HandshakeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HandshakeState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HandshakeState", "Finished", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::HandshakeState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HandshakeState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.HashAlgorithmType
#include "Mono/Security/Protocol/Tls/HashAlgorithmType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.HashAlgorithmType Md5
::Mono::Security::Protocol::Tls::HashAlgorithmType Mono::Security::Protocol::Tls::HashAlgorithmType::_get_Md5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HashAlgorithmType::_get_Md5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::HashAlgorithmType>("Mono.Security.Protocol.Tls", "HashAlgorithmType", "Md5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.HashAlgorithmType Md5
void Mono::Security::Protocol::Tls::HashAlgorithmType::_set_Md5(::Mono::Security::Protocol::Tls::HashAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HashAlgorithmType::_set_Md5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HashAlgorithmType", "Md5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.HashAlgorithmType None
::Mono::Security::Protocol::Tls::HashAlgorithmType Mono::Security::Protocol::Tls::HashAlgorithmType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HashAlgorithmType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::HashAlgorithmType>("Mono.Security.Protocol.Tls", "HashAlgorithmType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.HashAlgorithmType None
void Mono::Security::Protocol::Tls::HashAlgorithmType::_set_None(::Mono::Security::Protocol::Tls::HashAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HashAlgorithmType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HashAlgorithmType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.HashAlgorithmType Sha1
::Mono::Security::Protocol::Tls::HashAlgorithmType Mono::Security::Protocol::Tls::HashAlgorithmType::_get_Sha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HashAlgorithmType::_get_Sha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::HashAlgorithmType>("Mono.Security.Protocol.Tls", "HashAlgorithmType", "Sha1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.HashAlgorithmType Sha1
void Mono::Security::Protocol::Tls::HashAlgorithmType::_set_Sha1(::Mono::Security::Protocol::Tls::HashAlgorithmType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HashAlgorithmType::_set_Sha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HashAlgorithmType", "Sha1", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::HashAlgorithmType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HashAlgorithmType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.HttpsClientStream
#include "Mono/Security/Protocol/Tls/HttpsClientStream.hpp"
// Including type: Mono.Security.Protocol.Tls.HttpsClientStream/<>c
#include "Mono/Security/Protocol/Tls/HttpsClientStream_--c.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest _request
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& Mono::Security::Protocol::Tls::HttpsClientStream::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _status
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::HttpsClientStream::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.HttpsClientStream.get_TrustFailure
bool Mono::Security::Protocol::Tls::HttpsClientStream::get_TrustFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::get_TrustFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrustFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.HttpsClientStream.RaiseServerCertificateValidation
bool Mono::Security::Protocol::Tls::HttpsClientStream::RaiseServerCertificateValidation(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> certificateErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::RaiseServerCertificateValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslClientStream*), 41));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, certificateErrors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.HttpsClientStream/<>c
#include "Mono/Security/Protocol/Tls/HttpsClientStream_--c.hpp"
// Including type: Mono.Security.Protocol.Tls.CertificateSelectionCallback
#include "Mono/Security/Protocol/Tls/CertificateSelectionCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.PrivateKeySelectionCallback
#include "Mono/Security/Protocol/Tls/PrivateKeySelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Security.Protocol.Tls.HttpsClientStream/<>c <>9
::Mono::Security::Protocol::Tls::HttpsClientStream::$$c* Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::HttpsClientStream::$$c*>("Mono.Security.Protocol.Tls", "HttpsClientStream/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Security.Protocol.Tls.HttpsClientStream/<>c <>9
void Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_set_$$9(::Mono::Security::Protocol::Tls::HttpsClientStream::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HttpsClientStream/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.CertificateSelectionCallback <>9__2_0
::Mono::Security::Protocol::Tls::CertificateSelectionCallback* Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::CertificateSelectionCallback*>("Mono.Security.Protocol.Tls", "HttpsClientStream/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.CertificateSelectionCallback <>9__2_0
void Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_set_$$9__2_0(::Mono::Security::Protocol::Tls::CertificateSelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HttpsClientStream/<>c", "<>9__2_0", value)));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.PrivateKeySelectionCallback <>9__2_1
::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*>("Mono.Security.Protocol.Tls", "HttpsClientStream/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.PrivateKeySelectionCallback <>9__2_1
void Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_set_$$9__2_1(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "HttpsClientStream/<>c", "<>9__2_1", value)));
}
// Autogenerated method: Mono.Security.Protocol.Tls.HttpsClientStream/<>c..cctor
void Mono::Security::Protocol::Tls::HttpsClientStream::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "HttpsClientStream/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.HttpsClientStream/<>c.<.ctor>b__2_0
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::HttpsClientStream::$$c::$_ctor$b__2_0(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCerts, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* serverRequestedCertificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientCerts), ::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(serverRequestedCertificates)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, clientCerts, serverCertificate, targetHost, serverRequestedCertificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.HttpsClientStream/<>c.<.ctor>b__2_1
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::HttpsClientStream::$$c::$_ctor$b__2_1(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::HttpsClientStream::$$c::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(targetHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.RSASslSignatureDeformatter
#include "Mono/Security/Protocol/Tls/RSASslSignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA key
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithm hash
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RSASslSignatureDeformatter.VerifySignature
bool Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::VerifySignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RSASslSignatureDeformatter.SetHashAlgorithm
void Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RSASslSignatureDeformatter.SetKey
void Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureDeformatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.RSASslSignatureFormatter
#include "Mono/Security/Protocol/Tls/RSASslSignatureFormatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA key
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& Mono::Security::Protocol::Tls::RSASslSignatureFormatter::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureFormatter::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithm hash
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& Mono::Security::Protocol::Tls::RSASslSignatureFormatter::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureFormatter::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RSASslSignatureFormatter.CreateSignature
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RSASslSignatureFormatter::CreateSignature(::ArrayW<uint8_t> rgbHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureFormatter::CreateSignature");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgbHash);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RSASslSignatureFormatter.SetHashAlgorithm
void Mono::Security::Protocol::Tls::RSASslSignatureFormatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureFormatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RSASslSignatureFormatter.SetKey
void Mono::Security::Protocol::Tls::RSASslSignatureFormatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureFormatter::SetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::AsymmetricSignatureFormatter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.RecordProtocol
#include "Mono/Security/Protocol/Tls/RecordProtocol.hpp"
// Including type: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult
#include "Mono/Security/Protocol/Tls/RecordProtocol_ReceiveRecordAsyncResult.hpp"
// Including type: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult
#include "Mono/Security/Protocol/Tls/RecordProtocol_SendRecordAsyncResult.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeType
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeType.hpp"
// Including type: Mono.Security.Protocol.Tls.TlsStream
#include "Mono/Security/Protocol/Tls/TlsStream.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeMessage.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.AlertLevel
#include "Mono/Security/Protocol/Tls/AlertLevel.hpp"
// Including type: Mono.Security.Protocol.Tls.AlertDescription
#include "Mono/Security/Protocol/Tls/AlertDescription.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Mono.Security.Protocol.Tls.Alert
#include "Mono/Security/Protocol/Tls/Alert.hpp"
// Including type: Mono.Security.Protocol.Tls.ContentType
#include "Mono/Security/Protocol/Tls/ContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ManualResetEvent record_processing
::System::Threading::ManualResetEvent* Mono::Security::Protocol::Tls::RecordProtocol::_get_record_processing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::_get_record_processing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ManualResetEvent*>("Mono.Security.Protocol.Tls", "RecordProtocol", "record_processing"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ManualResetEvent record_processing
void Mono::Security::Protocol::Tls::RecordProtocol::_set_record_processing(::System::Threading::ManualResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::_set_record_processing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "RecordProtocol", "record_processing", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Mono::Security::Protocol::Tls::RecordProtocol::dyn_innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::dyn_innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Mono.Security.Protocol.Tls.Context context
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Context*& Mono::Security::Protocol::Tls::RecordProtocol::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Context**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.get_Context
::Mono::Security::Protocol::Tls::Context* Mono::Security::Protocol::Tls::RecordProtocol::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Context*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.set_Context
void Mono::Security::Protocol::Tls::RecordProtocol::set_Context(::Mono::Security::Protocol::Tls::Context* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::set_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendRecord
void Mono::Security::Protocol::Tls::RecordProtocol::SendRecord(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecord");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.ProcessHandshakeMessage
void Mono::Security::Protocol::Tls::RecordProtocol::ProcessHandshakeMessage(::Mono::Security::Protocol::Tls::TlsStream* handMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ProcessHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handMsg);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.ProcessChangeCipherSpec
void Mono::Security::Protocol::Tls::RecordProtocol::ProcessChangeCipherSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ProcessChangeCipherSpec");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.GetMessage
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::RecordProtocol::GetMessage(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::GetMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method, type);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.BeginReceiveRecord
::System::IAsyncResult* Mono::Security::Protocol::Tls::RecordProtocol::BeginReceiveRecord(::System::IO::Stream* record, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::BeginReceiveRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReceiveRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, record, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.InternalReceiveRecordCallback
void Mono::Security::Protocol::Tls::RecordProtocol::InternalReceiveRecordCallback(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::InternalReceiveRecordCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReceiveRecordCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.EndReceiveRecord
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::EndReceiveRecord(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::EndReceiveRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndReceiveRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.ReceiveRecord
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecord(::System::IO::Stream* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, record);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.ReadRecordBuffer
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::ReadRecordBuffer(int contentType, ::System::IO::Stream* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReadRecordBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRecordBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, record);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.ProcessAlert
void Mono::Security::Protocol::Tls::RecordProtocol::ProcessAlert(::Mono::Security::Protocol::Tls::AlertLevel alertLevel, ::Mono::Security::Protocol::Tls::AlertDescription alertDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ProcessAlert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAlert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alertLevel), ::il2cpp_utils::ExtractType(alertDesc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alertLevel, alertDesc);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendAlert
void Mono::Security::Protocol::Tls::RecordProtocol::SendAlert(ByRef<::System::Exception*> ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendAlert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAlert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ex));
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendAlert
void Mono::Security::Protocol::Tls::RecordProtocol::SendAlert(::Mono::Security::Protocol::Tls::AlertDescription description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendAlert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAlert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(description)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, description);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendAlert
void Mono::Security::Protocol::Tls::RecordProtocol::SendAlert(::Mono::Security::Protocol::Tls::AlertLevel level, ::Mono::Security::Protocol::Tls::AlertDescription description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendAlert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAlert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(description)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, description);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendAlert
void Mono::Security::Protocol::Tls::RecordProtocol::SendAlert(::Mono::Security::Protocol::Tls::Alert* alert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendAlert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAlert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alert);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendChangeCipherSpec
void Mono::Security::Protocol::Tls::RecordProtocol::SendChangeCipherSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendChangeCipherSpec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendChangeCipherSpec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendChangeCipherSpec
void Mono::Security::Protocol::Tls::RecordProtocol::SendChangeCipherSpec(::System::IO::Stream* recordStream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendChangeCipherSpec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendChangeCipherSpec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordStream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordStream);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.BeginSendChangeCipherSpec
::System::IAsyncResult* Mono::Security::Protocol::Tls::RecordProtocol::BeginSendChangeCipherSpec(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::BeginSendChangeCipherSpec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSendChangeCipherSpec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.EndSendChangeCipherSpec
void Mono::Security::Protocol::Tls::RecordProtocol::EndSendChangeCipherSpec(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::EndSendChangeCipherSpec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSendChangeCipherSpec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord
::System::IAsyncResult* Mono::Security::Protocol::Tls::RecordProtocol::BeginSendRecord(::Mono::Security::Protocol::Tls::Handshake::HandshakeType handshakeType, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::BeginSendRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSendRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handshakeType), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, handshakeType, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.InternalSendRecordCallback
void Mono::Security::Protocol::Tls::RecordProtocol::InternalSendRecordCallback(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::InternalSendRecordCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSendRecordCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.BeginSendRecord
::System::IAsyncResult* Mono::Security::Protocol::Tls::RecordProtocol::BeginSendRecord(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> recordData, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::BeginSendRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSendRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(recordData), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, contentType, recordData, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.EndSendRecord
void Mono::Security::Protocol::Tls::RecordProtocol::EndSendRecord(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::EndSendRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSendRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.SendRecord
void Mono::Security::Protocol::Tls::RecordProtocol::SendRecord(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> recordData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(recordData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contentType, recordData);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.EncodeRecord
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::EncodeRecord(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> recordData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::EncodeRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(recordData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, recordData);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.EncodeRecord
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::EncodeRecord(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> recordData, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::EncodeRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(recordData), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, recordData, offset, count);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.EncodeHandshakeRecord
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::EncodeHandshakeRecord(::Mono::Security::Protocol::Tls::Handshake::HandshakeType handshakeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::EncodeHandshakeRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeHandshakeRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handshakeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, handshakeType);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.encryptRecordFragment
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::encryptRecordFragment(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::encryptRecordFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "encryptRecordFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(fragment)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.decryptRecordFragment
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::decryptRecordFragment(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::decryptRecordFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "decryptRecordFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(fragment)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol.Compare
bool Mono::Security::Protocol::Tls::RecordProtocol::Compare(::ArrayW<uint8_t> array1, ::ArrayW<uint8_t> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol..cctor
void Mono::Security::Protocol::Tls::RecordProtocol::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "RecordProtocol", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult
#include "Mono/Security/Protocol/Tls/RecordProtocol_ReceiveRecordAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _userCallback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__userCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__userCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userCallback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _userState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__userState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__userState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception _asyncException
[[deprecated("Use field access instead!")]] ::System::Exception*& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__asyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__asyncException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent handle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _resultingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__resultingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__resultingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _record
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__record");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_record"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _initialBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__initialBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::dyn__initialBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_Record
::System::IO::Stream* Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_Record");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Record", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_ResultingBuffer
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_ResultingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_ResultingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_InitialBuffer
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_InitialBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_InitialBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitialBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_AsyncState
::Il2CppObject* Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_AsyncException
::System::Exception* Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_AsyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_AsyncException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_CompletedWithError
bool Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_CompletedWithError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_CompletedWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_CompletedSynchronously
bool Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.get_IsCompleted
bool Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete(::System::Exception* ex, ::ArrayW<uint8_t> resultingBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex), ::il2cpp_utils::ExtractType(resultingBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex, resultingBuffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete(::ArrayW<uint8_t> resultingBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultingBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultingBuffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/ReceiveRecordAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::ReceiveRecordAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult
#include "Mono/Security/Protocol/Tls/RecordProtocol_SendRecordAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeMessage.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _userCallback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__userCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__userCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userCallback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _userState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__userState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__userState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception _asyncException
[[deprecated("Use field access instead!")]] ::System::Exception*& Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__asyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__asyncException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent handle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Handshake.HandshakeMessage _message
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*& Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.get_Message
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.get_AsyncState
::Il2CppObject* Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.get_AsyncException
::System::Exception* Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_AsyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_AsyncException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.get_CompletedWithError
bool Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_CompletedWithError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_CompletedWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.get_CompletedSynchronously
bool Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.get_IsCompleted
bool Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::SetComplete(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: Mono.Security.Protocol.Tls.RecordProtocol/SendRecordAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::SetComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RecordProtocol::SendRecordAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.SecurityCompressionType
#include "Mono/Security/Protocol/Tls/SecurityCompressionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityCompressionType None
::Mono::Security::Protocol::Tls::SecurityCompressionType Mono::Security::Protocol::Tls::SecurityCompressionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityCompressionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityCompressionType>("Mono.Security.Protocol.Tls", "SecurityCompressionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityCompressionType None
void Mono::Security::Protocol::Tls::SecurityCompressionType::_set_None(::Mono::Security::Protocol::Tls::SecurityCompressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityCompressionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityCompressionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityCompressionType Zlib
::Mono::Security::Protocol::Tls::SecurityCompressionType Mono::Security::Protocol::Tls::SecurityCompressionType::_get_Zlib() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityCompressionType::_get_Zlib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityCompressionType>("Mono.Security.Protocol.Tls", "SecurityCompressionType", "Zlib"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityCompressionType Zlib
void Mono::Security::Protocol::Tls::SecurityCompressionType::_set_Zlib(::Mono::Security::Protocol::Tls::SecurityCompressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityCompressionType::_set_Zlib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityCompressionType", "Zlib", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::SecurityCompressionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityCompressionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.SecurityParameters
#include "Mono/Security/Protocol/Tls/SecurityParameters.hpp"
// Including type: Mono.Security.Protocol.Tls.CipherSuite
#include "Mono/Security/Protocol/Tls/CipherSuite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CipherSuite cipher
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CipherSuite*& Mono::Security::Protocol::Tls::SecurityParameters::dyn_cipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::dyn_cipher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cipher"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CipherSuite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] clientWriteMAC
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SecurityParameters::dyn_clientWriteMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::dyn_clientWriteMAC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientWriteMAC"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] serverWriteMAC
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SecurityParameters::dyn_serverWriteMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::dyn_serverWriteMAC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverWriteMAC"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SecurityParameters.get_Cipher
::Mono::Security::Protocol::Tls::CipherSuite* Mono::Security::Protocol::Tls::SecurityParameters::get_Cipher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::get_Cipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherSuite*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SecurityParameters.set_Cipher
void Mono::Security::Protocol::Tls::SecurityParameters::set_Cipher(::Mono::Security::Protocol::Tls::CipherSuite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::set_Cipher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Cipher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SecurityParameters.get_ClientWriteMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SecurityParameters::get_ClientWriteMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::get_ClientWriteMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientWriteMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SecurityParameters.set_ClientWriteMAC
void Mono::Security::Protocol::Tls::SecurityParameters::set_ClientWriteMAC(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::set_ClientWriteMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientWriteMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SecurityParameters.get_ServerWriteMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SecurityParameters::get_ServerWriteMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::get_ServerWriteMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerWriteMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SecurityParameters.set_ServerWriteMAC
void Mono::Security::Protocol::Tls::SecurityParameters::set_ServerWriteMAC(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::set_ServerWriteMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerWriteMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SecurityParameters.Clear
void Mono::Security::Protocol::Tls::SecurityParameters::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.SecurityProtocolType
#include "Mono/Security/Protocol/Tls/SecurityProtocolType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Default
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityProtocolType>("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Default
void Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Default(::Mono::Security::Protocol::Tls::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Ssl2
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Ssl2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Ssl2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityProtocolType>("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Ssl2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Ssl2
void Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Ssl2(::Mono::Security::Protocol::Tls::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Ssl2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Ssl2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Ssl3
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Ssl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Ssl3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityProtocolType>("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Ssl3"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Ssl3
void Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Ssl3(::Mono::Security::Protocol::Tls::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Ssl3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Ssl3", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Tls
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Tls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Tls");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityProtocolType>("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Tls"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Tls
void Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Tls(::Mono::Security::Protocol::Tls::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Tls");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Tls", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Tls11
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Tls11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Tls11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityProtocolType>("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Tls11"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Tls11
void Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Tls11(::Mono::Security::Protocol::Tls::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Tls11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Tls11", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Tls12
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Tls12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_get_Tls12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SecurityProtocolType>("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Tls12"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SecurityProtocolType Tls12
void Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Tls12(::Mono::Security::Protocol::Tls::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::_set_Tls12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SecurityProtocolType", "Tls12", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::SecurityProtocolType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityProtocolType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.ServerContext
#include "Mono/Security/Protocol/Tls/ServerContext.hpp"
// Including type: Mono.Security.Protocol.Tls.SslServerStream
#include "Mono/Security/Protocol/Tls/SslServerStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SslServerStream sslStream
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SslServerStream*& Mono::Security::Protocol::Tls::ServerContext::dyn_sslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerContext::dyn_sslStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sslStream"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SslServerStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean request_client_certificate
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::ServerContext::dyn_request_client_certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerContext::dyn_request_client_certificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request_client_certificate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clientCertificateRequired
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::ServerContext::dyn_clientCertificateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerContext::dyn_clientCertificateRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificateRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ServerContext.get_SslStream
::Mono::Security::Protocol::Tls::SslServerStream* Mono::Security::Protocol::Tls::ServerContext::get_SslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerContext::get_SslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SslServerStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ServerContext.get_ClientCertificateRequired
bool Mono::Security::Protocol::Tls::ServerContext::get_ClientCertificateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerContext::get_ClientCertificateRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificateRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ServerContext.get_RequestClientCertificate
bool Mono::Security::Protocol::Tls::ServerContext::get_RequestClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerContext::get_RequestClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.ServerRecordProtocol
#include "Mono/Security/Protocol/Tls/ServerRecordProtocol.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsClientCertificate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Protocol.Tls.ServerContext
#include "Mono/Security/Protocol/Tls/ServerContext.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeMessage.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeType
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeType.hpp"
// Including type: Mono.Security.Protocol.Tls.TlsStream
#include "Mono/Security/Protocol/Tls/TlsStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate cert
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate*& Mono::Security::Protocol::Tls::ServerRecordProtocol::dyn_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerRecordProtocol::dyn_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cert"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ServerRecordProtocol.createClientHandshakeMessage
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::ServerRecordProtocol::createClientHandshakeMessage(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerRecordProtocol::createClientHandshakeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createClientHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method, type, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ServerRecordProtocol.createServerHandshakeMessage
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::ServerRecordProtocol::createServerHandshakeMessage(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerRecordProtocol::createServerHandshakeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createServerHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method, type);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ServerRecordProtocol.GetMessage
::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage* Mono::Security::Protocol::Tls::ServerRecordProtocol::GetMessage(::Mono::Security::Protocol::Tls::Handshake::HandshakeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerRecordProtocol::GetMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*, false>(this, ___internal__method, type);
}
// Autogenerated method: Mono.Security.Protocol.Tls.ServerRecordProtocol.ProcessHandshakeMessage
void Mono::Security::Protocol::Tls::ServerRecordProtocol::ProcessHandshakeMessage(::Mono::Security::Protocol::Tls::TlsStream* handMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::ServerRecordProtocol::ProcessHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::RecordProtocol*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handMsg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.SslCipherSuite
#include "Mono/Security/Protocol/Tls/SslCipherSuite.hpp"
// Including type: Mono.Security.Protocol.Tls.ContentType
#include "Mono/Security/Protocol/Tls/ContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MacHeaderLength
int Mono::Security::Protocol::Tls::SslCipherSuite::_get_MacHeaderLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::_get_MacHeaderLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.Protocol.Tls", "SslCipherSuite", "MacHeaderLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MacHeaderLength
void Mono::Security::Protocol::Tls::SslCipherSuite::_set_MacHeaderLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::_set_MacHeaderLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslCipherSuite", "MacHeaderLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] pad1
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslCipherSuite::dyn_pad1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::dyn_pad1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pad1"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] pad2
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslCipherSuite::dyn_pad2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::dyn_pad2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pad2"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] header
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslCipherSuite::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslCipherSuite.prf
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SslCipherSuite::prf(::ArrayW<uint8_t> secret, ::StringW label, ::ArrayW<uint8_t> random) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::prf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "prf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(random)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, secret, label, random);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslCipherSuite.ComputeServerRecordMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SslCipherSuite::ComputeServerRecordMAC(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::ComputeServerRecordMAC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslCipherSuite.ComputeClientRecordMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SslCipherSuite::ComputeClientRecordMAC(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::ComputeClientRecordMAC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslCipherSuite.ComputeMasterSecret
void Mono::Security::Protocol::Tls::SslCipherSuite::ComputeMasterSecret(::ArrayW<uint8_t> preMasterSecret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::ComputeMasterSecret");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preMasterSecret);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslCipherSuite.ComputeKeys
void Mono::Security::Protocol::Tls::SslCipherSuite::ComputeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslCipherSuite::ComputeKeys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.CertificateValidationCallback
#include "Mono/Security/Protocol/Tls/CertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateValidationCallback.Invoke
bool Mono::Security::Protocol::Tls::CertificateValidationCallback::Invoke(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> certificateErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateValidationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateValidationCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, certificateErrors);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateValidationCallback.BeginInvoke
::System::IAsyncResult* Mono::Security::Protocol::Tls::CertificateValidationCallback::BeginInvoke(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> certificateErrors, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateValidationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateValidationCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, certificate, certificateErrors, callback, object);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateValidationCallback.EndInvoke
bool Mono::Security::Protocol::Tls::CertificateValidationCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateValidationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateValidationCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.CertificateValidationCallback2
#include "Mono/Security/Protocol/Tls/CertificateValidationCallback2.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateValidationCallback2.Invoke
::Mono::Security::Interface::ValidationResult* Mono::Security::Protocol::Tls::CertificateValidationCallback2::Invoke(::Mono::Security::X509::X509CertificateCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateValidationCallback2::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateValidationCallback2*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, collection);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateValidationCallback2.BeginInvoke
::System::IAsyncResult* Mono::Security::Protocol::Tls::CertificateValidationCallback2::BeginInvoke(::Mono::Security::X509::X509CertificateCollection* collection, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateValidationCallback2::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateValidationCallback2*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, collection, callback, object);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateValidationCallback2.EndInvoke
::Mono::Security::Interface::ValidationResult* Mono::Security::Protocol::Tls::CertificateValidationCallback2::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateValidationCallback2::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateValidationCallback2*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.CertificateSelectionCallback
#include "Mono/Security/Protocol/Tls/CertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateSelectionCallback.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::CertificateSelectionCallback::Invoke(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* serverRequestedCertificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateSelectionCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, clientCertificates, serverCertificate, targetHost, serverRequestedCertificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateSelectionCallback.BeginInvoke
::System::IAsyncResult* Mono::Security::Protocol::Tls::CertificateSelectionCallback::BeginInvoke(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* serverRequestedCertificates, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateSelectionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateSelectionCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, clientCertificates, serverCertificate, targetHost, serverRequestedCertificates, callback, object);
}
// Autogenerated method: Mono.Security.Protocol.Tls.CertificateSelectionCallback.EndInvoke
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::CertificateSelectionCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CertificateSelectionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CertificateSelectionCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.PrivateKeySelectionCallback
#include "Mono/Security/Protocol/Tls/PrivateKeySelectionCallback.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.PrivateKeySelectionCallback.Invoke
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::PrivateKeySelectionCallback::Invoke(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated method: Mono.Security.Protocol.Tls.PrivateKeySelectionCallback.BeginInvoke
::System::IAsyncResult* Mono::Security::Protocol::Tls::PrivateKeySelectionCallback::BeginInvoke(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, certificate, targetHost, callback, object);
}
// Autogenerated method: Mono.Security.Protocol.Tls.PrivateKeySelectionCallback.EndInvoke
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::PrivateKeySelectionCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.SslClientStream
#include "Mono/Security/Protocol/Tls/SslClientStream.hpp"
// Including type: Mono.Security.Protocol.Tls.SslClientStream/NegotiateState
#include "Mono/Security/Protocol/Tls/SslClientStream_NegotiateState.hpp"
// Including type: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult
#include "Mono/Security/Protocol/Tls/SslClientStream_NegotiateAsyncResult.hpp"
// Including type: Mono.Security.Protocol.Tls.CertificateValidationCallback
#include "Mono/Security/Protocol/Tls/CertificateValidationCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.CertificateSelectionCallback
#include "Mono/Security/Protocol/Tls/CertificateSelectionCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.PrivateKeySelectionCallback
#include "Mono/Security/Protocol/Tls/PrivateKeySelectionCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.CertificateValidationCallback2
#include "Mono/Security/Protocol/Tls/CertificateValidationCallback2.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CertificateValidationCallback ServerCertValidation
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CertificateValidationCallback*& Mono::Security::Protocol::Tls::SslClientStream::dyn_ServerCertValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::dyn_ServerCertValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerCertValidation"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CertificateSelectionCallback ClientCertSelection
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CertificateSelectionCallback*& Mono::Security::Protocol::Tls::SslClientStream::dyn_ClientCertSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::dyn_ClientCertSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClientCertSelection"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.PrivateKeySelectionCallback PrivateKeySelection
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*& Mono::Security::Protocol::Tls::SslClientStream::dyn_PrivateKeySelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::dyn_PrivateKeySelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrivateKeySelection"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CertificateValidationCallback2 ServerCertValidation2
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CertificateValidationCallback2*& Mono::Security::Protocol::Tls::SslClientStream::dyn_ServerCertValidation2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::dyn_ServerCertValidation2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerCertValidation2"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CertificateValidationCallback2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.add_ServerCertValidation
void Mono::Security::Protocol::Tls::SslClientStream::add_ServerCertValidation(::Mono::Security::Protocol::Tls::CertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::add_ServerCertValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ServerCertValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.remove_ServerCertValidation
void Mono::Security::Protocol::Tls::SslClientStream::remove_ServerCertValidation(::Mono::Security::Protocol::Tls::CertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::remove_ServerCertValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ServerCertValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.add_ClientCertSelection
void Mono::Security::Protocol::Tls::SslClientStream::add_ClientCertSelection(::Mono::Security::Protocol::Tls::CertificateSelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::add_ClientCertSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ClientCertSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.remove_ClientCertSelection
void Mono::Security::Protocol::Tls::SslClientStream::remove_ClientCertSelection(::Mono::Security::Protocol::Tls::CertificateSelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::remove_ClientCertSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ClientCertSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.add_PrivateKeySelection
void Mono::Security::Protocol::Tls::SslClientStream::add_PrivateKeySelection(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::add_PrivateKeySelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PrivateKeySelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.remove_PrivateKeySelection
void Mono::Security::Protocol::Tls::SslClientStream::remove_PrivateKeySelection(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::remove_PrivateKeySelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PrivateKeySelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.get_InputBuffer
::System::IO::Stream* Mono::Security::Protocol::Tls::SslClientStream::get_InputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::get_InputBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.get_ClientCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Security::Protocol::Tls::SslClientStream::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.get_SelectedClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslClientStream::get_SelectedClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::get_SelectedClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.get_ServerCertValidationDelegate
::Mono::Security::Protocol::Tls::CertificateValidationCallback* Mono::Security::Protocol::Tls::SslClientStream::get_ServerCertValidationDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::get_ServerCertValidationDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertValidationDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.set_ServerCertValidationDelegate
void Mono::Security::Protocol::Tls::SslClientStream::set_ServerCertValidationDelegate(::Mono::Security::Protocol::Tls::CertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::set_ServerCertValidationDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerCertValidationDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.get_ClientCertSelectionDelegate
::Mono::Security::Protocol::Tls::CertificateSelectionCallback* Mono::Security::Protocol::Tls::SslClientStream::get_ClientCertSelectionDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::get_ClientCertSelectionDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertSelectionDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CertificateSelectionCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.set_ClientCertSelectionDelegate
void Mono::Security::Protocol::Tls::SslClientStream::set_ClientCertSelectionDelegate(::Mono::Security::Protocol::Tls::CertificateSelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::set_ClientCertSelectionDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertSelectionDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.get_PrivateKeyCertSelectionDelegate
::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* Mono::Security::Protocol::Tls::SslClientStream::get_PrivateKeyCertSelectionDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::get_PrivateKeyCertSelectionDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKeyCertSelectionDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.set_PrivateKeyCertSelectionDelegate
void Mono::Security::Protocol::Tls::SslClientStream::set_PrivateKeyCertSelectionDelegate(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::set_PrivateKeyCertSelectionDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrivateKeyCertSelectionDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.add_ServerCertValidation2
void Mono::Security::Protocol::Tls::SslClientStream::add_ServerCertValidation2(::Mono::Security::Protocol::Tls::CertificateValidationCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::add_ServerCertValidation2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ServerCertValidation2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.remove_ServerCertValidation2
void Mono::Security::Protocol::Tls::SslClientStream::remove_ServerCertValidation2(::Mono::Security::Protocol::Tls::CertificateValidationCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::remove_ServerCertValidation2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ServerCertValidation2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.SafeEndReceiveRecord
void Mono::Security::Protocol::Tls::SslClientStream::SafeEndReceiveRecord(::System::IAsyncResult* ar, bool ignoreEmpty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::SafeEndReceiveRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeEndReceiveRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar), ::il2cpp_utils::ExtractType(ignoreEmpty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar, ignoreEmpty);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.NegotiateAsyncWorker
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncWorker(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NegotiateAsyncWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.RaiseServerCertificateValidation
bool Mono::Security::Protocol::Tls::SslClientStream::RaiseServerCertificateValidation(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> certificateErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::RaiseServerCertificateValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslClientStream*), 41));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, certificateErrors);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.RaiseServerCertificateValidation2
::Mono::Security::Interface::ValidationResult* Mono::Security::Protocol::Tls::SslClientStream::RaiseServerCertificateValidation2(::Mono::Security::X509::X509CertificateCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::RaiseServerCertificateValidation2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslClientStream*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, collection);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.RaiseClientCertificateSelection
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslClientStream::RaiseClientCertificateSelection(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* serverRequestedCertificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::RaiseClientCertificateSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseClientCertificateSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(serverRequestedCertificates)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, clientCertificates, serverCertificate, targetHost, serverRequestedCertificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.RaisePrivateKeySelection
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::SslClientStream::RaisePrivateKeySelection(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::RaisePrivateKeySelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaisePrivateKeySelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(targetHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.Finalize
void Mono::Security::Protocol::Tls::SslClientStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.Dispose
void Mono::Security::Protocol::Tls::SslClientStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.BeginNegotiateHandshake
::System::IAsyncResult* Mono::Security::Protocol::Tls::SslClientStream::BeginNegotiateHandshake(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::BeginNegotiateHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.EndNegotiateHandshake
void Mono::Security::Protocol::Tls::SslClientStream::EndNegotiateHandshake(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::EndNegotiateHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.OnLocalCertificateSelection
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslClientStream::OnLocalCertificateSelection(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* serverRequestedCertificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::OnLocalCertificateSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, clientCertificates, serverCertificate, targetHost, serverRequestedCertificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.get_HaveRemoteValidation2Callback
bool Mono::Security::Protocol::Tls::SslClientStream::get_HaveRemoteValidation2Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::get_HaveRemoteValidation2Callback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.OnRemoteCertificateValidation2
::Mono::Security::Interface::ValidationResult* Mono::Security::Protocol::Tls::SslClientStream::OnRemoteCertificateValidation2(::Mono::Security::X509::X509CertificateCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::OnRemoteCertificateValidation2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, collection);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.OnRemoteCertificateValidation
bool Mono::Security::Protocol::Tls::SslClientStream::OnRemoteCertificateValidation(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::OnRemoteCertificateValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, errors);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream.OnLocalPrivateKeySelection
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::SslClientStream::OnLocalPrivateKeySelection(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::OnLocalPrivateKeySelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.SslClientStream/NegotiateState
#include "Mono/Security/Protocol/Tls/SslClientStream_NegotiateState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentClientHello
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentClientHello() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentClientHello");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState>("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentClientHello"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentClientHello
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentClientHello(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentClientHello");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentClientHello", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState ReceiveClientHelloResponse
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_ReceiveClientHelloResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_ReceiveClientHelloResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState>("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "ReceiveClientHelloResponse"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState ReceiveClientHelloResponse
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_ReceiveClientHelloResponse(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_ReceiveClientHelloResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "ReceiveClientHelloResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentCipherSpec
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentCipherSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentCipherSpec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState>("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentCipherSpec"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentCipherSpec
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentCipherSpec(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentCipherSpec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentCipherSpec", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState ReceiveCipherSpecResponse
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_ReceiveCipherSpecResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_ReceiveCipherSpecResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState>("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "ReceiveCipherSpecResponse"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState ReceiveCipherSpecResponse
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_ReceiveCipherSpecResponse(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_ReceiveCipherSpecResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "ReceiveCipherSpecResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentKeyExchange
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentKeyExchange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentKeyExchange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState>("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentKeyExchange"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentKeyExchange
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentKeyExchange(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentKeyExchange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentKeyExchange", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState ReceiveFinishResponse
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_ReceiveFinishResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_ReceiveFinishResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState>("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "ReceiveFinishResponse"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState ReceiveFinishResponse
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_ReceiveFinishResponse(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_ReceiveFinishResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "ReceiveFinishResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentFinished
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_get_SentFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState>("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentFinished"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.SslClientStream/NegotiateState SentFinished
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentFinished(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::_set_SentFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslClientStream/NegotiateState", "SentFinished", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult
#include "Mono/Security/Protocol/Tls/SslClientStream_NegotiateAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _userCallback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__userCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__userCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userCallback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _userState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__userState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__userState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception _asyncException
[[deprecated("Use field access instead!")]] ::System::Exception*& Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__asyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__asyncException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent handle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SslClientStream/NegotiateState _state
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState& Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.get_State
::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.set_State
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::set_State(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.get_AsyncState
::Il2CppObject* Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.get_AsyncException
::System::Exception* Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_AsyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_AsyncException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.get_CompletedWithError
bool Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_CompletedWithError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_CompletedWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.get_CompletedSynchronously
bool Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.get_IsCompleted
bool Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::SetComplete(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslClientStream/NegotiateAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::SetComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslClientStream::NegotiateAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.SslHandshakeHash
#include "Mono/Security/Protocol/Tls/SslHandshakeHash.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithm md5
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_md5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_md5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "md5"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithm sha
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_sha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_sha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sha"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hashing
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_hashing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_hashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] secret
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] innerPadMD5
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_innerPadMD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_innerPadMD5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "innerPadMD5"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] outerPadMD5
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_outerPadMD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_outerPadMD5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerPadMD5"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] innerPadSHA
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_innerPadSHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_innerPadSHA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "innerPadSHA"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] outerPadSHA
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_outerPadSHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::dyn_outerPadSHA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outerPadSHA"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslHandshakeHash.CreateSignature
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SslHandshakeHash::CreateSignature(::System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::CreateSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslHandshakeHash.VerifySignature
bool Mono::Security::Protocol::Tls::SslHandshakeHash::VerifySignature(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rsa, rgbSignature);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslHandshakeHash.initializePad
void Mono::Security::Protocol::Tls::SslHandshakeHash::initializePad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::initializePad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "initializePad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslHandshakeHash.Initialize
void Mono::Security::Protocol::Tls::SslHandshakeHash::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslHandshakeHash.HashFinal
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SslHandshakeHash::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::HashFinal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslHandshakeHash.HashCore
void Mono::Security::Protocol::Tls::SslHandshakeHash::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslHandshakeHash::HashCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::HashAlgorithm*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.SslServerStream
#include "Mono/Security/Protocol/Tls/SslServerStream.hpp"
// Including type: Mono.Security.Protocol.Tls.CertificateValidationCallback
#include "Mono/Security/Protocol/Tls/CertificateValidationCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.PrivateKeySelectionCallback
#include "Mono/Security/Protocol/Tls/PrivateKeySelectionCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.CertificateValidationCallback2
#include "Mono/Security/Protocol/Tls/CertificateValidationCallback2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CertificateValidationCallback ClientCertValidation
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CertificateValidationCallback*& Mono::Security::Protocol::Tls::SslServerStream::dyn_ClientCertValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::dyn_ClientCertValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClientCertValidation"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.PrivateKeySelectionCallback PrivateKeySelection
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*& Mono::Security::Protocol::Tls::SslServerStream::dyn_PrivateKeySelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::dyn_PrivateKeySelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrivateKeySelection"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CertificateValidationCallback2 ClientCertValidation2
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CertificateValidationCallback2*& Mono::Security::Protocol::Tls::SslServerStream::dyn_ClientCertValidation2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::dyn_ClientCertValidation2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClientCertValidation2"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CertificateValidationCallback2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.add_ClientCertValidation
void Mono::Security::Protocol::Tls::SslServerStream::add_ClientCertValidation(::Mono::Security::Protocol::Tls::CertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::add_ClientCertValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ClientCertValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.remove_ClientCertValidation
void Mono::Security::Protocol::Tls::SslServerStream::remove_ClientCertValidation(::Mono::Security::Protocol::Tls::CertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::remove_ClientCertValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ClientCertValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.add_PrivateKeySelection
void Mono::Security::Protocol::Tls::SslServerStream::add_PrivateKeySelection(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::add_PrivateKeySelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PrivateKeySelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.remove_PrivateKeySelection
void Mono::Security::Protocol::Tls::SslServerStream::remove_PrivateKeySelection(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::remove_PrivateKeySelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PrivateKeySelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.get_ClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslServerStream::get_ClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::get_ClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.get_ClientCertValidationDelegate
::Mono::Security::Protocol::Tls::CertificateValidationCallback* Mono::Security::Protocol::Tls::SslServerStream::get_ClientCertValidationDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::get_ClientCertValidationDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertValidationDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.set_ClientCertValidationDelegate
void Mono::Security::Protocol::Tls::SslServerStream::set_ClientCertValidationDelegate(::Mono::Security::Protocol::Tls::CertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::set_ClientCertValidationDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertValidationDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.get_PrivateKeyCertSelectionDelegate
::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* Mono::Security::Protocol::Tls::SslServerStream::get_PrivateKeyCertSelectionDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::get_PrivateKeyCertSelectionDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKeyCertSelectionDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.set_PrivateKeyCertSelectionDelegate
void Mono::Security::Protocol::Tls::SslServerStream::set_PrivateKeyCertSelectionDelegate(::Mono::Security::Protocol::Tls::PrivateKeySelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::set_PrivateKeyCertSelectionDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrivateKeyCertSelectionDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.add_ClientCertValidation2
void Mono::Security::Protocol::Tls::SslServerStream::add_ClientCertValidation2(::Mono::Security::Protocol::Tls::CertificateValidationCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::add_ClientCertValidation2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ClientCertValidation2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.remove_ClientCertValidation2
void Mono::Security::Protocol::Tls::SslServerStream::remove_ClientCertValidation2(::Mono::Security::Protocol::Tls::CertificateValidationCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::remove_ClientCertValidation2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ClientCertValidation2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.RaiseClientCertificateValidation
bool Mono::Security::Protocol::Tls::SslServerStream::RaiseClientCertificateValidation(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> certificateErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::RaiseClientCertificateValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseClientCertificateValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateErrors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, certificateErrors);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.RaisePrivateKeySelection
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::SslServerStream::RaisePrivateKeySelection(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::RaisePrivateKeySelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaisePrivateKeySelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(targetHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.Finalize
void Mono::Security::Protocol::Tls::SslServerStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.Dispose
void Mono::Security::Protocol::Tls::SslServerStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.BeginNegotiateHandshake
::System::IAsyncResult* Mono::Security::Protocol::Tls::SslServerStream::BeginNegotiateHandshake(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::BeginNegotiateHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.EndNegotiateHandshake
void Mono::Security::Protocol::Tls::SslServerStream::EndNegotiateHandshake(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::EndNegotiateHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.OnLocalCertificateSelection
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslServerStream::OnLocalCertificateSelection(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* serverRequestedCertificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::OnLocalCertificateSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, clientCertificates, serverCertificate, targetHost, serverRequestedCertificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.OnRemoteCertificateValidation
bool Mono::Security::Protocol::Tls::SslServerStream::OnRemoteCertificateValidation(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::OnRemoteCertificateValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 37));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, errors);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.get_HaveRemoteValidation2Callback
bool Mono::Security::Protocol::Tls::SslServerStream::get_HaveRemoteValidation2Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::get_HaveRemoteValidation2Callback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.OnRemoteCertificateValidation2
::Mono::Security::Interface::ValidationResult* Mono::Security::Protocol::Tls::SslServerStream::OnRemoteCertificateValidation2(::Mono::Security::X509::X509CertificateCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::OnRemoteCertificateValidation2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, collection);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslServerStream.OnLocalPrivateKeySelection
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::SslServerStream::OnLocalPrivateKeySelection(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslServerStream::OnLocalPrivateKeySelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.SslStreamBase
#include "Mono/Security/Protocol/Tls/SslStreamBase.hpp"
// Including type: Mono.Security.Protocol.Tls.SslStreamBase/AsyncHandshakeDelegate
#include "Mono/Security/Protocol/Tls/SslStreamBase_AsyncHandshakeDelegate.hpp"
// Including type: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult
#include "Mono/Security/Protocol/Tls/SslStreamBase_InternalAsyncResult.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: Mono.Security.Protocol.Tls.RecordProtocol
#include "Mono/Security/Protocol/Tls/RecordProtocol.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: Mono.Security.Protocol.Tls.CipherAlgorithmType
#include "Mono/Security/Protocol/Tls/CipherAlgorithmType.hpp"
// Including type: Mono.Security.Protocol.Tls.HashAlgorithmType
#include "Mono/Security/Protocol/Tls/HashAlgorithmType.hpp"
// Including type: Mono.Security.Protocol.Tls.ExchangeAlgorithmType
#include "Mono/Security/Protocol/Tls/ExchangeAlgorithmType.hpp"
// Including type: Mono.Security.Protocol.Tls.SecurityProtocolType
#include "Mono/Security/Protocol/Tls/SecurityProtocolType.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ManualResetEvent record_processing
::System::Threading::ManualResetEvent* Mono::Security::Protocol::Tls::SslStreamBase::_get_record_processing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::_get_record_processing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ManualResetEvent*>("Mono.Security.Protocol.Tls", "SslStreamBase", "record_processing"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ManualResetEvent record_processing
void Mono::Security::Protocol::Tls::SslStreamBase::_set_record_processing(::System::Threading::ManualResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::_set_record_processing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "SslStreamBase", "record_processing", value));
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.MemoryStream inputBuffer
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_inputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_inputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputBuffer"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Mono.Security.Protocol.Tls.Context context
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Context*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Context**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Mono.Security.Protocol.Tls.RecordProtocol protocol
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::RecordProtocol*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocol"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::RecordProtocol**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean ownsStream
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslStreamBase::dyn_ownsStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_ownsStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownsStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslStreamBase::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCertRevocationStatus
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslStreamBase::dyn_checkCertRevocationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_checkCertRevocationStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCertRevocationStatus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object negotiate
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_negotiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_negotiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negotiate"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object read
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_read");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "read"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object write
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_write");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "write"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent negotiationComplete
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_negotiationComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_negotiationComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "negotiationComplete"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] recbuf
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslStreamBase::dyn_recbuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_recbuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recbuf"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream recordStream
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& Mono::Security::Protocol::Tls::SslStreamBase::dyn_recordStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::dyn_recordStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordStream"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.AsyncHandshakeCallback
void Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeCallback(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncHandshakeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_MightNeedHandshake
bool Mono::Security::Protocol::Tls::SslStreamBase::get_MightNeedHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_MightNeedHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MightNeedHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.NegotiateHandshake
void Mono::Security::Protocol::Tls::SslStreamBase::NegotiateHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::NegotiateHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NegotiateHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake
::System::IAsyncResult* Mono::Security::Protocol::Tls::SslStreamBase::BeginNegotiateHandshake(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::BeginNegotiateHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.EndNegotiateHandshake
void Mono::Security::Protocol::Tls::SslStreamBase::EndNegotiateHandshake(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::EndNegotiateHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.OnLocalCertificateSelection
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslStreamBase::OnLocalCertificateSelection(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* serverRequestedCertificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::OnLocalCertificateSelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, clientCertificates, serverCertificate, targetHost, serverRequestedCertificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.OnRemoteCertificateValidation
bool Mono::Security::Protocol::Tls::SslStreamBase::OnRemoteCertificateValidation(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::OnRemoteCertificateValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, errors);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.OnRemoteCertificateValidation2
::Mono::Security::Interface::ValidationResult* Mono::Security::Protocol::Tls::SslStreamBase::OnRemoteCertificateValidation2(::Mono::Security::X509::X509CertificateCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::OnRemoteCertificateValidation2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, collection);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_HaveRemoteValidation2Callback
bool Mono::Security::Protocol::Tls::SslStreamBase::get_HaveRemoteValidation2Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_HaveRemoteValidation2Callback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.OnLocalPrivateKeySelection
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::SslStreamBase::OnLocalPrivateKeySelection(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::OnLocalPrivateKeySelection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.RaiseLocalCertificateSelection
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslStreamBase::RaiseLocalCertificateSelection(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* requestedCertificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::RaiseLocalCertificateSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseLocalCertificateSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(requestedCertificates)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, certificates, remoteCertificate, targetHost, requestedCertificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.RaiseRemoteCertificateValidation
bool Mono::Security::Protocol::Tls::SslStreamBase::RaiseRemoteCertificateValidation(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::ArrayW<int> errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::RaiseRemoteCertificateValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseRemoteCertificateValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(errors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate, errors);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.RaiseRemoteCertificateValidation2
::Mono::Security::Interface::ValidationResult* Mono::Security::Protocol::Tls::SslStreamBase::RaiseRemoteCertificateValidation2(::Mono::Security::X509::X509CertificateCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::RaiseRemoteCertificateValidation2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseRemoteCertificateValidation2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, collection);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.RaiseLocalPrivateKeySelection
::System::Security::Cryptography::AsymmetricAlgorithm* Mono::Security::Protocol::Tls::SslStreamBase::RaiseLocalPrivateKeySelection(::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::StringW targetHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::RaiseLocalPrivateKeySelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseLocalPrivateKeySelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(targetHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method, certificate, targetHost);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_CheckCertRevocationStatus
bool Mono::Security::Protocol::Tls::SslStreamBase::get_CheckCertRevocationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_CheckCertRevocationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckCertRevocationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.set_CheckCertRevocationStatus
void Mono::Security::Protocol::Tls::SslStreamBase::set_CheckCertRevocationStatus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::set_CheckCertRevocationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckCertRevocationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_CipherAlgorithm
::Mono::Security::Protocol::Tls::CipherAlgorithmType Mono::Security::Protocol::Tls::SslStreamBase::get_CipherAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_CipherAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CipherAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::CipherAlgorithmType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_CipherStrength
int Mono::Security::Protocol::Tls::SslStreamBase::get_CipherStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_CipherStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CipherStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_HashAlgorithm
::Mono::Security::Protocol::Tls::HashAlgorithmType Mono::Security::Protocol::Tls::SslStreamBase::get_HashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_HashAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::HashAlgorithmType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_HashStrength
int Mono::Security::Protocol::Tls::SslStreamBase::get_HashStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_HashStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_KeyExchangeStrength
int Mono::Security::Protocol::Tls::SslStreamBase::get_KeyExchangeStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_KeyExchangeStrength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyExchangeStrength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_KeyExchangeAlgorithm
::Mono::Security::Protocol::Tls::ExchangeAlgorithmType Mono::Security::Protocol::Tls::SslStreamBase::get_KeyExchangeAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_KeyExchangeAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyExchangeAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::ExchangeAlgorithmType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_SecurityProtocol
::Mono::Security::Protocol::Tls::SecurityProtocolType Mono::Security::Protocol::Tls::SslStreamBase::get_SecurityProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_SecurityProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecurityProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::SecurityProtocolType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_ServerCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::SslStreamBase::get_ServerCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_ServerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_ServerCertificates
::Mono::Security::X509::X509CertificateCollection* Mono::Security::Protocol::Tls::SslStreamBase::get_ServerCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_ServerCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.BeginNegotiateHandshake
bool Mono::Security::Protocol::Tls::SslStreamBase::BeginNegotiateHandshake(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::BeginNegotiateHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginNegotiateHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.EndNegotiateHandshake
void Mono::Security::Protocol::Tls::SslStreamBase::EndNegotiateHandshake(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::EndNegotiateHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndNegotiateHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.InternalBeginRead
void Mono::Security::Protocol::Tls::SslStreamBase::InternalBeginRead(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalBeginRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalBeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.InternalReadCallback
void Mono::Security::Protocol::Tls::SslStreamBase::InternalReadCallback(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.InternalReadCallback_inner
void Mono::Security::Protocol::Tls::SslStreamBase::InternalReadCallback_inner(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult* internalResult, ::ArrayW<uint8_t> recbuf, ::ArrayW<::Il2CppObject*> state, bool didRead, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalReadCallback_inner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadCallback_inner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalResult), ::il2cpp_utils::ExtractType(recbuf), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(didRead), ::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, internalResult, recbuf, state, didRead, n);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.InternalBeginWrite
void Mono::Security::Protocol::Tls::SslStreamBase::InternalBeginWrite(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalBeginWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalBeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.InternalWriteCallback
void Mono::Security::Protocol::Tls::SslStreamBase::InternalWriteCallback(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalWriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Read
int Mono::Security::Protocol::Tls::SslStreamBase::Read(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Write
void Mono::Security::Protocol::Tls::SslStreamBase::Write(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.resetBuffer
void Mono::Security::Protocol::Tls::SslStreamBase::resetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::resetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "resetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.checkDisposed
void Mono::Security::Protocol::Tls::SslStreamBase::checkDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::checkDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase..cctor
void Mono::Security::Protocol::Tls::SslStreamBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls", "SslStreamBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.BeginRead
::System::IAsyncResult* Mono::Security::Protocol::Tls::SslStreamBase::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.BeginWrite
::System::IAsyncResult* Mono::Security::Protocol::Tls::SslStreamBase::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.EndRead
int Mono::Security::Protocol::Tls::SslStreamBase::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.EndWrite
void Mono::Security::Protocol::Tls::SslStreamBase::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Close
void Mono::Security::Protocol::Tls::SslStreamBase::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Flush
void Mono::Security::Protocol::Tls::SslStreamBase::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Read
int Mono::Security::Protocol::Tls::SslStreamBase::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Seek
int64_t Mono::Security::Protocol::Tls::SslStreamBase::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.SetLength
void Mono::Security::Protocol::Tls::SslStreamBase::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Write
void Mono::Security::Protocol::Tls::SslStreamBase::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_CanRead
bool Mono::Security::Protocol::Tls::SslStreamBase::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_CanSeek
bool Mono::Security::Protocol::Tls::SslStreamBase::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_CanWrite
bool Mono::Security::Protocol::Tls::SslStreamBase::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_Length
int64_t Mono::Security::Protocol::Tls::SslStreamBase::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.get_Position
int64_t Mono::Security::Protocol::Tls::SslStreamBase::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.set_Position
void Mono::Security::Protocol::Tls::SslStreamBase::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Finalize
void Mono::Security::Protocol::Tls::SslStreamBase::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase.Dispose
void Mono::Security::Protocol::Tls::SslStreamBase::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.SslStreamBase/AsyncHandshakeDelegate
#include "Mono/Security/Protocol/Tls/SslStreamBase_AsyncHandshakeDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult
#include "Mono/Security/Protocol/Tls/SslStreamBase_InternalAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/AsyncHandshakeDelegate.Invoke
void Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate::Invoke(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult* asyncResult, bool fromWrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult, fromWrite);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/AsyncHandshakeDelegate.BeginInvoke
::System::IAsyncResult* Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate::BeginInvoke(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult* asyncResult, bool fromWrite, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, asyncResult, fromWrite, callback, object);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/AsyncHandshakeDelegate.EndInvoke
void Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase::AsyncHandshakeDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult
#include "Mono/Security/Protocol/Tls/SslStreamBase_InternalAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _userCallback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__userCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__userCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userCallback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _userState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__userState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__userState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception _asyncException
[[deprecated("Use field access instead!")]] ::System::Exception*& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__asyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__asyncException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent handle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesRead
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__bytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__bytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fromWrite
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__fromWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__fromWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fromWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _proceedAfterHandshake
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__proceedAfterHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__proceedAfterHandshake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proceedAfterHandshake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _offset
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_ProceedAfterHandshake
bool Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_ProceedAfterHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_ProceedAfterHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProceedAfterHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_FromWrite
bool Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_FromWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_FromWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FromWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_Buffer
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_Offset
int Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_Offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_Count
int Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_BytesRead
int Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_BytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_BytesRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_AsyncState
::Il2CppObject* Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_AsyncException
::System::Exception* Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_AsyncException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_AsyncException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_CompletedWithError
bool Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_CompletedWithError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_CompletedWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_CompletedSynchronously
bool Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.get_IsCompleted
bool Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete(::System::Exception* ex, int bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex), ::il2cpp_utils::ExtractType(bytesRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex, bytesRead);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete(int bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytesRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytesRead);
}
// Autogenerated method: Mono.Security.Protocol.Tls.SslStreamBase/InternalAsyncResult.SetComplete
void Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SslStreamBase::InternalAsyncResult::SetComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Tls.TlsCipherSuite
#include "Mono/Security/Protocol/Tls/TlsCipherSuite.hpp"
// Including type: Mono.Security.Protocol.Tls.ContentType
#include "Mono/Security/Protocol/Tls/ContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MacHeaderLength
int Mono::Security::Protocol::Tls::TlsCipherSuite::_get_MacHeaderLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::_get_MacHeaderLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.Protocol.Tls", "TlsCipherSuite", "MacHeaderLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MacHeaderLength
void Mono::Security::Protocol::Tls::TlsCipherSuite::_set_MacHeaderLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::_set_MacHeaderLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "TlsCipherSuite", "MacHeaderLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] header
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::TlsCipherSuite::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object headerLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Protocol::Tls::TlsCipherSuite::dyn_headerLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::dyn_headerLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headerLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsCipherSuite.ComputeServerRecordMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeServerRecordMAC(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeServerRecordMAC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsCipherSuite.ComputeClientRecordMAC
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeClientRecordMAC(::Mono::Security::Protocol::Tls::ContentType contentType, ::ArrayW<uint8_t> fragment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeClientRecordMAC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, fragment);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsCipherSuite.ComputeMasterSecret
void Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeMasterSecret(::ArrayW<uint8_t> preMasterSecret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeMasterSecret");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preMasterSecret);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsCipherSuite.ComputeKeys
void Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsCipherSuite::ComputeKeys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::CipherSuite*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.TlsClientSettings
#include "Mono/Security/Protocol/Tls/TlsClientSettings.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String targetHost
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Protocol::Tls::TlsClientSettings::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::dyn_targetHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection certificates
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Security::Protocol::Tls::TlsClientSettings::dyn_certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::dyn_certificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificates"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate clientCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Security::Protocol::Tls::TlsClientSettings::dyn_clientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::dyn_clientCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.RSAManaged certificateRSA
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::RSAManaged*& Mono::Security::Protocol::Tls::TlsClientSettings::dyn_certificateRSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::dyn_certificateRSA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateRSA"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::RSAManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.get_TargetHost
::StringW Mono::Security::Protocol::Tls::TlsClientSettings::get_TargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::get_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.set_TargetHost
void Mono::Security::Protocol::Tls::TlsClientSettings::set_TargetHost(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::set_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.get_Certificates
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Security::Protocol::Tls::TlsClientSettings::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.set_Certificates
void Mono::Security::Protocol::Tls::TlsClientSettings::set_Certificates(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::set_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.get_ClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::TlsClientSettings::get_ClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::get_ClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.set_ClientCertificate
void Mono::Security::Protocol::Tls::TlsClientSettings::set_ClientCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::set_ClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.get_CertificateRSA
::Mono::Security::Cryptography::RSAManaged* Mono::Security::Protocol::Tls::TlsClientSettings::get_CertificateRSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::get_CertificateRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::RSAManaged*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsClientSettings.UpdateCertificateRSA
void Mono::Security::Protocol::Tls::TlsClientSettings::UpdateCertificateRSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsClientSettings::UpdateCertificateRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCertificateRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.TlsException
#include "Mono/Security/Protocol/Tls/TlsException.hpp"
// Including type: Mono.Security.Protocol.Tls.Alert
#include "Mono/Security/Protocol/Tls/Alert.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Alert alert
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Alert*& Mono::Security::Protocol::Tls::TlsException::dyn_alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::dyn_alert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alert"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Alert**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsException.get_Alert
::Mono::Security::Protocol::Tls::Alert* Mono::Security::Protocol::Tls::TlsException::get_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::get_Alert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Alert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Alert*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.TlsServerSettings
#include "Mono/Security/Protocol/Tls/TlsServerSettings.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509CertificateCollection certificates
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509CertificateCollection*& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificates"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA certificateRSA
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificateRSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificateRSA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateRSA"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSAParameters rsaParameters
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSAParameters& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_rsaParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_rsaParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rsaParameters"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSAParameters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] signedParams
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_signedParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_signedParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signedParams"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] distinguisedNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_distinguisedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_distinguisedNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distinguisedNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean serverKeyExchange
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_serverKeyExchange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_serverKeyExchange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKeyExchange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean certificateRequest
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificateRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Handshake.ClientCertificateType[] certificateTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>& Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificateTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::dyn_certificateTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_ServerKeyExchange
bool Mono::Security::Protocol::Tls::TlsServerSettings::get_ServerKeyExchange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_ServerKeyExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerKeyExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.set_ServerKeyExchange
void Mono::Security::Protocol::Tls::TlsServerSettings::set_ServerKeyExchange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::set_ServerKeyExchange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ServerKeyExchange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_Certificates
::Mono::Security::X509::X509CertificateCollection* Mono::Security::Protocol::Tls::TlsServerSettings::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.set_Certificates
void Mono::Security::Protocol::Tls::TlsServerSettings::set_Certificates(::Mono::Security::X509::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::set_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_CertificateRSA
::System::Security::Cryptography::RSA* Mono::Security::Protocol::Tls::TlsServerSettings::get_CertificateRSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_CertificateRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_RsaParameters
::System::Security::Cryptography::RSAParameters Mono::Security::Protocol::Tls::TlsServerSettings::get_RsaParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_RsaParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RsaParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.set_RsaParameters
void Mono::Security::Protocol::Tls::TlsServerSettings::set_RsaParameters(::System::Security::Cryptography::RSAParameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::set_RsaParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RsaParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_SignedParams
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::TlsServerSettings::get_SignedParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_SignedParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignedParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.set_SignedParams
void Mono::Security::Protocol::Tls::TlsServerSettings::set_SignedParams(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::set_SignedParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SignedParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_CertificateRequest
bool Mono::Security::Protocol::Tls::TlsServerSettings::get_CertificateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_CertificateRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.set_CertificateRequest
void Mono::Security::Protocol::Tls::TlsServerSettings::set_CertificateRequest(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::set_CertificateRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_CertificateTypes
::ArrayW<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType> Mono::Security::Protocol::Tls::TlsServerSettings::get_CertificateTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_CertificateTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.set_CertificateTypes
void Mono::Security::Protocol::Tls::TlsServerSettings::set_CertificateTypes(::ArrayW<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::set_CertificateTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.get_DistinguisedNames
::ArrayW<::StringW> Mono::Security::Protocol::Tls::TlsServerSettings::get_DistinguisedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::get_DistinguisedNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DistinguisedNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.set_DistinguisedNames
void Mono::Security::Protocol::Tls::TlsServerSettings::set_DistinguisedNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::set_DistinguisedNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DistinguisedNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsServerSettings.UpdateCertificateRSA
void Mono::Security::Protocol::Tls::TlsServerSettings::UpdateCertificateRSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsServerSettings::UpdateCertificateRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCertificateRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.TlsStream
#include "Mono/Security/Protocol/Tls/TlsStream.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 temp_size
int Mono::Security::Protocol::Tls::TlsStream::_get_temp_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::_get_temp_size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.Protocol.Tls", "TlsStream", "temp_size"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 temp_size
void Mono::Security::Protocol::Tls::TlsStream::_set_temp_size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::_set_temp_size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls", "TlsStream", "temp_size", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canRead
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::TlsStream::dyn_canRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::dyn_canRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canWrite
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::TlsStream::dyn_canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::dyn_canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream buffer
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& Mono::Security::Protocol::Tls::TlsStream::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] temp
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::TlsStream::dyn_temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::dyn_temp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temp"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.get_EOF
bool Mono::Security::Protocol::Tls::TlsStream::get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::get_EOF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EOF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.ReadSmallValue
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::TlsStream::ReadSmallValue(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::ReadSmallValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSmallValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, length);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.ReadByte
uint8_t Mono::Security::Protocol::Tls::TlsStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.ReadInt16
int16_t Mono::Security::Protocol::Tls::TlsStream::ReadInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::ReadInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.ReadInt24
int Mono::Security::Protocol::Tls::TlsStream::ReadInt24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::ReadInt24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.ReadInt32
int Mono::Security::Protocol::Tls::TlsStream::ReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::ReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.ReadBytes
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::TlsStream::ReadBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, count);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Write
void Mono::Security::Protocol::Tls::TlsStream::Write(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Write
void Mono::Security::Protocol::Tls::TlsStream::Write(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.WriteInt24
void Mono::Security::Protocol::Tls::TlsStream::WriteInt24(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::WriteInt24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInt24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Write
void Mono::Security::Protocol::Tls::TlsStream::Write(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Write
void Mono::Security::Protocol::Tls::TlsStream::Write(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Write
void Mono::Security::Protocol::Tls::TlsStream::Write(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Reset
void Mono::Security::Protocol::Tls::TlsStream::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.ToArray
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::TlsStream::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.get_CanWrite
bool Mono::Security::Protocol::Tls::TlsStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.get_CanRead
bool Mono::Security::Protocol::Tls::TlsStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.get_CanSeek
bool Mono::Security::Protocol::Tls::TlsStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.get_Position
int64_t Mono::Security::Protocol::Tls::TlsStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.set_Position
void Mono::Security::Protocol::Tls::TlsStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.get_Length
int64_t Mono::Security::Protocol::Tls::TlsStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Flush
void Mono::Security::Protocol::Tls::TlsStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.SetLength
void Mono::Security::Protocol::Tls::TlsStream::SetLength(int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Seek
int64_t Mono::Security::Protocol::Tls::TlsStream::Seek(int64_t offset, ::System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, loc);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Read
int Mono::Security::Protocol::Tls::TlsStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Security.Protocol.Tls.TlsStream.Write
void Mono::Security::Protocol::Tls::TlsStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.ClientCertificateType
#include "Mono/Security/Protocol/Tls/Handshake/ClientCertificateType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType RSA
::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_RSA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "RSA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType RSA
void Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_RSA(::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_RSA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "RSA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType DSS
::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_DSS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_DSS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "DSS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType DSS
void Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_DSS(::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_DSS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "DSS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType RSAFixed
::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_RSAFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_RSAFixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "RSAFixed"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType RSAFixed
void Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_RSAFixed(::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_RSAFixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "RSAFixed", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType DSSFixed
::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_DSSFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_DSSFixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "DSSFixed"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType DSSFixed
void Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_DSSFixed(::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_DSSFixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "DSSFixed", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType Unknown
::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.ClientCertificateType Unknown
void Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_Unknown(::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "ClientCertificateType", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeMessage.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Context context
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Context*& Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Context**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Handshake.HandshakeType handshakeType
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Handshake::HandshakeType& Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_handshakeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_handshakeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handshakeType"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::Handshake::HandshakeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.ContentType contentType
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::ContentType& Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::ContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] cache
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::dyn_cache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cache"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.get_Context
::Mono::Security::Protocol::Tls::Context* Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Context*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.get_HandshakeType
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::get_HandshakeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::get_HandshakeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandshakeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::Handshake::HandshakeType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.get_ContentType
::Mono::Security::Protocol::Tls::ContentType Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Tls::ContentType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.Process
void Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.Update
void Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.EncodeMessage
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::EncodeMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::EncodeMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage.Compare
bool Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::Compare(::ArrayW<uint8_t> buffer1, ::ArrayW<uint8_t> buffer2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls.Handshake", "HandshakeMessage", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer1), ::il2cpp_utils::ExtractType(buffer2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer1, buffer2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeType
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType HelloRequest
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_HelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_HelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "HelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType HelloRequest
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_HelloRequest(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_HelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "HelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ClientHello
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ClientHello() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ClientHello");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ClientHello"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ClientHello
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ClientHello(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ClientHello");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ClientHello", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ServerHello
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ServerHello() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ServerHello");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ServerHello"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ServerHello
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ServerHello(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ServerHello");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ServerHello", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType Certificate
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_Certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_Certificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "Certificate"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType Certificate
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_Certificate(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_Certificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "Certificate", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ServerKeyExchange
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ServerKeyExchange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ServerKeyExchange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ServerKeyExchange"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ServerKeyExchange
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ServerKeyExchange(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ServerKeyExchange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ServerKeyExchange", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType CertificateRequest
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_CertificateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_CertificateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "CertificateRequest"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType CertificateRequest
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_CertificateRequest(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_CertificateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "CertificateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ServerHelloDone
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ServerHelloDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ServerHelloDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ServerHelloDone"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ServerHelloDone
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ServerHelloDone(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ServerHelloDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ServerHelloDone", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType CertificateVerify
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_CertificateVerify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_CertificateVerify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "CertificateVerify"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType CertificateVerify
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_CertificateVerify(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_CertificateVerify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "CertificateVerify", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ClientKeyExchange
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ClientKeyExchange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_ClientKeyExchange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ClientKeyExchange"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType ClientKeyExchange
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ClientKeyExchange(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_ClientKeyExchange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "ClientKeyExchange", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType Finished
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType Finished
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_Finished(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "Finished", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType None
::Mono::Security::Protocol::Tls::Handshake::HandshakeType Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Tls::Handshake::HandshakeType>("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Tls.Handshake.HandshakeType None
void Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_None(::Mono::Security::Protocol::Tls::Handshake::HandshakeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake", "HandshakeType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Protocol::Tls::Handshake::HandshakeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::HandshakeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsClientCertificate.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509CertificateCollection clientCertificates
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509CertificateCollection*& Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::dyn_clientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::dyn_clientCertificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificates"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate.get_HasCertificate
bool Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::get_HasCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::get_HasCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate.checkCertificateUsage
bool Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::checkCertificateUsage(::Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::checkCertificateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkCertificateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate.validateCertificates
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::validateCertificates(::Mono::Security::X509::X509CertificateCollection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::validateCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "validateCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, certificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate.Update
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificate.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificate::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificateVerify
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsClientCertificateVerify.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificateVerify.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificateVerify::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificateVerify::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientCertificateVerify.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificateVerify::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientCertificateVerify::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientFinished
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsClientFinished.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientFinished.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientFinished::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientFinished::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientFinished.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientFinished::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientFinished::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientHello
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsClientHello.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] random
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] sessionId
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_sessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_sessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionId"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16[] cipherSuites
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_cipherSuites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_cipherSuites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cipherSuites"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] compressionMethods
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_compressionMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::dyn_compressionMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressionMethods"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientHello.processProtocol
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::processProtocol(int16_t protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::processProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocol);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientHello.selectCipherSuite
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::selectCipherSuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::selectCipherSuite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "selectCipherSuite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientHello.selectCompressionMethod
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::selectCompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::selectCompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "selectCompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientHello.Update
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientHello.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientHello.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientHello::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientKeyExchange
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsClientKeyExchange.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientKeyExchange.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientKeyExchange::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientKeyExchange::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsClientKeyExchange.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsClientKeyExchange::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsClientKeyExchange::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerCertificate
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsServerCertificate.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerCertificate.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificate::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificate::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerCertificate.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificate::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificate::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerCertificateRequest
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsServerCertificateRequest.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerCertificateRequest.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificateRequest::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificateRequest::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerCertificateRequest.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificateRequest::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerCertificateRequest::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerFinished
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsServerFinished.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Ssl3Marker
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::_get_Ssl3Marker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::_get_Ssl3Marker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Tls.Handshake.Server", "TlsServerFinished", "Ssl3Marker"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Ssl3Marker
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::_set_Ssl3Marker(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::_set_Ssl3Marker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake.Server", "TlsServerFinished", "Ssl3Marker", value));
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerFinished..cctor
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls.Handshake.Server", "TlsServerFinished", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerFinished.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerFinished.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerFinished::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerHello
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsServerHello.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 unixTime
[[deprecated("Use field access instead!")]] int& Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::dyn_unixTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::dyn_unixTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unixTime"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] random
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerHello.Update
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerHello.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerHello.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHello::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerHelloDone
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsServerHelloDone.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerHelloDone.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHelloDone::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHelloDone::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerHelloDone.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHelloDone::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerHelloDone::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerKeyExchange
#include "Mono/Security/Protocol/Tls/Handshake/Server/TlsServerKeyExchange.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerKeyExchange.createSignature
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::createSignature(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::createSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rsa, buffer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerKeyExchange.Update
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerKeyExchange.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Server.TlsServerKeyExchange.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Server::TlsServerKeyExchange::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsClientCertificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean clientCertSelected
[[deprecated("Use field access instead!")]] bool& Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::dyn_clientCertSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::dyn_clientCertSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate clientCert
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::dyn_clientCert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::dyn_clientCert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCert"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate.get_ClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::get_ClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::get_ClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate.GetClientCertificate
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::GetClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::GetClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate.SendCertificates
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::SendCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::SendCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate.FindParentCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::FindParentCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::FindParentCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindParentCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificate.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificate::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsClientCertificateVerify.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify.getClientCertRSA
::System::Security::Cryptography::RSA* Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getClientCertRSA(::System::Security::Cryptography::RSA* privKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getClientCertRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getClientCertRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method, privKey);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify.getUnsignedBigInteger
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getUnsignedBigInteger(::ArrayW<uint8_t> integer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(integer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, integer);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientFinished
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsClientFinished.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Ssl3Marker
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::_get_Ssl3Marker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::_get_Ssl3Marker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Tls.Handshake.Client", "TlsClientFinished", "Ssl3Marker"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Ssl3Marker
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::_set_Ssl3Marker(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::_set_Ssl3Marker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake.Client", "TlsClientFinished", "Ssl3Marker", value));
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientFinished..cctor
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls.Handshake.Client", "TlsClientFinished", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientFinished.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientFinished.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientFinished.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientFinished::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientHello
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsClientHello.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] random
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientHello.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientHello.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientHello.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientHello::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientKeyExchange
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsClientKeyExchange.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientKeyExchange.ProcessCommon
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientKeyExchange::ProcessCommon(bool sendLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientKeyExchange::ProcessCommon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCommon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendLength);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientKeyExchange.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientKeyExchange::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientKeyExchange::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientKeyExchange.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsClientKeyExchange::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientKeyExchange::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsServerCertificate.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Mono.Security.Protocol.Tls.ClientContext
#include "Mono/Security/Protocol/Tls/ClientContext.hpp"
// Including type: Mono.Security.Protocol.Tls.AlertDescription
#include "Mono/Security/Protocol/Tls/AlertDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509CertificateCollection certificates
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509CertificateCollection*& Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::dyn_certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::dyn_certificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificates"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.checkCertificateUsage
bool Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::checkCertificateUsage(::Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::checkCertificateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkCertificateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.validateCertificates
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::validateCertificates(::Mono::Security::X509::X509CertificateCollection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::validateCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "validateCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, certificates);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.RemoteValidation
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::RemoteValidation(::Mono::Security::Protocol::Tls::ClientContext* context, ::Mono::Security::Protocol::Tls::AlertDescription description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::RemoteValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoteValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(description)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, description);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.LocalValidation
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::LocalValidation(::Mono::Security::Protocol::Tls::ClientContext* context, ::Mono::Security::Protocol::Tls::AlertDescription description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::LocalValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(description)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, description);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.checkServerIdentity
bool Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::checkServerIdentity(::Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::checkServerIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkServerIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.checkDomainName
bool Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::checkDomainName(::StringW subjectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::checkDomainName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkDomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subjectName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, subjectName);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.Match
bool Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::Match(::StringW hostname, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls.Handshake.Client", "TlsServerCertificate", "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, pattern);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificate.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificate::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificateRequest
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsServerCertificateRequest.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.Handshake.ClientCertificateType[] certificateTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>& Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::dyn_certificateTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::dyn_certificateTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Security::Protocol::Tls::Handshake::ClientCertificateType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] distinguisedNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::dyn_distinguisedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::dyn_distinguisedNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distinguisedNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificateRequest.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificateRequest.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerCertificateRequest.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerCertificateRequest::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerFinished
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsServerFinished.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Ssl3Marker
::ArrayW<uint8_t> Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::_get_Ssl3Marker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::_get_Ssl3Marker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Tls.Handshake.Client", "TlsServerFinished", "Ssl3Marker"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Ssl3Marker
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::_set_Ssl3Marker(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::_set_Ssl3Marker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Tls.Handshake.Client", "TlsServerFinished", "Ssl3Marker", value));
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerFinished..cctor
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Tls.Handshake.Client", "TlsServerFinished", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerFinished.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerFinished.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerFinished.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerFinished::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerHello
#include "Mono/Security/Protocol/Tls/Handshake/Client/TlsServerHello.hpp"
// Including type: Mono.Security.Protocol.Tls.CipherSuite
#include "Mono/Security/Protocol/Tls/CipherSuite.hpp"
// Including type: Mono.Security.Protocol.Tls.Context
#include "Mono/Security/Protocol/Tls/Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.SecurityCompressionType compressionMethod
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityCompressionType& Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_compressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_compressionMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressionMethod"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::SecurityCompressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] random
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] sessionId
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_sessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_sessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionId"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Tls.CipherSuite cipherSuite
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CipherSuite*& Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_cipherSuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::dyn_cipherSuite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cipherSuite"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Tls::CipherSuite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerHello.processProtocol
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::processProtocol(int16_t protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::processProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocol);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerHello.Update
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerHello.ProcessAsSsl3
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::ProcessAsSsl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::ProcessAsSsl3");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Tls.Handshake.Client.TlsServerHello.ProcessAsTls1
void Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::ProcessAsTls1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsServerHello::ProcessAsTls1");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
