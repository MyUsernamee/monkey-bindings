// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ExitGames.Client.Photon.StructWrapping.StructWrapperUtility
#include "ExitGames/Client/Photon/StructWrapping/StructWrapperUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExitGames.Client.Photon.Encryption.IPhotonEncryptor
#include "ExitGames/Client/Photon/Encryption/IPhotonEncryptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ExitGames.Client.Photon.Encryption.IPhotonEncryptor.Init
void ExitGames::Client::Photon::Encryption::IPhotonEncryptor::Init(::ArrayW<uint8_t> encryptionSecret, ::ArrayW<uint8_t> hmacSecret, ::ArrayW<uint8_t> ivBytes, bool chainingModeGCM, int mtu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::IPhotonEncryptor::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::IPhotonEncryptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encryptionSecret, hmacSecret, ivBytes, chainingModeGCM, mtu);
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.IPhotonEncryptor.Encrypt2
void ExitGames::Client::Photon::Encryption::IPhotonEncryptor::Encrypt2(::ArrayW<uint8_t> data, int len, ::ArrayW<uint8_t> header, ::ArrayW<uint8_t> output, int outOffset, ByRef<int> outSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::IPhotonEncryptor::Encrypt2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::IPhotonEncryptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, len, header, output, outOffset, byref(outSize));
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.IPhotonEncryptor.Decrypt2
::ArrayW<uint8_t> ExitGames::Client::Photon::Encryption::IPhotonEncryptor::Decrypt2(::ArrayW<uint8_t> data, int offset, int len, ::ArrayW<uint8_t> header, ByRef<int> outLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::IPhotonEncryptor::Decrypt2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::IPhotonEncryptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, len, header, byref(outLen));
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.IPhotonEncryptor.CalculateEncryptedSize
int ExitGames::Client::Photon::Encryption::IPhotonEncryptor::CalculateEncryptedSize(int unencryptedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::IPhotonEncryptor::CalculateEncryptedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::IPhotonEncryptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unencryptedSize);
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.IPhotonEncryptor.CalculateFragmentLength
int ExitGames::Client::Photon::Encryption::IPhotonEncryptor::CalculateFragmentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::IPhotonEncryptor::CalculateFragmentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::IPhotonEncryptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExitGames.Client.Photon.Encryption.EncryptorNet
#include "ExitGames/Client/Photon/Encryption/EncryptorNet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ExitGames.Client.Photon.Encryption.EncryptorNet.Init
void ExitGames::Client::Photon::Encryption::EncryptorNet::Init(::ArrayW<uint8_t> encryptionSecret, ::ArrayW<uint8_t> hmacSecret, ::ArrayW<uint8_t> ivBytes, bool chainingModeGCM, int mtu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::EncryptorNet::Init");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::EncryptorNet*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encryptionSecret, hmacSecret, ivBytes, chainingModeGCM, mtu);
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.EncryptorNet.Encrypt2
void ExitGames::Client::Photon::Encryption::EncryptorNet::Encrypt2(::ArrayW<uint8_t> data, int len, ::ArrayW<uint8_t> header, ::ArrayW<uint8_t> output, int outOffset, ByRef<int> outSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::EncryptorNet::Encrypt2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::EncryptorNet*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, len, header, output, outOffset, byref(outSize));
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.EncryptorNet.Decrypt2
::ArrayW<uint8_t> ExitGames::Client::Photon::Encryption::EncryptorNet::Decrypt2(::ArrayW<uint8_t> data, int offset, int len, ::ArrayW<uint8_t> header, ByRef<int> outLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::EncryptorNet::Decrypt2");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::EncryptorNet*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, len, header, byref(outLen));
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.EncryptorNet.CalculateEncryptedSize
int ExitGames::Client::Photon::Encryption::EncryptorNet::CalculateEncryptedSize(int unencryptedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::EncryptorNet::CalculateEncryptedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::EncryptorNet*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unencryptedSize);
}
// Autogenerated method: ExitGames.Client.Photon.Encryption.EncryptorNet.CalculateFragmentLength
int ExitGames::Client::Photon::Encryption::EncryptorNet::CalculateFragmentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Encryption::EncryptorNet::CalculateFragmentLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ExitGames::Client::Photon::Encryption::EncryptorNet*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.SocketServer.Security.DiffieHellmanCryptoProvider
#include "Photon/SocketServer/Security/DiffieHellmanCryptoProvider.hpp"
// Including type: System.Security.Cryptography.Rijndael
#include "System/Security/Cryptography/Rijndael.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger primeRoot
::System::Numerics::BigInteger Photon::SocketServer::Security::DiffieHellmanCryptoProvider::_get_primeRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::_get_primeRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("Photon.SocketServer.Security", "DiffieHellmanCryptoProvider", "primeRoot"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger primeRoot
void Photon::SocketServer::Security::DiffieHellmanCryptoProvider::_set_primeRoot(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::_set_primeRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.SocketServer.Security", "DiffieHellmanCryptoProvider", "primeRoot", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Numerics.BigInteger prime
[[deprecated("Use field access instead!")]] ::System::Numerics::BigInteger& Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_prime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_prime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prime"))->offset;
  return *reinterpret_cast<::System::Numerics::BigInteger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Numerics.BigInteger secret
[[deprecated("Use field access instead!")]] ::System::Numerics::BigInteger& Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::System::Numerics::BigInteger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Numerics.BigInteger publicKey
[[deprecated("Use field access instead!")]] ::System::Numerics::BigInteger& Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<::System::Numerics::BigInteger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.Rijndael crypto
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::Rijndael*& Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_crypto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_crypto");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crypto"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::Rijndael**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] sharedKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_sharedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::dyn_sharedKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.get_PublicKey
::ArrayW<uint8_t> Photon::SocketServer::Security::DiffieHellmanCryptoProvider::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::get_PublicKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::DiffieHellmanCryptoProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.DeriveSharedKey
void Photon::SocketServer::Security::DiffieHellmanCryptoProvider::DeriveSharedKey(::ArrayW<uint8_t> otherPartyPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::DeriveSharedKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::DiffieHellmanCryptoProvider*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPartyPublicKey);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.PhotonBigIntArrayToMsBigIntArray
::ArrayW<uint8_t> Photon::SocketServer::Security::DiffieHellmanCryptoProvider::PhotonBigIntArrayToMsBigIntArray(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::PhotonBigIntArrayToMsBigIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PhotonBigIntArrayToMsBigIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, array);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.MsBigIntArrayToPhotonBigIntArray
::ArrayW<uint8_t> Photon::SocketServer::Security::DiffieHellmanCryptoProvider::MsBigIntArrayToPhotonBigIntArray(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::MsBigIntArrayToPhotonBigIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MsBigIntArrayToPhotonBigIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, array);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.Encrypt
::ArrayW<uint8_t> Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Encrypt(::ArrayW<uint8_t> data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Encrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::DiffieHellmanCryptoProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.Decrypt
::ArrayW<uint8_t> Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Decrypt(::ArrayW<uint8_t> data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Decrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::DiffieHellmanCryptoProvider*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.Dispose
void Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::DiffieHellmanCryptoProvider*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.Dispose
void Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.CalculatePublicKey
::System::Numerics::BigInteger Photon::SocketServer::Security::DiffieHellmanCryptoProvider::CalculatePublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::CalculatePublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(this, ___internal__method);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.CalculateSharedKey
::System::Numerics::BigInteger Photon::SocketServer::Security::DiffieHellmanCryptoProvider::CalculateSharedKey(::System::Numerics::BigInteger otherPartyPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::CalculateSharedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSharedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherPartyPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(this, ___internal__method, otherPartyPublicKey);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider.GenerateRandomSecret
::System::Numerics::BigInteger Photon::SocketServer::Security::DiffieHellmanCryptoProvider::GenerateRandomSecret(int secretLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::GenerateRandomSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateRandomSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secretLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(this, ___internal__method, secretLength);
}
// Autogenerated method: Photon.SocketServer.Security.DiffieHellmanCryptoProvider..cctor
void Photon::SocketServer::Security::DiffieHellmanCryptoProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::DiffieHellmanCryptoProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.SocketServer.Security", "DiffieHellmanCryptoProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.SocketServer.Security.ICryptoProvider
#include "Photon/SocketServer/Security/ICryptoProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.SocketServer.Security.ICryptoProvider.get_PublicKey
::ArrayW<uint8_t> Photon::SocketServer::Security::ICryptoProvider::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::ICryptoProvider::get_PublicKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::ICryptoProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.SocketServer.Security.ICryptoProvider.DeriveSharedKey
void Photon::SocketServer::Security::ICryptoProvider::DeriveSharedKey(::ArrayW<uint8_t> otherPartyPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::ICryptoProvider::DeriveSharedKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::ICryptoProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPartyPublicKey);
}
// Autogenerated method: Photon.SocketServer.Security.ICryptoProvider.Encrypt
::ArrayW<uint8_t> Photon::SocketServer::Security::ICryptoProvider::Encrypt(::ArrayW<uint8_t> data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::ICryptoProvider::Encrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::ICryptoProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: Photon.SocketServer.Security.ICryptoProvider.Decrypt
::ArrayW<uint8_t> Photon::SocketServer::Security::ICryptoProvider::Decrypt(::ArrayW<uint8_t> data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::ICryptoProvider::Decrypt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::SocketServer::Security::ICryptoProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.SocketServer.Security.OakleyGroups
#include "Photon/SocketServer/Security/OakleyGroups.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 Generator
int Photon::SocketServer::Security::OakleyGroups::_get_Generator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_get_Generator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.SocketServer.Security", "OakleyGroups", "Generator"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 Generator
void Photon::SocketServer::Security::OakleyGroups::_set_Generator(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_set_Generator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.SocketServer.Security", "OakleyGroups", "Generator", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] OakleyPrime768
::ArrayW<uint8_t> Photon::SocketServer::Security::OakleyGroups::_get_OakleyPrime768() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_get_OakleyPrime768");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.SocketServer.Security", "OakleyGroups", "OakleyPrime768"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] OakleyPrime768
void Photon::SocketServer::Security::OakleyGroups::_set_OakleyPrime768(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_set_OakleyPrime768");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.SocketServer.Security", "OakleyGroups", "OakleyPrime768", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] OakleyPrime1024
::ArrayW<uint8_t> Photon::SocketServer::Security::OakleyGroups::_get_OakleyPrime1024() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_get_OakleyPrime1024");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.SocketServer.Security", "OakleyGroups", "OakleyPrime1024"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] OakleyPrime1024
void Photon::SocketServer::Security::OakleyGroups::_set_OakleyPrime1024(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_set_OakleyPrime1024");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.SocketServer.Security", "OakleyGroups", "OakleyPrime1024", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] OakleyPrime1536
::ArrayW<uint8_t> Photon::SocketServer::Security::OakleyGroups::_get_OakleyPrime1536() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_get_OakleyPrime1536");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.SocketServer.Security", "OakleyGroups", "OakleyPrime1536"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] OakleyPrime1536
void Photon::SocketServer::Security::OakleyGroups::_set_OakleyPrime1536(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::_set_OakleyPrime1536");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.SocketServer.Security", "OakleyGroups", "OakleyPrime1536", value));
}
// Autogenerated method: Photon.SocketServer.Security.OakleyGroups..cctor
void Photon::SocketServer::Security::OakleyGroups::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::SocketServer::Security::OakleyGroups::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.SocketServer.Security", "OakleyGroups", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChannelCreationOptions
#include "Photon/Chat/ChannelCreationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChannelCreationOptions Default
::Photon::Chat::ChannelCreationOptions* Photon::Chat::ChannelCreationOptions::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChannelCreationOptions*>("Photon.Chat", "ChannelCreationOptions", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChannelCreationOptions Default
void Photon::Chat::ChannelCreationOptions::_set_Default(::Photon::Chat::ChannelCreationOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChannelCreationOptions", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PublishSubscribers>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Chat::ChannelCreationOptions::dyn_$PublishSubscribers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::dyn_$PublishSubscribers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PublishSubscribers>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaxSubscribers>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChannelCreationOptions::dyn_$MaxSubscribers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::dyn_$MaxSubscribers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxSubscribers>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Chat.ChannelCreationOptions.get_PublishSubscribers
bool Photon::Chat::ChannelCreationOptions::get_PublishSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::get_PublishSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublishSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChannelCreationOptions.set_PublishSubscribers
void Photon::Chat::ChannelCreationOptions::set_PublishSubscribers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::set_PublishSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PublishSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChannelCreationOptions.get_MaxSubscribers
int Photon::Chat::ChannelCreationOptions::get_MaxSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::get_MaxSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChannelCreationOptions.set_MaxSubscribers
void Photon::Chat::ChannelCreationOptions::set_MaxSubscribers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::set_MaxSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChannelCreationOptions..cctor
void Photon::Chat::ChannelCreationOptions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelCreationOptions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Chat", "ChannelCreationOptions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChannelWellKnownProperties
#include "Photon/Chat/ChannelWellKnownProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte MaxSubscribers
uint8_t Photon::Chat::ChannelWellKnownProperties::_get_MaxSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelWellKnownProperties::_get_MaxSubscribers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChannelWellKnownProperties", "MaxSubscribers"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MaxSubscribers
void Photon::Chat::ChannelWellKnownProperties::_set_MaxSubscribers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelWellKnownProperties::_set_MaxSubscribers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChannelWellKnownProperties", "MaxSubscribers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PublishSubscribers
uint8_t Photon::Chat::ChannelWellKnownProperties::_get_PublishSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelWellKnownProperties::_get_PublishSubscribers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChannelWellKnownProperties", "PublishSubscribers"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PublishSubscribers
void Photon::Chat::ChannelWellKnownProperties::_set_PublishSubscribers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChannelWellKnownProperties::_set_PublishSubscribers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChannelWellKnownProperties", "PublishSubscribers", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatAppSettings
#include "Photon/Chat/ChatAppSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AppIdChat
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatAppSettings::dyn_AppIdChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_AppIdChat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppIdChat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AppVersion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatAppSettings::dyn_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_AppVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FixedRegion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatAppSettings::dyn_FixedRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_FixedRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedRegion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Server
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatAppSettings::dyn_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_Server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Server"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 Port
[[deprecated("Use field access instead!")]] uint16_t& Photon::Chat::ChatAppSettings::dyn_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Port"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.ConnectionProtocol Protocol
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::ConnectionProtocol& Photon::Chat::ChatAppSettings::dyn_Protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_Protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Protocol"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::ConnectionProtocol*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableProtocolFallback
[[deprecated("Use field access instead!")]] bool& Photon::Chat::ChatAppSettings::dyn_EnableProtocolFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_EnableProtocolFallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableProtocolFallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.DebugLevel NetworkLogging
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::DebugLevel& Photon::Chat::ChatAppSettings::dyn_NetworkLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::dyn_NetworkLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkLogging"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::DebugLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Chat.ChatAppSettings.get_IsDefaultNameServer
bool Photon::Chat::ChatAppSettings::get_IsDefaultNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::get_IsDefaultNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatAppSettings.get_AppId
::StringW Photon::Chat::ChatAppSettings::get_AppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::get_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatAppSettings.set_AppId
void Photon::Chat::ChatAppSettings::set_AppId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatAppSettings::set_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Chat.ChatChannel
#include "Photon/Chat/ChatChannel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatChannel::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<System.String> Senders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Photon::Chat::ChatChannel::dyn_Senders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_Senders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Senders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<System.Object> Messages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Photon::Chat::ChatChannel::dyn_Messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_Messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Messages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MessageLimit
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatChannel::dyn_MessageLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_MessageLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MessageLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ChannelID
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatChannel::dyn_ChannelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_ChannelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChannelID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPrivate>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Chat::ChatChannel::dyn_$IsPrivate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_$IsPrivate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPrivate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <LastMsgId>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatChannel::dyn_$LastMsgId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_$LastMsgId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LastMsgId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Object,System.Object> properties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::Il2CppObject*>*& Photon::Chat::ChatChannel::dyn_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PublishSubscribers>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Chat::ChatChannel::dyn_$PublishSubscribers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_$PublishSubscribers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PublishSubscribers>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaxSubscribers>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatChannel::dyn_$MaxSubscribers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_$MaxSubscribers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxSubscribers>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.HashSet`1<System.String> Subscribers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Photon::Chat::ChatChannel::dyn_Subscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::dyn_Subscribers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Subscribers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Chat.ChatChannel.get_IsPrivate
bool Photon::Chat::ChatChannel::get_IsPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::get_IsPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.set_IsPrivate
void Photon::Chat::ChatChannel::set_IsPrivate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::set_IsPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatChannel.get_MessageCount
int Photon::Chat::ChatChannel::get_MessageCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::get_MessageCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MessageCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.get_LastMsgId
int Photon::Chat::ChatChannel::get_LastMsgId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::get_LastMsgId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastMsgId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.set_LastMsgId
void Photon::Chat::ChatChannel::set_LastMsgId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::set_LastMsgId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastMsgId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatChannel.get_PublishSubscribers
bool Photon::Chat::ChatChannel::get_PublishSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::get_PublishSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublishSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.set_PublishSubscribers
void Photon::Chat::ChatChannel::set_PublishSubscribers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::set_PublishSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PublishSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatChannel.get_MaxSubscribers
int Photon::Chat::ChatChannel::get_MaxSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::get_MaxSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.set_MaxSubscribers
void Photon::Chat::ChatChannel::set_MaxSubscribers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::set_MaxSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatChannel.Add
void Photon::Chat::ChatChannel::Add(::StringW sender, ::Il2CppObject* message, int msgId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(msgId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, message, msgId);
}
// Autogenerated method: Photon.Chat.ChatChannel.Add
void Photon::Chat::ChatChannel::Add(::ArrayW<::StringW> senders, ::ArrayW<::Il2CppObject*> messages, int lastMsgId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senders), ::il2cpp_utils::ExtractType(messages), ::il2cpp_utils::ExtractType(lastMsgId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, senders, messages, lastMsgId);
}
// Autogenerated method: Photon.Chat.ChatChannel.TruncateMessages
void Photon::Chat::ChatChannel::TruncateMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::TruncateMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TruncateMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.ClearMessages
void Photon::Chat::ChatChannel::ClearMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::ClearMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.ToStringMessages
::StringW Photon::Chat::ChatChannel::ToStringMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::ToStringMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatChannel.ReadChannelProperties
void Photon::Chat::ChatChannel::ReadChannelProperties(::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::Il2CppObject*>* newProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::ReadChannelProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChannelProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newProperties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newProperties);
}
// Autogenerated method: Photon.Chat.ChatChannel.AddSubscribers
void Photon::Chat::ChatChannel::AddSubscribers(::ArrayW<::StringW> users) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatChannel::AddSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(users)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, users);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Chat.ChatClient
#include "Photon/Chat/ChatClient.hpp"
// Including type: Photon.Chat.AuthenticationValues
#include "Photon/Chat/AuthenticationValues.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Chat.ChatChannel
#include "Photon/Chat/ChatChannel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Photon.Chat.IChatClientListener
#include "Photon/Chat/IChatClientListener.hpp"
// Including type: Photon.Chat.ChatPeer
#include "Photon/Chat/ChatPeer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Photon.Chat.ChatAppSettings
#include "Photon/Chat/ChatAppSettings.hpp"
// Including type: ExitGames.Client.Photon.DebugLevel
#include "ExitGames/Client/Photon/DebugLevel.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
// Including type: ExitGames.Client.Photon.StatusCode
#include "ExitGames/Client/Photon/StatusCode.hpp"
// Including type: Photon.Chat.ChannelCreationOptions
#include "Photon/Chat/ChannelCreationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 FriendRequestListMax
int Photon::Chat::ChatClient::_get_FriendRequestListMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_get_FriendRequestListMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatClient", "FriendRequestListMax"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FriendRequestListMax
void Photon::Chat::ChatClient::_set_FriendRequestListMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_set_FriendRequestListMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatClient", "FriendRequestListMax", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DefaultMaxSubscribers
int Photon::Chat::ChatClient::_get_DefaultMaxSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_get_DefaultMaxSubscribers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatClient", "DefaultMaxSubscribers"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DefaultMaxSubscribers
void Photon::Chat::ChatClient::_set_DefaultMaxSubscribers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_set_DefaultMaxSubscribers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatClient", "DefaultMaxSubscribers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte HttpForwardWebFlag
uint8_t Photon::Chat::ChatClient::_get_HttpForwardWebFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_get_HttpForwardWebFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatClient", "HttpForwardWebFlag"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte HttpForwardWebFlag
void Photon::Chat::ChatClient::_set_HttpForwardWebFlag(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_set_HttpForwardWebFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatClient", "HttpForwardWebFlag", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ChatAppName
::StringW Photon::Chat::ChatClient::_get_ChatAppName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_get_ChatAppName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Chat", "ChatClient", "ChatAppName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ChatAppName
void Photon::Chat::ChatClient::_set_ChatAppName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::_set_ChatAppName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatClient", "ChatAppName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableProtocolFallback>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Chat::ChatClient::dyn_$EnableProtocolFallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$EnableProtocolFallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableProtocolFallback>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <NameServerAddress>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatClient::dyn_$NameServerAddress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$NameServerAddress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NameServerAddress>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <FrontendAddress>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatClient::dyn_$FrontendAddress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$FrontendAddress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FrontendAddress>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String chatRegion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatClient::dyn_chatRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_chatRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chatRegion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Chat.ChatState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Chat::ChatState& Photon::Chat::ChatClient::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Chat::ChatState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Chat.ChatDisconnectCause <DisconnectedCause>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Chat::ChatDisconnectCause& Photon::Chat::ChatClient::dyn_$DisconnectedCause$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$DisconnectedCause$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisconnectedCause>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Chat::ChatDisconnectCause*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AppVersion>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatClient::dyn_$AppVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$AppVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AppVersion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AppId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatClient::dyn_$AppId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$AppId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AppId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Chat.AuthenticationValues <AuthValues>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Chat::AuthenticationValues*& Photon::Chat::ChatClient::dyn_$AuthValues$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$AuthValues$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthValues>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Chat::AuthenticationValues**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MessageLimit
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatClient::dyn_MessageLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_MessageLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MessageLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PrivateChatHistoryLength
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatClient::dyn_PrivateChatHistoryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_PrivateChatHistoryLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrivateChatHistoryLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,Photon.Chat.ChatChannel> PublicChannels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Chat::ChatChannel*>*& Photon::Chat::ChatClient::dyn_PublicChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_PublicChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublicChannels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Chat::ChatChannel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,Photon.Chat.ChatChannel> PrivateChannels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Chat::ChatChannel*>*& Photon::Chat::ChatClient::dyn_PrivateChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_PrivateChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrivateChannels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Chat::ChatChannel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> PublicChannelsUnsubscribing
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& Photon::Chat::ChatClient::dyn_PublicChannelsUnsubscribing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_PublicChannelsUnsubscribing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PublicChannelsUnsubscribing"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Chat.IChatClientListener listener
[[deprecated("Use field access instead!")]] ::Photon::Chat::IChatClientListener*& Photon::Chat::ChatClient::dyn_listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listener"))->offset;
  return *reinterpret_cast<::Photon::Chat::IChatClientListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Chat.ChatPeer chatPeer
[[deprecated("Use field access instead!")]] ::Photon::Chat::ChatPeer*& Photon::Chat::ChatClient::dyn_chatPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_chatPeer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chatPeer"))->offset;
  return *reinterpret_cast<::Photon::Chat::ChatPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean didAuthenticate
[[deprecated("Use field access instead!")]] bool& Photon::Chat::ChatClient::dyn_didAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_didAuthenticate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didAuthenticate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> statusToSetWhenConnected
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& Photon::Chat::ChatClient::dyn_statusToSetWhenConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_statusToSetWhenConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusToSetWhenConnected"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object messageToSetWhenConnected
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Chat::ChatClient::dyn_messageToSetWhenConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_messageToSetWhenConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageToSetWhenConnected"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 msDeltaForServiceCalls
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatClient::dyn_msDeltaForServiceCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_msDeltaForServiceCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "msDeltaForServiceCalls"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 msTimestampOfLastServiceCall
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatClient::dyn_msTimestampOfLastServiceCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_msTimestampOfLastServiceCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "msTimestampOfLastServiceCall"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <UseBackgroundWorkerForSending>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Chat::ChatClient::dyn_$UseBackgroundWorkerForSending$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::dyn_$UseBackgroundWorkerForSending$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UseBackgroundWorkerForSending>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Chat.ChatClient.get_EnableProtocolFallback
bool Photon::Chat::ChatClient::get_EnableProtocolFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_EnableProtocolFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableProtocolFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_EnableProtocolFallback
void Photon::Chat::ChatClient::set_EnableProtocolFallback(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_EnableProtocolFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableProtocolFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_NameServerAddress
::StringW Photon::Chat::ChatClient::get_NameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_NameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_NameServerAddress
void Photon::Chat::ChatClient::set_NameServerAddress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_NameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_FrontendAddress
::StringW Photon::Chat::ChatClient::get_FrontendAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_FrontendAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrontendAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_FrontendAddress
void Photon::Chat::ChatClient::set_FrontendAddress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_FrontendAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FrontendAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_ChatRegion
::StringW Photon::Chat::ChatClient::get_ChatRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_ChatRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChatRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_ChatRegion
void Photon::Chat::ChatClient::set_ChatRegion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_ChatRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChatRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_State
::Photon::Chat::ChatState Photon::Chat::ChatClient::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Chat::ChatState, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_State
void Photon::Chat::ChatClient::set_State(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_DisconnectedCause
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatClient::get_DisconnectedCause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_DisconnectedCause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisconnectedCause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Chat::ChatDisconnectCause, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_DisconnectedCause
void Photon::Chat::ChatClient::set_DisconnectedCause(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_DisconnectedCause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisconnectedCause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_CanChat
bool Photon::Chat::ChatClient::get_CanChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_CanChat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanChat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.CanChatInChannel
bool Photon::Chat::ChatClient::CanChatInChannel(::StringW channelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::CanChatInChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanChatInChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelName);
}
// Autogenerated method: Photon.Chat.ChatClient.get_HasPeer
bool Photon::Chat::ChatClient::get_HasPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_HasPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.get_AppVersion
::StringW Photon::Chat::ChatClient::get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_AppVersion
void Photon::Chat::ChatClient::set_AppVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_AppId
::StringW Photon::Chat::ChatClient::get_AppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_AppId
void Photon::Chat::ChatClient::set_AppId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_AuthValues
::Photon::Chat::AuthenticationValues* Photon::Chat::ChatClient::get_AuthValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Chat::AuthenticationValues*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_AuthValues
void Photon::Chat::ChatClient::set_AuthValues(::Photon::Chat::AuthenticationValues* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_UserId
::StringW Photon::Chat::ChatClient::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_UserId
void Photon::Chat::ChatClient::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_UseBackgroundWorkerForSending
bool Photon::Chat::ChatClient::get_UseBackgroundWorkerForSending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_UseBackgroundWorkerForSending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseBackgroundWorkerForSending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_UseBackgroundWorkerForSending
void Photon::Chat::ChatClient::set_UseBackgroundWorkerForSending(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_UseBackgroundWorkerForSending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseBackgroundWorkerForSending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_TransportProtocol
::ExitGames::Client::Photon::ConnectionProtocol Photon::Chat::ChatClient::get_TransportProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_TransportProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransportProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::ConnectionProtocol, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.set_TransportProtocol
void Photon::Chat::ChatClient::set_TransportProtocol(::ExitGames::Client::Photon::ConnectionProtocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_TransportProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransportProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_SocketImplementationConfig
::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, ::System::Type*>* Photon::Chat::ChatClient::get_SocketImplementationConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_SocketImplementationConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SocketImplementationConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, ::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.ConnectUsingSettings
bool Photon::Chat::ChatClient::ConnectUsingSettings(::Photon::Chat::ChatAppSettings* appSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::ConnectUsingSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectUsingSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appSettings);
}
// Autogenerated method: Photon.Chat.ChatClient.Connect
bool Photon::Chat::ChatClient::Connect(::StringW appId, ::StringW appVersion, ::Photon::Chat::AuthenticationValues* authValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(appVersion), ::il2cpp_utils::ExtractType(authValues)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, appVersion, authValues);
}
// Autogenerated method: Photon.Chat.ChatClient.ConnectAndSetStatus
bool Photon::Chat::ChatClient::ConnectAndSetStatus(::StringW appId, ::StringW appVersion, ::Photon::Chat::AuthenticationValues* authValues, int status, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::ConnectAndSetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectAndSetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(appVersion), ::il2cpp_utils::ExtractType(authValues), ::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, appVersion, authValues, status, message);
}
// Autogenerated method: Photon.Chat.ChatClient.Service
void Photon::Chat::ChatClient::Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.SendOutgoingInBackground
bool Photon::Chat::ChatClient::SendOutgoingInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SendOutgoingInBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOutgoingInBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.SendAcksOnly
void Photon::Chat::ChatClient::SendAcksOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SendAcksOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAcksOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.Disconnect
void Photon::Chat::ChatClient::Disconnect(::Photon::Chat::ChatDisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Chat.ChatClient.StopThread
void Photon::Chat::ChatClient::StopThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::StopThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.Subscribe
bool Photon::Chat::ChatClient::Subscribe(::ArrayW<::StringW> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channels);
}
// Autogenerated method: Photon.Chat.ChatClient.Subscribe
bool Photon::Chat::ChatClient::Subscribe(::ArrayW<::StringW> channels, ::ArrayW<int> lastMsgIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(lastMsgIds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channels, lastMsgIds);
}
// Autogenerated method: Photon.Chat.ChatClient.Subscribe
bool Photon::Chat::ChatClient::Subscribe(::ArrayW<::StringW> channels, int messagesFromHistory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(messagesFromHistory)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channels, messagesFromHistory);
}
// Autogenerated method: Photon.Chat.ChatClient.Unsubscribe
bool Photon::Chat::ChatClient::Unsubscribe(::ArrayW<::StringW> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Unsubscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unsubscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channels);
}
// Autogenerated method: Photon.Chat.ChatClient.PublishMessage
bool Photon::Chat::ChatClient::PublishMessage(::StringW channelName, ::Il2CppObject* message, bool forwardAsWebhook) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::PublishMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PublishMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelName), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(forwardAsWebhook)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelName, message, forwardAsWebhook);
}
// Autogenerated method: Photon.Chat.ChatClient.PublishMessageUnreliable
bool Photon::Chat::ChatClient::PublishMessageUnreliable(::StringW channelName, ::Il2CppObject* message, bool forwardAsWebhook) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::PublishMessageUnreliable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PublishMessageUnreliable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelName), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(forwardAsWebhook)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelName, message, forwardAsWebhook);
}
// Autogenerated method: Photon.Chat.ChatClient.publishMessage
bool Photon::Chat::ChatClient::publishMessage(::StringW channelName, ::Il2CppObject* message, bool reliable, bool forwardAsWebhook) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::publishMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "publishMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelName), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(forwardAsWebhook)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelName, message, reliable, forwardAsWebhook);
}
// Autogenerated method: Photon.Chat.ChatClient.SendPrivateMessage
bool Photon::Chat::ChatClient::SendPrivateMessage(::StringW target, ::Il2CppObject* message, bool forwardAsWebhook) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SendPrivateMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPrivateMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(forwardAsWebhook)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target, message, forwardAsWebhook);
}
// Autogenerated method: Photon.Chat.ChatClient.SendPrivateMessage
bool Photon::Chat::ChatClient::SendPrivateMessage(::StringW target, ::Il2CppObject* message, bool encrypt, bool forwardAsWebhook) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SendPrivateMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPrivateMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(forwardAsWebhook)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target, message, encrypt, forwardAsWebhook);
}
// Autogenerated method: Photon.Chat.ChatClient.SendPrivateMessageUnreliable
bool Photon::Chat::ChatClient::SendPrivateMessageUnreliable(::StringW target, ::Il2CppObject* message, bool encrypt, bool forwardAsWebhook) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SendPrivateMessageUnreliable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPrivateMessageUnreliable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(forwardAsWebhook)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target, message, encrypt, forwardAsWebhook);
}
// Autogenerated method: Photon.Chat.ChatClient.sendPrivateMessage
bool Photon::Chat::ChatClient::sendPrivateMessage(::StringW target, ::Il2CppObject* message, bool encrypt, bool reliable, bool forwardAsWebhook) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::sendPrivateMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "sendPrivateMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(encrypt), ::il2cpp_utils::ExtractType(reliable), ::il2cpp_utils::ExtractType(forwardAsWebhook)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target, message, encrypt, reliable, forwardAsWebhook);
}
// Autogenerated method: Photon.Chat.ChatClient.SetOnlineStatus
bool Photon::Chat::ChatClient::SetOnlineStatus(int status, ::Il2CppObject* message, bool skipMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SetOnlineStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnlineStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(skipMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, status, message, skipMessage);
}
// Autogenerated method: Photon.Chat.ChatClient.SetOnlineStatus
bool Photon::Chat::ChatClient::SetOnlineStatus(int status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SetOnlineStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnlineStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, status);
}
// Autogenerated method: Photon.Chat.ChatClient.SetOnlineStatus
bool Photon::Chat::ChatClient::SetOnlineStatus(int status, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SetOnlineStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnlineStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, status, message);
}
// Autogenerated method: Photon.Chat.ChatClient.AddFriends
bool Photon::Chat::ChatClient::AddFriends(::ArrayW<::StringW> friends) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::AddFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friends)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, friends);
}
// Autogenerated method: Photon.Chat.ChatClient.RemoveFriends
bool Photon::Chat::ChatClient::RemoveFriends(::ArrayW<::StringW> friends) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::RemoveFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friends)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, friends);
}
// Autogenerated method: Photon.Chat.ChatClient.GetPrivateChannelNameByUser
::StringW Photon::Chat::ChatClient::GetPrivateChannelNameByUser(::StringW userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::GetPrivateChannelNameByUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrivateChannelNameByUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, userName);
}
// Autogenerated method: Photon.Chat.ChatClient.TryGetChannel
bool Photon::Chat::ChatClient::TryGetChannel(::StringW channelName, bool isPrivate, ByRef<::Photon::Chat::ChatChannel*> channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::TryGetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelName), ::il2cpp_utils::ExtractType(isPrivate), ::il2cpp_utils::ExtractIndependentType<::Photon::Chat::ChatChannel*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelName, isPrivate, byref(channel));
}
// Autogenerated method: Photon.Chat.ChatClient.TryGetChannel
bool Photon::Chat::ChatClient::TryGetChannel(::StringW channelName, ByRef<::Photon::Chat::ChatChannel*> channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::TryGetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelName), ::il2cpp_utils::ExtractIndependentType<::Photon::Chat::ChatChannel*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelName, byref(channel));
}
// Autogenerated method: Photon.Chat.ChatClient.TryGetPrivateChannelByUser
bool Photon::Chat::ChatClient::TryGetPrivateChannelByUser(::StringW userId, ByRef<::Photon::Chat::ChatChannel*> channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::TryGetPrivateChannelByUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPrivateChannelByUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<::Photon::Chat::ChatChannel*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userId, byref(channel));
}
// Autogenerated method: Photon.Chat.ChatClient.set_DebugOut
void Photon::Chat::ChatClient::set_DebugOut(::ExitGames::Client::Photon::DebugLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::set_DebugOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DebugOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.ChatClient.get_DebugOut
::ExitGames::Client::Photon::DebugLevel Photon::Chat::ChatClient::get_DebugOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::get_DebugOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::DebugLevel, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn
void Photon::Chat::ChatClient::ExitGames_Client_Photon_IPhotonPeerListener_DebugReturn(::ExitGames::Client::Photon::DebugLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::ChatClient*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: Photon.Chat.ChatClient.ExitGames.Client.Photon.IPhotonPeerListener.OnEvent
void Photon::Chat::ChatClient::ExitGames_Client_Photon_IPhotonPeerListener_OnEvent(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::ExitGames.Client.Photon.IPhotonPeerListener.OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::ChatClient*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse
void Photon::Chat::ChatClient::ExitGames_Client_Photon_IPhotonPeerListener_OnOperationResponse(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::ChatClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Chat.ChatClient.ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged
void Photon::Chat::ChatClient::ExitGames_Client_Photon_IPhotonPeerListener_OnStatusChanged(::ExitGames::Client::Photon::StatusCode statusCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::ChatClient*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCode);
}
// Autogenerated method: Photon.Chat.ChatClient.TryAuthenticateOnNameServer
void Photon::Chat::ChatClient::TryAuthenticateOnNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::TryAuthenticateOnNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateOnNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.SendChannelOperation
bool Photon::Chat::ChatClient::SendChannelOperation(::ArrayW<::StringW> channels, uint8_t operation, int historyLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::SendChannelOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendChannelOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(operation), ::il2cpp_utils::ExtractType(historyLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channels, operation, historyLength);
}
// Autogenerated method: Photon.Chat.ChatClient.HandlePrivateMessageEvent
void Photon::Chat::ChatClient::HandlePrivateMessageEvent(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandlePrivateMessageEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePrivateMessageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.HandleChatMessagesEvent
void Photon::Chat::ChatClient::HandleChatMessagesEvent(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandleChatMessagesEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleChatMessagesEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.HandleSubscribeEvent
void Photon::Chat::ChatClient::HandleSubscribeEvent(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandleSubscribeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSubscribeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.HandleUnsubscribeEvent
void Photon::Chat::ChatClient::HandleUnsubscribeEvent(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandleUnsubscribeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUnsubscribeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.HandleAuthResponse
void Photon::Chat::ChatClient::HandleAuthResponse(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandleAuthResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAuthResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operationResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Chat.ChatClient.HandleStatusUpdate
void Photon::Chat::ChatClient::HandleStatusUpdate(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandleStatusUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStatusUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.ConnectToFrontEnd
bool Photon::Chat::ChatClient::ConnectToFrontEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::ConnectToFrontEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToFrontEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.AuthenticateOnFrontEnd
bool Photon::Chat::ChatClient::AuthenticateOnFrontEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::AuthenticateOnFrontEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateOnFrontEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatClient.HandleUserUnsubscribedEvent
void Photon::Chat::ChatClient::HandleUserUnsubscribedEvent(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandleUserUnsubscribedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserUnsubscribedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.HandleUserSubscribedEvent
void Photon::Chat::ChatClient::HandleUserSubscribedEvent(::ExitGames::Client::Photon::EventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::HandleUserSubscribedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserSubscribedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: Photon.Chat.ChatClient.Subscribe
bool Photon::Chat::ChatClient::Subscribe(::StringW channel, int lastMsgId, int messagesFromHistory, ::Photon::Chat::ChannelCreationOptions* creationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatClient::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(lastMsgId), ::il2cpp_utils::ExtractType(messagesFromHistory), ::il2cpp_utils::ExtractType(creationOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channel, lastMsgId, messagesFromHistory, creationOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatDisconnectCause
#include "Photon/Chat/ChatDisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause None
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause None
void Photon::Chat::ChatDisconnectCause::_set_None(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause ExceptionOnConnect
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_ExceptionOnConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_ExceptionOnConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "ExceptionOnConnect"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause ExceptionOnConnect
void Photon::Chat::ChatDisconnectCause::_set_ExceptionOnConnect(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_ExceptionOnConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "ExceptionOnConnect", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause DisconnectByServerLogic
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_DisconnectByServerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_DisconnectByServerLogic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "DisconnectByServerLogic"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause DisconnectByServerLogic
void Photon::Chat::ChatDisconnectCause::_set_DisconnectByServerLogic(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_DisconnectByServerLogic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "DisconnectByServerLogic", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause DisconnectByServerReasonUnknown
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_DisconnectByServerReasonUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_DisconnectByServerReasonUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "DisconnectByServerReasonUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause DisconnectByServerReasonUnknown
void Photon::Chat::ChatDisconnectCause::_set_DisconnectByServerReasonUnknown(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_DisconnectByServerReasonUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "DisconnectByServerReasonUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause ServerTimeout
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_ServerTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_ServerTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "ServerTimeout"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause ServerTimeout
void Photon::Chat::ChatDisconnectCause::_set_ServerTimeout(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_ServerTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "ServerTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause ClientTimeout
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_ClientTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_ClientTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "ClientTimeout"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause ClientTimeout
void Photon::Chat::ChatDisconnectCause::_set_ClientTimeout(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_ClientTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "ClientTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause Exception
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_Exception");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "Exception"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause Exception
void Photon::Chat::ChatDisconnectCause::_set_Exception(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_Exception");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "Exception", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause InvalidAuthentication
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_InvalidAuthentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_InvalidAuthentication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "InvalidAuthentication"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause InvalidAuthentication
void Photon::Chat::ChatDisconnectCause::_set_InvalidAuthentication(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_InvalidAuthentication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "InvalidAuthentication", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause MaxCcuReached
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_MaxCcuReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_MaxCcuReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "MaxCcuReached"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause MaxCcuReached
void Photon::Chat::ChatDisconnectCause::_set_MaxCcuReached(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_MaxCcuReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "MaxCcuReached", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause InvalidRegion
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_InvalidRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_InvalidRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "InvalidRegion"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause InvalidRegion
void Photon::Chat::ChatDisconnectCause::_set_InvalidRegion(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_InvalidRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "InvalidRegion", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause OperationNotAllowedInCurrentState
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_OperationNotAllowedInCurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_OperationNotAllowedInCurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "OperationNotAllowedInCurrentState"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause OperationNotAllowedInCurrentState
void Photon::Chat::ChatDisconnectCause::_set_OperationNotAllowedInCurrentState(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_OperationNotAllowedInCurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "OperationNotAllowedInCurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause CustomAuthenticationFailed
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_CustomAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_CustomAuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "CustomAuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause CustomAuthenticationFailed
void Photon::Chat::ChatDisconnectCause::_set_CustomAuthenticationFailed(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_CustomAuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "CustomAuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause AuthenticationTicketExpired
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_AuthenticationTicketExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_AuthenticationTicketExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "AuthenticationTicketExpired"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause AuthenticationTicketExpired
void Photon::Chat::ChatDisconnectCause::_set_AuthenticationTicketExpired(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_AuthenticationTicketExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "AuthenticationTicketExpired", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatDisconnectCause DisconnectByClientLogic
::Photon::Chat::ChatDisconnectCause Photon::Chat::ChatDisconnectCause::_get_DisconnectByClientLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_get_DisconnectByClientLogic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatDisconnectCause>("Photon.Chat", "ChatDisconnectCause", "DisconnectByClientLogic"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatDisconnectCause DisconnectByClientLogic
void Photon::Chat::ChatDisconnectCause::_set_DisconnectByClientLogic(::Photon::Chat::ChatDisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::_set_DisconnectByClientLogic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatDisconnectCause", "DisconnectByClientLogic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatDisconnectCause::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatDisconnectCause::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatEventCode
#include "Photon/Chat/ChatEventCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte ChatMessages
uint8_t Photon::Chat::ChatEventCode::_get_ChatMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_ChatMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "ChatMessages"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ChatMessages
void Photon::Chat::ChatEventCode::_set_ChatMessages(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_ChatMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "ChatMessages", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Users
uint8_t Photon::Chat::ChatEventCode::_get_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_Users");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "Users"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Users
void Photon::Chat::ChatEventCode::_set_Users(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_Users");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "Users", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PrivateMessage
uint8_t Photon::Chat::ChatEventCode::_get_PrivateMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_PrivateMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "PrivateMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PrivateMessage
void Photon::Chat::ChatEventCode::_set_PrivateMessage(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_PrivateMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "PrivateMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FriendsList
uint8_t Photon::Chat::ChatEventCode::_get_FriendsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_FriendsList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "FriendsList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FriendsList
void Photon::Chat::ChatEventCode::_set_FriendsList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_FriendsList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "FriendsList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte StatusUpdate
uint8_t Photon::Chat::ChatEventCode::_get_StatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_StatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "StatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte StatusUpdate
void Photon::Chat::ChatEventCode::_set_StatusUpdate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_StatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "StatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Subscribe
uint8_t Photon::Chat::ChatEventCode::_get_Subscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_Subscribe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "Subscribe"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Subscribe
void Photon::Chat::ChatEventCode::_set_Subscribe(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_Subscribe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "Subscribe", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Unsubscribe
uint8_t Photon::Chat::ChatEventCode::_get_Unsubscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_Unsubscribe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "Unsubscribe"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Unsubscribe
void Photon::Chat::ChatEventCode::_set_Unsubscribe(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_Unsubscribe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "Unsubscribe", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PropertiesChanged
uint8_t Photon::Chat::ChatEventCode::_get_PropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_PropertiesChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "PropertiesChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PropertiesChanged
void Photon::Chat::ChatEventCode::_set_PropertiesChanged(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_PropertiesChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "PropertiesChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserSubscribed
uint8_t Photon::Chat::ChatEventCode::_get_UserSubscribed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_UserSubscribed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "UserSubscribed"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserSubscribed
void Photon::Chat::ChatEventCode::_set_UserSubscribed(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_UserSubscribed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "UserSubscribed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserUnsubscribed
uint8_t Photon::Chat::ChatEventCode::_get_UserUnsubscribed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_UserUnsubscribed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "UserUnsubscribed"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserUnsubscribed
void Photon::Chat::ChatEventCode::_set_UserUnsubscribed(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_UserUnsubscribed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "UserUnsubscribed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ErrorInfo
uint8_t Photon::Chat::ChatEventCode::_get_ErrorInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_get_ErrorInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatEventCode", "ErrorInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ErrorInfo
void Photon::Chat::ChatEventCode::_set_ErrorInfo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatEventCode::_set_ErrorInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatEventCode", "ErrorInfo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatOperationCode
#include "Photon/Chat/ChatOperationCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte Authenticate
uint8_t Photon::Chat::ChatOperationCode::_get_Authenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_Authenticate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "Authenticate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Authenticate
void Photon::Chat::ChatOperationCode::_set_Authenticate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_Authenticate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "Authenticate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Subscribe
uint8_t Photon::Chat::ChatOperationCode::_get_Subscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_Subscribe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "Subscribe"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Subscribe
void Photon::Chat::ChatOperationCode::_set_Subscribe(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_Subscribe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "Subscribe", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Unsubscribe
uint8_t Photon::Chat::ChatOperationCode::_get_Unsubscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_Unsubscribe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "Unsubscribe"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Unsubscribe
void Photon::Chat::ChatOperationCode::_set_Unsubscribe(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_Unsubscribe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "Unsubscribe", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Publish
uint8_t Photon::Chat::ChatOperationCode::_get_Publish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_Publish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "Publish"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Publish
void Photon::Chat::ChatOperationCode::_set_Publish(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_Publish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "Publish", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendPrivate
uint8_t Photon::Chat::ChatOperationCode::_get_SendPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_SendPrivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "SendPrivate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendPrivate
void Photon::Chat::ChatOperationCode::_set_SendPrivate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_SendPrivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "SendPrivate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ChannelHistory
uint8_t Photon::Chat::ChatOperationCode::_get_ChannelHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_ChannelHistory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "ChannelHistory"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ChannelHistory
void Photon::Chat::ChatOperationCode::_set_ChannelHistory(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_ChannelHistory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "ChannelHistory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UpdateStatus
uint8_t Photon::Chat::ChatOperationCode::_get_UpdateStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_UpdateStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "UpdateStatus"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UpdateStatus
void Photon::Chat::ChatOperationCode::_set_UpdateStatus(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_UpdateStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "UpdateStatus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AddFriends
uint8_t Photon::Chat::ChatOperationCode::_get_AddFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_AddFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "AddFriends"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AddFriends
void Photon::Chat::ChatOperationCode::_set_AddFriends(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_AddFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "AddFriends", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RemoveFriends
uint8_t Photon::Chat::ChatOperationCode::_get_RemoveFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_RemoveFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "RemoveFriends"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RemoveFriends
void Photon::Chat::ChatOperationCode::_set_RemoveFriends(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_RemoveFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "RemoveFriends", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SetProperties
uint8_t Photon::Chat::ChatOperationCode::_get_SetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_get_SetProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatOperationCode", "SetProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SetProperties
void Photon::Chat::ChatOperationCode::_set_SetProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatOperationCode::_set_SetProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatOperationCode", "SetProperties", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatParameterCode
#include "Photon/Chat/ChatParameterCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte Channels
uint8_t Photon::Chat::ChatParameterCode::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Channels
void Photon::Chat::ChatParameterCode::_set_Channels(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Channel
uint8_t Photon::Chat::ChatParameterCode::_get_Channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Channel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Channel"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Channel
void Photon::Chat::ChatParameterCode::_set_Channel(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Channel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Channel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Messages
uint8_t Photon::Chat::ChatParameterCode::_get_Messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Messages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Messages"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Messages
void Photon::Chat::ChatParameterCode::_set_Messages(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Messages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Messages", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Message
uint8_t Photon::Chat::ChatParameterCode::_get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Message");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Message"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Message
void Photon::Chat::ChatParameterCode::_set_Message(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Message");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Message", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Senders
uint8_t Photon::Chat::ChatParameterCode::_get_Senders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Senders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Senders"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Senders
void Photon::Chat::ChatParameterCode::_set_Senders(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Senders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Senders", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Sender
uint8_t Photon::Chat::ChatParameterCode::_get_Sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Sender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Sender"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Sender
void Photon::Chat::ChatParameterCode::_set_Sender(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Sender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Sender", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ChannelUserCount
uint8_t Photon::Chat::ChatParameterCode::_get_ChannelUserCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_ChannelUserCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "ChannelUserCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ChannelUserCount
void Photon::Chat::ChatParameterCode::_set_ChannelUserCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_ChannelUserCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "ChannelUserCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserId
uint8_t Photon::Chat::ChatParameterCode::_get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_UserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "UserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserId
void Photon::Chat::ChatParameterCode::_set_UserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_UserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "UserId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MsgId
uint8_t Photon::Chat::ChatParameterCode::_get_MsgId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_MsgId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "MsgId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MsgId
void Photon::Chat::ChatParameterCode::_set_MsgId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_MsgId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "MsgId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MsgIds
uint8_t Photon::Chat::ChatParameterCode::_get_MsgIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_MsgIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "MsgIds"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MsgIds
void Photon::Chat::ChatParameterCode::_set_MsgIds(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_MsgIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "MsgIds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Secret
uint8_t Photon::Chat::ChatParameterCode::_get_Secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Secret");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Secret"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Secret
void Photon::Chat::ChatParameterCode::_set_Secret(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Secret");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Secret", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SubscribeResults
uint8_t Photon::Chat::ChatParameterCode::_get_SubscribeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_SubscribeResults");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "SubscribeResults"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SubscribeResults
void Photon::Chat::ChatParameterCode::_set_SubscribeResults(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_SubscribeResults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "SubscribeResults", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Status
uint8_t Photon::Chat::ChatParameterCode::_get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Status"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Status
void Photon::Chat::ChatParameterCode::_set_Status(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Friends
uint8_t Photon::Chat::ChatParameterCode::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Friends
void Photon::Chat::ChatParameterCode::_set_Friends(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Friends", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SkipMessage
uint8_t Photon::Chat::ChatParameterCode::_get_SkipMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_SkipMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "SkipMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SkipMessage
void Photon::Chat::ChatParameterCode::_set_SkipMessage(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_SkipMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "SkipMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte HistoryLength
uint8_t Photon::Chat::ChatParameterCode::_get_HistoryLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_HistoryLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "HistoryLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte HistoryLength
void Photon::Chat::ChatParameterCode::_set_HistoryLength(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_HistoryLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "HistoryLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte DebugMessage
uint8_t Photon::Chat::ChatParameterCode::_get_DebugMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_DebugMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "DebugMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte DebugMessage
void Photon::Chat::ChatParameterCode::_set_DebugMessage(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_DebugMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "DebugMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebFlags
uint8_t Photon::Chat::ChatParameterCode::_get_WebFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_WebFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "WebFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebFlags
void Photon::Chat::ChatParameterCode::_set_WebFlags(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_WebFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "WebFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Properties
uint8_t Photon::Chat::ChatParameterCode::_get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Properties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Properties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Properties
void Photon::Chat::ChatParameterCode::_set_Properties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Properties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Properties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ChannelSubscribers
uint8_t Photon::Chat::ChatParameterCode::_get_ChannelSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_ChannelSubscribers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "ChannelSubscribers"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ChannelSubscribers
void Photon::Chat::ChatParameterCode::_set_ChannelSubscribers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_ChannelSubscribers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "ChannelSubscribers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte DebugData
uint8_t Photon::Chat::ChatParameterCode::_get_DebugData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_DebugData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "DebugData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte DebugData
void Photon::Chat::ChatParameterCode::_set_DebugData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_DebugData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "DebugData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExpectedValues
uint8_t Photon::Chat::ChatParameterCode::_get_ExpectedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_ExpectedValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "ExpectedValues"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExpectedValues
void Photon::Chat::ChatParameterCode::_set_ExpectedValues(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_ExpectedValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "ExpectedValues", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Broadcast
uint8_t Photon::Chat::ChatParameterCode::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Broadcast
void Photon::Chat::ChatParameterCode::_set_Broadcast(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserProperties
uint8_t Photon::Chat::ChatParameterCode::_get_UserProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_UserProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "UserProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserProperties
void Photon::Chat::ChatParameterCode::_set_UserProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_UserProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "UserProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UniqueRoomId
uint8_t Photon::Chat::ChatParameterCode::_get_UniqueRoomId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_get_UniqueRoomId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ChatParameterCode", "UniqueRoomId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UniqueRoomId
void Photon::Chat::ChatParameterCode::_set_UniqueRoomId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatParameterCode::_set_UniqueRoomId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatParameterCode", "UniqueRoomId", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatPeer
#include "Photon/Chat/ChatPeer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.IPhotonPeerListener
#include "ExitGames/Client/Photon/IPhotonPeerListener.hpp"
// Including type: Photon.Chat.AuthenticationValues
#include "Photon/Chat/AuthenticationValues.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<ExitGames.Client.Photon.ConnectionProtocol,System.Int32> ProtocolToNameServerPort
::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>* Photon::Chat::ChatPeer::_get_ProtocolToNameServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::_get_ProtocolToNameServerPort");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>*>("Photon.Chat", "ChatPeer", "ProtocolToNameServerPort")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<ExitGames.Client.Photon.ConnectionProtocol,System.Int32> ProtocolToNameServerPort
void Photon::Chat::ChatPeer::_set_ProtocolToNameServerPort(::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::_set_ProtocolToNameServerPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatPeer", "ProtocolToNameServerPort", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String NameServerHost
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::ChatPeer::dyn_NameServerHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::dyn_NameServerHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameServerHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NameServerPortOverride
[[deprecated("Use field access instead!")]] uint16_t& Photon::Chat::ChatPeer::dyn_NameServerPortOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::dyn_NameServerPortOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameServerPortOverride"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Chat.ChatPeer.get_NameServerAddress
::StringW Photon::Chat::ChatPeer::get_NameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::get_NameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatPeer.get_IsProtocolSecure
bool Photon::Chat::ChatPeer::get_IsProtocolSecure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::get_IsProtocolSecure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::ChatPeer*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatPeer.ConfigUnitySockets
void Photon::Chat::ChatPeer::ConfigUnitySockets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::ConfigUnitySockets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigUnitySockets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatPeer.GetNameServerAddress
::StringW Photon::Chat::ChatPeer::GetNameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::GetNameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatPeer.Connect
bool Photon::Chat::ChatPeer::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.ChatPeer.AuthenticateOnNameServer
bool Photon::Chat::ChatPeer::AuthenticateOnNameServer(::StringW appId, ::StringW appVersion, ::StringW region, ::Photon::Chat::AuthenticationValues* authValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::AuthenticateOnNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateOnNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(appVersion), ::il2cpp_utils::ExtractType(region), ::il2cpp_utils::ExtractType(authValues)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, appVersion, region, authValues);
}
// Autogenerated method: Photon.Chat.ChatPeer..cctor
void Photon::Chat::ChatPeer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatPeer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Chat", "ChatPeer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.CustomAuthenticationType
#include "Photon/Chat/CustomAuthenticationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType Custom
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType Custom
void Photon::Chat::CustomAuthenticationType::_set_Custom(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType Steam
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType Steam
void Photon::Chat::CustomAuthenticationType::_set_Steam(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "Steam", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType Facebook
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_Facebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_Facebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "Facebook"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType Facebook
void Photon::Chat::CustomAuthenticationType::_set_Facebook(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_Facebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "Facebook", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType Oculus
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType Oculus
void Photon::Chat::CustomAuthenticationType::_set_Oculus(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType PlayStation4
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_PlayStation4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_PlayStation4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "PlayStation4"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType PlayStation4
void Photon::Chat::CustomAuthenticationType::_set_PlayStation4(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_PlayStation4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "PlayStation4", value));
}
// [ObsoleteAttribute] Offset: 0xAF084C
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType PlayStation
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_PlayStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_PlayStation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "PlayStation"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType PlayStation
void Photon::Chat::CustomAuthenticationType::_set_PlayStation(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_PlayStation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "PlayStation", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType Xbox
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_Xbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_Xbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "Xbox"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType Xbox
void Photon::Chat::CustomAuthenticationType::_set_Xbox(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_Xbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "Xbox", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType Viveport
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_Viveport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_Viveport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "Viveport"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType Viveport
void Photon::Chat::CustomAuthenticationType::_set_Viveport(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_Viveport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "Viveport", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType NintendoSwitch
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_NintendoSwitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_NintendoSwitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "NintendoSwitch"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType NintendoSwitch
void Photon::Chat::CustomAuthenticationType::_set_NintendoSwitch(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_NintendoSwitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "NintendoSwitch", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType PlayStation5
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_PlayStation5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_PlayStation5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "PlayStation5"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType PlayStation5
void Photon::Chat::CustomAuthenticationType::_set_PlayStation5(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_PlayStation5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "PlayStation5", value));
}
// [ObsoleteAttribute] Offset: 0xAF0884
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType Playstation5
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_Playstation5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_Playstation5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "Playstation5"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType Playstation5
void Photon::Chat::CustomAuthenticationType::_set_Playstation5(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_Playstation5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "Playstation5", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.CustomAuthenticationType None
::Photon::Chat::CustomAuthenticationType Photon::Chat::CustomAuthenticationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::CustomAuthenticationType>("Photon.Chat", "CustomAuthenticationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.CustomAuthenticationType None
void Photon::Chat::CustomAuthenticationType::_set_None(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "CustomAuthenticationType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Chat::CustomAuthenticationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::CustomAuthenticationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Chat.AuthenticationValues
#include "Photon/Chat/AuthenticationValues.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Chat.CustomAuthenticationType authType
[[deprecated("Use field access instead!")]] ::Photon::Chat::CustomAuthenticationType& Photon::Chat::AuthenticationValues::dyn_authType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::dyn_authType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authType"))->offset;
  return *reinterpret_cast<::Photon::Chat::CustomAuthenticationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AuthGetParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::AuthenticationValues::dyn_$AuthGetParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::dyn_$AuthGetParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthGetParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <AuthPostData>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Chat::AuthenticationValues::dyn_$AuthPostData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::dyn_$AuthPostData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthPostData>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <Token>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Chat::AuthenticationValues::dyn_$Token$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::dyn_$Token$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Token>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <UserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Chat::AuthenticationValues::dyn_$UserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::dyn_$UserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.get_AuthType
::Photon::Chat::CustomAuthenticationType Photon::Chat::AuthenticationValues::get_AuthType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::get_AuthType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Chat::CustomAuthenticationType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.set_AuthType
void Photon::Chat::AuthenticationValues::set_AuthType(::Photon::Chat::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::set_AuthType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.get_AuthGetParameters
::StringW Photon::Chat::AuthenticationValues::get_AuthGetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::get_AuthGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.set_AuthGetParameters
void Photon::Chat::AuthenticationValues::set_AuthGetParameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::set_AuthGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.get_AuthPostData
::Il2CppObject* Photon::Chat::AuthenticationValues::get_AuthPostData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::get_AuthPostData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthPostData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.set_AuthPostData
void Photon::Chat::AuthenticationValues::set_AuthPostData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::set_AuthPostData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthPostData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.get_Token
::Il2CppObject* Photon::Chat::AuthenticationValues::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.set_Token
void Photon::Chat::AuthenticationValues::set_Token(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::set_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.get_UserId
::StringW Photon::Chat::AuthenticationValues::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.set_UserId
void Photon::Chat::AuthenticationValues::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.SetAuthPostData
void Photon::Chat::AuthenticationValues::SetAuthPostData(::StringW stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::AuthenticationValues*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringData);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.SetAuthPostData
void Photon::Chat::AuthenticationValues::SetAuthPostData(::ArrayW<uint8_t> byteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::AuthenticationValues*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteData);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.SetAuthPostData
void Photon::Chat::AuthenticationValues::SetAuthPostData(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dictData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::AuthenticationValues*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictData);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.AddAuthParameter
void Photon::Chat::AuthenticationValues::AddAuthParameter(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::AddAuthParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::AuthenticationValues*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.CopyTo
::Photon::Chat::AuthenticationValues* Photon::Chat::AuthenticationValues::CopyTo(::Photon::Chat::AuthenticationValues* copy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(copy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Chat::AuthenticationValues*, false>(this, ___internal__method, copy);
}
// Autogenerated method: Photon.Chat.AuthenticationValues.ToString
::StringW Photon::Chat::AuthenticationValues::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::AuthenticationValues::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ParameterCode
#include "Photon/Chat/ParameterCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte ApplicationId
uint8_t Photon::Chat::ParameterCode::_get_ApplicationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_ApplicationId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "ApplicationId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ApplicationId
void Photon::Chat::ParameterCode::_set_ApplicationId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_ApplicationId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "ApplicationId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Secret
uint8_t Photon::Chat::ParameterCode::_get_Secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_Secret");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "Secret"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Secret
void Photon::Chat::ParameterCode::_set_Secret(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_Secret");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "Secret", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AppVersion
uint8_t Photon::Chat::ParameterCode::_get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_AppVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "AppVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AppVersion
void Photon::Chat::ParameterCode::_set_AppVersion(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_AppVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "AppVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationType
uint8_t Photon::Chat::ParameterCode::_get_ClientAuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_ClientAuthenticationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "ClientAuthenticationType"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationType
void Photon::Chat::ParameterCode::_set_ClientAuthenticationType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_ClientAuthenticationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "ClientAuthenticationType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationParams
uint8_t Photon::Chat::ParameterCode::_get_ClientAuthenticationParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_ClientAuthenticationParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "ClientAuthenticationParams"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationParams
void Photon::Chat::ParameterCode::_set_ClientAuthenticationParams(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_ClientAuthenticationParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "ClientAuthenticationParams", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationData
uint8_t Photon::Chat::ParameterCode::_get_ClientAuthenticationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_ClientAuthenticationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "ClientAuthenticationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationData
void Photon::Chat::ParameterCode::_set_ClientAuthenticationData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_ClientAuthenticationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "ClientAuthenticationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Region
uint8_t Photon::Chat::ParameterCode::_get_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_Region");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "Region"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Region
void Photon::Chat::ParameterCode::_set_Region(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_Region");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "Region", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Address
uint8_t Photon::Chat::ParameterCode::_get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_Address");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "Address"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Address
void Photon::Chat::ParameterCode::_set_Address(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_Address");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "Address", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserId
uint8_t Photon::Chat::ParameterCode::_get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_get_UserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Chat", "ParameterCode", "UserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserId
void Photon::Chat::ParameterCode::_set_UserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ParameterCode::_set_UserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ParameterCode", "UserId", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ErrorCode
#include "Photon/Chat/ErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Ok
int Photon::Chat::ErrorCode::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Ok
void Photon::Chat::ErrorCode::_set_Ok(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OperationNotAllowedInCurrentState
int Photon::Chat::ErrorCode::_get_OperationNotAllowedInCurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_OperationNotAllowedInCurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "OperationNotAllowedInCurrentState"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OperationNotAllowedInCurrentState
void Photon::Chat::ErrorCode::_set_OperationNotAllowedInCurrentState(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_OperationNotAllowedInCurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "OperationNotAllowedInCurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidOperationCode
int Photon::Chat::ErrorCode::_get_InvalidOperationCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_InvalidOperationCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "InvalidOperationCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidOperationCode
void Photon::Chat::ErrorCode::_set_InvalidOperationCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_InvalidOperationCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "InvalidOperationCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InternalServerError
int Photon::Chat::ErrorCode::_get_InternalServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_InternalServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "InternalServerError"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InternalServerError
void Photon::Chat::ErrorCode::_set_InternalServerError(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_InternalServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "InternalServerError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidAuthentication
int Photon::Chat::ErrorCode::_get_InvalidAuthentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_InvalidAuthentication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "InvalidAuthentication"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidAuthentication
void Photon::Chat::ErrorCode::_set_InvalidAuthentication(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_InvalidAuthentication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "InvalidAuthentication", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameIdAlreadyExists
int Photon::Chat::ErrorCode::_get_GameIdAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_GameIdAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "GameIdAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameIdAlreadyExists
void Photon::Chat::ErrorCode::_set_GameIdAlreadyExists(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_GameIdAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "GameIdAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameFull
int Photon::Chat::ErrorCode::_get_GameFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_GameFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "GameFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameFull
void Photon::Chat::ErrorCode::_set_GameFull(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_GameFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "GameFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameClosed
int Photon::Chat::ErrorCode::_get_GameClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_GameClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "GameClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameClosed
void Photon::Chat::ErrorCode::_set_GameClosed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_GameClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "GameClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ServerFull
int Photon::Chat::ErrorCode::_get_ServerFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_ServerFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "ServerFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ServerFull
void Photon::Chat::ErrorCode::_set_ServerFull(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_ServerFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "ServerFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 UserBlocked
int Photon::Chat::ErrorCode::_get_UserBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_UserBlocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "UserBlocked"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 UserBlocked
void Photon::Chat::ErrorCode::_set_UserBlocked(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_UserBlocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "UserBlocked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 NoRandomMatchFound
int Photon::Chat::ErrorCode::_get_NoRandomMatchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_NoRandomMatchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "NoRandomMatchFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NoRandomMatchFound
void Photon::Chat::ErrorCode::_set_NoRandomMatchFound(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_NoRandomMatchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "NoRandomMatchFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameDoesNotExist
int Photon::Chat::ErrorCode::_get_GameDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_GameDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "GameDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameDoesNotExist
void Photon::Chat::ErrorCode::_set_GameDoesNotExist(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_GameDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "GameDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxCcuReached
int Photon::Chat::ErrorCode::_get_MaxCcuReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_MaxCcuReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "MaxCcuReached"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxCcuReached
void Photon::Chat::ErrorCode::_set_MaxCcuReached(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_MaxCcuReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "MaxCcuReached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidRegion
int Photon::Chat::ErrorCode::_get_InvalidRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_InvalidRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "InvalidRegion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidRegion
void Photon::Chat::ErrorCode::_set_InvalidRegion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_InvalidRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "InvalidRegion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CustomAuthenticationFailed
int Photon::Chat::ErrorCode::_get_CustomAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_CustomAuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "CustomAuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CustomAuthenticationFailed
void Photon::Chat::ErrorCode::_set_CustomAuthenticationFailed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_CustomAuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "CustomAuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AuthenticationTicketExpired
int Photon::Chat::ErrorCode::_get_AuthenticationTicketExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_get_AuthenticationTicketExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ErrorCode", "AuthenticationTicketExpired"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AuthenticationTicketExpired
void Photon::Chat::ErrorCode::_set_AuthenticationTicketExpired(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ErrorCode::_set_AuthenticationTicketExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ErrorCode", "AuthenticationTicketExpired", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatState
#include "Photon/Chat/ChatState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState Uninitialized
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState Uninitialized
void Photon::Chat::ChatState::_set_Uninitialized(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState ConnectingToNameServer
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_ConnectingToNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_ConnectingToNameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "ConnectingToNameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState ConnectingToNameServer
void Photon::Chat::ChatState::_set_ConnectingToNameServer(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_ConnectingToNameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "ConnectingToNameServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState ConnectedToNameServer
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_ConnectedToNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_ConnectedToNameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "ConnectedToNameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState ConnectedToNameServer
void Photon::Chat::ChatState::_set_ConnectedToNameServer(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_ConnectedToNameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "ConnectedToNameServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState Authenticating
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_Authenticating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_Authenticating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "Authenticating"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState Authenticating
void Photon::Chat::ChatState::_set_Authenticating(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_Authenticating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "Authenticating", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState Authenticated
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_Authenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_Authenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "Authenticated"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState Authenticated
void Photon::Chat::ChatState::_set_Authenticated(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_Authenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "Authenticated", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState DisconnectingFromNameServer
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_DisconnectingFromNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_DisconnectingFromNameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "DisconnectingFromNameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState DisconnectingFromNameServer
void Photon::Chat::ChatState::_set_DisconnectingFromNameServer(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_DisconnectingFromNameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "DisconnectingFromNameServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState ConnectingToFrontEnd
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_ConnectingToFrontEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_ConnectingToFrontEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "ConnectingToFrontEnd"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState ConnectingToFrontEnd
void Photon::Chat::ChatState::_set_ConnectingToFrontEnd(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_ConnectingToFrontEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "ConnectingToFrontEnd", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState ConnectedToFrontEnd
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_ConnectedToFrontEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_ConnectedToFrontEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "ConnectedToFrontEnd"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState ConnectedToFrontEnd
void Photon::Chat::ChatState::_set_ConnectedToFrontEnd(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_ConnectedToFrontEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "ConnectedToFrontEnd", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState DisconnectingFromFrontEnd
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_DisconnectingFromFrontEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_DisconnectingFromFrontEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "DisconnectingFromFrontEnd"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState DisconnectingFromFrontEnd
void Photon::Chat::ChatState::_set_DisconnectingFromFrontEnd(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_DisconnectingFromFrontEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "DisconnectingFromFrontEnd", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState QueuedComingFromFrontEnd
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_QueuedComingFromFrontEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_QueuedComingFromFrontEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "QueuedComingFromFrontEnd"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState QueuedComingFromFrontEnd
void Photon::Chat::ChatState::_set_QueuedComingFromFrontEnd(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_QueuedComingFromFrontEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "QueuedComingFromFrontEnd", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState Disconnecting
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState Disconnecting
void Photon::Chat::ChatState::_set_Disconnecting(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "Disconnecting", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState Disconnected
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState Disconnected
void Photon::Chat::ChatState::_set_Disconnected(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Chat.ChatState ConnectWithFallbackProtocol
::Photon::Chat::ChatState Photon::Chat::ChatState::_get_ConnectWithFallbackProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_get_ConnectWithFallbackProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Chat::ChatState>("Photon.Chat", "ChatState", "ConnectWithFallbackProtocol"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Chat.ChatState ConnectWithFallbackProtocol
void Photon::Chat::ChatState::_set_ConnectWithFallbackProtocol(::Photon::Chat::ChatState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::_set_ConnectWithFallbackProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatState", "ConnectWithFallbackProtocol", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Chat::ChatState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Chat.ChatUserStatus
#include "Photon/Chat/ChatUserStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Offline
int Photon::Chat::ChatUserStatus::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatUserStatus", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Offline
void Photon::Chat::ChatUserStatus::_set_Offline(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatUserStatus", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Invisible
int Photon::Chat::ChatUserStatus::_get_Invisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_get_Invisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatUserStatus", "Invisible"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Invisible
void Photon::Chat::ChatUserStatus::_set_Invisible(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_set_Invisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatUserStatus", "Invisible", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Online
int Photon::Chat::ChatUserStatus::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatUserStatus", "Online"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Online
void Photon::Chat::ChatUserStatus::_set_Online(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatUserStatus", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Away
int Photon::Chat::ChatUserStatus::_get_Away() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_get_Away");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatUserStatus", "Away"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Away
void Photon::Chat::ChatUserStatus::_set_Away(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_set_Away");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatUserStatus", "Away", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DND
int Photon::Chat::ChatUserStatus::_get_DND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_get_DND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatUserStatus", "DND"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DND
void Photon::Chat::ChatUserStatus::_set_DND(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_set_DND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatUserStatus", "DND", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 LFG
int Photon::Chat::ChatUserStatus::_get_LFG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_get_LFG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatUserStatus", "LFG"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 LFG
void Photon::Chat::ChatUserStatus::_set_LFG(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_set_LFG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatUserStatus", "LFG", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Playing
int Photon::Chat::ChatUserStatus::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Chat", "ChatUserStatus", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Playing
void Photon::Chat::ChatUserStatus::_set_Playing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::ChatUserStatus::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Chat", "ChatUserStatus", "Playing", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Chat.IChatClientListener
#include "Photon/Chat/IChatClientListener.hpp"
// Including type: ExitGames.Client.Photon.DebugLevel
#include "ExitGames/Client/Photon/DebugLevel.hpp"
// Including type: Photon.Chat.ChatState
#include "Photon/Chat/ChatState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Chat.IChatClientListener.DebugReturn
void Photon::Chat::IChatClientListener::DebugReturn(::ExitGames::Client::Photon::DebugLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::DebugReturn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnDisconnected
void Photon::Chat::IChatClientListener::OnDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnConnected
void Photon::Chat::IChatClientListener::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnChatStateChange
void Photon::Chat::IChatClientListener::OnChatStateChange(::Photon::Chat::ChatState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnChatStateChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnGetMessages
void Photon::Chat::IChatClientListener::OnGetMessages(::StringW channelName, ::ArrayW<::StringW> senders, ::ArrayW<::Il2CppObject*> messages) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnGetMessages");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelName, senders, messages);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnPrivateMessage
void Photon::Chat::IChatClientListener::OnPrivateMessage(::StringW sender, ::Il2CppObject* message, ::StringW channelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnPrivateMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, message, channelName);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnSubscribed
void Photon::Chat::IChatClientListener::OnSubscribed(::ArrayW<::StringW> channels, ::ArrayW<bool> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnSubscribed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channels, results);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnUnsubscribed
void Photon::Chat::IChatClientListener::OnUnsubscribed(::ArrayW<::StringW> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnUnsubscribed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channels);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnStatusUpdate
void Photon::Chat::IChatClientListener::OnStatusUpdate(::StringW user, int status, bool gotMessage, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnStatusUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user, status, gotMessage, message);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnUserSubscribed
void Photon::Chat::IChatClientListener::OnUserSubscribed(::StringW channel, ::StringW user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnUserSubscribed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel, user);
}
// Autogenerated method: Photon.Chat.IChatClientListener.OnUserUnsubscribed
void Photon::Chat::IChatClientListener::OnUserUnsubscribed(::StringW channel, ::StringW user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Chat::IChatClientListener::OnUserUnsubscribed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Chat::IChatClientListener*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel, user);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AppIdRealtime
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_AppIdRealtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_AppIdRealtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppIdRealtime"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AppIdFusion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_AppIdFusion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_AppIdFusion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppIdFusion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AppIdChat
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_AppIdChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_AppIdChat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppIdChat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AppIdVoice
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_AppIdVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_AppIdVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppIdVoice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AppVersion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_AppVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AppVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseNameServer
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::AppSettings::dyn_UseNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_UseNameServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseNameServer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FixedRegion
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_FixedRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_FixedRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FixedRegion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BestRegionSummaryFromStorage
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_BestRegionSummaryFromStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_BestRegionSummaryFromStorage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BestRegionSummaryFromStorage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Server
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_Server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Server"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Port
[[deprecated("Use field access instead!")]] int& Photon::Realtime::AppSettings::dyn_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProxyServer
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AppSettings::dyn_ProxyServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_ProxyServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProxyServer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.ConnectionProtocol Protocol
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::ConnectionProtocol& Photon::Realtime::AppSettings::dyn_Protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_Protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Protocol"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::ConnectionProtocol*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableProtocolFallback
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::AppSettings::dyn_EnableProtocolFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_EnableProtocolFallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableProtocolFallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.AuthModeOption AuthMode
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AuthModeOption& Photon::Realtime::AppSettings::dyn_AuthMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_AuthMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AuthMode"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AuthModeOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLobbyStatistics
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::AppSettings::dyn_EnableLobbyStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_EnableLobbyStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLobbyStatistics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.DebugLevel NetworkLogging
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::DebugLevel& Photon::Realtime::AppSettings::dyn_NetworkLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::dyn_NetworkLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NetworkLogging"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::DebugLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.AppSettings.get_IsMasterServerAddress
bool Photon::Realtime::AppSettings::get_IsMasterServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::get_IsMasterServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMasterServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AppSettings.get_IsBestRegion
bool Photon::Realtime::AppSettings::get_IsBestRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::get_IsBestRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBestRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AppSettings.get_IsDefaultNameServer
bool Photon::Realtime::AppSettings::get_IsDefaultNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::get_IsDefaultNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AppSettings.get_IsDefaultPort
bool Photon::Realtime::AppSettings::get_IsDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::get_IsDefaultPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AppSettings.ToStringFull
::StringW Photon::Realtime::AppSettings::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AppSettings.IsAppId
bool Photon::Realtime::AppSettings::IsAppId(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::IsAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "AppSettings", "IsAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: Photon.Realtime.AppSettings.HideAppId
::StringW Photon::Realtime::AppSettings::HideAppId(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::HideAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, appId);
}
// Autogenerated method: Photon.Realtime.AppSettings.CopyTo
::Photon::Realtime::AppSettings* Photon::Realtime::AppSettings::CopyTo(::Photon::Realtime::AppSettings* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AppSettings::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::AppSettings*, false>(this, ___internal__method, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ConnectionHandler
#include "Photon/Realtime/ConnectionHandler.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean AppQuits
bool Photon::Realtime::ConnectionHandler::_get_AppQuits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::_get_AppQuits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Realtime", "ConnectionHandler", "AppQuits"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean AppQuits
void Photon::Realtime::ConnectionHandler::_set_AppQuits(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::_set_AppQuits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ConnectionHandler", "AppQuits", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient <Client>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::ConnectionHandler::dyn_$Client$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_$Client$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Client>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisconnectAfterKeepAlive
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::ConnectionHandler::dyn_DisconnectAfterKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_DisconnectAfterKeepAlive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisconnectAfterKeepAlive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 KeepAliveInBackground
[[deprecated("Use field access instead!")]] int& Photon::Realtime::ConnectionHandler::dyn_KeepAliveInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_KeepAliveInBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeepAliveInBackground"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CountSendAcksOnly>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::ConnectionHandler::dyn_$CountSendAcksOnly$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_$CountSendAcksOnly$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CountSendAcksOnly>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ApplyDontDestroyOnLoad
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::ConnectionHandler::dyn_ApplyDontDestroyOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_ApplyDontDestroyOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplyDontDestroyOnLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte fallbackThreadId
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::ConnectionHandler::dyn_fallbackThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_fallbackThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackThreadId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean didSendAcks
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::ConnectionHandler::dyn_didSendAcks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_didSendAcks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSendAcks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Stopwatch backgroundStopwatch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Photon::Realtime::ConnectionHandler::dyn_backgroundStopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::dyn_backgroundStopwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundStopwatch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.get_Client
::Photon::Realtime::LoadBalancingClient* Photon::Realtime::ConnectionHandler::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::LoadBalancingClient*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.set_Client
void Photon::Realtime::ConnectionHandler::set_Client(::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::set_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.get_CountSendAcksOnly
int Photon::Realtime::ConnectionHandler::get_CountSendAcksOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::get_CountSendAcksOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CountSendAcksOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.set_CountSendAcksOnly
void Photon::Realtime::ConnectionHandler::set_CountSendAcksOnly(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::set_CountSendAcksOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CountSendAcksOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.get_FallbackThreadRunning
bool Photon::Realtime::ConnectionHandler::get_FallbackThreadRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::get_FallbackThreadRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FallbackThreadRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.OnApplicationQuit
void Photon::Realtime::ConnectionHandler::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.Awake
void Photon::Realtime::ConnectionHandler::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.OnDisable
void Photon::Realtime::ConnectionHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.StartFallbackSendAckThread
void Photon::Realtime::ConnectionHandler::StartFallbackSendAckThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::StartFallbackSendAckThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFallbackSendAckThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.StopFallbackSendAckThread
void Photon::Realtime::ConnectionHandler::StopFallbackSendAckThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::StopFallbackSendAckThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopFallbackSendAckThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionHandler.RealtimeFallbackThread
bool Photon::Realtime::ConnectionHandler::RealtimeFallbackThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionHandler::RealtimeFallbackThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RealtimeFallbackThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.CustomTypesUnity
#include "Photon/Realtime/CustomTypesUnity.hpp"
// Including type: ExitGames.Client.Photon.StreamBuffer
#include "ExitGames/Client/Photon/StreamBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 SizeV2
int Photon::Realtime::CustomTypesUnity::_get_SizeV2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_get_SizeV2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "CustomTypesUnity", "SizeV2"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SizeV2
void Photon::Realtime::CustomTypesUnity::_set_SizeV2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_set_SizeV2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomTypesUnity", "SizeV2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SizeV3
int Photon::Realtime::CustomTypesUnity::_get_SizeV3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_get_SizeV3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "CustomTypesUnity", "SizeV3"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SizeV3
void Photon::Realtime::CustomTypesUnity::_set_SizeV3(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_set_SizeV3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomTypesUnity", "SizeV3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SizeQuat
int Photon::Realtime::CustomTypesUnity::_get_SizeQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_get_SizeQuat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "CustomTypesUnity", "SizeQuat"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SizeQuat
void Photon::Realtime::CustomTypesUnity::_set_SizeQuat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_set_SizeQuat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomTypesUnity", "SizeQuat", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] memVector3
::ArrayW<uint8_t> Photon::Realtime::CustomTypesUnity::_get_memVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_get_memVector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.Realtime", "CustomTypesUnity", "memVector3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] memVector3
void Photon::Realtime::CustomTypesUnity::_set_memVector3(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_set_memVector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomTypesUnity", "memVector3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] memVector2
::ArrayW<uint8_t> Photon::Realtime::CustomTypesUnity::_get_memVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_get_memVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.Realtime", "CustomTypesUnity", "memVector2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] memVector2
void Photon::Realtime::CustomTypesUnity::_set_memVector2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_set_memVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomTypesUnity", "memVector2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] memQuarternion
::ArrayW<uint8_t> Photon::Realtime::CustomTypesUnity::_get_memQuarternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_get_memQuarternion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.Realtime", "CustomTypesUnity", "memQuarternion"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] memQuarternion
void Photon::Realtime::CustomTypesUnity::_set_memQuarternion(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::_set_memQuarternion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomTypesUnity", "memQuarternion", value));
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity.Register
void Photon::Realtime::CustomTypesUnity::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity.SerializeVector3
int16_t Photon::Realtime::CustomTypesUnity::SerializeVector3(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::SerializeVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", "SerializeVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outStream), ::il2cpp_utils::ExtractType(customobject)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outStream, customobject);
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity.DeserializeVector3
::Il2CppObject* Photon::Realtime::CustomTypesUnity::DeserializeVector3(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::DeserializeVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", "DeserializeVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inStream, length);
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity.SerializeVector2
int16_t Photon::Realtime::CustomTypesUnity::SerializeVector2(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::SerializeVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", "SerializeVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outStream), ::il2cpp_utils::ExtractType(customobject)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outStream, customobject);
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity.DeserializeVector2
::Il2CppObject* Photon::Realtime::CustomTypesUnity::DeserializeVector2(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::DeserializeVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", "DeserializeVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inStream, length);
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity.SerializeQuaternion
int16_t Photon::Realtime::CustomTypesUnity::SerializeQuaternion(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::SerializeQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", "SerializeQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outStream), ::il2cpp_utils::ExtractType(customobject)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outStream, customobject);
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity.DeserializeQuaternion
::Il2CppObject* Photon::Realtime::CustomTypesUnity::DeserializeQuaternion(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::DeserializeQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", "DeserializeQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inStream, length);
}
// Autogenerated method: Photon.Realtime.CustomTypesUnity..cctor
void Photon::Realtime::CustomTypesUnity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomTypesUnity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "CustomTypesUnity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.Extensions
#include "Photon/Realtime/Extensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<System.Object> keysWithNullValue
::System::Collections::Generic::List_1<::Il2CppObject*>* Photon::Realtime::Extensions::_get_keysWithNullValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::_get_keysWithNullValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Il2CppObject*>*>("Photon.Realtime", "Extensions", "keysWithNullValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<System.Object> keysWithNullValue
void Photon::Realtime::Extensions::_set_keysWithNullValue(::System::Collections::Generic::List_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::_set_keysWithNullValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "Extensions", "keysWithNullValue", value));
}
// Autogenerated method: Photon.Realtime.Extensions.Merge
void Photon::Realtime::Extensions::Merge(::System::Collections::IDictionary* target, ::System::Collections::IDictionary* addHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(addHash)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, addHash);
}
// Autogenerated method: Photon.Realtime.Extensions.MergeStringKeys
void Photon::Realtime::Extensions::MergeStringKeys(::System::Collections::IDictionary* target, ::System::Collections::IDictionary* addHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::MergeStringKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "MergeStringKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(addHash)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, addHash);
}
// Autogenerated method: Photon.Realtime.Extensions.ToStringFull
::StringW Photon::Realtime::Extensions::ToStringFull(::System::Collections::IDictionary* origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin);
}
// Autogenerated method: Photon.Realtime.Extensions.ToStringFull
::StringW Photon::Realtime::Extensions::ToStringFull(::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Photon.Realtime.Extensions.StripToStringKeys
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::Extensions::StripToStringKeys(::System::Collections::IDictionary* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::StripToStringKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "StripToStringKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Photon.Realtime.Extensions.StripToStringKeys
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::Extensions::StripToStringKeys(::ExitGames::Client::Photon::Hashtable* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::StripToStringKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "StripToStringKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Photon.Realtime.Extensions.StripKeysWithNullValues
void Photon::Realtime::Extensions::StripKeysWithNullValues(::System::Collections::IDictionary* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::StripKeysWithNullValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "StripKeysWithNullValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Photon.Realtime.Extensions.StripKeysWithNullValues
void Photon::Realtime::Extensions::StripKeysWithNullValues(::ExitGames::Client::Photon::Hashtable* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::StripKeysWithNullValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "StripKeysWithNullValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: Photon.Realtime.Extensions.Contains
bool Photon::Realtime::Extensions::Contains(::ArrayW<int> target, int nr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(nr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, nr);
}
// Autogenerated method: Photon.Realtime.Extensions..cctor
void Photon::Realtime::Extensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <UserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::FriendInfo::dyn_$UserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::dyn_$UserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsOnline>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::FriendInfo::dyn_$IsOnline$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::dyn_$IsOnline$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsOnline>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Room>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::FriendInfo::dyn_$Room$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::dyn_$Room$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Room>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.FriendInfo.get_Name
::StringW Photon::Realtime::FriendInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.FriendInfo.get_UserId
::StringW Photon::Realtime::FriendInfo::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.FriendInfo.set_UserId
void Photon::Realtime::FriendInfo::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.FriendInfo.get_IsOnline
bool Photon::Realtime::FriendInfo::get_IsOnline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::get_IsOnline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOnline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.FriendInfo.set_IsOnline
void Photon::Realtime::FriendInfo::set_IsOnline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::set_IsOnline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOnline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.FriendInfo.get_Room
::StringW Photon::Realtime::FriendInfo::get_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::get_Room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.FriendInfo.set_Room
void Photon::Realtime::FriendInfo::set_Room(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::set_Room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.FriendInfo.get_IsInRoom
bool Photon::Realtime::FriendInfo::get_IsInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::get_IsInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.FriendInfo.ToString
::StringW Photon::Realtime::FriendInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FriendInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ClientState
#include "Photon/Realtime/ClientState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState PeerCreated
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_PeerCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_PeerCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "PeerCreated"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState PeerCreated
void Photon::Realtime::ClientState::_set_PeerCreated(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_PeerCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "PeerCreated", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState Authenticating
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_Authenticating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_Authenticating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "Authenticating"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState Authenticating
void Photon::Realtime::ClientState::_set_Authenticating(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_Authenticating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "Authenticating", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState Authenticated
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_Authenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_Authenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "Authenticated"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState Authenticated
void Photon::Realtime::ClientState::_set_Authenticated(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_Authenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "Authenticated", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState JoiningLobby
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_JoiningLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_JoiningLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "JoiningLobby"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState JoiningLobby
void Photon::Realtime::ClientState::_set_JoiningLobby(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_JoiningLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "JoiningLobby", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState JoinedLobby
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_JoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_JoinedLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "JoinedLobby"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState JoinedLobby
void Photon::Realtime::ClientState::_set_JoinedLobby(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_JoinedLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "JoinedLobby", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState DisconnectingFromMasterServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_DisconnectingFromMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_DisconnectingFromMasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "DisconnectingFromMasterServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState DisconnectingFromMasterServer
void Photon::Realtime::ClientState::_set_DisconnectingFromMasterServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_DisconnectingFromMasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "DisconnectingFromMasterServer", value));
}
// [ObsoleteAttribute] Offset: 0xAAE038
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState DisconnectingFromMasterserver
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_DisconnectingFromMasterserver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_DisconnectingFromMasterserver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "DisconnectingFromMasterserver"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState DisconnectingFromMasterserver
void Photon::Realtime::ClientState::_set_DisconnectingFromMasterserver(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_DisconnectingFromMasterserver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "DisconnectingFromMasterserver", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectingToGameServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectingToGameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectingToGameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectingToGameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectingToGameServer
void Photon::Realtime::ClientState::_set_ConnectingToGameServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectingToGameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectingToGameServer", value));
}
// [ObsoleteAttribute] Offset: 0xAAE070
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectingToGameserver
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectingToGameserver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectingToGameserver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectingToGameserver"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectingToGameserver
void Photon::Realtime::ClientState::_set_ConnectingToGameserver(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectingToGameserver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectingToGameserver", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectedToGameServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectedToGameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectedToGameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectedToGameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectedToGameServer
void Photon::Realtime::ClientState::_set_ConnectedToGameServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectedToGameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectedToGameServer", value));
}
// [ObsoleteAttribute] Offset: 0xAAE0A8
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectedToGameserver
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectedToGameserver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectedToGameserver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectedToGameserver"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectedToGameserver
void Photon::Realtime::ClientState::_set_ConnectedToGameserver(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectedToGameserver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectedToGameserver", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState Joining
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_Joining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_Joining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "Joining"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState Joining
void Photon::Realtime::ClientState::_set_Joining(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_Joining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "Joining", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState Joined
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_Joined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_Joined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "Joined"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState Joined
void Photon::Realtime::ClientState::_set_Joined(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_Joined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "Joined", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState Leaving
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_Leaving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_Leaving");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "Leaving"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState Leaving
void Photon::Realtime::ClientState::_set_Leaving(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_Leaving");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "Leaving", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState DisconnectingFromGameServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_DisconnectingFromGameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_DisconnectingFromGameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "DisconnectingFromGameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState DisconnectingFromGameServer
void Photon::Realtime::ClientState::_set_DisconnectingFromGameServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_DisconnectingFromGameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "DisconnectingFromGameServer", value));
}
// [ObsoleteAttribute] Offset: 0xAAE0E0
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState DisconnectingFromGameserver
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_DisconnectingFromGameserver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_DisconnectingFromGameserver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "DisconnectingFromGameserver"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState DisconnectingFromGameserver
void Photon::Realtime::ClientState::_set_DisconnectingFromGameserver(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_DisconnectingFromGameserver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "DisconnectingFromGameserver", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectingToMasterServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectingToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectingToMasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectingToMasterServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectingToMasterServer
void Photon::Realtime::ClientState::_set_ConnectingToMasterServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectingToMasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectingToMasterServer", value));
}
// [ObsoleteAttribute] Offset: 0xAAE118
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectingToMasterserver
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectingToMasterserver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectingToMasterserver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectingToMasterserver"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectingToMasterserver
void Photon::Realtime::ClientState::_set_ConnectingToMasterserver(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectingToMasterserver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectingToMasterserver", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState Disconnecting
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState Disconnecting
void Photon::Realtime::ClientState::_set_Disconnecting(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "Disconnecting", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState Disconnected
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState Disconnected
void Photon::Realtime::ClientState::_set_Disconnected(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectedToMasterServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectedToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectedToMasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectedToMasterServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectedToMasterServer
void Photon::Realtime::ClientState::_set_ConnectedToMasterServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectedToMasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectedToMasterServer", value));
}
// [ObsoleteAttribute] Offset: 0xAAE150
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectedToMasterserver
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectedToMasterserver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectedToMasterserver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectedToMasterserver"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectedToMasterserver
void Photon::Realtime::ClientState::_set_ConnectedToMasterserver(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectedToMasterserver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectedToMasterserver", value));
}
// [ObsoleteAttribute] Offset: 0xAAE188
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectedToMaster
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectedToMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectedToMaster"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectedToMaster
void Photon::Realtime::ClientState::_set_ConnectedToMaster(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectedToMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectedToMaster", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectingToNameServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectingToNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectingToNameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectingToNameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectingToNameServer
void Photon::Realtime::ClientState::_set_ConnectingToNameServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectingToNameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectingToNameServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectedToNameServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectedToNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectedToNameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectedToNameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectedToNameServer
void Photon::Realtime::ClientState::_set_ConnectedToNameServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectedToNameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectedToNameServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState DisconnectingFromNameServer
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_DisconnectingFromNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_DisconnectingFromNameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "DisconnectingFromNameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState DisconnectingFromNameServer
void Photon::Realtime::ClientState::_set_DisconnectingFromNameServer(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_DisconnectingFromNameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "DisconnectingFromNameServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientState ConnectWithFallbackProtocol
::Photon::Realtime::ClientState Photon::Realtime::ClientState::_get_ConnectWithFallbackProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_get_ConnectWithFallbackProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientState>("Photon.Realtime", "ClientState", "ConnectWithFallbackProtocol"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientState ConnectWithFallbackProtocol
void Photon::Realtime::ClientState::_set_ConnectWithFallbackProtocol(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::_set_ConnectWithFallbackProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientState", "ConnectWithFallbackProtocol", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::ClientState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.JoinType
#include "Photon/Realtime/JoinType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinType CreateRoom
::Photon::Realtime::JoinType Photon::Realtime::JoinType::_get_CreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_get_CreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinType>("Photon.Realtime", "JoinType", "CreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinType CreateRoom
void Photon::Realtime::JoinType::_set_CreateRoom(::Photon::Realtime::JoinType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_set_CreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinType", "CreateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinType JoinRoom
::Photon::Realtime::JoinType Photon::Realtime::JoinType::_get_JoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_get_JoinRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinType>("Photon.Realtime", "JoinType", "JoinRoom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinType JoinRoom
void Photon::Realtime::JoinType::_set_JoinRoom(::Photon::Realtime::JoinType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_set_JoinRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinType", "JoinRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinType JoinRandomRoom
::Photon::Realtime::JoinType Photon::Realtime::JoinType::_get_JoinRandomRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_get_JoinRandomRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinType>("Photon.Realtime", "JoinType", "JoinRandomRoom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinType JoinRandomRoom
void Photon::Realtime::JoinType::_set_JoinRandomRoom(::Photon::Realtime::JoinType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_set_JoinRandomRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinType", "JoinRandomRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinType JoinRandomOrCreateRoom
::Photon::Realtime::JoinType Photon::Realtime::JoinType::_get_JoinRandomOrCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_get_JoinRandomOrCreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinType>("Photon.Realtime", "JoinType", "JoinRandomOrCreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinType JoinRandomOrCreateRoom
void Photon::Realtime::JoinType::_set_JoinRandomOrCreateRoom(::Photon::Realtime::JoinType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_set_JoinRandomOrCreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinType", "JoinRandomOrCreateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinType JoinOrCreateRoom
::Photon::Realtime::JoinType Photon::Realtime::JoinType::_get_JoinOrCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_get_JoinOrCreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinType>("Photon.Realtime", "JoinType", "JoinOrCreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinType JoinOrCreateRoom
void Photon::Realtime::JoinType::_set_JoinOrCreateRoom(::Photon::Realtime::JoinType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::_set_JoinOrCreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinType", "JoinOrCreateRoom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::JoinType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause None
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause None
void Photon::Realtime::DisconnectCause::_set_None(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause ExceptionOnConnect
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_ExceptionOnConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_ExceptionOnConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "ExceptionOnConnect"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause ExceptionOnConnect
void Photon::Realtime::DisconnectCause::_set_ExceptionOnConnect(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_ExceptionOnConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "ExceptionOnConnect", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause DnsExceptionOnConnect
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_DnsExceptionOnConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_DnsExceptionOnConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "DnsExceptionOnConnect"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause DnsExceptionOnConnect
void Photon::Realtime::DisconnectCause::_set_DnsExceptionOnConnect(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_DnsExceptionOnConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "DnsExceptionOnConnect", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause ServerAddressInvalid
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_ServerAddressInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_ServerAddressInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "ServerAddressInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause ServerAddressInvalid
void Photon::Realtime::DisconnectCause::_set_ServerAddressInvalid(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_ServerAddressInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "ServerAddressInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause Exception
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_Exception");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "Exception"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause Exception
void Photon::Realtime::DisconnectCause::_set_Exception(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_Exception");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "Exception", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause ServerTimeout
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_ServerTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_ServerTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "ServerTimeout"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause ServerTimeout
void Photon::Realtime::DisconnectCause::_set_ServerTimeout(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_ServerTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "ServerTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause ClientTimeout
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_ClientTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_ClientTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "ClientTimeout"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause ClientTimeout
void Photon::Realtime::DisconnectCause::_set_ClientTimeout(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_ClientTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "ClientTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause DisconnectByServerLogic
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_DisconnectByServerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_DisconnectByServerLogic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "DisconnectByServerLogic"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause DisconnectByServerLogic
void Photon::Realtime::DisconnectCause::_set_DisconnectByServerLogic(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_DisconnectByServerLogic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "DisconnectByServerLogic", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause DisconnectByServerReasonUnknown
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_DisconnectByServerReasonUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_DisconnectByServerReasonUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "DisconnectByServerReasonUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause DisconnectByServerReasonUnknown
void Photon::Realtime::DisconnectCause::_set_DisconnectByServerReasonUnknown(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_DisconnectByServerReasonUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "DisconnectByServerReasonUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause InvalidAuthentication
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_InvalidAuthentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_InvalidAuthentication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "InvalidAuthentication"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause InvalidAuthentication
void Photon::Realtime::DisconnectCause::_set_InvalidAuthentication(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_InvalidAuthentication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "InvalidAuthentication", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause CustomAuthenticationFailed
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_CustomAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_CustomAuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "CustomAuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause CustomAuthenticationFailed
void Photon::Realtime::DisconnectCause::_set_CustomAuthenticationFailed(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_CustomAuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "CustomAuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause AuthenticationTicketExpired
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_AuthenticationTicketExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_AuthenticationTicketExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "AuthenticationTicketExpired"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause AuthenticationTicketExpired
void Photon::Realtime::DisconnectCause::_set_AuthenticationTicketExpired(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_AuthenticationTicketExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "AuthenticationTicketExpired", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause MaxCcuReached
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_MaxCcuReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_MaxCcuReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "MaxCcuReached"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause MaxCcuReached
void Photon::Realtime::DisconnectCause::_set_MaxCcuReached(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_MaxCcuReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "MaxCcuReached", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause InvalidRegion
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_InvalidRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_InvalidRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "InvalidRegion"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause InvalidRegion
void Photon::Realtime::DisconnectCause::_set_InvalidRegion(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_InvalidRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "InvalidRegion", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause OperationNotAllowedInCurrentState
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_OperationNotAllowedInCurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_OperationNotAllowedInCurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "OperationNotAllowedInCurrentState"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause OperationNotAllowedInCurrentState
void Photon::Realtime::DisconnectCause::_set_OperationNotAllowedInCurrentState(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_OperationNotAllowedInCurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "OperationNotAllowedInCurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause DisconnectByClientLogic
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_DisconnectByClientLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_DisconnectByClientLogic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "DisconnectByClientLogic"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause DisconnectByClientLogic
void Photon::Realtime::DisconnectCause::_set_DisconnectByClientLogic(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_DisconnectByClientLogic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "DisconnectByClientLogic", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause DisconnectByOperationLimit
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_DisconnectByOperationLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_DisconnectByOperationLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "DisconnectByOperationLimit"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause DisconnectByOperationLimit
void Photon::Realtime::DisconnectCause::_set_DisconnectByOperationLimit(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_DisconnectByOperationLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "DisconnectByOperationLimit", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.DisconnectCause DisconnectByDisconnectMessage
::Photon::Realtime::DisconnectCause Photon::Realtime::DisconnectCause::_get_DisconnectByDisconnectMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_get_DisconnectByDisconnectMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::DisconnectCause>("Photon.Realtime", "DisconnectCause", "DisconnectByDisconnectMessage"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.DisconnectCause DisconnectByDisconnectMessage
void Photon::Realtime::DisconnectCause::_set_DisconnectByDisconnectMessage(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::_set_DisconnectByDisconnectMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "DisconnectCause", "DisconnectByDisconnectMessage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::DisconnectCause::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::DisconnectCause::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ServerConnection
#include "Photon/Realtime/ServerConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ServerConnection MasterServer
::Photon::Realtime::ServerConnection Photon::Realtime::ServerConnection::_get_MasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ServerConnection::_get_MasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ServerConnection>("Photon.Realtime", "ServerConnection", "MasterServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ServerConnection MasterServer
void Photon::Realtime::ServerConnection::_set_MasterServer(::Photon::Realtime::ServerConnection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ServerConnection::_set_MasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ServerConnection", "MasterServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ServerConnection GameServer
::Photon::Realtime::ServerConnection Photon::Realtime::ServerConnection::_get_GameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ServerConnection::_get_GameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ServerConnection>("Photon.Realtime", "ServerConnection", "GameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ServerConnection GameServer
void Photon::Realtime::ServerConnection::_set_GameServer(::Photon::Realtime::ServerConnection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ServerConnection::_set_GameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ServerConnection", "GameServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ServerConnection NameServer
::Photon::Realtime::ServerConnection Photon::Realtime::ServerConnection::_get_NameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ServerConnection::_get_NameServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ServerConnection>("Photon.Realtime", "ServerConnection", "NameServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ServerConnection NameServer
void Photon::Realtime::ServerConnection::_set_NameServer(::Photon::Realtime::ServerConnection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ServerConnection::_set_NameServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ServerConnection", "NameServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::ServerConnection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ServerConnection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ClientAppType
#include "Photon/Realtime/ClientAppType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientAppType Realtime
::Photon::Realtime::ClientAppType Photon::Realtime::ClientAppType::_get_Realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientAppType::_get_Realtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientAppType>("Photon.Realtime", "ClientAppType", "Realtime"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientAppType Realtime
void Photon::Realtime::ClientAppType::_set_Realtime(::Photon::Realtime::ClientAppType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientAppType::_set_Realtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientAppType", "Realtime", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientAppType Voice
::Photon::Realtime::ClientAppType Photon::Realtime::ClientAppType::_get_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientAppType::_get_Voice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientAppType>("Photon.Realtime", "ClientAppType", "Voice"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientAppType Voice
void Photon::Realtime::ClientAppType::_set_Voice(::Photon::Realtime::ClientAppType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientAppType::_set_Voice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientAppType", "Voice", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ClientAppType Fusion
::Photon::Realtime::ClientAppType Photon::Realtime::ClientAppType::_get_Fusion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientAppType::_get_Fusion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ClientAppType>("Photon.Realtime", "ClientAppType", "Fusion"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ClientAppType Fusion
void Photon::Realtime::ClientAppType::_set_Fusion(::Photon::Realtime::ClientAppType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientAppType::_set_Fusion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ClientAppType", "Fusion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::ClientAppType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ClientAppType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.EncryptionMode
#include "Photon/Realtime/EncryptionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EncryptionMode PayloadEncryption
::Photon::Realtime::EncryptionMode Photon::Realtime::EncryptionMode::_get_PayloadEncryption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_get_PayloadEncryption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EncryptionMode>("Photon.Realtime", "EncryptionMode", "PayloadEncryption"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EncryptionMode PayloadEncryption
void Photon::Realtime::EncryptionMode::_set_PayloadEncryption(::Photon::Realtime::EncryptionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_set_PayloadEncryption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EncryptionMode", "PayloadEncryption", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EncryptionMode DatagramEncryption
::Photon::Realtime::EncryptionMode Photon::Realtime::EncryptionMode::_get_DatagramEncryption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_get_DatagramEncryption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EncryptionMode>("Photon.Realtime", "EncryptionMode", "DatagramEncryption"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EncryptionMode DatagramEncryption
void Photon::Realtime::EncryptionMode::_set_DatagramEncryption(::Photon::Realtime::EncryptionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_set_DatagramEncryption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EncryptionMode", "DatagramEncryption", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EncryptionMode DatagramEncryptionRandomSequence
::Photon::Realtime::EncryptionMode Photon::Realtime::EncryptionMode::_get_DatagramEncryptionRandomSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_get_DatagramEncryptionRandomSequence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EncryptionMode>("Photon.Realtime", "EncryptionMode", "DatagramEncryptionRandomSequence"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EncryptionMode DatagramEncryptionRandomSequence
void Photon::Realtime::EncryptionMode::_set_DatagramEncryptionRandomSequence(::Photon::Realtime::EncryptionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_set_DatagramEncryptionRandomSequence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EncryptionMode", "DatagramEncryptionRandomSequence", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EncryptionMode DatagramEncryptionGCM
::Photon::Realtime::EncryptionMode Photon::Realtime::EncryptionMode::_get_DatagramEncryptionGCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_get_DatagramEncryptionGCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EncryptionMode>("Photon.Realtime", "EncryptionMode", "DatagramEncryptionGCM"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EncryptionMode DatagramEncryptionGCM
void Photon::Realtime::EncryptionMode::_set_DatagramEncryptionGCM(::Photon::Realtime::EncryptionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::_set_DatagramEncryptionGCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EncryptionMode", "DatagramEncryptionGCM", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::EncryptionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EncryptionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.PhotonPortDefinition
#include "Photon/Realtime/PhotonPortDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.PhotonPortDefinition AlternativeUdpPorts
::Photon::Realtime::PhotonPortDefinition Photon::Realtime::PhotonPortDefinition::_get_AlternativeUdpPorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPortDefinition::_get_AlternativeUdpPorts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PhotonPortDefinition>("Photon.Realtime", "PhotonPortDefinition", "AlternativeUdpPorts"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.PhotonPortDefinition AlternativeUdpPorts
void Photon::Realtime::PhotonPortDefinition::_set_AlternativeUdpPorts(::Photon::Realtime::PhotonPortDefinition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPortDefinition::_set_AlternativeUdpPorts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PhotonPortDefinition", "AlternativeUdpPorts", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NameServerPort
[[deprecated("Use field access instead!")]] uint16_t& Photon::Realtime::PhotonPortDefinition::dyn_NameServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPortDefinition::dyn_NameServerPort");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameServerPort"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 MasterServerPort
[[deprecated("Use field access instead!")]] uint16_t& Photon::Realtime::PhotonPortDefinition::dyn_MasterServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPortDefinition::dyn_MasterServerPort");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MasterServerPort"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 GameServerPort
[[deprecated("Use field access instead!")]] uint16_t& Photon::Realtime::PhotonPortDefinition::dyn_GameServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPortDefinition::dyn_GameServerPort");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameServerPort"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.PhotonPortDefinition..cctor
void Photon::Realtime::PhotonPortDefinition::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPortDefinition::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "PhotonPortDefinition", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.LoadBalancingClient/EncryptionDataParameters
#include "Photon/Realtime/LoadBalancingClient_EncryptionDataParameters.hpp"
// Including type: Photon.Realtime.LoadBalancingClient/CallbackTargetChange
#include "Photon/Realtime/LoadBalancingClient_CallbackTargetChange.hpp"
// Including type: Photon.Realtime.LoadBalancingPeer
#include "Photon/Realtime/LoadBalancingPeer.hpp"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
// Including type: Photon.Realtime.ConnectionCallbacksContainer
#include "Photon/Realtime/ConnectionCallbacksContainer.hpp"
// Including type: Photon.Realtime.MatchMakingCallbacksContainer
#include "Photon/Realtime/MatchMakingCallbacksContainer.hpp"
// Including type: Photon.Realtime.InRoomCallbacksContainer
#include "Photon/Realtime/InRoomCallbacksContainer.hpp"
// Including type: Photon.Realtime.LobbyCallbacksContainer
#include "Photon/Realtime/LobbyCallbacksContainer.hpp"
// Including type: Photon.Realtime.WebRpcCallbacksContainer
#include "Photon/Realtime/WebRpcCallbacksContainer.hpp"
// Including type: Photon.Realtime.ErrorInfoCallbacksContainer
#include "Photon/Realtime/ErrorInfoCallbacksContainer.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.SerializationProtocol
#include "ExitGames/Client/Photon/SerializationProtocol.hpp"
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
// Including type: Photon.Realtime.FindFriendsOptions
#include "Photon/Realtime/FindFriendsOptions.hpp"
// Including type: Photon.Realtime.OpJoinRandomRoomParams
#include "Photon/Realtime/OpJoinRandomRoomParams.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: ExitGames.Client.Photon.SendOptions
#include "ExitGames/Client/Photon/SendOptions.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.DebugLevel
#include "ExitGames/Client/Photon/DebugLevel.hpp"
// Including type: ExitGames.Client.Photon.StatusCode
#include "ExitGames/Client/Photon/StatusCode.hpp"
// Including type: ExitGames.Client.Photon.DisconnectMessage
#include "ExitGames/Client/Photon/DisconnectMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<ExitGames.Client.Photon.ConnectionProtocol,System.Int32> ProtocolToNameServerPort
::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>* Photon::Realtime::LoadBalancingClient::_get_ProtocolToNameServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_get_ProtocolToNameServerPort");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>*>("Photon.Realtime", "LoadBalancingClient", "ProtocolToNameServerPort")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<ExitGames.Client.Photon.ConnectionProtocol,System.Int32> ProtocolToNameServerPort
void Photon::Realtime::LoadBalancingClient::_set_ProtocolToNameServerPort(::System::Collections::Generic::Dictionary_2<::ExitGames::Client::Photon::ConnectionProtocol, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_set_ProtocolToNameServerPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient", "ProtocolToNameServerPort", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 FriendRequestListMax
int Photon::Realtime::LoadBalancingClient::_get_FriendRequestListMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_get_FriendRequestListMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "LoadBalancingClient", "FriendRequestListMax"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 FriendRequestListMax
void Photon::Realtime::LoadBalancingClient::_set_FriendRequestListMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::_set_FriendRequestListMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient", "FriendRequestListMax", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingPeer <LoadBalancingPeer>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingPeer*& Photon::Realtime::LoadBalancingClient::dyn_$LoadBalancingPeer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$LoadBalancingPeer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoadBalancingPeer>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AppVersion>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$AppVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$AppVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AppVersion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AppId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$AppId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$AppId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AppId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.ClientAppType <ClientType>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ClientAppType& Photon::Realtime::LoadBalancingClient::dyn_$ClientType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$ClientType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClientType>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ClientAppType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.AuthenticationValues <AuthValues>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AuthenticationValues*& Photon::Realtime::LoadBalancingClient::dyn_$AuthValues$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$AuthValues$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthValues>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AuthenticationValues**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.AuthModeOption AuthMode
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AuthModeOption& Photon::Realtime::LoadBalancingClient::dyn_AuthMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_AuthMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AuthMode"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AuthModeOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.EncryptionMode EncryptionMode
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EncryptionMode& Photon::Realtime::LoadBalancingClient::dyn_EncryptionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_EncryptionMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EncryptionMode"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EncryptionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<ExitGames.Client.Photon.ConnectionProtocol> <ExpectedProtocol>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol>& Photon::Realtime::LoadBalancingClient::dyn_$ExpectedProtocol$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$ExpectedProtocol$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExpectedProtocol>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object tokenCache
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::LoadBalancingClient::dyn_tokenCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_tokenCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenCache"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsUsingNameServer>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_$IsUsingNameServer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$IsUsingNameServer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsUsingNameServer>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NameServerHost
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_NameServerHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_NameServerHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameServerHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <UseAlternativeUdpPorts>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_$UseAlternativeUdpPorts$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$UseAlternativeUdpPorts$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UseAlternativeUdpPorts>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.PhotonPortDefinition ServerPortOverrides
[[deprecated("Use field access instead!")]] ::Photon::Realtime::PhotonPortDefinition& Photon::Realtime::LoadBalancingClient::dyn_ServerPortOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ServerPortOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerPortOverrides"))->offset;
  return *reinterpret_cast<::Photon::Realtime::PhotonPortDefinition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableProtocolFallback>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_$EnableProtocolFallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$EnableProtocolFallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableProtocolFallback>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <MasterServerAddress>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$MasterServerAddress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$MasterServerAddress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MasterServerAddress>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <GameServerAddress>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$GameServerAddress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$GameServerAddress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GameServerAddress>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.ServerConnection <Server>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ServerConnection& Photon::Realtime::LoadBalancingClient::dyn_$Server$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$Server$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Server>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ServerConnection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProxyServerAddress
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_ProxyServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ProxyServerAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProxyServerAddress"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.ClientState state
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ClientState& Photon::Realtime::LoadBalancingClient::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ClientState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<Photon.Realtime.ClientState,Photon.Realtime.ClientState> StateChanged
[[deprecated("Use field access instead!")]] ::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>*& Photon::Realtime::LoadBalancingClient::dyn_StateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_StateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateChanged"))->offset;
  return *reinterpret_cast<::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ExitGames.Client.Photon.EventData> EventReceived
[[deprecated("Use field access instead!")]] ::System::Action_1<::ExitGames::Client::Photon::EventData*>*& Photon::Realtime::LoadBalancingClient::dyn_EventReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_EventReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventReceived"))->offset;
  return *reinterpret_cast<::System::Action_1<::ExitGames::Client::Photon::EventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ExitGames.Client.Photon.OperationResponse> OpResponseReceived
[[deprecated("Use field access instead!")]] ::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>*& Photon::Realtime::LoadBalancingClient::dyn_OpResponseReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_OpResponseReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OpResponseReceived"))->offset;
  return *reinterpret_cast<::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.ConnectionCallbacksContainer ConnectionCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ConnectionCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_ConnectionCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ConnectionCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ConnectionCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.MatchMakingCallbacksContainer MatchMakingCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::MatchMakingCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_MatchMakingCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_MatchMakingCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchMakingCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::MatchMakingCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.InRoomCallbacksContainer InRoomCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::InRoomCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_InRoomCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_InRoomCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InRoomCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::InRoomCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.LobbyCallbacksContainer LobbyCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LobbyCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_LobbyCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_LobbyCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbyCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LobbyCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.WebRpcCallbacksContainer WebRpcCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::WebRpcCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_WebRpcCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_WebRpcCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WebRpcCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::WebRpcCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Photon.Realtime.ErrorInfoCallbacksContainer ErrorInfoCallbackTargets
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ErrorInfoCallbacksContainer*& Photon::Realtime::LoadBalancingClient::dyn_ErrorInfoCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_ErrorInfoCallbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorInfoCallbackTargets"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ErrorInfoCallbacksContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.DisconnectCause <DisconnectedCause>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::DisconnectCause& Photon::Realtime::LoadBalancingClient::dyn_$DisconnectedCause$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$DisconnectedCause$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisconnectedCause>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::DisconnectCause*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.TypedLobby <CurrentLobby>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::TypedLobby*& Photon::Realtime::LoadBalancingClient::dyn_$CurrentLobby$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CurrentLobby$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentLobby>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::TypedLobby**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLobbyStatistics
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_EnableLobbyStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_EnableLobbyStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLobbyStatistics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Photon.Realtime.TypedLobbyInfo> lobbyStatistics
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>*& Photon::Realtime::LoadBalancingClient::dyn_lobbyStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_lobbyStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbyStatistics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player <LocalPlayer>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Realtime::LoadBalancingClient::dyn_$LocalPlayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$LocalPlayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalPlayer>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Room <CurrentRoom>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Room*& Photon::Realtime::LoadBalancingClient::dyn_$CurrentRoom$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CurrentRoom$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentRoom>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayersOnMasterCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_$PlayersOnMasterCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$PlayersOnMasterCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayersOnMasterCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayersInRoomsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_$PlayersInRoomsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$PlayersInRoomsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayersInRoomsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <RoomsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_$RoomsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$RoomsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RoomsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.JoinType lastJoinType
[[deprecated("Use field access instead!")]] ::Photon::Realtime::JoinType& Photon::Realtime::LoadBalancingClient::dyn_lastJoinType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_lastJoinType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastJoinType"))->offset;
  return *reinterpret_cast<::Photon::Realtime::JoinType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.EnterRoomParams enterRoomParamsCache
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EnterRoomParams*& Photon::Realtime::LoadBalancingClient::dyn_enterRoomParamsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_enterRoomParamsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enterRoomParamsCache"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EnterRoomParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.OperationResponse failedRoomEntryOperation
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::OperationResponse*& Photon::Realtime::LoadBalancingClient::dyn_failedRoomEntryOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_failedRoomEntryOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failedRoomEntryOperation"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::OperationResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] friendListRequested
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::LoadBalancingClient::dyn_friendListRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_friendListRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendListRequested"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <CloudRegion>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$CloudRegion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CloudRegion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CloudRegion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <CurrentCluster>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_$CurrentCluster$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_$CurrentCluster$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentCluster>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.RegionHandler RegionHandler
[[deprecated("Use field access instead!")]] ::Photon::Realtime::RegionHandler*& Photon::Realtime::LoadBalancingClient::dyn_RegionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_RegionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionHandler"))->offset;
  return *reinterpret_cast<::Photon::Realtime::RegionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String bestRegionSummaryFromStorage
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_bestRegionSummaryFromStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_bestRegionSummaryFromStorage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bestRegionSummaryFromStorage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SummaryToCache
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::LoadBalancingClient::dyn_SummaryToCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_SummaryToCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SummaryToCache"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean connectToBestRegion
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::dyn_connectToBestRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_connectToBestRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToBestRegion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<Photon.Realtime.LoadBalancingClient/CallbackTargetChange> callbackTargetChanges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Photon::Realtime::LoadBalancingClient::CallbackTargetChange*>*& Photon::Realtime::LoadBalancingClient::dyn_callbackTargetChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_callbackTargetChanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackTargetChanges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Photon::Realtime::LoadBalancingClient::CallbackTargetChange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Object> callbackTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Il2CppObject*>*& Photon::Realtime::LoadBalancingClient::dyn_callbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_callbackTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NameServerPortInAppSettings
[[deprecated("Use field access instead!")]] int& Photon::Realtime::LoadBalancingClient::dyn_NameServerPortInAppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::dyn_NameServerPortInAppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameServerPortInAppSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_LoadBalancingPeer
::Photon::Realtime::LoadBalancingPeer* Photon::Realtime::LoadBalancingClient::get_LoadBalancingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_LoadBalancingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadBalancingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::LoadBalancingPeer*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_LoadBalancingPeer
void Photon::Realtime::LoadBalancingClient::set_LoadBalancingPeer(::Photon::Realtime::LoadBalancingPeer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_LoadBalancingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoadBalancingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_SerializationProtocol
::ExitGames::Client::Photon::SerializationProtocol Photon::Realtime::LoadBalancingClient::get_SerializationProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_SerializationProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerializationProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::SerializationProtocol, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_SerializationProtocol
void Photon::Realtime::LoadBalancingClient::set_SerializationProtocol(::ExitGames::Client::Photon::SerializationProtocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_SerializationProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SerializationProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_AppVersion
::StringW Photon::Realtime::LoadBalancingClient::get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_AppVersion
void Photon::Realtime::LoadBalancingClient::set_AppVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_AppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_AppId
::StringW Photon::Realtime::LoadBalancingClient::get_AppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_AppId
void Photon::Realtime::LoadBalancingClient::set_AppId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_AppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_ClientType
::Photon::Realtime::ClientAppType Photon::Realtime::LoadBalancingClient::get_ClientType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_ClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ClientAppType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_ClientType
void Photon::Realtime::LoadBalancingClient::set_ClientType(::Photon::Realtime::ClientAppType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_ClientType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_AuthValues
::Photon::Realtime::AuthenticationValues* Photon::Realtime::LoadBalancingClient::get_AuthValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::AuthenticationValues*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_AuthValues
void Photon::Realtime::LoadBalancingClient::set_AuthValues(::Photon::Realtime::AuthenticationValues* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_AuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_ExpectedProtocol
::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol> Photon::Realtime::LoadBalancingClient::get_ExpectedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_ExpectedProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_ExpectedProtocol
void Photon::Realtime::LoadBalancingClient::set_ExpectedProtocol(::System::Nullable_1<::ExitGames::Client::Photon::ConnectionProtocol> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_ExpectedProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_TokenForInit
::Il2CppObject* Photon::Realtime::LoadBalancingClient::get_TokenForInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_TokenForInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenForInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsUsingNameServer
bool Photon::Realtime::LoadBalancingClient::get_IsUsingNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsUsingNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUsingNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_IsUsingNameServer
void Photon::Realtime::LoadBalancingClient::set_IsUsingNameServer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_IsUsingNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsUsingNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_NameServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_NameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_NameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_UseAlternativeUdpPorts
bool Photon::Realtime::LoadBalancingClient::get_UseAlternativeUdpPorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_UseAlternativeUdpPorts
void Photon::Realtime::LoadBalancingClient::set_UseAlternativeUdpPorts(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_UseAlternativeUdpPorts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseAlternativeUdpPorts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_EnableProtocolFallback
bool Photon::Realtime::LoadBalancingClient::get_EnableProtocolFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_EnableProtocolFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableProtocolFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_EnableProtocolFallback
void Photon::Realtime::LoadBalancingClient::set_EnableProtocolFallback(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_EnableProtocolFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableProtocolFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_CurrentServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_MasterServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_MasterServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_MasterServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MasterServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_MasterServerAddress
void Photon::Realtime::LoadBalancingClient::set_MasterServerAddress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_MasterServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MasterServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_GameServerAddress
::StringW Photon::Realtime::LoadBalancingClient::get_GameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_GameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_GameServerAddress
void Photon::Realtime::LoadBalancingClient::set_GameServerAddress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_GameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_Server
::Photon::Realtime::ServerConnection Photon::Realtime::LoadBalancingClient::get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_Server");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Server", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ServerConnection, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_Server
void Photon::Realtime::LoadBalancingClient::set_Server(::Photon::Realtime::ServerConnection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_Server");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Server", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_State
::Photon::Realtime::ClientState Photon::Realtime::LoadBalancingClient::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ClientState, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_State
void Photon::Realtime::LoadBalancingClient::set_State(::Photon::Realtime::ClientState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsConnected
bool Photon::Realtime::LoadBalancingClient::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsConnectedAndReady
bool Photon::Realtime::LoadBalancingClient::get_IsConnectedAndReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsConnectedAndReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsConnectedAndReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.add_StateChanged
void Photon::Realtime::LoadBalancingClient::add_StateChanged(::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::add_StateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_StateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.remove_StateChanged
void Photon::Realtime::LoadBalancingClient::remove_StateChanged(::System::Action_2<::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::remove_StateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_StateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.add_EventReceived
void Photon::Realtime::LoadBalancingClient::add_EventReceived(::System::Action_1<::ExitGames::Client::Photon::EventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::add_EventReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EventReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.remove_EventReceived
void Photon::Realtime::LoadBalancingClient::remove_EventReceived(::System::Action_1<::ExitGames::Client::Photon::EventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::remove_EventReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EventReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.add_OpResponseReceived
void Photon::Realtime::LoadBalancingClient::add_OpResponseReceived(::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::add_OpResponseReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OpResponseReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.remove_OpResponseReceived
void Photon::Realtime::LoadBalancingClient::remove_OpResponseReceived(::System::Action_1<::ExitGames::Client::Photon::OperationResponse*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::remove_OpResponseReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OpResponseReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_DisconnectedCause
::Photon::Realtime::DisconnectCause Photon::Realtime::LoadBalancingClient::get_DisconnectedCause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_DisconnectedCause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisconnectedCause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::DisconnectCause, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_DisconnectedCause
void Photon::Realtime::LoadBalancingClient::set_DisconnectedCause(::Photon::Realtime::DisconnectCause value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_DisconnectedCause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisconnectedCause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_InLobby
bool Photon::Realtime::LoadBalancingClient::get_InLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_InLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentLobby
::Photon::Realtime::TypedLobby* Photon::Realtime::LoadBalancingClient::get_CurrentLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::TypedLobby*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CurrentLobby
void Photon::Realtime::LoadBalancingClient::set_CurrentLobby(::Photon::Realtime::TypedLobby* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CurrentLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_LocalPlayer
::Photon::Realtime::Player* Photon::Realtime::LoadBalancingClient::get_LocalPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_LocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_LocalPlayer
void Photon::Realtime::LoadBalancingClient::set_LocalPlayer(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_LocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_NickName
::StringW Photon::Realtime::LoadBalancingClient::get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_NickName
void Photon::Realtime::LoadBalancingClient::set_NickName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_UserId
::StringW Photon::Realtime::LoadBalancingClient::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_UserId
void Photon::Realtime::LoadBalancingClient::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentRoom
::Photon::Realtime::Room* Photon::Realtime::LoadBalancingClient::get_CurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CurrentRoom
void Photon::Realtime::LoadBalancingClient::set_CurrentRoom(::Photon::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_InRoom
bool Photon::Realtime::LoadBalancingClient::get_InRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_InRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_PlayersOnMasterCount
int Photon::Realtime::LoadBalancingClient::get_PlayersOnMasterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_PlayersOnMasterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayersOnMasterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_PlayersOnMasterCount
void Photon::Realtime::LoadBalancingClient::set_PlayersOnMasterCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_PlayersOnMasterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayersOnMasterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_PlayersInRoomsCount
int Photon::Realtime::LoadBalancingClient::get_PlayersInRoomsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_PlayersInRoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayersInRoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_PlayersInRoomsCount
void Photon::Realtime::LoadBalancingClient::set_PlayersInRoomsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_PlayersInRoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayersInRoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_RoomsCount
int Photon::Realtime::LoadBalancingClient::get_RoomsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_RoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_RoomsCount
void Photon::Realtime::LoadBalancingClient::set_RoomsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_RoomsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RoomsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_IsFetchingFriendList
bool Photon::Realtime::LoadBalancingClient::get_IsFetchingFriendList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_IsFetchingFriendList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFetchingFriendList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CloudRegion
::StringW Photon::Realtime::LoadBalancingClient::get_CloudRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CloudRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloudRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CloudRegion
void Photon::Realtime::LoadBalancingClient::set_CloudRegion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CloudRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CloudRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.get_CurrentCluster
::StringW Photon::Realtime::LoadBalancingClient::get_CurrentCluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::get_CurrentCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.set_CurrentCluster
void Photon::Realtime::LoadBalancingClient::set_CurrentCluster(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::set_CurrentCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.GetNameServerAddress
::StringW Photon::Realtime::LoadBalancingClient::GetNameServerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::GetNameServerAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameServerAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectUsingSettings
bool Photon::Realtime::LoadBalancingClient::ConnectUsingSettings(::Photon::Realtime::AppSettings* appSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectUsingSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appSettings);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Connect
bool Photon::Realtime::LoadBalancingClient::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectToMasterServer
bool Photon::Realtime::LoadBalancingClient::ConnectToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectToMasterServer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectToNameServer
bool Photon::Realtime::LoadBalancingClient::ConnectToNameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectToNameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToNameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ConnectToRegionMaster
bool Photon::Realtime::LoadBalancingClient::ConnectToRegionMaster(::StringW region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ConnectToRegionMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToRegionMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, region);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckConnectSetupWebGl
void Photon::Realtime::LoadBalancingClient::CheckConnectSetupWebGl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckConnectSetupWebGl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckConnectSetupWebGl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Connect
bool Photon::Realtime::LoadBalancingClient::Connect(::StringW serverAddress, ::StringW proxyServerAddress, ::Photon::Realtime::ServerConnection serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverAddress), ::il2cpp_utils::ExtractType(proxyServerAddress), ::il2cpp_utils::ExtractType(serverType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, serverAddress, proxyServerAddress, serverType);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReconnectToMaster
bool Photon::Realtime::LoadBalancingClient::ReconnectToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReconnectToMaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReconnectToMaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReconnectAndRejoin
bool Photon::Realtime::LoadBalancingClient::ReconnectAndRejoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReconnectAndRejoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReconnectAndRejoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Disconnect
void Photon::Realtime::LoadBalancingClient::Disconnect(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.DisconnectToReconnect
void Photon::Realtime::LoadBalancingClient::DisconnectToReconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::DisconnectToReconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectToReconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.SimulateConnectionLoss
void Photon::Realtime::LoadBalancingClient::SimulateConnectionLoss(bool simulateTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::SimulateConnectionLoss");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateConnectionLoss", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simulateTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simulateTimeout);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CallAuthenticate
bool Photon::Realtime::LoadBalancingClient::CallAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.Service
void Photon::Realtime::LoadBalancingClient::Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpGetRegions
bool Photon::Realtime::LoadBalancingClient::OpGetRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpGetRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpGetRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpFindFriends
bool Photon::Realtime::LoadBalancingClient::OpFindFriends(::ArrayW<::StringW> friendsToFind, ::Photon::Realtime::FindFriendsOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpFindFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpFindFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(friendsToFind), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, friendsToFind, options);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinLobby
bool Photon::Realtime::LoadBalancingClient::OpJoinLobby(::Photon::Realtime::TypedLobby* lobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobby);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpLeaveLobby
bool Photon::Realtime::LoadBalancingClient::OpLeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpLeaveLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpLeaveLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinRandomRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinRandomRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinRandomRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinRandomRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opJoinRandomRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinRandomOrCreateRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinRandomOrCreateRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams, ::Photon::Realtime::EnterRoomParams* createRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinRandomOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinRandomOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opJoinRandomRoomParams), ::il2cpp_utils::ExtractType(createRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams, createRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpCreateRoom
bool Photon::Realtime::LoadBalancingClient::OpCreateRoom(::Photon::Realtime::EnterRoomParams* enterRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enterRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enterRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinOrCreateRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinOrCreateRoom(::Photon::Realtime::EnterRoomParams* enterRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinOrCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinOrCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enterRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enterRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpJoinRoom
bool Photon::Realtime::LoadBalancingClient::OpJoinRoom(::Photon::Realtime::EnterRoomParams* enterRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpJoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpJoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enterRoomParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, enterRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpRejoinRoom
bool Photon::Realtime::LoadBalancingClient::OpRejoinRoom(::StringW roomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpRejoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpRejoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, roomName);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpLeaveRoom
bool Photon::Realtime::LoadBalancingClient::OpLeaveRoom(bool becomeInactive, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpLeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpLeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(becomeInactive), ::il2cpp_utils::ExtractType(sendAuthCookie)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, becomeInactive, sendAuthCookie);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpGetGameList
bool Photon::Realtime::LoadBalancingClient::OpGetGameList(::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpGetGameList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpGetGameList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedLobby), ::il2cpp_utils::ExtractType(sqlLobbyFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, typedLobby, sqlLobbyFilter);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetCustomPropertiesOfActor
bool Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(propertiesToSet), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, propertiesToSet, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetPropertiesOfActor
bool Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* actorProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, actorProperties, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetCustomPropertiesOfRoom
bool Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetCustomPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertiesToSet), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertiesToSet, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetPropertyOfRoom
bool Photon::Realtime::LoadBalancingClient::OpSetPropertyOfRoom(uint8_t propCode, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetPropertyOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertyOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propCode), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propCode, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpSetPropertiesOfRoom
bool Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* gameProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpSetPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameProperties, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpRaiseEvent
bool Photon::Realtime::LoadBalancingClient::OpRaiseEvent(uint8_t eventCode, ::Il2CppObject* customEventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpRaiseEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventCode, customEventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpChangeGroups
bool Photon::Realtime::LoadBalancingClient::OpChangeGroups(::ArrayW<uint8_t> groupsToRemove, ::ArrayW<uint8_t> groupsToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpChangeGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupsToRemove, groupsToAdd);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReadoutProperties
void Photon::Realtime::LoadBalancingClient::ReadoutProperties(::ExitGames::Client::Photon::Hashtable* gameProperties, ::ExitGames::Client::Photon::Hashtable* actorProperties, int targetActorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReadoutProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadoutProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties), ::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(targetActorNr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameProperties, actorProperties, targetActorNr);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReadoutPropertiesForActorNr
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::LoadBalancingClient::ReadoutPropertiesForActorNr(::ExitGames::Client::Photon::Hashtable* actorProperties, int actorNr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReadoutPropertiesForActorNr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadoutPropertiesForActorNr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(actorNr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(this, ___internal__method, actorProperties, actorNr);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ChangeLocalID
void Photon::Realtime::LoadBalancingClient::ChangeLocalID(int newID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ChangeLocalID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeLocalID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newID);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.GameEnteredOnGameServer
void Photon::Realtime::LoadBalancingClient::GameEnteredOnGameServer(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::GameEnteredOnGameServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GameEnteredOnGameServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operationResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.UpdatedActorList
void Photon::Realtime::LoadBalancingClient::UpdatedActorList(::ArrayW<int> actorsInGame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::UpdatedActorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatedActorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorsInGame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, actorsInGame);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CreatePlayer
::Photon::Realtime::Player* Photon::Realtime::LoadBalancingClient::CreatePlayer(::StringW actorName, int actorNumber, bool isLocal, ::ExitGames::Client::Photon::Hashtable* actorProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CreatePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, actorName, actorNumber, isLocal, actorProperties);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CreateRoom
::Photon::Realtime::Room* Photon::Realtime::LoadBalancingClient::CreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CreateRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(this, ___internal__method, roomName, opt);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckIfOpAllowedOnServer
bool Photon::Realtime::LoadBalancingClient::CheckIfOpAllowedOnServer(uint8_t opCode, ::Photon::Realtime::ServerConnection serverConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckIfOpAllowedOnServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfOpAllowedOnServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opCode), ::il2cpp_utils::ExtractType(serverConnection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opCode, serverConnection);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckIfOpCanBeSent
bool Photon::Realtime::LoadBalancingClient::CheckIfOpCanBeSent(uint8_t opCode, ::Photon::Realtime::ServerConnection serverConnection, ::StringW opName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckIfOpCanBeSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfOpCanBeSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opCode), ::il2cpp_utils::ExtractType(serverConnection), ::il2cpp_utils::ExtractType(opName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opCode, serverConnection, opName);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CheckIfClientIsReadyToCallOperation
bool Photon::Realtime::LoadBalancingClient::CheckIfClientIsReadyToCallOperation(uint8_t opCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CheckIfClientIsReadyToCallOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfClientIsReadyToCallOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opCode);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.DebugReturn
void Photon::Realtime::LoadBalancingClient::DebugReturn(::ExitGames::Client::Photon::DebugLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::DebugReturn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.CallbackRoomEnterFailed
void Photon::Realtime::LoadBalancingClient::CallbackRoomEnterFailed(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallbackRoomEnterFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallbackRoomEnterFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operationResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnOperationResponse
void Photon::Realtime::LoadBalancingClient::OnOperationResponse(::ExitGames::Client::Photon::OperationResponse* operationResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnOperationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operationResponse);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnStatusChanged
void Photon::Realtime::LoadBalancingClient::OnStatusChanged(::ExitGames::Client::Photon::StatusCode statusCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnStatusChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCode);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnEvent
void Photon::Realtime::LoadBalancingClient::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnMessage
void Photon::Realtime::LoadBalancingClient::OnMessage(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingClient*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnDisconnectMessageReceived
void Photon::Realtime::LoadBalancingClient::OnDisconnectMessageReceived(::ExitGames::Client::Photon::DisconnectMessage* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnDisconnectMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisconnectMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OnRegionPingCompleted
void Photon::Realtime::LoadBalancingClient::OnRegionPingCompleted(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OnRegionPingCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRegionPingCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.ReplacePortWithAlternative
::StringW Photon::Realtime::LoadBalancingClient::ReplacePortWithAlternative(::StringW address, uint16_t replacementPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::ReplacePortWithAlternative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingClient", "ReplacePortWithAlternative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(replacementPort)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, replacementPort);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.SetupEncryption
void Photon::Realtime::LoadBalancingClient::SetupEncryption(::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* encryptionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::SetupEncryption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupEncryption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encryptionData);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.OpWebRpc
bool Photon::Realtime::LoadBalancingClient::OpWebRpc(::StringW uriPath, ::Il2CppObject* parameters, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::OpWebRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpWebRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriPath), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(sendAuthCookie)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uriPath, parameters, sendAuthCookie);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.AddCallbackTarget
void Photon::Realtime::LoadBalancingClient::AddCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::AddCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.RemoveCallbackTarget
void Photon::Realtime::LoadBalancingClient::RemoveCallbackTarget(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::RemoveCallbackTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCallbackTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient.UpdateCallbackTargets
void Photon::Realtime::LoadBalancingClient::UpdateCallbackTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::UpdateCallbackTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCallbackTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingClient..cctor
void Photon::Realtime::LoadBalancingClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LoadBalancingClient/EncryptionDataParameters
#include "Photon/Realtime/LoadBalancingClient_EncryptionDataParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte Mode
uint8_t Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Mode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Mode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Mode
void Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Mode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Mode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Mode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Secret1
uint8_t Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret1"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Secret1
void Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret1(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Secret2
uint8_t Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_get_Secret2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret2"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Secret2
void Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret2(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::EncryptionDataParameters::_set_Secret2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingClient/EncryptionDataParameters", "Secret2", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.LoadBalancingClient/CallbackTargetChange
#include "Photon/Realtime/LoadBalancingClient_CallbackTargetChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Object Target
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean AddTarget
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_AddTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingClient::CallbackTargetChange::dyn_AddTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AddTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.IConnectionCallbacks
#include "Photon/Realtime/IConnectionCallbacks.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnConnected
void Photon::Realtime::IConnectionCallbacks::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnConnectedToMaster
void Photon::Realtime::IConnectionCallbacks::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnDisconnected
void Photon::Realtime::IConnectionCallbacks::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnRegionListReceived
void Photon::Realtime::IConnectionCallbacks::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnCustomAuthenticationResponse
void Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Realtime.IConnectionCallbacks.OnCustomAuthenticationFailed
void Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IConnectionCallbacks::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IConnectionCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ILobbyCallbacks
#include "Photon/Realtime/ILobbyCallbacks.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnJoinedLobby
void Photon::Realtime::ILobbyCallbacks::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnLeftLobby
void Photon::Realtime::ILobbyCallbacks::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnRoomListUpdate
void Photon::Realtime::ILobbyCallbacks::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Realtime.ILobbyCallbacks.OnLobbyStatisticsUpdate
void Photon::Realtime::ILobbyCallbacks::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ILobbyCallbacks::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ILobbyCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IMatchmakingCallbacks
#include "Photon/Realtime/IMatchmakingCallbacks.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate
void Photon::Realtime::IMatchmakingCallbacks::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom
void Photon::Realtime::IMatchmakingCallbacks::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed
void Photon::Realtime::IMatchmakingCallbacks::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom
void Photon::Realtime::IMatchmakingCallbacks::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed
void Photon::Realtime::IMatchmakingCallbacks::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed
void Photon::Realtime::IMatchmakingCallbacks::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom
void Photon::Realtime::IMatchmakingCallbacks::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IMatchmakingCallbacks::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IMatchmakingCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IInRoomCallbacks
#include "Photon/Realtime/IInRoomCallbacks.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
void Photon::Realtime::IInRoomCallbacks::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
void Photon::Realtime::IInRoomCallbacks::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
void Photon::Realtime::IInRoomCallbacks::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
void Photon::Realtime::IInRoomCallbacks::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void Photon::Realtime::IInRoomCallbacks::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IInRoomCallbacks::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IInRoomCallbacks*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IOnEventCallback
#include "Photon/Realtime/IOnEventCallback.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IOnEventCallback.OnEvent
void Photon::Realtime::IOnEventCallback::OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IOnEventCallback::OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IOnEventCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IWebRpcCallback
#include "Photon/Realtime/IWebRpcCallback.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IWebRpcCallback.OnWebRpcResponse
void Photon::Realtime::IWebRpcCallback::OnWebRpcResponse(::ExitGames::Client::Photon::OperationResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IWebRpcCallback::OnWebRpcResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IWebRpcCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.IErrorInfoCallback
#include "Photon/Realtime/IErrorInfoCallback.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Realtime.IErrorInfoCallback.OnErrorInfo
void Photon::Realtime::IErrorInfoCallback::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::IErrorInfoCallback::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::IErrorInfoCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.ConnectionCallbacksContainer
#include "Photon/Realtime/ConnectionCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::ConnectionCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnConnected
void Photon::Realtime::ConnectionCallbacksContainer::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnConnectedToMaster
void Photon::Realtime::ConnectionCallbacksContainer::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnRegionListReceived
void Photon::Realtime::ConnectionCallbacksContainer::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnDisconnected
void Photon::Realtime::ConnectionCallbacksContainer::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnCustomAuthenticationResponse
void Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Realtime.ConnectionCallbacksContainer.OnCustomAuthenticationFailed
void Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionCallbacksContainer*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.MatchMakingCallbacksContainer
#include "Photon/Realtime/MatchMakingCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::MatchMakingCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnCreatedRoom
void Photon::Realtime::MatchMakingCallbacksContainer::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnJoinedRoom
void Photon::Realtime::MatchMakingCallbacksContainer::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnCreateRoomFailed
void Photon::Realtime::MatchMakingCallbacksContainer::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnJoinRandomFailed
void Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnJoinRoomFailed
void Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnLeftRoom
void Photon::Realtime::MatchMakingCallbacksContainer::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.MatchMakingCallbacksContainer.OnFriendListUpdate
void Photon::Realtime::MatchMakingCallbacksContainer::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchMakingCallbacksContainer::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::MatchMakingCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.InRoomCallbacksContainer
#include "Photon/Realtime/InRoomCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::InRoomCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnPlayerEnteredRoom
void Photon::Realtime::InRoomCallbacksContainer::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnPlayerLeftRoom
void Photon::Realtime::InRoomCallbacksContainer::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnRoomPropertiesUpdate
void Photon::Realtime::InRoomCallbacksContainer::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnPlayerPropertiesUpdate
void Photon::Realtime::InRoomCallbacksContainer::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProp);
}
// Autogenerated method: Photon.Realtime.InRoomCallbacksContainer.OnMasterClientSwitched
void Photon::Realtime::InRoomCallbacksContainer::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::InRoomCallbacksContainer::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::InRoomCallbacksContainer*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LobbyCallbacksContainer
#include "Photon/Realtime/LobbyCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::LobbyCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnJoinedLobby
void Photon::Realtime::LobbyCallbacksContainer::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnLeftLobby
void Photon::Realtime::LobbyCallbacksContainer::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnRoomListUpdate
void Photon::Realtime::LobbyCallbacksContainer::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Realtime.LobbyCallbacksContainer.OnLobbyStatisticsUpdate
void Photon::Realtime::LobbyCallbacksContainer::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyCallbacksContainer::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LobbyCallbacksContainer*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.WebRpcCallbacksContainer
#include "Photon/Realtime/WebRpcCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::WebRpcCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.WebRpcCallbacksContainer.OnWebRpcResponse
void Photon::Realtime::WebRpcCallbacksContainer::OnWebRpcResponse(::ExitGames::Client::Photon::OperationResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcCallbacksContainer::OnWebRpcResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::WebRpcCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ErrorInfoCallbacksContainer
#include "Photon/Realtime/ErrorInfoCallbacksContainer.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::ErrorInfoCallbacksContainer::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfoCallbacksContainer::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.ErrorInfoCallbacksContainer.OnErrorInfo
void Photon::Realtime::ErrorInfoCallbacksContainer::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfoCallbacksContainer::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ErrorInfoCallbacksContainer*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Info
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::ErrorInfo::dyn_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfo::dyn_Info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Info"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.ErrorInfo.ToString
::StringW Photon::Realtime::ErrorInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.LoadBalancingPeer
#include "Photon/Realtime/LoadBalancingPeer.hpp"
// Including type: Photon.Realtime.LoadBalancingPeer/<>c
#include "Photon/Realtime/LoadBalancingPeer_--c.hpp"
// Including type: ExitGames.Client.Photon.Pool`1
#include "ExitGames/Client/Photon/Pool_1.hpp"
// Including type: ExitGames.Client.Photon.ParameterDictionary
#include "ExitGames/Client/Photon/ParameterDictionary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: ExitGames.Client.Photon.IPhotonPeerListener
#include "ExitGames/Client/Photon/IPhotonPeerListener.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: Photon.Realtime.OpJoinRandomRoomParams
#include "Photon/Realtime/OpJoinRandomRoomParams.hpp"
// Including type: Photon.Realtime.FindFriendsOptions
#include "Photon/Realtime/FindFriendsOptions.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: Photon.Realtime.EncryptionMode
#include "Photon/Realtime/EncryptionMode.hpp"
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: ExitGames.Client.Photon.SendOptions
#include "ExitGames/Client/Photon/SendOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ExitGames.Client.Photon.Pool`1<ExitGames.Client.Photon.ParameterDictionary> paramDictionaryPool
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Pool_1<::ExitGames::Client::Photon::ParameterDictionary*>*& Photon::Realtime::LoadBalancingPeer::dyn_paramDictionaryPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::dyn_paramDictionaryPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "paramDictionaryPool"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Pool_1<::ExitGames::Client::Photon::ParameterDictionary*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.get_PingImplementation
::System::Type* Photon::Realtime::LoadBalancingPeer::get_PingImplementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::get_PingImplementation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingPeer", "get_PingImplementation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.set_PingImplementation
void Photon::Realtime::LoadBalancingPeer::set_PingImplementation(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::set_PingImplementation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingPeer", "set_PingImplementation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.ConfigUnitySockets
void Photon::Realtime::LoadBalancingPeer::ConfigUnitySockets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::ConfigUnitySockets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigUnitySockets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpGetRegions
bool Photon::Realtime::LoadBalancingPeer::OpGetRegions(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpGetRegions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinLobby
bool Photon::Realtime::LoadBalancingPeer::OpJoinLobby(::Photon::Realtime::TypedLobby* lobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobby);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpLeaveLobby
bool Photon::Realtime::LoadBalancingPeer::OpLeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpLeaveLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.RoomOptionsToOpParameters
void Photon::Realtime::LoadBalancingPeer::RoomOptionsToOpParameters(::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* op, ::Photon::Realtime::RoomOptions* roomOptions, bool usePropertiesKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::RoomOptionsToOpParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomOptionsToOpParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(roomOptions), ::il2cpp_utils::ExtractType(usePropertiesKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, roomOptions, usePropertiesKey);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpCreateRoom
bool Photon::Realtime::LoadBalancingPeer::OpCreateRoom(::Photon::Realtime::EnterRoomParams* opParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpCreateRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinRoom
bool Photon::Realtime::LoadBalancingPeer::OpJoinRoom(::Photon::Realtime::EnterRoomParams* opParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinRandomRoom
bool Photon::Realtime::LoadBalancingPeer::OpJoinRandomRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinRandomRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpJoinRandomOrCreateRoom
bool Photon::Realtime::LoadBalancingPeer::OpJoinRandomOrCreateRoom(::Photon::Realtime::OpJoinRandomRoomParams* opJoinRandomRoomParams, ::Photon::Realtime::EnterRoomParams* createRoomParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpJoinRandomOrCreateRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opJoinRandomRoomParams, createRoomParams);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpLeaveRoom
bool Photon::Realtime::LoadBalancingPeer::OpLeaveRoom(bool becomeInactive, bool sendAuthCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpLeaveRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, becomeInactive, sendAuthCookie);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpGetGameList
bool Photon::Realtime::LoadBalancingPeer::OpGetGameList(::Photon::Realtime::TypedLobby* lobby, ::StringW queryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpGetGameList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobby, queryData);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpFindFriends
bool Photon::Realtime::LoadBalancingPeer::OpFindFriends(::ArrayW<::StringW> friendsToFind, ::Photon::Realtime::FindFriendsOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpFindFriends");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, friendsToFind, options);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfActor
bool Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* actorProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(actorProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, actorProperties);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetPropertiesOfActor
bool Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfActor(int actorNr, ::ExitGames::Client::Photon::Hashtable* actorProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webflags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfActor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfActor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNr), ::il2cpp_utils::ExtractType(actorProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webflags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, actorNr, actorProperties, expectedProperties, webflags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetPropertyOfRoom
bool Photon::Realtime::LoadBalancingPeer::OpSetPropertyOfRoom(uint8_t propCode, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetPropertyOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertyOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propCode), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propCode, value);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetCustomPropertiesOfRoom
bool Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* gameProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetCustomPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetCustomPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameProperties);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSetPropertiesOfRoom
bool Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfRoom(::ExitGames::Client::Photon::Hashtable* gameProperties, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webflags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSetPropertiesOfRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpSetPropertiesOfRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameProperties), ::il2cpp_utils::ExtractType(expectedProperties), ::il2cpp_utils::ExtractType(webflags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameProperties, expectedProperties, webflags);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpAuthenticate
bool Photon::Realtime::LoadBalancingPeer::OpAuthenticate(::StringW appId, ::StringW appVersion, ::Photon::Realtime::AuthenticationValues* authValues, ::StringW regionCode, bool getLobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpAuthenticate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, appVersion, authValues, regionCode, getLobbyStatistics);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpAuthenticateOnce
bool Photon::Realtime::LoadBalancingPeer::OpAuthenticateOnce(::StringW appId, ::StringW appVersion, ::Photon::Realtime::AuthenticationValues* authValues, ::StringW regionCode, ::Photon::Realtime::EncryptionMode encryptionMode, ::ExitGames::Client::Photon::ConnectionProtocol expectedProtocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpAuthenticateOnce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId, appVersion, authValues, regionCode, encryptionMode, expectedProtocol);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpChangeGroups
bool Photon::Realtime::LoadBalancingPeer::OpChangeGroups(::ArrayW<uint8_t> groupsToRemove, ::ArrayW<uint8_t> groupsToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpChangeGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupsToRemove, groupsToAdd);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpRaiseEvent
bool Photon::Realtime::LoadBalancingPeer::OpRaiseEvent(uint8_t eventCode, ::Il2CppObject* customEventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpRaiseEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventCode, customEventContent, raiseEventOptions, sendOptions);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer.OpSettings
bool Photon::Realtime::LoadBalancingPeer::OpSettings(bool receiveLobbyStats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::OpSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::LoadBalancingPeer*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, receiveLobbyStats);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LoadBalancingPeer/<>c
#include "Photon/Realtime/LoadBalancingPeer_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: ExitGames.Client.Photon.ParameterDictionary
#include "ExitGames/Client/Photon/ParameterDictionary.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.LoadBalancingPeer/<>c <>9
::Photon::Realtime::LoadBalancingPeer::$$c* Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Realtime::LoadBalancingPeer::$$c*>("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.LoadBalancingPeer/<>c <>9
void Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9(::Photon::Realtime::LoadBalancingPeer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_0
::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>* Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>*>("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_0
void Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_0(::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_1
::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>* Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>*>("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_1
void Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_1(::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "LoadBalancingPeer/<>c", "<>9__4_1", value)));
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer/<>c..cctor
void Photon::Realtime::LoadBalancingPeer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "LoadBalancingPeer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer/<>c.<.ctor>b__4_0
::ExitGames::Client::Photon::ParameterDictionary* Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::<.ctor>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::ParameterDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.LoadBalancingPeer/<>c.<.ctor>b__4_1
void Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_1(::ExitGames::Client::Photon::ParameterDictionary* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::<.ctor>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RoomOptionBit
#include "Photon/Realtime/RoomOptionBit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit CheckUserOnJoin
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_CheckUserOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_CheckUserOnJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "CheckUserOnJoin"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit CheckUserOnJoin
void Photon::Realtime::RoomOptionBit::_set_CheckUserOnJoin(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_CheckUserOnJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "CheckUserOnJoin", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit DeleteCacheOnLeave
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_DeleteCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_DeleteCacheOnLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "DeleteCacheOnLeave"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit DeleteCacheOnLeave
void Photon::Realtime::RoomOptionBit::_set_DeleteCacheOnLeave(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_DeleteCacheOnLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "DeleteCacheOnLeave", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit SuppressRoomEvents
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_SuppressRoomEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "SuppressRoomEvents"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit SuppressRoomEvents
void Photon::Realtime::RoomOptionBit::_set_SuppressRoomEvents(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_SuppressRoomEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "SuppressRoomEvents", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit PublishUserId
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_PublishUserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "PublishUserId"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit PublishUserId
void Photon::Realtime::RoomOptionBit::_set_PublishUserId(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_PublishUserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "PublishUserId", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit DeleteNullProps
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_DeleteNullProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_DeleteNullProps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "DeleteNullProps"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit DeleteNullProps
void Photon::Realtime::RoomOptionBit::_set_DeleteNullProps(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_DeleteNullProps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "DeleteNullProps", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit BroadcastPropsChangeToAll
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_BroadcastPropsChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_BroadcastPropsChangeToAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "BroadcastPropsChangeToAll"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit BroadcastPropsChangeToAll
void Photon::Realtime::RoomOptionBit::_set_BroadcastPropsChangeToAll(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_BroadcastPropsChangeToAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "BroadcastPropsChangeToAll", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.RoomOptionBit SuppressPlayerInfo
::Photon::Realtime::RoomOptionBit Photon::Realtime::RoomOptionBit::_get_SuppressPlayerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_get_SuppressPlayerInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RoomOptionBit>("Photon.Realtime", "RoomOptionBit", "SuppressPlayerInfo"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.RoomOptionBit SuppressPlayerInfo
void Photon::Realtime::RoomOptionBit::_set_SuppressPlayerInfo(::Photon::Realtime::RoomOptionBit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::_set_SuppressPlayerInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RoomOptionBit", "SuppressPlayerInfo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomOptionBit::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptionBit::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.FindFriendsOptions
#include "Photon/Realtime/FindFriendsOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean CreatedOnGs
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::FindFriendsOptions::dyn_CreatedOnGs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::dyn_CreatedOnGs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreatedOnGs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Visible
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::FindFriendsOptions::dyn_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::dyn_Visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Open
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::FindFriendsOptions::dyn_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::dyn_Open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.FindFriendsOptions.ToIntFlags
int Photon::Realtime::FindFriendsOptions::ToIntFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::ToIntFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToIntFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.OpJoinRandomRoomParams
#include "Photon/Realtime/OpJoinRandomRoomParams.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedCustomRoomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedCustomRoomProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedCustomRoomProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte ExpectedMaxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedMaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedMaxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedMaxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.MatchmakingMode MatchingType
[[deprecated("Use field access instead!")]] ::Photon::Realtime::MatchmakingMode& Photon::Realtime::OpJoinRandomRoomParams::dyn_MatchingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_MatchingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchingType"))->offset;
  return *reinterpret_cast<::Photon::Realtime::MatchmakingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.TypedLobby TypedLobby
[[deprecated("Use field access instead!")]] ::Photon::Realtime::TypedLobby*& Photon::Realtime::OpJoinRandomRoomParams::dyn_TypedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_TypedLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypedLobby"))->offset;
  return *reinterpret_cast<::Photon::Realtime::TypedLobby**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SqlLobbyFilter
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::OpJoinRandomRoomParams::dyn_SqlLobbyFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_SqlLobbyFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SqlLobbyFilter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] ExpectedUsers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OpJoinRandomRoomParams::dyn_ExpectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedUsers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String RoomName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::EnterRoomParams::dyn_RoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_RoomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.RoomOptions RoomOptions
[[deprecated("Use field access instead!")]] ::Photon::Realtime::RoomOptions*& Photon::Realtime::EnterRoomParams::dyn_RoomOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_RoomOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptions"))->offset;
  return *reinterpret_cast<::Photon::Realtime::RoomOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.TypedLobby Lobby
[[deprecated("Use field access instead!")]] ::Photon::Realtime::TypedLobby*& Photon::Realtime::EnterRoomParams::dyn_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_Lobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Lobby"))->offset;
  return *reinterpret_cast<::Photon::Realtime::TypedLobby**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.Hashtable PlayerProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::EnterRoomParams::dyn_PlayerProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_PlayerProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean OnGameServer
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::EnterRoomParams::dyn_OnGameServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_OnGameServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnGameServer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Photon.Realtime.JoinMode JoinMode
[[deprecated("Use field access instead!")]] ::Photon::Realtime::JoinMode& Photon::Realtime::EnterRoomParams::dyn_JoinMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_JoinMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinMode"))->offset;
  return *reinterpret_cast<::Photon::Realtime::JoinMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] ExpectedUsers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::EnterRoomParams::dyn_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EnterRoomParams::dyn_ExpectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedUsers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ErrorCode
#include "Photon/Realtime/ErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Ok
int Photon::Realtime::ErrorCode::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Ok
void Photon::Realtime::ErrorCode::_set_Ok(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OperationNotAllowedInCurrentState
int Photon::Realtime::ErrorCode::_get_OperationNotAllowedInCurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_OperationNotAllowedInCurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "OperationNotAllowedInCurrentState"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OperationNotAllowedInCurrentState
void Photon::Realtime::ErrorCode::_set_OperationNotAllowedInCurrentState(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_OperationNotAllowedInCurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "OperationNotAllowedInCurrentState", value));
}
// [ObsoleteAttribute] Offset: 0xAAE340
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidOperationCode
int Photon::Realtime::ErrorCode::_get_InvalidOperationCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidOperationCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidOperationCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidOperationCode
void Photon::Realtime::ErrorCode::_set_InvalidOperationCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidOperationCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidOperationCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidOperation
int Photon::Realtime::ErrorCode::_get_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidOperation
void Photon::Realtime::ErrorCode::_set_InvalidOperation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InternalServerError
int Photon::Realtime::ErrorCode::_get_InternalServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InternalServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InternalServerError"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InternalServerError
void Photon::Realtime::ErrorCode::_set_InternalServerError(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InternalServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InternalServerError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidAuthentication
int Photon::Realtime::ErrorCode::_get_InvalidAuthentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidAuthentication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidAuthentication"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidAuthentication
void Photon::Realtime::ErrorCode::_set_InvalidAuthentication(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidAuthentication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidAuthentication", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameIdAlreadyExists
int Photon::Realtime::ErrorCode::_get_GameIdAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameIdAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameIdAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameIdAlreadyExists
void Photon::Realtime::ErrorCode::_set_GameIdAlreadyExists(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameIdAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameIdAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameFull
int Photon::Realtime::ErrorCode::_get_GameFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameFull
void Photon::Realtime::ErrorCode::_set_GameFull(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameClosed
int Photon::Realtime::ErrorCode::_get_GameClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameClosed
void Photon::Realtime::ErrorCode::_set_GameClosed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameClosed", value));
}
// [ObsoleteAttribute] Offset: 0xAAE378
// Autogenerated static field getter
// Get static field: static public System.Int32 AlreadyMatched
int Photon::Realtime::ErrorCode::_get_AlreadyMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_AlreadyMatched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "AlreadyMatched"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AlreadyMatched
void Photon::Realtime::ErrorCode::_set_AlreadyMatched(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_AlreadyMatched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "AlreadyMatched", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ServerFull
int Photon::Realtime::ErrorCode::_get_ServerFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_ServerFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "ServerFull"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ServerFull
void Photon::Realtime::ErrorCode::_set_ServerFull(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_ServerFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "ServerFull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 UserBlocked
int Photon::Realtime::ErrorCode::_get_UserBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_UserBlocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "UserBlocked"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 UserBlocked
void Photon::Realtime::ErrorCode::_set_UserBlocked(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_UserBlocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "UserBlocked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 NoRandomMatchFound
int Photon::Realtime::ErrorCode::_get_NoRandomMatchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_NoRandomMatchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "NoRandomMatchFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 NoRandomMatchFound
void Photon::Realtime::ErrorCode::_set_NoRandomMatchFound(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_NoRandomMatchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "NoRandomMatchFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 GameDoesNotExist
int Photon::Realtime::ErrorCode::_get_GameDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_GameDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "GameDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 GameDoesNotExist
void Photon::Realtime::ErrorCode::_set_GameDoesNotExist(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_GameDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "GameDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxCcuReached
int Photon::Realtime::ErrorCode::_get_MaxCcuReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_MaxCcuReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "MaxCcuReached"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxCcuReached
void Photon::Realtime::ErrorCode::_set_MaxCcuReached(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_MaxCcuReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "MaxCcuReached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidRegion
int Photon::Realtime::ErrorCode::_get_InvalidRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidRegion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidRegion
void Photon::Realtime::ErrorCode::_set_InvalidRegion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidRegion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CustomAuthenticationFailed
int Photon::Realtime::ErrorCode::_get_CustomAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_CustomAuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "CustomAuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CustomAuthenticationFailed
void Photon::Realtime::ErrorCode::_set_CustomAuthenticationFailed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_CustomAuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "CustomAuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 AuthenticationTicketExpired
int Photon::Realtime::ErrorCode::_get_AuthenticationTicketExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_AuthenticationTicketExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "AuthenticationTicketExpired"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 AuthenticationTicketExpired
void Photon::Realtime::ErrorCode::_set_AuthenticationTicketExpired(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_AuthenticationTicketExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "AuthenticationTicketExpired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 PluginReportedError
int Photon::Realtime::ErrorCode::_get_PluginReportedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_PluginReportedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "PluginReportedError"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 PluginReportedError
void Photon::Realtime::ErrorCode::_set_PluginReportedError(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_PluginReportedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "PluginReportedError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 PluginMismatch
int Photon::Realtime::ErrorCode::_get_PluginMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_PluginMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "PluginMismatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 PluginMismatch
void Photon::Realtime::ErrorCode::_set_PluginMismatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_PluginMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "PluginMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedPeerAlreadyJoined
int Photon::Realtime::ErrorCode::_get_JoinFailedPeerAlreadyJoined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedPeerAlreadyJoined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedPeerAlreadyJoined"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedPeerAlreadyJoined
void Photon::Realtime::ErrorCode::_set_JoinFailedPeerAlreadyJoined(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedPeerAlreadyJoined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedPeerAlreadyJoined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedFoundInactiveJoiner
int Photon::Realtime::ErrorCode::_get_JoinFailedFoundInactiveJoiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedFoundInactiveJoiner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedFoundInactiveJoiner"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedFoundInactiveJoiner
void Photon::Realtime::ErrorCode::_set_JoinFailedFoundInactiveJoiner(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedFoundInactiveJoiner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedFoundInactiveJoiner", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedWithRejoinerNotFound
int Photon::Realtime::ErrorCode::_get_JoinFailedWithRejoinerNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedWithRejoinerNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedWithRejoinerNotFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedWithRejoinerNotFound
void Photon::Realtime::ErrorCode::_set_JoinFailedWithRejoinerNotFound(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedWithRejoinerNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedWithRejoinerNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedFoundExcludedUserId
int Photon::Realtime::ErrorCode::_get_JoinFailedFoundExcludedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedFoundExcludedUserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedFoundExcludedUserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedFoundExcludedUserId
void Photon::Realtime::ErrorCode::_set_JoinFailedFoundExcludedUserId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedFoundExcludedUserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedFoundExcludedUserId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 JoinFailedFoundActiveJoiner
int Photon::Realtime::ErrorCode::_get_JoinFailedFoundActiveJoiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_JoinFailedFoundActiveJoiner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "JoinFailedFoundActiveJoiner"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 JoinFailedFoundActiveJoiner
void Photon::Realtime::ErrorCode::_set_JoinFailedFoundActiveJoiner(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_JoinFailedFoundActiveJoiner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "JoinFailedFoundActiveJoiner", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 HttpLimitReached
int Photon::Realtime::ErrorCode::_get_HttpLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_HttpLimitReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "HttpLimitReached"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 HttpLimitReached
void Photon::Realtime::ErrorCode::_set_HttpLimitReached(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_HttpLimitReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "HttpLimitReached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ExternalHttpCallFailed
int Photon::Realtime::ErrorCode::_get_ExternalHttpCallFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_ExternalHttpCallFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "ExternalHttpCallFailed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ExternalHttpCallFailed
void Photon::Realtime::ErrorCode::_set_ExternalHttpCallFailed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_ExternalHttpCallFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "ExternalHttpCallFailed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OperationLimitReached
int Photon::Realtime::ErrorCode::_get_OperationLimitReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_OperationLimitReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "OperationLimitReached"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OperationLimitReached
void Photon::Realtime::ErrorCode::_set_OperationLimitReached(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_OperationLimitReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "OperationLimitReached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SlotError
int Photon::Realtime::ErrorCode::_get_SlotError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_SlotError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "SlotError"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SlotError
void Photon::Realtime::ErrorCode::_set_SlotError(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_SlotError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "SlotError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 InvalidEncryptionParameters
int Photon::Realtime::ErrorCode::_get_InvalidEncryptionParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_get_InvalidEncryptionParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "ErrorCode", "InvalidEncryptionParameters"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 InvalidEncryptionParameters
void Photon::Realtime::ErrorCode::_set_InvalidEncryptionParameters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ErrorCode::_set_InvalidEncryptionParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ErrorCode", "InvalidEncryptionParameters", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ActorProperties
#include "Photon/Realtime/ActorProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerName
uint8_t Photon::Realtime::ActorProperties::_get_PlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_get_PlayerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ActorProperties", "PlayerName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerName
void Photon::Realtime::ActorProperties::_set_PlayerName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_set_PlayerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ActorProperties", "PlayerName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsInactive
uint8_t Photon::Realtime::ActorProperties::_get_IsInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_get_IsInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ActorProperties", "IsInactive"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsInactive
void Photon::Realtime::ActorProperties::_set_IsInactive(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_set_IsInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ActorProperties", "IsInactive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserId
uint8_t Photon::Realtime::ActorProperties::_get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_get_UserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ActorProperties", "UserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserId
void Photon::Realtime::ActorProperties::_set_UserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ActorProperties::_set_UserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ActorProperties", "UserId", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.GamePropertyKey
#include "Photon/Realtime/GamePropertyKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte MaxPlayers
uint8_t Photon::Realtime::GamePropertyKey::_get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_MaxPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "MaxPlayers"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MaxPlayers
void Photon::Realtime::GamePropertyKey::_set_MaxPlayers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_MaxPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "MaxPlayers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsVisible
uint8_t Photon::Realtime::GamePropertyKey::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsVisible
void Photon::Realtime::GamePropertyKey::_set_IsVisible(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsOpen
uint8_t Photon::Realtime::GamePropertyKey::_get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_IsOpen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "IsOpen"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsOpen
void Photon::Realtime::GamePropertyKey::_set_IsOpen(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_IsOpen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "IsOpen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerCount
uint8_t Photon::Realtime::GamePropertyKey::_get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_PlayerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "PlayerCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerCount
void Photon::Realtime::GamePropertyKey::_set_PlayerCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_PlayerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "PlayerCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Removed
uint8_t Photon::Realtime::GamePropertyKey::_get_Removed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_Removed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "Removed"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Removed
void Photon::Realtime::GamePropertyKey::_set_Removed(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_Removed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "Removed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PropsListedInLobby
uint8_t Photon::Realtime::GamePropertyKey::_get_PropsListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_PropsListedInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "PropsListedInLobby"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PropsListedInLobby
void Photon::Realtime::GamePropertyKey::_set_PropsListedInLobby(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_PropsListedInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "PropsListedInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CleanupCacheOnLeave
uint8_t Photon::Realtime::GamePropertyKey::_get_CleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_CleanupCacheOnLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "CleanupCacheOnLeave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CleanupCacheOnLeave
void Photon::Realtime::GamePropertyKey::_set_CleanupCacheOnLeave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_CleanupCacheOnLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "CleanupCacheOnLeave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MasterClientId
uint8_t Photon::Realtime::GamePropertyKey::_get_MasterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_MasterClientId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "MasterClientId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MasterClientId
void Photon::Realtime::GamePropertyKey::_set_MasterClientId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_MasterClientId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "MasterClientId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExpectedUsers
uint8_t Photon::Realtime::GamePropertyKey::_get_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_ExpectedUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "ExpectedUsers"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExpectedUsers
void Photon::Realtime::GamePropertyKey::_set_ExpectedUsers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_ExpectedUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "ExpectedUsers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerTtl
uint8_t Photon::Realtime::GamePropertyKey::_get_PlayerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_PlayerTtl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "PlayerTtl"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerTtl
void Photon::Realtime::GamePropertyKey::_set_PlayerTtl(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_PlayerTtl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "PlayerTtl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EmptyRoomTtl
uint8_t Photon::Realtime::GamePropertyKey::_get_EmptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_get_EmptyRoomTtl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "GamePropertyKey", "EmptyRoomTtl"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EmptyRoomTtl
void Photon::Realtime::GamePropertyKey::_set_EmptyRoomTtl(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::GamePropertyKey::_set_EmptyRoomTtl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "GamePropertyKey", "EmptyRoomTtl", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.EventCode
#include "Photon/Realtime/EventCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte GameList
uint8_t Photon::Realtime::EventCode::_get_GameList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_GameList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "GameList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameList
void Photon::Realtime::EventCode::_set_GameList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_GameList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "GameList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameListUpdate
uint8_t Photon::Realtime::EventCode::_get_GameListUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_GameListUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "GameListUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameListUpdate
void Photon::Realtime::EventCode::_set_GameListUpdate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_GameListUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "GameListUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte QueueState
uint8_t Photon::Realtime::EventCode::_get_QueueState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_QueueState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "QueueState"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte QueueState
void Photon::Realtime::EventCode::_set_QueueState(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_QueueState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "QueueState", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Match
uint8_t Photon::Realtime::EventCode::_get_Match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_Match");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "Match"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Match
void Photon::Realtime::EventCode::_set_Match(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_Match");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "Match", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AppStats
uint8_t Photon::Realtime::EventCode::_get_AppStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_AppStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "AppStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AppStats
void Photon::Realtime::EventCode::_set_AppStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_AppStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "AppStats", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyStats
uint8_t Photon::Realtime::EventCode::_get_LobbyStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_LobbyStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "LobbyStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyStats
void Photon::Realtime::EventCode::_set_LobbyStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_LobbyStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "LobbyStats", value));
}
// [ObsoleteAttribute] Offset: 0xAAE3B0
// Autogenerated static field getter
// Get static field: static public System.Byte AzureNodeInfo
uint8_t Photon::Realtime::EventCode::_get_AzureNodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_AzureNodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "AzureNodeInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureNodeInfo
void Photon::Realtime::EventCode::_set_AzureNodeInfo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_AzureNodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "AzureNodeInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Join
uint8_t Photon::Realtime::EventCode::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "Join"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Join
void Photon::Realtime::EventCode::_set_Join(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "Join", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Leave
uint8_t Photon::Realtime::EventCode::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Leave
void Photon::Realtime::EventCode::_set_Leave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "Leave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PropertiesChanged
uint8_t Photon::Realtime::EventCode::_get_PropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_PropertiesChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "PropertiesChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PropertiesChanged
void Photon::Realtime::EventCode::_set_PropertiesChanged(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_PropertiesChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "PropertiesChanged", value));
}
// [ObsoleteAttribute] Offset: 0xAAE3E8
// Autogenerated static field getter
// Get static field: static public System.Byte SetProperties
uint8_t Photon::Realtime::EventCode::_get_SetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_SetProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "SetProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SetProperties
void Photon::Realtime::EventCode::_set_SetProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_SetProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "SetProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ErrorInfo
uint8_t Photon::Realtime::EventCode::_get_ErrorInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_ErrorInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "ErrorInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ErrorInfo
void Photon::Realtime::EventCode::_set_ErrorInfo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_ErrorInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "ErrorInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CacheSliceChanged
uint8_t Photon::Realtime::EventCode::_get_CacheSliceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_CacheSliceChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "CacheSliceChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CacheSliceChanged
void Photon::Realtime::EventCode::_set_CacheSliceChanged(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_CacheSliceChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "CacheSliceChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AuthEvent
uint8_t Photon::Realtime::EventCode::_get_AuthEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_get_AuthEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "EventCode", "AuthEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AuthEvent
void Photon::Realtime::EventCode::_set_AuthEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCode::_set_AuthEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCode", "AuthEvent", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ParameterCode
#include "Photon/Realtime/ParameterCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte SuppressRoomEvents
uint8_t Photon::Realtime::ParameterCode::_get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_SuppressRoomEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "SuppressRoomEvents"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SuppressRoomEvents
void Photon::Realtime::ParameterCode::_set_SuppressRoomEvents(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_SuppressRoomEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "SuppressRoomEvents", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EmptyRoomTTL
uint8_t Photon::Realtime::ParameterCode::_get_EmptyRoomTTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EmptyRoomTTL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EmptyRoomTTL"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EmptyRoomTTL
void Photon::Realtime::ParameterCode::_set_EmptyRoomTTL(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EmptyRoomTTL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EmptyRoomTTL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerTTL
uint8_t Photon::Realtime::ParameterCode::_get_PlayerTTL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PlayerTTL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PlayerTTL"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerTTL
void Photon::Realtime::ParameterCode::_set_PlayerTTL(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PlayerTTL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PlayerTTL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EventForward
uint8_t Photon::Realtime::ParameterCode::_get_EventForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EventForward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EventForward"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EventForward
void Photon::Realtime::ParameterCode::_set_EventForward(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EventForward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EventForward", value));
}
// [ObsoleteAttribute] Offset: 0xAAE420
// Autogenerated static field getter
// Get static field: static public System.Byte IsComingBack
uint8_t Photon::Realtime::ParameterCode::_get_IsComingBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_IsComingBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "IsComingBack"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsComingBack
void Photon::Realtime::ParameterCode::_set_IsComingBack(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_IsComingBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "IsComingBack", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte IsInactive
uint8_t Photon::Realtime::ParameterCode::_get_IsInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_IsInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "IsInactive"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte IsInactive
void Photon::Realtime::ParameterCode::_set_IsInactive(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_IsInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "IsInactive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CheckUserOnJoin
uint8_t Photon::Realtime::ParameterCode::_get_CheckUserOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CheckUserOnJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CheckUserOnJoin"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CheckUserOnJoin
void Photon::Realtime::ParameterCode::_set_CheckUserOnJoin(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CheckUserOnJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CheckUserOnJoin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExpectedValues
uint8_t Photon::Realtime::ParameterCode::_get_ExpectedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ExpectedValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ExpectedValues"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExpectedValues
void Photon::Realtime::ParameterCode::_set_ExpectedValues(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ExpectedValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ExpectedValues", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Address
uint8_t Photon::Realtime::ParameterCode::_get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Address");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Address"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Address
void Photon::Realtime::ParameterCode::_set_Address(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Address");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Address", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PeerCount
uint8_t Photon::Realtime::ParameterCode::_get_PeerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PeerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PeerCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PeerCount
void Photon::Realtime::ParameterCode::_set_PeerCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PeerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PeerCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameCount
uint8_t Photon::Realtime::ParameterCode::_get_GameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_GameCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "GameCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameCount
void Photon::Realtime::ParameterCode::_set_GameCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_GameCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "GameCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MasterPeerCount
uint8_t Photon::Realtime::ParameterCode::_get_MasterPeerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_MasterPeerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "MasterPeerCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MasterPeerCount
void Photon::Realtime::ParameterCode::_set_MasterPeerCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_MasterPeerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "MasterPeerCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UserId
uint8_t Photon::Realtime::ParameterCode::_get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_UserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "UserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UserId
void Photon::Realtime::ParameterCode::_set_UserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_UserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "UserId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ApplicationId
uint8_t Photon::Realtime::ParameterCode::_get_ApplicationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ApplicationId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ApplicationId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ApplicationId
void Photon::Realtime::ParameterCode::_set_ApplicationId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ApplicationId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ApplicationId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Position
uint8_t Photon::Realtime::ParameterCode::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Position"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Position
void Photon::Realtime::ParameterCode::_set_Position(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MatchMakingType
uint8_t Photon::Realtime::ParameterCode::_get_MatchMakingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_MatchMakingType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "MatchMakingType"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MatchMakingType
void Photon::Realtime::ParameterCode::_set_MatchMakingType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_MatchMakingType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "MatchMakingType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameList
uint8_t Photon::Realtime::ParameterCode::_get_GameList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_GameList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "GameList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameList
void Photon::Realtime::ParameterCode::_set_GameList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_GameList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "GameList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Token
uint8_t Photon::Realtime::ParameterCode::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Token
void Photon::Realtime::ParameterCode::_set_Token(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AppVersion
uint8_t Photon::Realtime::ParameterCode::_get_AppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AppVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AppVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AppVersion
void Photon::Realtime::ParameterCode::_set_AppVersion(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AppVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AppVersion", value));
}
// [ObsoleteAttribute] Offset: 0xAAE458
// Autogenerated static field getter
// Get static field: static public System.Byte AzureNodeInfo
uint8_t Photon::Realtime::ParameterCode::_get_AzureNodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AzureNodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AzureNodeInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureNodeInfo
void Photon::Realtime::ParameterCode::_set_AzureNodeInfo(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AzureNodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AzureNodeInfo", value));
}
// [ObsoleteAttribute] Offset: 0xAAE490
// Autogenerated static field getter
// Get static field: static public System.Byte AzureLocalNodeId
uint8_t Photon::Realtime::ParameterCode::_get_AzureLocalNodeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AzureLocalNodeId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AzureLocalNodeId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureLocalNodeId
void Photon::Realtime::ParameterCode::_set_AzureLocalNodeId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AzureLocalNodeId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AzureLocalNodeId", value));
}
// [ObsoleteAttribute] Offset: 0xAAE4C8
// Autogenerated static field getter
// Get static field: static public System.Byte AzureMasterNodeId
uint8_t Photon::Realtime::ParameterCode::_get_AzureMasterNodeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_AzureMasterNodeId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "AzureMasterNodeId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AzureMasterNodeId
void Photon::Realtime::ParameterCode::_set_AzureMasterNodeId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_AzureMasterNodeId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "AzureMasterNodeId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RoomName
uint8_t Photon::Realtime::ParameterCode::_get_RoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_RoomName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "RoomName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RoomName
void Photon::Realtime::ParameterCode::_set_RoomName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_RoomName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "RoomName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Broadcast
uint8_t Photon::Realtime::ParameterCode::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Broadcast
void Photon::Realtime::ParameterCode::_set_Broadcast(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ActorList
uint8_t Photon::Realtime::ParameterCode::_get_ActorList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ActorList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ActorList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ActorList
void Photon::Realtime::ParameterCode::_set_ActorList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ActorList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ActorList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ActorNr
uint8_t Photon::Realtime::ParameterCode::_get_ActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ActorNr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ActorNr"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ActorNr
void Photon::Realtime::ParameterCode::_set_ActorNr(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ActorNr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ActorNr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PlayerProperties
uint8_t Photon::Realtime::ParameterCode::_get_PlayerProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PlayerProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PlayerProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PlayerProperties
void Photon::Realtime::ParameterCode::_set_PlayerProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PlayerProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PlayerProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CustomEventContent
uint8_t Photon::Realtime::ParameterCode::_get_CustomEventContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CustomEventContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CustomEventContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CustomEventContent
void Photon::Realtime::ParameterCode::_set_CustomEventContent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CustomEventContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CustomEventContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Data
uint8_t Photon::Realtime::ParameterCode::_get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Data");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Data"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Data
void Photon::Realtime::ParameterCode::_set_Data(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Data");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Data", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Code
uint8_t Photon::Realtime::ParameterCode::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Code"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Code
void Photon::Realtime::ParameterCode::_set_Code(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GameProperties
uint8_t Photon::Realtime::ParameterCode::_get_GameProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_GameProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "GameProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GameProperties
void Photon::Realtime::ParameterCode::_set_GameProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_GameProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "GameProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Properties
uint8_t Photon::Realtime::ParameterCode::_get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Properties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Properties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Properties
void Photon::Realtime::ParameterCode::_set_Properties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Properties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Properties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte TargetActorNr
uint8_t Photon::Realtime::ParameterCode::_get_TargetActorNr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_TargetActorNr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "TargetActorNr"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte TargetActorNr
void Photon::Realtime::ParameterCode::_set_TargetActorNr(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_TargetActorNr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "TargetActorNr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ReceiverGroup
uint8_t Photon::Realtime::ParameterCode::_get_ReceiverGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ReceiverGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ReceiverGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ReceiverGroup
void Photon::Realtime::ParameterCode::_set_ReceiverGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ReceiverGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ReceiverGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Cache
uint8_t Photon::Realtime::ParameterCode::_get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Cache"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Cache
void Photon::Realtime::ParameterCode::_set_Cache(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Cache", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CleanupCacheOnLeave
uint8_t Photon::Realtime::ParameterCode::_get_CleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CleanupCacheOnLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CleanupCacheOnLeave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CleanupCacheOnLeave
void Photon::Realtime::ParameterCode::_set_CleanupCacheOnLeave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CleanupCacheOnLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CleanupCacheOnLeave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Group
uint8_t Photon::Realtime::ParameterCode::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Group"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Group
void Photon::Realtime::ParameterCode::_set_Group(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Remove
uint8_t Photon::Realtime::ParameterCode::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Remove
void Photon::Realtime::ParameterCode::_set_Remove(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PublishUserId
uint8_t Photon::Realtime::ParameterCode::_get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PublishUserId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PublishUserId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PublishUserId
void Photon::Realtime::ParameterCode::_set_PublishUserId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PublishUserId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PublishUserId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Add
uint8_t Photon::Realtime::ParameterCode::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Add
void Photon::Realtime::ParameterCode::_set_Add(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Info
uint8_t Photon::Realtime::ParameterCode::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Info"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Info
void Photon::Realtime::ParameterCode::_set_Info(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationType
uint8_t Photon::Realtime::ParameterCode::_get_ClientAuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ClientAuthenticationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ClientAuthenticationType"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationType
void Photon::Realtime::ParameterCode::_set_ClientAuthenticationType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ClientAuthenticationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ClientAuthenticationType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationParams
uint8_t Photon::Realtime::ParameterCode::_get_ClientAuthenticationParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ClientAuthenticationParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ClientAuthenticationParams"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationParams
void Photon::Realtime::ParameterCode::_set_ClientAuthenticationParams(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ClientAuthenticationParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ClientAuthenticationParams", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinMode
uint8_t Photon::Realtime::ParameterCode::_get_JoinMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_JoinMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "JoinMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinMode
void Photon::Realtime::ParameterCode::_set_JoinMode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_JoinMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "JoinMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ClientAuthenticationData
uint8_t Photon::Realtime::ParameterCode::_get_ClientAuthenticationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ClientAuthenticationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ClientAuthenticationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ClientAuthenticationData
void Photon::Realtime::ParameterCode::_set_ClientAuthenticationData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ClientAuthenticationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ClientAuthenticationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte MasterClientId
uint8_t Photon::Realtime::ParameterCode::_get_MasterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_MasterClientId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "MasterClientId"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte MasterClientId
void Photon::Realtime::ParameterCode::_set_MasterClientId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_MasterClientId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "MasterClientId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsRequestList
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsRequestList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsRequestList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsRequestList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsRequestList
void Photon::Realtime::ParameterCode::_set_FindFriendsRequestList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsRequestList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsRequestList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsOptions
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsOptions"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsOptions
void Photon::Realtime::ParameterCode::_set_FindFriendsOptions(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsOptions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsResponseOnlineList
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsResponseOnlineList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsResponseOnlineList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsResponseOnlineList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsResponseOnlineList
void Photon::Realtime::ParameterCode::_set_FindFriendsResponseOnlineList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsResponseOnlineList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsResponseOnlineList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriendsResponseRoomIdList
uint8_t Photon::Realtime::ParameterCode::_get_FindFriendsResponseRoomIdList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_FindFriendsResponseRoomIdList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "FindFriendsResponseRoomIdList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriendsResponseRoomIdList
void Photon::Realtime::ParameterCode::_set_FindFriendsResponseRoomIdList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_FindFriendsResponseRoomIdList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "FindFriendsResponseRoomIdList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyName
uint8_t Photon::Realtime::ParameterCode::_get_LobbyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_LobbyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "LobbyName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyName
void Photon::Realtime::ParameterCode::_set_LobbyName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_LobbyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "LobbyName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyType
uint8_t Photon::Realtime::ParameterCode::_get_LobbyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_LobbyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "LobbyType"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyType
void Photon::Realtime::ParameterCode::_set_LobbyType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_LobbyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "LobbyType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LobbyStats
uint8_t Photon::Realtime::ParameterCode::_get_LobbyStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_LobbyStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "LobbyStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LobbyStats
void Photon::Realtime::ParameterCode::_set_LobbyStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_LobbyStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "LobbyStats", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Region
uint8_t Photon::Realtime::ParameterCode::_get_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Region");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Region"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Region
void Photon::Realtime::ParameterCode::_set_Region(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Region");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Region", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte UriPath
uint8_t Photon::Realtime::ParameterCode::_get_UriPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_UriPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "UriPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte UriPath
void Photon::Realtime::ParameterCode::_set_UriPath(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_UriPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "UriPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpcParameters
uint8_t Photon::Realtime::ParameterCode::_get_WebRpcParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_WebRpcParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "WebRpcParameters"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpcParameters
void Photon::Realtime::ParameterCode::_set_WebRpcParameters(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_WebRpcParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "WebRpcParameters", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpcReturnCode
uint8_t Photon::Realtime::ParameterCode::_get_WebRpcReturnCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_WebRpcReturnCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "WebRpcReturnCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpcReturnCode
void Photon::Realtime::ParameterCode::_set_WebRpcReturnCode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_WebRpcReturnCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "WebRpcReturnCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpcReturnMessage
uint8_t Photon::Realtime::ParameterCode::_get_WebRpcReturnMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_WebRpcReturnMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "WebRpcReturnMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpcReturnMessage
void Photon::Realtime::ParameterCode::_set_WebRpcReturnMessage(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_WebRpcReturnMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "WebRpcReturnMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CacheSliceIndex
uint8_t Photon::Realtime::ParameterCode::_get_CacheSliceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CacheSliceIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CacheSliceIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CacheSliceIndex
void Photon::Realtime::ParameterCode::_set_CacheSliceIndex(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CacheSliceIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CacheSliceIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Plugins
uint8_t Photon::Realtime::ParameterCode::_get_Plugins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Plugins");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Plugins"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Plugins
void Photon::Realtime::ParameterCode::_set_Plugins(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Plugins");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Plugins", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte NickName
uint8_t Photon::Realtime::ParameterCode::_get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_NickName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "NickName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte NickName
void Photon::Realtime::ParameterCode::_set_NickName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_NickName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "NickName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PluginName
uint8_t Photon::Realtime::ParameterCode::_get_PluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PluginName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PluginName"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PluginName
void Photon::Realtime::ParameterCode::_set_PluginName(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PluginName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PluginName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte PluginVersion
uint8_t Photon::Realtime::ParameterCode::_get_PluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_PluginVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "PluginVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte PluginVersion
void Photon::Realtime::ParameterCode::_set_PluginVersion(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_PluginVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "PluginVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Cluster
uint8_t Photon::Realtime::ParameterCode::_get_Cluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_Cluster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "Cluster"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Cluster
void Photon::Realtime::ParameterCode::_set_Cluster(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_Cluster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "Cluster", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ExpectedProtocol
uint8_t Photon::Realtime::ParameterCode::_get_ExpectedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_ExpectedProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "ExpectedProtocol"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExpectedProtocol
void Photon::Realtime::ParameterCode::_set_ExpectedProtocol(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_ExpectedProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "ExpectedProtocol", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CustomInitData
uint8_t Photon::Realtime::ParameterCode::_get_CustomInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_CustomInitData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "CustomInitData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CustomInitData
void Photon::Realtime::ParameterCode::_set_CustomInitData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_CustomInitData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "CustomInitData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EncryptionMode
uint8_t Photon::Realtime::ParameterCode::_get_EncryptionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EncryptionMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EncryptionMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EncryptionMode
void Photon::Realtime::ParameterCode::_set_EncryptionMode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EncryptionMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EncryptionMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte EncryptionData
uint8_t Photon::Realtime::ParameterCode::_get_EncryptionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_EncryptionData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "EncryptionData"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte EncryptionData
void Photon::Realtime::ParameterCode::_set_EncryptionData(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_EncryptionData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "EncryptionData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RoomOptionFlags
uint8_t Photon::Realtime::ParameterCode::_get_RoomOptionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_get_RoomOptionFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "ParameterCode", "RoomOptionFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RoomOptionFlags
void Photon::Realtime::ParameterCode::_set_RoomOptionFlags(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ParameterCode::_set_RoomOptionFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ParameterCode", "RoomOptionFlags", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.OperationCode
#include "Photon/Realtime/OperationCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0xAAE500
// Autogenerated static field getter
// Get static field: static public System.Byte ExchangeKeysForEncryption
uint8_t Photon::Realtime::OperationCode::_get_ExchangeKeysForEncryption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_ExchangeKeysForEncryption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "ExchangeKeysForEncryption"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ExchangeKeysForEncryption
void Photon::Realtime::OperationCode::_set_ExchangeKeysForEncryption(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_ExchangeKeysForEncryption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "ExchangeKeysForEncryption", value));
}
// [ObsoleteAttribute] Offset: 0xAAE538
// Autogenerated static field getter
// Get static field: static public System.Byte Join
uint8_t Photon::Realtime::OperationCode::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "Join"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Join
void Photon::Realtime::OperationCode::_set_Join(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "Join", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte AuthenticateOnce
uint8_t Photon::Realtime::OperationCode::_get_AuthenticateOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_AuthenticateOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "AuthenticateOnce"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte AuthenticateOnce
void Photon::Realtime::OperationCode::_set_AuthenticateOnce(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_AuthenticateOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "AuthenticateOnce", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Authenticate
uint8_t Photon::Realtime::OperationCode::_get_Authenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_Authenticate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "Authenticate"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Authenticate
void Photon::Realtime::OperationCode::_set_Authenticate(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_Authenticate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "Authenticate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinLobby
uint8_t Photon::Realtime::OperationCode::_get_JoinLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_JoinLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "JoinLobby"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinLobby
void Photon::Realtime::OperationCode::_set_JoinLobby(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_JoinLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "JoinLobby", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte LeaveLobby
uint8_t Photon::Realtime::OperationCode::_get_LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_LeaveLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "LeaveLobby"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte LeaveLobby
void Photon::Realtime::OperationCode::_set_LeaveLobby(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_LeaveLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "LeaveLobby", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte CreateGame
uint8_t Photon::Realtime::OperationCode::_get_CreateGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_CreateGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "CreateGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte CreateGame
void Photon::Realtime::OperationCode::_set_CreateGame(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_CreateGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "CreateGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinGame
uint8_t Photon::Realtime::OperationCode::_get_JoinGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_JoinGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "JoinGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinGame
void Photon::Realtime::OperationCode::_set_JoinGame(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_JoinGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "JoinGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte JoinRandomGame
uint8_t Photon::Realtime::OperationCode::_get_JoinRandomGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_JoinRandomGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "JoinRandomGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte JoinRandomGame
void Photon::Realtime::OperationCode::_set_JoinRandomGame(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_JoinRandomGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "JoinRandomGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Leave
uint8_t Photon::Realtime::OperationCode::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Leave
void Photon::Realtime::OperationCode::_set_Leave(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "Leave", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte RaiseEvent
uint8_t Photon::Realtime::OperationCode::_get_RaiseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_RaiseEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "RaiseEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte RaiseEvent
void Photon::Realtime::OperationCode::_set_RaiseEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_RaiseEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "RaiseEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SetProperties
uint8_t Photon::Realtime::OperationCode::_get_SetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_SetProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "SetProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SetProperties
void Photon::Realtime::OperationCode::_set_SetProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_SetProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "SetProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetProperties
uint8_t Photon::Realtime::OperationCode::_get_GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetProperties"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetProperties
void Photon::Realtime::OperationCode::_set_GetProperties(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetProperties", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ChangeGroups
uint8_t Photon::Realtime::OperationCode::_get_ChangeGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_ChangeGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "ChangeGroups"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ChangeGroups
void Photon::Realtime::OperationCode::_set_ChangeGroups(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_ChangeGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "ChangeGroups", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FindFriends
uint8_t Photon::Realtime::OperationCode::_get_FindFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_FindFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "FindFriends"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FindFriends
void Photon::Realtime::OperationCode::_set_FindFriends(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_FindFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "FindFriends", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetLobbyStats
uint8_t Photon::Realtime::OperationCode::_get_GetLobbyStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetLobbyStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetLobbyStats"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetLobbyStats
void Photon::Realtime::OperationCode::_set_GetLobbyStats(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetLobbyStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetLobbyStats", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetRegions
uint8_t Photon::Realtime::OperationCode::_get_GetRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetRegions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetRegions"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetRegions
void Photon::Realtime::OperationCode::_set_GetRegions(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetRegions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetRegions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte WebRpc
uint8_t Photon::Realtime::OperationCode::_get_WebRpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_WebRpc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "WebRpc"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte WebRpc
void Photon::Realtime::OperationCode::_set_WebRpc(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_WebRpc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "WebRpc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ServerSettings
uint8_t Photon::Realtime::OperationCode::_get_ServerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_ServerSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "ServerSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ServerSettings
void Photon::Realtime::OperationCode::_set_ServerSettings(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_ServerSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "ServerSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte GetGameList
uint8_t Photon::Realtime::OperationCode::_get_GetGameList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_get_GetGameList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "OperationCode", "GetGameList"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte GetGameList
void Photon::Realtime::OperationCode::_set_GetGameList(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::OperationCode::_set_GetGameList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "OperationCode", "GetGameList", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.JoinMode
#include "Photon/Realtime/JoinMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode Default
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode Default
void Photon::Realtime::JoinMode::_set_Default(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode CreateIfNotExists
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_CreateIfNotExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_CreateIfNotExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "CreateIfNotExists"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode CreateIfNotExists
void Photon::Realtime::JoinMode::_set_CreateIfNotExists(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_CreateIfNotExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "CreateIfNotExists", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode JoinOrRejoin
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_JoinOrRejoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_JoinOrRejoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "JoinOrRejoin"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode JoinOrRejoin
void Photon::Realtime::JoinMode::_set_JoinOrRejoin(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_JoinOrRejoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "JoinOrRejoin", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.JoinMode RejoinOnly
::Photon::Realtime::JoinMode Photon::Realtime::JoinMode::_get_RejoinOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_get_RejoinOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::JoinMode>("Photon.Realtime", "JoinMode", "RejoinOnly"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.JoinMode RejoinOnly
void Photon::Realtime::JoinMode::_set_RejoinOnly(::Photon::Realtime::JoinMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::_set_RejoinOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "JoinMode", "RejoinOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::JoinMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::JoinMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.MatchmakingMode
#include "Photon/Realtime/MatchmakingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.MatchmakingMode FillRoom
::Photon::Realtime::MatchmakingMode Photon::Realtime::MatchmakingMode::_get_FillRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_get_FillRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::MatchmakingMode>("Photon.Realtime", "MatchmakingMode", "FillRoom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.MatchmakingMode FillRoom
void Photon::Realtime::MatchmakingMode::_set_FillRoom(::Photon::Realtime::MatchmakingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_set_FillRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "MatchmakingMode", "FillRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.MatchmakingMode SerialMatching
::Photon::Realtime::MatchmakingMode Photon::Realtime::MatchmakingMode::_get_SerialMatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_get_SerialMatching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::MatchmakingMode>("Photon.Realtime", "MatchmakingMode", "SerialMatching"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.MatchmakingMode SerialMatching
void Photon::Realtime::MatchmakingMode::_set_SerialMatching(::Photon::Realtime::MatchmakingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_set_SerialMatching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "MatchmakingMode", "SerialMatching", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.MatchmakingMode RandomMatching
::Photon::Realtime::MatchmakingMode Photon::Realtime::MatchmakingMode::_get_RandomMatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_get_RandomMatching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::MatchmakingMode>("Photon.Realtime", "MatchmakingMode", "RandomMatching"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.MatchmakingMode RandomMatching
void Photon::Realtime::MatchmakingMode::_set_RandomMatching(::Photon::Realtime::MatchmakingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::_set_RandomMatching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "MatchmakingMode", "RandomMatching", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::MatchmakingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::MatchmakingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.ReceiverGroup
#include "Photon/Realtime/ReceiverGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ReceiverGroup Others
::Photon::Realtime::ReceiverGroup Photon::Realtime::ReceiverGroup::_get_Others() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_get_Others");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ReceiverGroup>("Photon.Realtime", "ReceiverGroup", "Others"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ReceiverGroup Others
void Photon::Realtime::ReceiverGroup::_set_Others(::Photon::Realtime::ReceiverGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_set_Others");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ReceiverGroup", "Others", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ReceiverGroup All
::Photon::Realtime::ReceiverGroup Photon::Realtime::ReceiverGroup::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ReceiverGroup>("Photon.Realtime", "ReceiverGroup", "All"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ReceiverGroup All
void Photon::Realtime::ReceiverGroup::_set_All(::Photon::Realtime::ReceiverGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ReceiverGroup", "All", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.ReceiverGroup MasterClient
::Photon::Realtime::ReceiverGroup Photon::Realtime::ReceiverGroup::_get_MasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_get_MasterClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::ReceiverGroup>("Photon.Realtime", "ReceiverGroup", "MasterClient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.ReceiverGroup MasterClient
void Photon::Realtime::ReceiverGroup::_set_MasterClient(::Photon::Realtime::ReceiverGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::_set_MasterClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "ReceiverGroup", "MasterClient", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::ReceiverGroup::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ReceiverGroup::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.EventCaching
#include "Photon/Realtime/EventCaching.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching DoNotCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_DoNotCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_DoNotCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "DoNotCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching DoNotCache
void Photon::Realtime::EventCaching::_set_DoNotCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_DoNotCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "DoNotCache", value));
}
// [ObsoleteAttribute] Offset: 0xAAE548
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching MergeCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_MergeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_MergeCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "MergeCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching MergeCache
void Photon::Realtime::EventCaching::_set_MergeCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_MergeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "MergeCache", value));
}
// [ObsoleteAttribute] Offset: 0xAAE558
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching ReplaceCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_ReplaceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_ReplaceCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "ReplaceCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching ReplaceCache
void Photon::Realtime::EventCaching::_set_ReplaceCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_ReplaceCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "ReplaceCache", value));
}
// [ObsoleteAttribute] Offset: 0xAAE568
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching RemoveCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_RemoveCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_RemoveCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "RemoveCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching RemoveCache
void Photon::Realtime::EventCaching::_set_RemoveCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_RemoveCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "RemoveCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching AddToRoomCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_AddToRoomCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_AddToRoomCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "AddToRoomCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching AddToRoomCache
void Photon::Realtime::EventCaching::_set_AddToRoomCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_AddToRoomCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "AddToRoomCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching AddToRoomCacheGlobal
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_AddToRoomCacheGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_AddToRoomCacheGlobal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "AddToRoomCacheGlobal"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching AddToRoomCacheGlobal
void Photon::Realtime::EventCaching::_set_AddToRoomCacheGlobal(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_AddToRoomCacheGlobal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "AddToRoomCacheGlobal", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching RemoveFromRoomCache
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_RemoveFromRoomCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_RemoveFromRoomCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "RemoveFromRoomCache"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching RemoveFromRoomCache
void Photon::Realtime::EventCaching::_set_RemoveFromRoomCache(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_RemoveFromRoomCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "RemoveFromRoomCache", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching RemoveFromRoomCacheForActorsLeft
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_RemoveFromRoomCacheForActorsLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_RemoveFromRoomCacheForActorsLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "RemoveFromRoomCacheForActorsLeft"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching RemoveFromRoomCacheForActorsLeft
void Photon::Realtime::EventCaching::_set_RemoveFromRoomCacheForActorsLeft(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_RemoveFromRoomCacheForActorsLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "RemoveFromRoomCacheForActorsLeft", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SliceIncreaseIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SliceIncreaseIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SliceIncreaseIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SliceIncreaseIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SliceIncreaseIndex
void Photon::Realtime::EventCaching::_set_SliceIncreaseIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SliceIncreaseIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SliceIncreaseIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SliceSetIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SliceSetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SliceSetIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SliceSetIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SliceSetIndex
void Photon::Realtime::EventCaching::_set_SliceSetIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SliceSetIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SliceSetIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SlicePurgeIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SlicePurgeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SlicePurgeIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SlicePurgeIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SlicePurgeIndex
void Photon::Realtime::EventCaching::_set_SlicePurgeIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SlicePurgeIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SlicePurgeIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.EventCaching SlicePurgeUpToIndex
::Photon::Realtime::EventCaching Photon::Realtime::EventCaching::_get_SlicePurgeUpToIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_get_SlicePurgeUpToIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::EventCaching>("Photon.Realtime", "EventCaching", "SlicePurgeUpToIndex"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.EventCaching SlicePurgeUpToIndex
void Photon::Realtime::EventCaching::_set_SlicePurgeUpToIndex(::Photon::Realtime::EventCaching value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::_set_SlicePurgeUpToIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "EventCaching", "SlicePurgeUpToIndex", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::EventCaching::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::EventCaching::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.PropertyTypeFlag
#include "Photon/Realtime/PropertyTypeFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag None
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag None
void Photon::Realtime::PropertyTypeFlag::_set_None(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag Game
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "Game"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag Game
void Photon::Realtime::PropertyTypeFlag::_set_Game(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "Game", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag Actor
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_Actor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_Actor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "Actor"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag Actor
void Photon::Realtime::PropertyTypeFlag::_set_Actor(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_Actor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "Actor", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.PropertyTypeFlag GameAndActor
::Photon::Realtime::PropertyTypeFlag Photon::Realtime::PropertyTypeFlag::_get_GameAndActor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_get_GameAndActor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::PropertyTypeFlag>("Photon.Realtime", "PropertyTypeFlag", "GameAndActor"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.PropertyTypeFlag GameAndActor
void Photon::Realtime::PropertyTypeFlag::_set_GameAndActor(::Photon::Realtime::PropertyTypeFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::_set_GameAndActor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PropertyTypeFlag", "GameAndActor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::PropertyTypeFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PropertyTypeFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isVisible
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte MaxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RoomOptions::dyn_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_MaxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PlayerTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomOptions::dyn_PlayerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_PlayerTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 EmptyRoomTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomOptions::dyn_EmptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_EmptyRoomTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EmptyRoomTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cleanupCacheOnLeave
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_cleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_cleanupCacheOnLeave");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cleanupCacheOnLeave"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ExitGames.Client.Photon.Hashtable CustomRoomProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::RoomOptions::dyn_CustomRoomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_CustomRoomProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomRoomProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] CustomRoomPropertiesForLobby
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomOptions::dyn_CustomRoomPropertiesForLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_CustomRoomPropertiesForLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomRoomPropertiesForLobby"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] Plugins
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomOptions::dyn_Plugins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_Plugins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Plugins"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressRoomEvents>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$SuppressRoomEvents$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$SuppressRoomEvents$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressRoomEvents>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressPlayerInfo>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$SuppressPlayerInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$SuppressPlayerInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressPlayerInfo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PublishUserId>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$PublishUserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$PublishUserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PublishUserId>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DeleteNullProperties>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_$DeleteNullProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_$DeleteNullProperties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeleteNullProperties>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean broadcastPropsChangeToAll
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomOptions::dyn_broadcastPropsChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::dyn_broadcastPropsChangeToAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "broadcastPropsChangeToAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_IsVisible
bool Photon::Realtime::RoomOptions::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_IsVisible
void Photon::Realtime::RoomOptions::set_IsVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_IsOpen
bool Photon::Realtime::RoomOptions::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_IsOpen
void Photon::Realtime::RoomOptions::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_CleanupCacheOnLeave
bool Photon::Realtime::RoomOptions::get_CleanupCacheOnLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_CleanupCacheOnLeave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CleanupCacheOnLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_CleanupCacheOnLeave
void Photon::Realtime::RoomOptions::set_CleanupCacheOnLeave(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_CleanupCacheOnLeave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CleanupCacheOnLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_SuppressRoomEvents
bool Photon::Realtime::RoomOptions::get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_SuppressRoomEvents
void Photon::Realtime::RoomOptions::set_SuppressRoomEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_SuppressPlayerInfo
bool Photon::Realtime::RoomOptions::get_SuppressPlayerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_SuppressPlayerInfo
void Photon::Realtime::RoomOptions::set_SuppressPlayerInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_PublishUserId
bool Photon::Realtime::RoomOptions::get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_PublishUserId
void Photon::Realtime::RoomOptions::set_PublishUserId(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_DeleteNullProperties
bool Photon::Realtime::RoomOptions::get_DeleteNullProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_DeleteNullProperties
void Photon::Realtime::RoomOptions::set_DeleteNullProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomOptions.get_BroadcastPropsChangeToAll
bool Photon::Realtime::RoomOptions::get_BroadcastPropsChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::get_BroadcastPropsChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BroadcastPropsChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomOptions.set_BroadcastPropsChangeToAll
void Photon::Realtime::RoomOptions::set_BroadcastPropsChangeToAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::set_BroadcastPropsChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BroadcastPropsChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RaiseEventOptions
#include "Photon/Realtime/RaiseEventOptions.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.RaiseEventOptions Default
::Photon::Realtime::RaiseEventOptions* Photon::Realtime::RaiseEventOptions::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::RaiseEventOptions*>("Photon.Realtime", "RaiseEventOptions", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.RaiseEventOptions Default
void Photon::Realtime::RaiseEventOptions::_set_Default(::Photon::Realtime::RaiseEventOptions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RaiseEventOptions", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.EventCaching CachingOption
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EventCaching& Photon::Realtime::RaiseEventOptions::dyn_CachingOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_CachingOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CachingOption"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EventCaching*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte InterestGroup
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RaiseEventOptions::dyn_InterestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_InterestGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InterestGroup"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] TargetActors
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Realtime::RaiseEventOptions::dyn_TargetActors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_TargetActors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetActors"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.ReceiverGroup Receivers
[[deprecated("Use field access instead!")]] ::Photon::Realtime::ReceiverGroup& Photon::Realtime::RaiseEventOptions::dyn_Receivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_Receivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Receivers"))->offset;
  return *reinterpret_cast<::Photon::Realtime::ReceiverGroup*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte SequenceChannel
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RaiseEventOptions::dyn_SequenceChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_SequenceChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SequenceChannel"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.WebFlags Flags
[[deprecated("Use field access instead!")]] ::Photon::Realtime::WebFlags*& Photon::Realtime::RaiseEventOptions::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::dyn_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<::Photon::Realtime::WebFlags**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RaiseEventOptions..cctor
void Photon::Realtime::RaiseEventOptions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RaiseEventOptions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RaiseEventOptions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.LobbyType
#include "Photon/Realtime/LobbyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LobbyType Default
::Photon::Realtime::LobbyType Photon::Realtime::LobbyType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LobbyType>("Photon.Realtime", "LobbyType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LobbyType Default
void Photon::Realtime::LobbyType::_set_Default(::Photon::Realtime::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LobbyType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LobbyType SqlLobby
::Photon::Realtime::LobbyType Photon::Realtime::LobbyType::_get_SqlLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_get_SqlLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LobbyType>("Photon.Realtime", "LobbyType", "SqlLobby"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LobbyType SqlLobby
void Photon::Realtime::LobbyType::_set_SqlLobby(::Photon::Realtime::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_set_SqlLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LobbyType", "SqlLobby", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.LobbyType AsyncRandomLobby
::Photon::Realtime::LobbyType Photon::Realtime::LobbyType::_get_AsyncRandomLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_get_AsyncRandomLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::LobbyType>("Photon.Realtime", "LobbyType", "AsyncRandomLobby"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.LobbyType AsyncRandomLobby
void Photon::Realtime::LobbyType::_set_AsyncRandomLobby(::Photon::Realtime::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::_set_AsyncRandomLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "LobbyType", "AsyncRandomLobby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::LobbyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LobbyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.TypedLobby
#include "Photon/Realtime/TypedLobby.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.TypedLobby Default
::Photon::Realtime::TypedLobby* Photon::Realtime::TypedLobby::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::TypedLobby*>("Photon.Realtime", "TypedLobby", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.TypedLobby Default
void Photon::Realtime::TypedLobby::_set_Default(::Photon::Realtime::TypedLobby* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "TypedLobby", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::TypedLobby::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.LobbyType Type
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LobbyType& Photon::Realtime::TypedLobby::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LobbyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.TypedLobby.get_IsDefault
bool Photon::Realtime::TypedLobby::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::get_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.TypedLobby..cctor
void Photon::Realtime::TypedLobby::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "TypedLobby", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.TypedLobby.ToString
::StringW Photon::Realtime::TypedLobby::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobby::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PlayerCount
[[deprecated("Use field access instead!")]] int& Photon::Realtime::TypedLobbyInfo::dyn_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobbyInfo::dyn_PlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RoomCount
[[deprecated("Use field access instead!")]] int& Photon::Realtime::TypedLobbyInfo::dyn_RoomCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobbyInfo::dyn_RoomCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.TypedLobbyInfo.ToString
::StringW Photon::Realtime::TypedLobbyInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::TypedLobbyInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::TypedLobby*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.AuthModeOption
#include "Photon/Realtime/AuthModeOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.AuthModeOption Auth
::Photon::Realtime::AuthModeOption Photon::Realtime::AuthModeOption::_get_Auth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_get_Auth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::AuthModeOption>("Photon.Realtime", "AuthModeOption", "Auth"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.AuthModeOption Auth
void Photon::Realtime::AuthModeOption::_set_Auth(::Photon::Realtime::AuthModeOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_set_Auth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "AuthModeOption", "Auth", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.AuthModeOption AuthOnce
::Photon::Realtime::AuthModeOption Photon::Realtime::AuthModeOption::_get_AuthOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_get_AuthOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::AuthModeOption>("Photon.Realtime", "AuthModeOption", "AuthOnce"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.AuthModeOption AuthOnce
void Photon::Realtime::AuthModeOption::_set_AuthOnce(::Photon::Realtime::AuthModeOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_set_AuthOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "AuthModeOption", "AuthOnce", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.AuthModeOption AuthOnceWss
::Photon::Realtime::AuthModeOption Photon::Realtime::AuthModeOption::_get_AuthOnceWss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_get_AuthOnceWss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::AuthModeOption>("Photon.Realtime", "AuthModeOption", "AuthOnceWss"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.AuthModeOption AuthOnceWss
void Photon::Realtime::AuthModeOption::_set_AuthOnceWss(::Photon::Realtime::AuthModeOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::_set_AuthOnceWss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "AuthModeOption", "AuthOnceWss", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Realtime::AuthModeOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthModeOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.CustomAuthenticationType
#include "Photon/Realtime/CustomAuthenticationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Custom
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Custom
void Photon::Realtime::CustomAuthenticationType::_set_Custom(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Steam
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Steam
void Photon::Realtime::CustomAuthenticationType::_set_Steam(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Steam", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Facebook
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Facebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Facebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Facebook"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Facebook
void Photon::Realtime::CustomAuthenticationType::_set_Facebook(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Facebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Facebook", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Oculus
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Oculus
void Photon::Realtime::CustomAuthenticationType::_set_Oculus(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType PlayStation4
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_PlayStation4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_PlayStation4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "PlayStation4"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType PlayStation4
void Photon::Realtime::CustomAuthenticationType::_set_PlayStation4(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_PlayStation4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "PlayStation4", value));
}
// [ObsoleteAttribute] Offset: 0xAAE5F0
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType PlayStation
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_PlayStation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_PlayStation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "PlayStation"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType PlayStation
void Photon::Realtime::CustomAuthenticationType::_set_PlayStation(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_PlayStation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "PlayStation", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Xbox
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Xbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Xbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Xbox"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Xbox
void Photon::Realtime::CustomAuthenticationType::_set_Xbox(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Xbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Xbox", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Viveport
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Viveport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Viveport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Viveport"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Viveport
void Photon::Realtime::CustomAuthenticationType::_set_Viveport(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Viveport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Viveport", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType NintendoSwitch
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_NintendoSwitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_NintendoSwitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "NintendoSwitch"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType NintendoSwitch
void Photon::Realtime::CustomAuthenticationType::_set_NintendoSwitch(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_NintendoSwitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "NintendoSwitch", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType PlayStation5
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_PlayStation5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_PlayStation5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "PlayStation5"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType PlayStation5
void Photon::Realtime::CustomAuthenticationType::_set_PlayStation5(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_PlayStation5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "PlayStation5", value));
}
// [ObsoleteAttribute] Offset: 0xAAE628
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType Playstation5
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_Playstation5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_Playstation5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "Playstation5"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType Playstation5
void Photon::Realtime::CustomAuthenticationType::_set_Playstation5(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_Playstation5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "Playstation5", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Realtime.CustomAuthenticationType None
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::CustomAuthenticationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::CustomAuthenticationType>("Photon.Realtime", "CustomAuthenticationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Realtime.CustomAuthenticationType None
void Photon::Realtime::CustomAuthenticationType::_set_None(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "CustomAuthenticationType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::CustomAuthenticationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::CustomAuthenticationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.AuthenticationValues
#include "Photon/Realtime/AuthenticationValues.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.CustomAuthenticationType authType
[[deprecated("Use field access instead!")]] ::Photon::Realtime::CustomAuthenticationType& Photon::Realtime::AuthenticationValues::dyn_authType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_authType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authType"))->offset;
  return *reinterpret_cast<::Photon::Realtime::CustomAuthenticationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AuthGetParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AuthenticationValues::dyn_$AuthGetParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$AuthGetParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthGetParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <AuthPostData>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::AuthenticationValues::dyn_$AuthPostData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$AuthPostData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AuthPostData>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <Token>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::AuthenticationValues::dyn_$Token$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$Token$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Token>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <UserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::AuthenticationValues::dyn_$UserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::dyn_$UserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_AuthType
::Photon::Realtime::CustomAuthenticationType Photon::Realtime::AuthenticationValues::get_AuthType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_AuthType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::CustomAuthenticationType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_AuthType
void Photon::Realtime::AuthenticationValues::set_AuthType(::Photon::Realtime::CustomAuthenticationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_AuthType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_AuthGetParameters
::StringW Photon::Realtime::AuthenticationValues::get_AuthGetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_AuthGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_AuthGetParameters
void Photon::Realtime::AuthenticationValues::set_AuthGetParameters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_AuthGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_AuthPostData
::Il2CppObject* Photon::Realtime::AuthenticationValues::get_AuthPostData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_AuthPostData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthPostData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_AuthPostData
void Photon::Realtime::AuthenticationValues::set_AuthPostData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_AuthPostData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AuthPostData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_Token
::Il2CppObject* Photon::Realtime::AuthenticationValues::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_Token
void Photon::Realtime::AuthenticationValues::set_Token(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.get_UserId
::StringW Photon::Realtime::AuthenticationValues::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.set_UserId
void Photon::Realtime::AuthenticationValues::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.SetAuthPostData
void Photon::Realtime::AuthenticationValues::SetAuthPostData(::StringW stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringData);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.SetAuthPostData
void Photon::Realtime::AuthenticationValues::SetAuthPostData(::ArrayW<uint8_t> byteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteData);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.SetAuthPostData
void Photon::Realtime::AuthenticationValues::SetAuthPostData(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dictData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::SetAuthPostData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dictData);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.AddAuthParameter
void Photon::Realtime::AuthenticationValues::AddAuthParameter(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::AddAuthParameter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::AuthenticationValues*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.CopyTo
::Photon::Realtime::AuthenticationValues* Photon::Realtime::AuthenticationValues::CopyTo(::Photon::Realtime::AuthenticationValues* copy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(copy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::AuthenticationValues*, false>(this, ___internal__method, copy);
}
// Autogenerated method: Photon.Realtime.AuthenticationValues.ToString
::StringW Photon::Realtime::AuthenticationValues::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::AuthenticationValues::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.PhotonPing
#include "Photon/Realtime/PhotonPing.hpp"
// Including type: System.Random
#include "System/Random.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Random RandomIdProvider
::System::Random* Photon::Realtime::PhotonPing::_get_RandomIdProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::_get_RandomIdProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("Photon.Realtime", "PhotonPing", "RandomIdProvider"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Random RandomIdProvider
void Photon::Realtime::PhotonPing::_set_RandomIdProvider(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::_set_RandomIdProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "PhotonPing", "RandomIdProvider", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String DebugString
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::PhotonPing::dyn_DebugString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_DebugString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DebugString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Successful
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::PhotonPing::dyn_Successful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_Successful");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Successful"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean GotResult
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::PhotonPing::dyn_GotResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_GotResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GotResult"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 PingLength
[[deprecated("Use field access instead!")]] int& Photon::Realtime::PhotonPing::dyn_PingLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_PingLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PingLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte[] PingBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Photon::Realtime::PhotonPing::dyn_PingBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_PingBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PingBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte PingId
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::PhotonPing::dyn_PingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::dyn_PingId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PingId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.PhotonPing.StartPing
bool Photon::Realtime::PhotonPing::StartPing(::StringW ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::StartPing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ip);
}
// Autogenerated method: Photon.Realtime.PhotonPing.Done
bool Photon::Realtime::PhotonPing::Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::Done");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PhotonPing.Dispose
void Photon::Realtime::PhotonPing::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PhotonPing.Init
void Photon::Realtime::PhotonPing::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PhotonPing..cctor
void Photon::Realtime::PhotonPing::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PhotonPing::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "PhotonPing", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.PingMono
#include "Photon/Realtime/PingMono.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket sock
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& Photon::Realtime::PingMono::dyn_sock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::dyn_sock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sock"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.PingMono.StartPing
bool Photon::Realtime::PingMono::StartPing(::StringW ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::StartPing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ip);
}
// Autogenerated method: Photon.Realtime.PingMono.Done
bool Photon::Realtime::PingMono::Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::Done");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.PingMono.Dispose
void Photon::Realtime::PingMono::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::PingMono::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::PhotonPing*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Room <RoomReference>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Room*& Photon::Realtime::Player::dyn_$RoomReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$RoomReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RoomReference>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 actorNumber
[[deprecated("Use field access instead!")]] int& Photon::Realtime::Player::dyn_actorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_actorNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actorNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsLocal
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Player::dyn_IsLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_IsLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasRejoined>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Player::dyn_$HasRejoined$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$HasRejoined$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasRejoined>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nickName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Player::dyn_nickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_nickName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nickName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <UserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Player::dyn_$UserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$UserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsInactive>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Player::dyn_$IsInactive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$IsInactive$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsInactive>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.Hashtable <CustomProperties>k__BackingField
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::Player::dyn_$CustomProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_$CustomProperties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomProperties>k__BackingField"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object TagObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::Player::dyn_TagObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::dyn_TagObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TagObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.Player.get_RoomReference
::Photon::Realtime::Room* Photon::Realtime::Player::get_RoomReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_RoomReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RoomReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_RoomReference
void Photon::Realtime::Player::set_RoomReference(::Photon::Realtime::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_RoomReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RoomReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_ActorNumber
int Photon::Realtime::Player::get_ActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_ActorNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActorNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.get_HasRejoined
bool Photon::Realtime::Player::get_HasRejoined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_HasRejoined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasRejoined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_HasRejoined
void Photon::Realtime::Player::set_HasRejoined(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_HasRejoined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasRejoined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_NickName
::StringW Photon::Realtime::Player::get_NickName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_NickName
void Photon::Realtime::Player::set_NickName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_NickName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NickName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_UserId
::StringW Photon::Realtime::Player::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_UserId
void Photon::Realtime::Player::set_UserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_UserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_IsMasterClient
bool Photon::Realtime::Player::get_IsMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_IsMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.get_IsInactive
bool Photon::Realtime::Player::get_IsInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_IsInactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_IsInactive
void Photon::Realtime::Player::set_IsInactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_IsInactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.get_CustomProperties
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::Player::get_CustomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::get_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.set_CustomProperties
void Photon::Realtime::Player::set_CustomProperties(::ExitGames::Client::Photon::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::set_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Player.Get
::Photon::Realtime::Player* Photon::Realtime::Player::Get(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Realtime.Player.GetNext
::Photon::Realtime::Player* Photon::Realtime::Player::GetNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.GetNextFor
::Photon::Realtime::Player* Photon::Realtime::Player::GetNextFor(::Photon::Realtime::Player* currentPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetNextFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, currentPlayer);
}
// Autogenerated method: Photon.Realtime.Player.GetNextFor
::Photon::Realtime::Player* Photon::Realtime::Player::GetNextFor(int currentPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetNextFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPlayerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, currentPlayerId);
}
// Autogenerated method: Photon.Realtime.Player.InternalCacheProperties
void Photon::Realtime::Player::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Player*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, properties);
}
// Autogenerated method: Photon.Realtime.Player.ToStringFull
::StringW Photon::Realtime::Player::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.ChangeLocalID
void Photon::Realtime::Player::ChangeLocalID(int newID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::ChangeLocalID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeLocalID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newID);
}
// Autogenerated method: Photon.Realtime.Player.SetCustomProperties
bool Photon::Realtime::Player::SetCustomProperties(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedValues, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::SetCustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertiesToSet), ::il2cpp_utils::ExtractType(expectedValues), ::il2cpp_utils::ExtractType(webFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertiesToSet, expectedValues, webFlags);
}
// Autogenerated method: Photon.Realtime.Player.SetPlayerNameProperty
bool Photon::Realtime::Player::SetPlayerNameProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::SetPlayerNameProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerNameProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.ToString
::StringW Photon::Realtime::Player::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Player.Equals
bool Photon::Realtime::Player::Equals(::Il2CppObject* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Photon.Realtime.Player.GetHashCode
int Photon::Realtime::Player::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Player::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Code>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Region::dyn_$Code$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$Code$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Code>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Cluster>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Region::dyn_$Cluster$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$Cluster$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Cluster>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <HostAndPort>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::Region::dyn_$HostAndPort$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$HostAndPort$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HostAndPort>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Ping>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::Region::dyn_$Ping$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::dyn_$Ping$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Ping>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.Region.get_Code
::StringW Photon::Realtime::Region::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_Code
void Photon::Realtime::Region::set_Code(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_Cluster
::StringW Photon::Realtime::Region::get_Cluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_Cluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_Cluster
void Photon::Realtime::Region::set_Cluster(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_Cluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Cluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_HostAndPort
::StringW Photon::Realtime::Region::get_HostAndPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_HostAndPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostAndPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_HostAndPort
void Photon::Realtime::Region::set_HostAndPort(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_HostAndPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HostAndPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_Ping
int Photon::Realtime::Region::get_Ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.set_Ping
void Photon::Realtime::Region::set_Ping(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::set_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Region.get_WasPinged
bool Photon::Realtime::Region::get_WasPinged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::get_WasPinged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WasPinged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Region.SetCodeAndCluster
void Photon::Realtime::Region::SetCodeAndCluster(::StringW codeAsString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::SetCodeAndCluster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCodeAndCluster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codeAsString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, codeAsString);
}
// Autogenerated method: Photon.Realtime.Region.ToString
::StringW Photon::Realtime::Region::ToString(bool compact) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compact)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, compact);
}
// Autogenerated method: Photon.Realtime.Region.ToString
::StringW Photon::Realtime::Region::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Region::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Realtime.RegionHandler/<>c
#include "Photon/Realtime/RegionHandler_--c.hpp"
// Including type: Photon.Realtime.RegionHandler/<>c__DisplayClass23_0
#include "Photon/Realtime/RegionHandler_--c__DisplayClass23_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
// Including type: Photon.Realtime.RegionPinger
#include "Photon/Realtime/RegionPinger.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Type PingImplementation
::System::Type* Photon::Realtime::RegionHandler::_get_PingImplementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_get_PingImplementation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Photon.Realtime", "RegionHandler", "PingImplementation"));
}
// Autogenerated static field setter
// Set static field: static public System.Type PingImplementation
void Photon::Realtime::RegionHandler::_set_PingImplementation(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_set_PingImplementation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler", "PingImplementation", value));
}
// Autogenerated static field getter
// Get static field: static protected internal System.UInt16 PortToPingOverride
uint16_t Photon::Realtime::RegionHandler::_get_PortToPingOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_get_PortToPingOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("Photon.Realtime", "RegionHandler", "PortToPingOverride"));
}
// Autogenerated static field setter
// Set static field: static protected internal System.UInt16 PortToPingOverride
void Photon::Realtime::RegionHandler::_set_PortToPingOverride(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::_set_PortToPingOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler", "PortToPingOverride", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Realtime.Region> <EnabledRegions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Region*>*& Photon::Realtime::RegionHandler::dyn_$EnabledRegions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_$EnabledRegions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnabledRegions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Region*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String availableRegionCodes
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionHandler::dyn_availableRegionCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_availableRegionCodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "availableRegionCodes"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Region bestRegionCache
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Region*& Photon::Realtime::RegionHandler::dyn_bestRegionCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_bestRegionCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bestRegionCache"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Region**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Realtime.RegionPinger> pingerList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::RegionPinger*>*& Photon::Realtime::RegionHandler::dyn_pingerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_pingerList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingerList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::RegionPinger*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Realtime.RegionHandler> onCompleteCall
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Realtime::RegionHandler*>*& Photon::Realtime::RegionHandler::dyn_onCompleteCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_onCompleteCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onCompleteCall"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Realtime::RegionHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 previousPing
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionHandler::dyn_previousPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_previousPing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousPing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPinging>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RegionHandler::dyn_$IsPinging$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_$IsPinging$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPinging>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String previousSummaryProvided
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionHandler::dyn_previousSummaryProvided() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::dyn_previousSummaryProvided");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousSummaryProvided"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_EnabledRegions
::System::Collections::Generic::List_1<::Photon::Realtime::Region*>* Photon::Realtime::RegionHandler::get_EnabledRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_EnabledRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Photon::Realtime::Region*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.set_EnabledRegions
void Photon::Realtime::RegionHandler::set_EnabledRegions(::System::Collections::Generic::List_1<::Photon::Realtime::Region*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::set_EnabledRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_BestRegion
::Photon::Realtime::Region* Photon::Realtime::RegionHandler::get_BestRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_BestRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BestRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Region*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_SummaryToCache
::StringW Photon::Realtime::RegionHandler::get_SummaryToCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_SummaryToCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SummaryToCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.GetResults
::StringW Photon::Realtime::RegionHandler::GetResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::GetResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.SetRegions
void Photon::Realtime::RegionHandler::SetRegions(::ExitGames::Client::Photon::OperationResponse* opGetRegions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::SetRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opGetRegions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opGetRegions);
}
// Autogenerated method: Photon.Realtime.RegionHandler.get_IsPinging
bool Photon::Realtime::RegionHandler::get_IsPinging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::get_IsPinging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPinging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.set_IsPinging
void Photon::Realtime::RegionHandler::set_IsPinging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::set_IsPinging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPinging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RegionHandler.PingMinimumOfRegions
bool Photon::Realtime::RegionHandler::PingMinimumOfRegions(::System::Action_1<::Photon::Realtime::RegionHandler*>* onCompleteCallback, ::StringW previousSummary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::PingMinimumOfRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PingMinimumOfRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onCompleteCallback), ::il2cpp_utils::ExtractType(previousSummary)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, onCompleteCallback, previousSummary);
}
// Autogenerated method: Photon.Realtime.RegionHandler.OnPreferredRegionPinged
void Photon::Realtime::RegionHandler::OnPreferredRegionPinged(::Photon::Realtime::Region* preferredRegion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::OnPreferredRegionPinged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreferredRegionPinged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preferredRegion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preferredRegion);
}
// Autogenerated method: Photon.Realtime.RegionHandler.PingEnabledRegions
bool Photon::Realtime::RegionHandler::PingEnabledRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::PingEnabledRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PingEnabledRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler.OnRegionDone
void Photon::Realtime::RegionHandler::OnRegionDone(::Photon::Realtime::Region* region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::OnRegionDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRegionDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, region);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RegionHandler/<>c
#include "Photon/Realtime/RegionHandler_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.RegionHandler/<>c <>9
::Photon::Realtime::RegionHandler::$$c* Photon::Realtime::RegionHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Realtime::RegionHandler::$$c*>("Photon.Realtime", "RegionHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.RegionHandler/<>c <>9
void Photon::Realtime::RegionHandler::$$c::_set_$$9(::Photon::Realtime::RegionHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Photon.Realtime.Region> <>9__8_0
::System::Comparison_1<::Photon::Realtime::Region*>* Photon::Realtime::RegionHandler::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Photon::Realtime::Region*>*>("Photon.Realtime", "RegionHandler/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Photon.Realtime.Region> <>9__8_0
void Photon::Realtime::RegionHandler::$$c::_set_$$9__8_0(::System::Comparison_1<::Photon::Realtime::Region*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionHandler/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Photon.Realtime.RegionHandler/<>c..cctor
void Photon::Realtime::RegionHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RegionHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionHandler/<>c.<get_BestRegion>b__8_0
int Photon::Realtime::RegionHandler::$$c::$get_BestRegion$b__8_0(::Photon::Realtime::Region* a, ::Photon::Realtime::Region* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c::<get_BestRegion>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_BestRegion>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.RegionHandler/<>c__DisplayClass23_0
#include "Photon/Realtime/RegionHandler_--c__DisplayClass23_0.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prevBestRegionCode
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::dyn_prevBestRegionCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::dyn_prevBestRegionCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevBestRegionCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionHandler/<>c__DisplayClass23_0.<PingMinimumOfRegions>b__0
bool Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::$PingMinimumOfRegions$b__0(::Photon::Realtime::Region* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionHandler::$$c__DisplayClass23_0::<PingMinimumOfRegions>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PingMinimumOfRegions>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.RegionPinger
#include "Photon/Realtime/RegionPinger.hpp"
// Including type: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19
#include "Photon/Realtime/RegionPinger_-RegionPingCoroutine-d__19.hpp"
// Including type: Photon.Realtime.Region
#include "Photon/Realtime/Region.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Realtime.PhotonPing
#include "Photon/Realtime/PhotonPing.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Attempts
int Photon::Realtime::RegionPinger::_get_Attempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_Attempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "RegionPinger", "Attempts"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Attempts
void Photon::Realtime::RegionPinger::_set_Attempts(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_Attempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "Attempts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean IgnoreInitialAttempt
bool Photon::Realtime::RegionPinger::_get_IgnoreInitialAttempt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_IgnoreInitialAttempt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Realtime", "RegionPinger", "IgnoreInitialAttempt"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean IgnoreInitialAttempt
void Photon::Realtime::RegionPinger::_set_IgnoreInitialAttempt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_IgnoreInitialAttempt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "IgnoreInitialAttempt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxMilliseconsPerPing
int Photon::Realtime::RegionPinger::_get_MaxMilliseconsPerPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_MaxMilliseconsPerPing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "RegionPinger", "MaxMilliseconsPerPing"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxMilliseconsPerPing
void Photon::Realtime::RegionPinger::_set_MaxMilliseconsPerPing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_MaxMilliseconsPerPing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "MaxMilliseconsPerPing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 PingWhenFailed
int Photon::Realtime::RegionPinger::_get_PingWhenFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_get_PingWhenFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Realtime", "RegionPinger", "PingWhenFailed"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 PingWhenFailed
void Photon::Realtime::RegionPinger::_set_PingWhenFailed(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::_set_PingWhenFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "RegionPinger", "PingWhenFailed", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Region region
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Region*& Photon::Realtime::RegionPinger::dyn_region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "region"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Region**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String regionAddress
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RegionPinger::dyn_regionAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_regionAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regionAddress"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CurrentAttempt
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionPinger::dyn_CurrentAttempt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_CurrentAttempt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentAttempt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Done>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RegionPinger::dyn_$Done$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_$Done$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Done>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Realtime.Region> onDoneCall
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Realtime::Region*>*& Photon::Realtime::RegionPinger::dyn_onDoneCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_onDoneCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDoneCall"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Realtime::Region*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.PhotonPing ping
[[deprecated("Use field access instead!")]] ::Photon::Realtime::PhotonPing*& Photon::Realtime::RegionPinger::dyn_ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_ping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ping"))->offset;
  return *reinterpret_cast<::Photon::Realtime::PhotonPing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> rttResults
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& Photon::Realtime::RegionPinger::dyn_rttResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::dyn_rttResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rttResults"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionPinger.get_Done
bool Photon::Realtime::RegionPinger::get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::get_Done");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Done", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.set_Done
void Photon::Realtime::RegionPinger::set_Done(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::set_Done");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Done", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RegionPinger.GetPingImplementation
::Photon::Realtime::PhotonPing* Photon::Realtime::RegionPinger::GetPingImplementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::GetPingImplementation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPingImplementation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::PhotonPing*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.Start
bool Photon::Realtime::RegionPinger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.RegionPingPooled
void Photon::Realtime::RegionPinger::RegionPingPooled(::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::RegionPingPooled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegionPingPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Photon.Realtime.RegionPinger.RegionPingThreaded
bool Photon::Realtime::RegionPinger::RegionPingThreaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::RegionPingThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegionPingThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.RegionPingCoroutine
::System::Collections::IEnumerator* Photon::Realtime::RegionPinger::RegionPingCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::RegionPingCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegionPingCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.GetResults
::StringW Photon::Realtime::RegionPinger::GetResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::GetResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger.ResolveHost
::StringW Photon::Realtime::RegionPinger::ResolveHost(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::ResolveHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RegionPinger", "ResolveHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: Photon.Realtime.RegionPinger..cctor
void Photon::Realtime::RegionPinger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "RegionPinger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19
#include "Photon/Realtime/RegionPinger_-RegionPingCoroutine-d__19.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.RegionPinger <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Realtime::RegionPinger*& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Realtime::RegionPinger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <rttSum>5__2
[[deprecated("Use field access instead!")]] float& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$rttSum$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$rttSum$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rttSum>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <replyCount>5__3
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$replyCount$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$replyCount$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<replyCount>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <sw>5__4
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$sw$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$sw$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sw>5__4"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overtime>5__5
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$overtime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::dyn_$overtime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overtime>5__5"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.IDisposable.Dispose
void Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.MoveNext
bool Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.Collections.IEnumerator.Reset
void Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RegionPinger::$RegionPingCoroutine$d__19*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Realtime.RoomOptions
#include "Photon/Realtime/RoomOptions.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient <LoadBalancingClient>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::Room::dyn_$LoadBalancingClient$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$LoadBalancingClient$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LoadBalancingClient>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOffline
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_isOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_isOffline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOffline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,Photon.Realtime.Player> players
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>*& Photon::Realtime::Room::dyn_players() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_players");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "players"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <BroadcastPropertiesChangeToAll>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$BroadcastPropertiesChangeToAll$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$BroadcastPropertiesChangeToAll$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BroadcastPropertiesChangeToAll>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressRoomEvents>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$SuppressRoomEvents$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$SuppressRoomEvents$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressRoomEvents>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SuppressPlayerInfo>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$SuppressPlayerInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$SuppressPlayerInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SuppressPlayerInfo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PublishUserId>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$PublishUserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$PublishUserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PublishUserId>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DeleteNullProperties>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::Room::dyn_$DeleteNullProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::dyn_$DeleteNullProperties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeleteNullProperties>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.Room.get_LoadBalancingClient
::Photon::Realtime::LoadBalancingClient* Photon::Realtime::Room::get_LoadBalancingClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_LoadBalancingClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadBalancingClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::LoadBalancingClient*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_LoadBalancingClient
void Photon::Realtime::Room::set_LoadBalancingClient(::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_LoadBalancingClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoadBalancingClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_Name
void Photon::Realtime::Room::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_IsOffline
bool Photon::Realtime::Room::get_IsOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_IsOffline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOffline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_IsOffline
void Photon::Realtime::Room::set_IsOffline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_IsOffline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOffline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_IsOpen
void Photon::Realtime::Room::set_IsOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_IsVisible
void Photon::Realtime::Room::set_IsVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.set_MaxPlayers
void Photon::Realtime::Room::set_MaxPlayers(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_PlayerCount
uint8_t Photon::Realtime::Room::get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_Players
::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>* Photon::Realtime::Room::get_Players() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_Players");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Players", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_Players
void Photon::Realtime::Room::set_Players(::System::Collections::Generic::Dictionary_2<int, ::Photon::Realtime::Player*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_Players");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Players", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_ExpectedUsers
::ArrayW<::StringW> Photon::Realtime::Room::get_ExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_ExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_PlayerTtl
int Photon::Realtime::Room::get_PlayerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PlayerTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_PlayerTtl
void Photon::Realtime::Room::set_PlayerTtl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_PlayerTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_EmptyRoomTtl
int Photon::Realtime::Room::get_EmptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_EmptyRoomTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmptyRoomTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_EmptyRoomTtl
void Photon::Realtime::Room::set_EmptyRoomTtl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_EmptyRoomTtl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EmptyRoomTtl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_MasterClientId
int Photon::Realtime::Room::get_MasterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_MasterClientId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MasterClientId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_PropertiesListedInLobby
::ArrayW<::StringW> Photon::Realtime::Room::get_PropertiesListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_PropertiesListedInLobby
void Photon::Realtime::Room::set_PropertiesListedInLobby(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_PropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_AutoCleanUp
bool Photon::Realtime::Room::get_AutoCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_AutoCleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoCleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_BroadcastPropertiesChangeToAll
bool Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_BroadcastPropertiesChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_BroadcastPropertiesChangeToAll
void Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_BroadcastPropertiesChangeToAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BroadcastPropertiesChangeToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_SuppressRoomEvents
bool Photon::Realtime::Room::get_SuppressRoomEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_SuppressRoomEvents
void Photon::Realtime::Room::set_SuppressRoomEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_SuppressRoomEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressRoomEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_SuppressPlayerInfo
bool Photon::Realtime::Room::get_SuppressPlayerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_SuppressPlayerInfo
void Photon::Realtime::Room::set_SuppressPlayerInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_SuppressPlayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuppressPlayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_PublishUserId
bool Photon::Realtime::Room::get_PublishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_PublishUserId
void Photon::Realtime::Room::set_PublishUserId(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_PublishUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PublishUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.get_DeleteNullProperties
bool Photon::Realtime::Room::get_DeleteNullProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.set_DeleteNullProperties
void Photon::Realtime::Room::set_DeleteNullProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::set_DeleteNullProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeleteNullProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.Room.InternalCacheRoomFlags
void Photon::Realtime::Room::InternalCacheRoomFlags(int roomFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::InternalCacheRoomFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCacheRoomFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomFlags);
}
// Autogenerated method: Photon.Realtime.Room.SetCustomProperties
bool Photon::Realtime::Room::SetCustomProperties(::ExitGames::Client::Photon::Hashtable* propertiesToSet, ::ExitGames::Client::Photon::Hashtable* expectedProperties, ::Photon::Realtime::WebFlags* webFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetCustomProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, propertiesToSet, expectedProperties, webFlags);
}
// Autogenerated method: Photon.Realtime.Room.SetPropertiesListedInLobby
bool Photon::Realtime::Room::SetPropertiesListedInLobby(::ArrayW<::StringW> lobbyProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetPropertiesListedInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertiesListedInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyProps)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lobbyProps);
}
// Autogenerated method: Photon.Realtime.Room.RemovePlayer
void Photon::Realtime::Room::RemovePlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::RemovePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Realtime.Room.RemovePlayer
void Photon::Realtime::Room::RemovePlayer(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::RemovePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Realtime.Room.SetMasterClient
bool Photon::Realtime::Room::SetMasterClient(::Photon::Realtime::Player* masterClientPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetMasterClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMasterClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterClientPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, masterClientPlayer);
}
// Autogenerated method: Photon.Realtime.Room.AddPlayer
bool Photon::Realtime::Room::AddPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::AddPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Realtime.Room.StorePlayer
::Photon::Realtime::Player* Photon::Realtime::Room::StorePlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::StorePlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, player);
}
// Autogenerated method: Photon.Realtime.Room.GetPlayer
::Photon::Realtime::Player* Photon::Realtime::Room::GetPlayer(int id, bool findMaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::GetPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::Room*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, id, findMaster);
}
// Autogenerated method: Photon.Realtime.Room.ClearExpectedUsers
bool Photon::Realtime::Room::ClearExpectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::ClearExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.SetExpectedUsers
bool Photon::Realtime::Room::SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newExpectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newExpectedUsers);
}
// Autogenerated method: Photon.Realtime.Room.SetExpectedUsers
bool Photon::Realtime::Room::SetExpectedUsers(::ArrayW<::StringW> newExpectedUsers, ::ArrayW<::StringW> oldExpectedUsers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::SetExpectedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExpectedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newExpectedUsers), ::il2cpp_utils::ExtractType(oldExpectedUsers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newExpectedUsers, oldExpectedUsers);
}
// Autogenerated method: Photon.Realtime.Room.get_Name
::StringW Photon::Realtime::Room::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_IsOpen
bool Photon::Realtime::Room::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_IsVisible
bool Photon::Realtime::Room::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.get_MaxPlayers
uint8_t Photon::Realtime::Room::get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::get_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.InternalCacheProperties
void Photon::Realtime::Room::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* propertiesToCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RoomInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesToCache);
}
// Autogenerated method: Photon.Realtime.Room.ToString
::StringW Photon::Realtime::Room::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RoomInfo*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.Room.ToStringFull
::StringW Photon::Realtime::Room::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Room::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean RemovedFromList
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_RemovedFromList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_RemovedFromList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemovedFromList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.Hashtable customProperties
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& Photon::Realtime::RoomInfo::dyn_customProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_customProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customProperties"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte maxPlayers
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::RoomInfo::dyn_maxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_maxPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayers"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 emptyRoomTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_emptyRoomTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_emptyRoomTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyRoomTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 playerTtl
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_playerTtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_playerTtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTtl"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] expectedUsers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomInfo::dyn_expectedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_expectedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedUsers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isVisible
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean autoCleanUp
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::RoomInfo::dyn_autoCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_autoCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoCleanUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String name
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::RoomInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 masterClientId
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_masterClientId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_masterClientId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "masterClientId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String[] propertiesListedInLobby
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Photon::Realtime::RoomInfo::dyn_propertiesListedInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_propertiesListedInLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertiesListedInLobby"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayerCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::RoomInfo::dyn_$PlayerCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::dyn_$PlayerCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayerCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_CustomProperties
::ExitGames::Client::Photon::Hashtable* Photon::Realtime::RoomInfo::get_CustomProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_CustomProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_Name
::StringW Photon::Realtime::RoomInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_PlayerCount
int Photon::Realtime::RoomInfo::get_PlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.set_PlayerCount
void Photon::Realtime::RoomInfo::set_PlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::set_PlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_MaxPlayers
uint8_t Photon::Realtime::RoomInfo::get_MaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_MaxPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_IsOpen
bool Photon::Realtime::RoomInfo::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.get_IsVisible
bool Photon::Realtime::RoomInfo::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.ToStringFull
::StringW Photon::Realtime::RoomInfo::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.InternalCacheProperties
void Photon::Realtime::RoomInfo::InternalCacheProperties(::ExitGames::Client::Photon::Hashtable* propertiesToCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::InternalCacheProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::RoomInfo*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesToCache);
}
// Autogenerated method: Photon.Realtime.RoomInfo.Equals
bool Photon::Realtime::RoomInfo::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Realtime.RoomInfo.GetHashCode
int Photon::Realtime::RoomInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.RoomInfo.ToString
::StringW Photon::Realtime::RoomInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.SupportLogger
#include "Photon/Realtime/SupportLogger.hpp"
// Including type: Photon.Realtime.LoadBalancingClient
#include "Photon/Realtime/LoadBalancingClient.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: Photon.Realtime.RoomInfo
#include "Photon/Realtime/RoomInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.TypedLobbyInfo
#include "Photon/Realtime/TypedLobbyInfo.hpp"
// Including type: Photon.Realtime.ErrorInfo
#include "Photon/Realtime/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean LogTrafficStats
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::SupportLogger::dyn_LogTrafficStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_LogTrafficStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogTrafficStats"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loggedStillOfflineMessage
[[deprecated("Use field access instead!")]] bool& Photon::Realtime::SupportLogger::dyn_loggedStillOfflineMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_loggedStillOfflineMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loggedStillOfflineMessage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.LoadBalancingClient client
[[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& Photon::Realtime::SupportLogger::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Realtime::LoadBalancingClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch startStopwatch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Photon::Realtime::SupportLogger::dyn_startStopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_startStopwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startStopwatch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pingMax
[[deprecated("Use field access instead!")]] int& Photon::Realtime::SupportLogger::dyn_pingMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_pingMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pingMin
[[deprecated("Use field access instead!")]] int& Photon::Realtime::SupportLogger::dyn_pingMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::dyn_pingMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.SupportLogger.get_Client
::Photon::Realtime::LoadBalancingClient* Photon::Realtime::SupportLogger::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::LoadBalancingClient*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.set_Client
void Photon::Realtime::SupportLogger::set_Client(::Photon::Realtime::LoadBalancingClient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::set_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.SupportLogger.Start
void Photon::Realtime::SupportLogger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnDestroy
void Photon::Realtime::SupportLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnApplicationPause
void Photon::Realtime::SupportLogger::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnApplicationQuit
void Photon::Realtime::SupportLogger::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StartLogStats
void Photon::Realtime::SupportLogger::StartLogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StartLogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StopLogStats
void Photon::Realtime::SupportLogger::StopLogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StopLogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopLogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StartTrackValues
void Photon::Realtime::SupportLogger::StartTrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StartTrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.StopTrackValues
void Photon::Realtime::SupportLogger::StopTrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::StopTrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopTrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.GetFormattedTimestamp
::StringW Photon::Realtime::SupportLogger::GetFormattedTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::GetFormattedTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormattedTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.TrackValues
void Photon::Realtime::SupportLogger::TrackValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::TrackValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.LogStats
void Photon::Realtime::SupportLogger::LogStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::LogStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.LogBasics
void Photon::Realtime::SupportLogger::LogBasics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::LogBasics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogBasics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnConnected
void Photon::Realtime::SupportLogger::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnConnectedToMaster
void Photon::Realtime::SupportLogger::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnFriendListUpdate
void Photon::Realtime::SupportLogger::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinedLobby
void Photon::Realtime::SupportLogger::OnJoinedLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinedLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnLeftLobby
void Photon::Realtime::SupportLogger::OnLeftLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnLeftLobby");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCreateRoomFailed
void Photon::Realtime::SupportLogger::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinedRoom
void Photon::Realtime::SupportLogger::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinRoomFailed
void Photon::Realtime::SupportLogger::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnJoinRandomFailed
void Photon::Realtime::SupportLogger::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCreatedRoom
void Photon::Realtime::SupportLogger::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnLeftRoom
void Photon::Realtime::SupportLogger::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnDisconnected
void Photon::Realtime::SupportLogger::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnRegionListReceived
void Photon::Realtime::SupportLogger::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnRoomListUpdate
void Photon::Realtime::SupportLogger::OnRoomListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::RoomInfo*>* roomList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnRoomListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomList);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnPlayerEnteredRoom
void Photon::Realtime::SupportLogger::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnPlayerLeftRoom
void Photon::Realtime::SupportLogger::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnRoomPropertiesUpdate
void Photon::Realtime::SupportLogger::OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnPlayerPropertiesUpdate
void Photon::Realtime::SupportLogger::OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnMasterClientSwitched
void Photon::Realtime::SupportLogger::OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCustomAuthenticationResponse
void Photon::Realtime::SupportLogger::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnCustomAuthenticationFailed
void Photon::Realtime::SupportLogger::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnLobbyStatisticsUpdate
void Photon::Realtime::SupportLogger::OnLobbyStatisticsUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::TypedLobbyInfo*>* lobbyStatistics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnLobbyStatisticsUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyStatistics);
}
// Autogenerated method: Photon.Realtime.SupportLogger.OnErrorInfo
void Photon::Realtime::SupportLogger::OnErrorInfo(::Photon::Realtime::ErrorInfo* errorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::SupportLogger::OnErrorInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::SupportLogger*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Realtime.WebRpcResponse
#include "Photon/Realtime/WebRpcResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ExitGames.Client.Photon.OperationResponse
#include "ExitGames/Client/Photon/OperationResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::WebRpcResponse::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ResultCode>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Realtime::WebRpcResponse::dyn_$ResultCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$ResultCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ResultCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Realtime::WebRpcResponse::dyn_$Message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$Message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Object> <Parameters>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& Photon::Realtime::WebRpcResponse::dyn_$Parameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::dyn_$Parameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameters>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_Name
::StringW Photon::Realtime::WebRpcResponse::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_Name
void Photon::Realtime::WebRpcResponse::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_ResultCode
int Photon::Realtime::WebRpcResponse::get_ResultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_ResultCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_ResultCode
void Photon::Realtime::WebRpcResponse::set_ResultCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_ResultCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_ReturnCode
int Photon::Realtime::WebRpcResponse::get_ReturnCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_ReturnCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_Message
::StringW Photon::Realtime::WebRpcResponse::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_Message
void Photon::Realtime::WebRpcResponse::set_Message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_DebugMessage
::StringW Photon::Realtime::WebRpcResponse::get_DebugMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_DebugMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.get_Parameters
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* Photon::Realtime::WebRpcResponse::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.set_Parameters
void Photon::Realtime::WebRpcResponse::set_Parameters(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::set_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebRpcResponse.ToStringFull
::StringW Photon::Realtime::WebRpcResponse::ToStringFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebRpcResponse::ToStringFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Realtime.WebFlags
#include "Photon/Realtime/WebFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Realtime.WebFlags Default
::Photon::Realtime::WebFlags* Photon::Realtime::WebFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Realtime::WebFlags*>("Photon.Realtime", "WebFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Realtime.WebFlags Default
void Photon::Realtime::WebFlags::_set_Default(::Photon::Realtime::WebFlags* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte HttpForwardConst
uint8_t Photon::Realtime::WebFlags::_get_HttpForwardConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_HttpForwardConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "HttpForwardConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte HttpForwardConst
void Photon::Realtime::WebFlags::_set_HttpForwardConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_HttpForwardConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "HttpForwardConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendAuthCookieConst
uint8_t Photon::Realtime::WebFlags::_get_SendAuthCookieConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_SendAuthCookieConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "SendAuthCookieConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendAuthCookieConst
void Photon::Realtime::WebFlags::_set_SendAuthCookieConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_SendAuthCookieConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "SendAuthCookieConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendSyncConst
uint8_t Photon::Realtime::WebFlags::_get_SendSyncConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_SendSyncConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "SendSyncConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendSyncConst
void Photon::Realtime::WebFlags::_set_SendSyncConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_SendSyncConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "SendSyncConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte SendStateConst
uint8_t Photon::Realtime::WebFlags::_get_SendStateConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_get_SendStateConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Realtime", "WebFlags", "SendStateConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte SendStateConst
void Photon::Realtime::WebFlags::_set_SendStateConst(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::_set_SendStateConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Realtime", "WebFlags", "SendStateConst", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte WebhookFlags
[[deprecated("Use field access instead!")]] uint8_t& Photon::Realtime::WebFlags::dyn_WebhookFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::dyn_WebhookFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WebhookFlags"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_HttpForward
bool Photon::Realtime::WebFlags::get_HttpForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_HttpForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HttpForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_HttpForward
void Photon::Realtime::WebFlags::set_HttpForward(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_HttpForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HttpForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_SendAuthCookie
bool Photon::Realtime::WebFlags::get_SendAuthCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_SendAuthCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendAuthCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_SendAuthCookie
void Photon::Realtime::WebFlags::set_SendAuthCookie(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_SendAuthCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendAuthCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_SendSync
bool Photon::Realtime::WebFlags::get_SendSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_SendSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_SendSync
void Photon::Realtime::WebFlags::set_SendSync(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_SendSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags.get_SendState
bool Photon::Realtime::WebFlags::get_SendState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::get_SendState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Realtime.WebFlags.set_SendState
void Photon::Realtime::WebFlags::set_SendState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::set_SendState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Realtime.WebFlags..cctor
void Photon::Realtime::WebFlags::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::WebFlags::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "WebFlags", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Pun.CustomTypes
#include "Photon/Pun/CustomTypes.hpp"
// Including type: ExitGames.Client.Photon.StreamBuffer
#include "ExitGames/Client/Photon/StreamBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Byte[] memPlayer
::ArrayW<uint8_t> Photon::Pun::CustomTypes::_get_memPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::_get_memPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Photon.Pun", "CustomTypes", "memPlayer"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte[] memPlayer
void Photon::Pun::CustomTypes::_set_memPlayer(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::_set_memPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "CustomTypes", "memPlayer", value));
}
// Autogenerated method: Photon.Pun.CustomTypes.Register
void Photon::Pun::CustomTypes::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Pun.CustomTypes.SerializePhotonPlayer
int16_t Photon::Pun::CustomTypes::SerializePhotonPlayer(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::SerializePhotonPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", "SerializePhotonPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outStream), ::il2cpp_utils::ExtractType(customobject)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outStream, customobject);
}
// Autogenerated method: Photon.Pun.CustomTypes.DeserializePhotonPlayer
::Il2CppObject* Photon::Pun::CustomTypes::DeserializePhotonPlayer(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::DeserializePhotonPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", "DeserializePhotonPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inStream), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inStream, length);
}
// Autogenerated method: Photon.Pun.CustomTypes..cctor
void Photon::Pun::CustomTypes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::CustomTypes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Pun", "CustomTypes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.ConnectMethod
#include "Photon/Pun/ConnectMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod NotCalled
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_NotCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_NotCalled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "NotCalled"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod NotCalled
void Photon::Pun::ConnectMethod::_set_NotCalled(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_NotCalled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "NotCalled", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectToMaster
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_ConnectToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_ConnectToMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "ConnectToMaster"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectToMaster
void Photon::Pun::ConnectMethod::_set_ConnectToMaster(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_ConnectToMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "ConnectToMaster", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectToRegion
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_ConnectToRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_ConnectToRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "ConnectToRegion"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectToRegion
void Photon::Pun::ConnectMethod::_set_ConnectToRegion(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_ConnectToRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "ConnectToRegion", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ConnectMethod ConnectToBest
::Photon::Pun::ConnectMethod Photon::Pun::ConnectMethod::_get_ConnectToBest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_get_ConnectToBest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ConnectMethod>("Photon.Pun", "ConnectMethod", "ConnectToBest"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ConnectMethod ConnectToBest
void Photon::Pun::ConnectMethod::_set_ConnectToBest(::Photon::Pun::ConnectMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::_set_ConnectToBest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ConnectMethod", "ConnectToBest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::ConnectMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ConnectMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.PunLogLevel
#include "Photon/Pun/PunLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel ErrorsOnly
::Photon::Pun::PunLogLevel Photon::Pun::PunLogLevel::_get_ErrorsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_get_ErrorsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PunLogLevel", "ErrorsOnly"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel ErrorsOnly
void Photon::Pun::PunLogLevel::_set_ErrorsOnly(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_set_ErrorsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunLogLevel", "ErrorsOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel Informational
::Photon::Pun::PunLogLevel Photon::Pun::PunLogLevel::_get_Informational() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_get_Informational");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PunLogLevel", "Informational"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel Informational
void Photon::Pun::PunLogLevel::_set_Informational(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_set_Informational");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunLogLevel", "Informational", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.PunLogLevel Full
::Photon::Pun::PunLogLevel Photon::Pun::PunLogLevel::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::PunLogLevel>("Photon.Pun", "PunLogLevel", "Full"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.PunLogLevel Full
void Photon::Pun::PunLogLevel::_set_Full(::Photon::Pun::PunLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "PunLogLevel", "Full", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::PunLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PunLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.RpcTarget
#include "Photon/Pun/RpcTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget All
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "All"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget All
void Photon::Pun::RpcTarget::_set_All(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "All", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget Others
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_Others() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_Others");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "Others"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget Others
void Photon::Pun::RpcTarget::_set_Others(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_Others");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "Others", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget MasterClient
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_MasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_MasterClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "MasterClient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget MasterClient
void Photon::Pun::RpcTarget::_set_MasterClient(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_MasterClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "MasterClient", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget AllBuffered
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_AllBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_AllBuffered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "AllBuffered"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget AllBuffered
void Photon::Pun::RpcTarget::_set_AllBuffered(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_AllBuffered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "AllBuffered", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget OthersBuffered
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_OthersBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_OthersBuffered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "OthersBuffered"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget OthersBuffered
void Photon::Pun::RpcTarget::_set_OthersBuffered(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_OthersBuffered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "OthersBuffered", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget AllViaServer
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_AllViaServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_AllViaServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "AllViaServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget AllViaServer
void Photon::Pun::RpcTarget::_set_AllViaServer(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_AllViaServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "AllViaServer", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.RpcTarget AllBufferedViaServer
::Photon::Pun::RpcTarget Photon::Pun::RpcTarget::_get_AllBufferedViaServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_get_AllBufferedViaServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::RpcTarget>("Photon.Pun", "RpcTarget", "AllBufferedViaServer"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.RpcTarget AllBufferedViaServer
void Photon::Pun::RpcTarget::_set_AllBufferedViaServer(::Photon::Pun::RpcTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::_set_AllBufferedViaServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "RpcTarget", "AllBufferedViaServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::RpcTarget::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::RpcTarget::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.ViewSynchronization
#include "Photon/Pun/ViewSynchronization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization Off
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "Off"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization Off
void Photon::Pun::ViewSynchronization::_set_Off(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization ReliableDeltaCompressed
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_ReliableDeltaCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_ReliableDeltaCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "ReliableDeltaCompressed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization ReliableDeltaCompressed
void Photon::Pun::ViewSynchronization::_set_ReliableDeltaCompressed(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_ReliableDeltaCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "ReliableDeltaCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization Unreliable
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_Unreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_Unreliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "Unreliable"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization Unreliable
void Photon::Pun::ViewSynchronization::_set_Unreliable(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_Unreliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "Unreliable", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.ViewSynchronization UnreliableOnChange
::Photon::Pun::ViewSynchronization Photon::Pun::ViewSynchronization::_get_UnreliableOnChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_get_UnreliableOnChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::ViewSynchronization>("Photon.Pun", "ViewSynchronization", "UnreliableOnChange"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.ViewSynchronization UnreliableOnChange
void Photon::Pun::ViewSynchronization::_set_UnreliableOnChange(::Photon::Pun::ViewSynchronization value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::_set_UnreliableOnChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "ViewSynchronization", "UnreliableOnChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::ViewSynchronization::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::ViewSynchronization::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.OwnershipOption
#include "Photon/Pun/OwnershipOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Pun.OwnershipOption Fixed
::Photon::Pun::OwnershipOption Photon::Pun::OwnershipOption::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::OwnershipOption>("Photon.Pun", "OwnershipOption", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.OwnershipOption Fixed
void Photon::Pun::OwnershipOption::_set_Fixed(::Photon::Pun::OwnershipOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "OwnershipOption", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.OwnershipOption Takeover
::Photon::Pun::OwnershipOption Photon::Pun::OwnershipOption::_get_Takeover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_get_Takeover");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::OwnershipOption>("Photon.Pun", "OwnershipOption", "Takeover"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.OwnershipOption Takeover
void Photon::Pun::OwnershipOption::_set_Takeover(::Photon::Pun::OwnershipOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_set_Takeover");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "OwnershipOption", "Takeover", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Pun.OwnershipOption Request
::Photon::Pun::OwnershipOption Photon::Pun::OwnershipOption::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Pun::OwnershipOption>("Photon.Pun", "OwnershipOption", "Request"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Pun.OwnershipOption Request
void Photon::Pun::OwnershipOption::_set_Request(::Photon::Pun::OwnershipOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Pun", "OwnershipOption", "Request", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Pun::OwnershipOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::OwnershipOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IOnPhotonViewPreNetDestroy
#include "Photon/Pun/IOnPhotonViewPreNetDestroy.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IOnPhotonViewPreNetDestroy.OnPreNetDestroy
void Photon::Pun::IOnPhotonViewPreNetDestroy::OnPreNetDestroy(::Photon::Pun::PhotonView* rootView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IOnPhotonViewPreNetDestroy::OnPreNetDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IOnPhotonViewPreNetDestroy*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootView);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Pun.IOnPhotonViewOwnerChange
#include "Photon/Pun/IOnPhotonViewOwnerChange.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Pun.IOnPhotonViewOwnerChange.OnOwnerChange
void Photon::Pun::IOnPhotonViewOwnerChange::OnOwnerChange(::Photon::Realtime::Player* newOwner, ::Photon::Realtime::Player* previousOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::IOnPhotonViewOwnerChange::OnOwnerChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::IOnPhotonViewOwnerChange*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newOwner, previousOwner);
}
