// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DataObjectMethodAttribute
#include "System/ComponentModel/DataObjectMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDefault
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DataObjectMethodAttribute::dyn__isDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::dyn__isDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.DataObjectMethodType _methodType
[[deprecated("Use field access instead!")]] ::System::ComponentModel::DataObjectMethodType& System::ComponentModel::DataObjectMethodAttribute::dyn__methodType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::dyn__methodType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_methodType"))->offset;
  return *reinterpret_cast<::System::ComponentModel::DataObjectMethodType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.get_IsDefault
bool System::ComponentModel::DataObjectMethodAttribute::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::get_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.get_MethodType
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodAttribute::get_MethodType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::get_MethodType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::DataObjectMethodType, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.Equals
bool System::ComponentModel::DataObjectMethodAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.GetHashCode
int System::ComponentModel::DataObjectMethodAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DataObjectMethodAttribute.Match
bool System::ComponentModel::DataObjectMethodAttribute::Match(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodAttribute::Match");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DataObjectMethodType
#include "System/ComponentModel/DataObjectMethodType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Fill
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Fill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Fill"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Fill
void System::ComponentModel::DataObjectMethodType::_set_Fill(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Fill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Fill", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Select
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Select"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Select
void System::ComponentModel::DataObjectMethodType::_set_Select(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Select", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Update
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Update
void System::ComponentModel::DataObjectMethodType::_set_Update(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Insert
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Insert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Insert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Insert"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Insert
void System::ComponentModel::DataObjectMethodType::_set_Insert(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Insert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Insert", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DataObjectMethodType Delete
::System::ComponentModel::DataObjectMethodType System::ComponentModel::DataObjectMethodType::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DataObjectMethodType>("System.ComponentModel", "DataObjectMethodType", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DataObjectMethodType Delete
void System::ComponentModel::DataObjectMethodType::_set_Delete(::System::ComponentModel::DataObjectMethodType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DataObjectMethodType", "Delete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::DataObjectMethodType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DataObjectMethodType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DateTimeConverter
#include "System/ComponentModel/DateTimeConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DateTimeConverter.CanConvertFrom
bool System::ComponentModel::DateTimeConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.DateTimeConverter.CanConvertTo
bool System::ComponentModel::DateTimeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.DateTimeConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::DateTimeConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.DateTimeConverter.ConvertTo
::Il2CppObject* System::ComponentModel::DateTimeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DateTimeOffsetConverter
#include "System/ComponentModel/DateTimeOffsetConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom
bool System::ComponentModel::DateTimeOffsetConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeOffsetConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.DateTimeOffsetConverter.CanConvertTo
bool System::ComponentModel::DateTimeOffsetConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeOffsetConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.DateTimeOffsetConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::DateTimeOffsetConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeOffsetConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.DateTimeOffsetConverter.ConvertTo
::Il2CppObject* System::ComponentModel::DateTimeOffsetConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DateTimeOffsetConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DecimalConverter
#include "System/ComponentModel/DecimalConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DecimalConverter.get_AllowHex
bool System::ComponentModel::DecimalConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.get_TargetType
::System::Type* System::ComponentModel::DecimalConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.CanConvertTo
bool System::ComponentModel::DecimalConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ConvertTo
::Il2CppObject* System::ComponentModel::DecimalConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, culture);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ToString
::StringW System::ComponentModel::DecimalConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultBindingPropertyAttribute
#include "System/ComponentModel/DefaultBindingPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultBindingPropertyAttribute Default
::System::ComponentModel::DefaultBindingPropertyAttribute* System::ComponentModel::DefaultBindingPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultBindingPropertyAttribute*>("System.ComponentModel", "DefaultBindingPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultBindingPropertyAttribute Default
void System::ComponentModel::DefaultBindingPropertyAttribute::_set_Default(::System::ComponentModel::DefaultBindingPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultBindingPropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultBindingPropertyAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute.get_Name
::StringW System::ComponentModel::DefaultBindingPropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute..cctor
void System::ComponentModel::DefaultBindingPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultBindingPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute.Equals
bool System::ComponentModel::DefaultBindingPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultBindingPropertyAttribute.GetHashCode
int System::ComponentModel::DefaultBindingPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultBindingPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultEventAttribute
#include "System/ComponentModel/DefaultEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
::System::ComponentModel::DefaultEventAttribute* System::ComponentModel::DefaultEventAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultEventAttribute*>("System.ComponentModel", "DefaultEventAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
void System::ComponentModel::DefaultEventAttribute::_set_Default(::System::ComponentModel::DefaultEventAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultEventAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultEventAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.get_Name
::StringW System::ComponentModel::DefaultEventAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute..cctor
void System::ComponentModel::DefaultEventAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultEventAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.Equals
bool System::ComponentModel::DefaultEventAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.GetHashCode
int System::ComponentModel::DefaultEventAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultPropertyAttribute
#include "System/ComponentModel/DefaultPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
::System::ComponentModel::DefaultPropertyAttribute* System::ComponentModel::DefaultPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultPropertyAttribute*>("System.ComponentModel", "DefaultPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
void System::ComponentModel::DefaultPropertyAttribute::_set_Default(::System::ComponentModel::DefaultPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultPropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultPropertyAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.get_Name
::StringW System::ComponentModel::DefaultPropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute..cctor
void System::ComponentModel::DefaultPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.Equals
bool System::ComponentModel::DefaultPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.GetHashCode
int System::ComponentModel::DefaultPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultValueAttribute
#include "System/ComponentModel/DefaultValueAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::DefaultValueAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.get_Value
::Il2CppObject* System::ComponentModel::DefaultValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DefaultValueAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.SetValue
void System::ComponentModel::DefaultValueAttribute::SetValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.Equals
bool System::ComponentModel::DefaultValueAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.GetHashCode
int System::ComponentModel::DefaultValueAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.DelegatingTypeDescriptionProvider
#include "System/ComponentModel/DelegatingTypeDescriptionProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.IServiceProvider
#include "System/IServiceProvider.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.get_Provider
::System::ComponentModel::TypeDescriptionProvider* System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.CreateInstance
::Il2CppObject* System::ComponentModel::DelegatingTypeDescriptionProvider::CreateInstance(::System::IServiceProvider* provider, ::System::Type* objectType, ::ArrayW<::System::Type*> argTypes, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, provider, objectType, argTypes, args);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetFullComponentName
::StringW System::ComponentModel::DelegatingTypeDescriptionProvider::GetFullComponentName(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetFullComponentName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetExtenderProviders
::ArrayW<::System::ComponentModel::IExtenderProvider*> System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtenderProviders(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtenderProviders");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::ComponentModel::IExtenderProvider*>, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetRuntimeType
::System::Type* System::ComponentModel::DelegatingTypeDescriptionProvider::GetRuntimeType(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetRuntimeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.IsSupportedType
bool System::ComponentModel::DelegatingTypeDescriptionProvider::IsSupportedType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::IsSupportedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeDescriptionProvider*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DescriptionAttribute
#include "System/ComponentModel/DescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DescriptionAttribute Default
::System::ComponentModel::DescriptionAttribute* System::ComponentModel::DescriptionAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DescriptionAttribute*>("System.ComponentModel", "DescriptionAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DescriptionAttribute Default
void System::ComponentModel::DescriptionAttribute::_set_Default(::System::ComponentModel::DescriptionAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DescriptionAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DescriptionAttribute::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_Description
::StringW System::ComponentModel::DescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DescriptionAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_DescriptionValue
::StringW System::ComponentModel::DescriptionAttribute::get_DescriptionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DescriptionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.set_DescriptionValue
void System::ComponentModel::DescriptionAttribute::set_DescriptionValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::set_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DescriptionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute..cctor
void System::ComponentModel::DescriptionAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DescriptionAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.Equals
bool System::ComponentModel::DescriptionAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.GetHashCode
int System::ComponentModel::DescriptionAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.IsDefaultAttribute
bool System::ComponentModel::DescriptionAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignOnlyAttribute
#include "System/ComponentModel/DesignOnlyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignOnlyAttribute Yes
::System::ComponentModel::DesignOnlyAttribute* System::ComponentModel::DesignOnlyAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignOnlyAttribute*>("System.ComponentModel", "DesignOnlyAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignOnlyAttribute Yes
void System::ComponentModel::DesignOnlyAttribute::_set_Yes(::System::ComponentModel::DesignOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignOnlyAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignOnlyAttribute No
::System::ComponentModel::DesignOnlyAttribute* System::ComponentModel::DesignOnlyAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignOnlyAttribute*>("System.ComponentModel", "DesignOnlyAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignOnlyAttribute No
void System::ComponentModel::DesignOnlyAttribute::_set_No(::System::ComponentModel::DesignOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignOnlyAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignOnlyAttribute Default
::System::ComponentModel::DesignOnlyAttribute* System::ComponentModel::DesignOnlyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignOnlyAttribute*>("System.ComponentModel", "DesignOnlyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignOnlyAttribute Default
void System::ComponentModel::DesignOnlyAttribute::_set_Default(::System::ComponentModel::DesignOnlyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignOnlyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDesignOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DesignOnlyAttribute::dyn_isDesignOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::dyn_isDesignOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDesignOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.get_IsDesignOnly
bool System::ComponentModel::DesignOnlyAttribute::get_IsDesignOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::get_IsDesignOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDesignOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute..cctor
void System::ComponentModel::DesignOnlyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignOnlyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignOnlyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.Equals
bool System::ComponentModel::DesignOnlyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignOnlyAttribute.GetHashCode
int System::ComponentModel::DesignOnlyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignOnlyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignTimeVisibleAttribute
#include "System/ComponentModel/DesignTimeVisibleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Yes
::System::ComponentModel::DesignTimeVisibleAttribute* System::ComponentModel::DesignTimeVisibleAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignTimeVisibleAttribute*>("System.ComponentModel", "DesignTimeVisibleAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Yes
void System::ComponentModel::DesignTimeVisibleAttribute::_set_Yes(::System::ComponentModel::DesignTimeVisibleAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignTimeVisibleAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute No
::System::ComponentModel::DesignTimeVisibleAttribute* System::ComponentModel::DesignTimeVisibleAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignTimeVisibleAttribute*>("System.ComponentModel", "DesignTimeVisibleAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute No
void System::ComponentModel::DesignTimeVisibleAttribute::_set_No(::System::ComponentModel::DesignTimeVisibleAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignTimeVisibleAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Default
::System::ComponentModel::DesignTimeVisibleAttribute* System::ComponentModel::DesignTimeVisibleAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignTimeVisibleAttribute*>("System.ComponentModel", "DesignTimeVisibleAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignTimeVisibleAttribute Default
void System::ComponentModel::DesignTimeVisibleAttribute::_set_Default(::System::ComponentModel::DesignTimeVisibleAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignTimeVisibleAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean visible
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::DesignTimeVisibleAttribute::dyn_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::dyn_visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.get_Visible
bool System::ComponentModel::DesignTimeVisibleAttribute::get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::get_Visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute..cctor
void System::ComponentModel::DesignTimeVisibleAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignTimeVisibleAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.Equals
bool System::ComponentModel::DesignTimeVisibleAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.GetHashCode
int System::ComponentModel::DesignTimeVisibleAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignTimeVisibleAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignTimeVisibleAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignTimeVisibleAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerAttribute
#include "System/ComponentModel/DesignerAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String designerTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_designerTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_designerTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "designerTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String designerBaseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_designerBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_designerBaseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "designerBaseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.get_DesignerBaseTypeName
::StringW System::ComponentModel::DesignerAttribute::get_DesignerBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::get_DesignerBaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DesignerBaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.get_DesignerTypeName
::StringW System::ComponentModel::DesignerAttribute::get_DesignerTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::get_DesignerTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DesignerTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::DesignerAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.Equals
bool System::ComponentModel::DesignerAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.GetHashCode
int System::ComponentModel::DesignerAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerCategoryAttribute
#include "System/ComponentModel/DesignerCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Component");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Component"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
void System::ComponentModel::DesignerCategoryAttribute::_set_Component(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Component");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Component", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
void System::ComponentModel::DesignerCategoryAttribute::_set_Default(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Form");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Form"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
void System::ComponentModel::DesignerCategoryAttribute::_set_Form(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Form");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Form", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
void System::ComponentModel::DesignerCategoryAttribute::_set_Generic(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Generic", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String category
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerCategoryAttribute::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerCategoryAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_Category
::StringW System::ComponentModel::DesignerCategoryAttribute::get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute..cctor
void System::ComponentModel::DesignerCategoryAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerCategoryAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::DesignerCategoryAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.Equals
bool System::ComponentModel::DesignerCategoryAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.GetHashCode
int System::ComponentModel::DesignerCategoryAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DesignerSerializationVisibility
#include "System/ComponentModel/DesignerSerializationVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
void System::ComponentModel::DesignerSerializationVisibility::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
void System::ComponentModel::DesignerSerializationVisibility::_set_Visible(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Content
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Content
void System::ComponentModel::DesignerSerializationVisibility::_set_Content(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::DesignerSerializationVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerSerializationVisibilityAttribute
#include "System/ComponentModel/DesignerSerializationVisibilityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.DesignerSerializationVisibility visibility
[[deprecated("Use field access instead!")]] ::System::ComponentModel::DesignerSerializationVisibility& System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_visibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibility"))->offset;
  return *reinterpret_cast<::System::ComponentModel::DesignerSerializationVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.get_Visibility
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Visibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::DesignerSerializationVisibility, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute..cctor
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerSerializationVisibilityAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode
int System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DisplayNameAttribute
#include "System/ComponentModel/DisplayNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
::System::ComponentModel::DisplayNameAttribute* System::ComponentModel::DisplayNameAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DisplayNameAttribute*>("System.ComponentModel", "DisplayNameAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
void System::ComponentModel::DisplayNameAttribute::_set_Default(::System::ComponentModel::DisplayNameAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DisplayNameAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _displayName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DisplayNameAttribute::dyn__displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::dyn__displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayName
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DisplayNameAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayNameValue
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayNameValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.set_DisplayNameValue
void System::ComponentModel::DisplayNameAttribute::set_DisplayNameValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::set_DisplayNameValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisplayNameValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute..cctor
void System::ComponentModel::DisplayNameAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DisplayNameAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.Equals
bool System::ComponentModel::DisplayNameAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.GetHashCode
int System::ComponentModel::DisplayNameAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute
bool System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DoWorkEventArgs
#include "System/ComponentModel/DoWorkEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object result
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::DoWorkEventArgs::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventArgs::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object argument
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::DoWorkEventArgs::dyn_argument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventArgs::dyn_argument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argument"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DoWorkEventArgs.get_Argument
::Il2CppObject* System::ComponentModel::DoWorkEventArgs::get_Argument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventArgs::get_Argument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Argument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoWorkEventArgs.get_Result
::Il2CppObject* System::ComponentModel::DoWorkEventArgs::get_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventArgs::get_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoWorkEventArgs.set_Result
void System::ComponentModel::DoWorkEventArgs::set_Result(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventArgs::set_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DoWorkEventHandler
#include "System/ComponentModel/DoWorkEventHandler.hpp"
// Including type: System.ComponentModel.DoWorkEventArgs
#include "System/ComponentModel/DoWorkEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DoWorkEventHandler.Invoke
void System::ComponentModel::DoWorkEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::DoWorkEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DoWorkEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.DoWorkEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::DoWorkEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::DoWorkEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DoWorkEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.DoWorkEventHandler.EndInvoke
void System::ComponentModel::DoWorkEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoWorkEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::DoWorkEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DoubleConverter
#include "System/ComponentModel/DoubleConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DoubleConverter.get_AllowHex
bool System::ComponentModel::DoubleConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.get_TargetType
::System::Type* System::ComponentModel::DoubleConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, culture);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.ToString
::StringW System::ComponentModel::DoubleConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorAttribute
#include "System/ComponentModel/EditorAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String baseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_EditorBaseTypeName
::StringW System::ComponentModel::EditorAttribute::get_EditorBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_EditorBaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditorBaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_EditorTypeName
::StringW System::ComponentModel::EditorAttribute::get_EditorTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_EditorTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditorTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::EditorAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.Equals
bool System::ComponentModel::EditorAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.GetHashCode
int System::ComponentModel::EditorAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorBrowsableAttribute
#include "System/ComponentModel/EditorBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EditorBrowsableState browsableState
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EditorBrowsableState& System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browsableState"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EditorBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.get_State
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableAttribute::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EditorBrowsableState, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.Equals
bool System::ComponentModel::EditorBrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.GetHashCode
int System::ComponentModel::EditorBrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.EditorBrowsableState
#include "System/ComponentModel/EditorBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Always
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Always
void System::ComponentModel::EditorBrowsableState::_set_Always(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Never
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Never
void System::ComponentModel::EditorBrowsableState::_set_Never(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Advanced
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Advanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Advanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Advanced"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Advanced
void System::ComponentModel::EditorBrowsableState::_set_Advanced(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Advanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Advanced", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EditorBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EnumConverter
#include "System/ComponentModel/EnumConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter/StandardValuesCollection values
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter::StandardValuesCollection*& System::ComponentModel::EnumConverter::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter::StandardValuesCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::EnumConverter::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EnumConverter.get_EnumType
::System::Type* System::ComponentModel::EnumConverter::get_EnumType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::get_EnumType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnumType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EnumConverter.get_Values
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::EnumConverter::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EnumConverter.set_Values
void System::ComponentModel::EnumConverter::set_Values(::System::ComponentModel::TypeConverter::StandardValuesCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EnumConverter.get_Comparer
::System::Collections::IComparer* System::ComponentModel::EnumConverter::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::get_Comparer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EnumConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EnumConverter.CanConvertFrom
bool System::ComponentModel::EnumConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.CanConvertTo
bool System::ComponentModel::EnumConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::EnumConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.EnumConverter.ConvertTo
::Il2CppObject* System::ComponentModel::EnumConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::EnumConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValuesExclusive
bool System::ComponentModel::EnumConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValuesSupported
bool System::ComponentModel::EnumConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.IsValid
bool System::ComponentModel::EnumConverter::IsValid(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.EventDescriptor.get_ComponentType
::System::Type* System::ComponentModel::EventDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.get_EventType
::System::Type* System::ComponentModel::EventDescriptor::get_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::get_EventType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.get_IsMulticast
bool System::ComponentModel::EventDescriptor::get_IsMulticast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::get_IsMulticast");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.AddEventHandler
void System::ComponentModel::EventDescriptor::AddEventHandler(::Il2CppObject* component, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::AddEventHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptor.RemoveEventHandler
void System::ComponentModel::EventDescriptor::RemoveEventHandler(::Il2CppObject* component, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptor::RemoveEventHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EventDescriptorCollection*>("System.ComponentModel", "EventDescriptorCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
void System::ComponentModel::EventDescriptorCollection::_set_Empty(::System::ComponentModel::EventDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EventDescriptorCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventDescriptor[] events
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::EventDescriptor*>& System::ComponentModel::EventDescriptorCollection::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::EventDescriptor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] namedSort
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::EventDescriptorCollection::dyn_namedSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_namedSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namedSort"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::ComponentModel::EventDescriptorCollection::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean eventsOwned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_eventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_eventsOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventsOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needSort
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_needSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_needSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 eventCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EventDescriptorCollection::dyn_eventCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_eventCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean readOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Count
int System::ComponentModel::EventDescriptorCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Item
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Item
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Add
int System::ComponentModel::EventDescriptorCollection::Add(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Clear
void System::ComponentModel::EventDescriptorCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Contains
bool System::ComponentModel::EventDescriptorCollection::Contains(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.CopyTo
void System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureEventsOwned
void System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureEventsOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureSize
void System::ComponentModel::EventDescriptorCollection::EnsureSize(int sizeNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeNeeded);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Find
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::Find(::StringW name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Find");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, name, ignoreCase);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.IndexOf
int System::ComponentModel::EventDescriptorCollection::IndexOf(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Insert
void System::ComponentModel::EventDescriptorCollection::Insert(int index, ::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Remove
void System::ComponentModel::EventDescriptorCollection::Remove(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.RemoveAt
void System::ComponentModel::EventDescriptorCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort(::ArrayW<::StringW> names, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, names, comparer);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Sort
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::Sort(::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::System::Collections::IComparer* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorter);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_IsSynchronized
bool System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.set_Item
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Add
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Clear
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Contains
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IndexOf
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Insert
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Remove
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventDescriptorCollection*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection..cctor
void System::ComponentModel::EventDescriptorCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "EventDescriptorCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.ComponentModel.EventHandlerList/ListEntry
#include "System/ComponentModel/EventHandlerList_ListEntry.hpp"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList/ListEntry head
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList::ListEntry*& System::ComponentModel::EventHandlerList::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList::ListEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.Component parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::Component*& System::ComponentModel::EventHandlerList::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.get_Item
::System::Delegate* System::ComponentModel::EventHandlerList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.set_Item
void System::ComponentModel::EventHandlerList::set_Item(::Il2CppObject* key, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.AddHandler
void System::ComponentModel::EventHandlerList::AddHandler(::Il2CppObject* key, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::AddHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.AddHandlers
void System::ComponentModel::EventHandlerList::AddHandlers(::System::ComponentModel::EventHandlerList* listToAddFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::AddHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listToAddFrom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listToAddFrom);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.Dispose
void System::ComponentModel::EventHandlerList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::EventHandlerList*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.Find
::System::ComponentModel::EventHandlerList::ListEntry* System::ComponentModel::EventHandlerList::Find(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventHandlerList::ListEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.RemoveHandler
void System::ComponentModel::EventHandlerList::RemoveHandler(::Il2CppObject* key, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::RemoveHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventHandlerList/ListEntry
#include "System/ComponentModel/EventHandlerList_ListEntry.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.ComponentModel.EventHandlerList/ListEntry next
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList::ListEntry*& System::ComponentModel::EventHandlerList::ListEntry::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::ListEntry::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList::ListEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::EventHandlerList::ListEntry::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::ListEntry::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Delegate handler
[[deprecated("Use field access instead!")]] ::System::Delegate*& System::ComponentModel::EventHandlerList::ListEntry::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::ListEntry::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::System::Delegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ExpandableObjectConverter
#include "System/ComponentModel/ExpandableObjectConverter.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ExpandableObjectConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ExpandableObjectConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExpandableObjectConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported
bool System::ComponentModel::ExpandableObjectConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExpandableObjectConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ExtendedPropertyDescriptor
#include "System/ComponentModel/ExtendedPropertyDescriptor.hpp"
// Including type: System.ComponentModel.ReflectPropertyDescriptor
#include "System/ComponentModel/ReflectPropertyDescriptor.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.ReflectPropertyDescriptor extenderInfo
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ReflectPropertyDescriptor*& System::ComponentModel::ExtendedPropertyDescriptor::dyn_extenderInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::dyn_extenderInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extenderInfo"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ReflectPropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.ComponentModel.IExtenderProvider provider
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IExtenderProvider*& System::ComponentModel::ExtendedPropertyDescriptor::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IExtenderProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.CanResetValue
bool System::ComponentModel::ExtendedPropertyDescriptor::CanResetValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::CanResetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comp);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_ComponentType
::System::Type* System::ComponentModel::ExtendedPropertyDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_IsReadOnly
bool System::ComponentModel::ExtendedPropertyDescriptor::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_PropertyType
::System::Type* System::ComponentModel::ExtendedPropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.get_DisplayName
::StringW System::ComponentModel::ExtendedPropertyDescriptor::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.GetValue
::Il2CppObject* System::ComponentModel::ExtendedPropertyDescriptor::GetValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, comp);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.ResetValue
void System::ComponentModel::ExtendedPropertyDescriptor::ResetValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::ResetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, comp);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.SetValue
void System::ComponentModel::ExtendedPropertyDescriptor::SetValue(::Il2CppObject* component, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: System.ComponentModel.ExtendedPropertyDescriptor.ShouldSerializeValue
bool System::ComponentModel::ExtendedPropertyDescriptor::ShouldSerializeValue(::Il2CppObject* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtendedPropertyDescriptor::ShouldSerializeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ExtenderProvidedPropertyAttribute
#include "System/ComponentModel/ExtenderProvidedPropertyAttribute.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor extenderProperty
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptor*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_extenderProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_extenderProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extenderProperty"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.IExtenderProvider provider
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IExtenderProvider*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IExtenderProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type receiverType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_receiverType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_receiverType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiverType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.Create
::System::ComponentModel::ExtenderProvidedPropertyAttribute* System::ComponentModel::ExtenderProvidedPropertyAttribute::Create(::System::ComponentModel::PropertyDescriptor* extenderProperty, ::System::Type* receiverType, ::System::ComponentModel::IExtenderProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ExtenderProvidedPropertyAttribute", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extenderProperty), ::il2cpp_utils::ExtractType(receiverType), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ExtenderProvidedPropertyAttribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extenderProperty, receiverType, provider);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_ExtenderProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ExtenderProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ExtenderProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtenderProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_Provider
::System::ComponentModel::IExtenderProvider* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IExtenderProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_ReceiverType
::System::Type* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ReceiverType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_ReceiverType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceiverType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals
bool System::ComponentModel::ExtenderProvidedPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.GetHashCode
int System::ComponentModel::ExtenderProvidedPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.IsDefaultAttribute
bool System::ComponentModel::ExtenderProvidedPropertyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.GuidConverter
#include "System/ComponentModel/GuidConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.GuidConverter.CanConvertFrom
bool System::ComponentModel::GuidConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.GuidConverter.CanConvertTo
bool System::ComponentModel::GuidConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.GuidConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::GuidConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.GuidConverter.ConvertTo
::Il2CppObject* System::ComponentModel::GuidConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::GuidConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.HandledEventArgs
#include "System/ComponentModel/HandledEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean handled
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::HandledEventArgs::dyn_handled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::dyn_handled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.HandledEventArgs.get_Handled
bool System::ComponentModel::HandledEventArgs::get_Handled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::get_Handled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.HandledEventArgs.set_Handled
void System::ComponentModel::HandledEventArgs::set_Handled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::set_Handled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.HandledEventHandler
#include "System/ComponentModel/HandledEventHandler.hpp"
// Including type: System.ComponentModel.HandledEventArgs
#include "System/ComponentModel/HandledEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.HandledEventHandler.Invoke
void System::ComponentModel::HandledEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::HandledEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::HandledEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.HandledEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::HandledEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::HandledEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::HandledEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.HandledEventHandler.EndInvoke
void System::ComponentModel::HandledEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::HandledEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.IBindingList
#include "System/ComponentModel/IBindingList.hpp"
// Including type: System.ComponentModel.ListSortDirection
#include "System/ComponentModel/ListSortDirection.hpp"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IBindingList.get_AllowNew
bool System::ComponentModel::IBindingList::get_AllowNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_AllowNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.AddNew
::Il2CppObject* System::ComponentModel::IBindingList::AddNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::AddNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_AllowEdit
bool System::ComponentModel::IBindingList::get_AllowEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_AllowEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_AllowRemove
bool System::ComponentModel::IBindingList::get_AllowRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_AllowRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SupportsChangeNotification
bool System::ComponentModel::IBindingList::get_SupportsChangeNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SupportsChangeNotification");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SupportsSearching
bool System::ComponentModel::IBindingList::get_SupportsSearching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SupportsSearching");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SupportsSorting
bool System::ComponentModel::IBindingList::get_SupportsSorting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SupportsSorting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_IsSorted
bool System::ComponentModel::IBindingList::get_IsSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_IsSorted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SortProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::IBindingList::get_SortProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SortProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.get_SortDirection
::System::ComponentModel::ListSortDirection System::ComponentModel::IBindingList::get_SortDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::get_SortDirection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDirection, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingList.add_ListChanged
void System::ComponentModel::IBindingList::add_ListChanged(::System::ComponentModel::ListChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::add_ListChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IBindingList.remove_ListChanged
void System::ComponentModel::IBindingList::remove_ListChanged(::System::ComponentModel::ListChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::remove_ListChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IBindingList.AddIndex
void System::ComponentModel::IBindingList::AddIndex(::System::ComponentModel::PropertyDescriptor* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::AddIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property);
}
// Autogenerated method: System.ComponentModel.IBindingList.ApplySort
void System::ComponentModel::IBindingList::ApplySort(::System::ComponentModel::PropertyDescriptor* property, ::System::ComponentModel::ListSortDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::ApplySort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, direction);
}
// Autogenerated method: System.ComponentModel.IBindingList.Find
int System::ComponentModel::IBindingList::Find(::System::ComponentModel::PropertyDescriptor* property, ::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::Find");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, property, key);
}
// Autogenerated method: System.ComponentModel.IBindingList.RemoveIndex
void System::ComponentModel::IBindingList::RemoveIndex(::System::ComponentModel::PropertyDescriptor* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::RemoveIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property);
}
// Autogenerated method: System.ComponentModel.IBindingList.RemoveSort
void System::ComponentModel::IBindingList::RemoveSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingList::RemoveSort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingList*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IBindingListView
#include "System/ComponentModel/IBindingListView.hpp"
// Including type: System.ComponentModel.ListSortDescriptionCollection
#include "System/ComponentModel/ListSortDescriptionCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IBindingListView.ApplySort
void System::ComponentModel::IBindingListView::ApplySort(::System::ComponentModel::ListSortDescriptionCollection* sorts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::ApplySort");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorts);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_Filter
::StringW System::ComponentModel::IBindingListView::get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.set_Filter
void System::ComponentModel::IBindingListView::set_Filter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::set_Filter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_SortDescriptions
::System::ComponentModel::ListSortDescriptionCollection* System::ComponentModel::IBindingListView::get_SortDescriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_SortDescriptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDescriptionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.RemoveFilter
void System::ComponentModel::IBindingListView::RemoveFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::RemoveFilter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting
bool System::ComponentModel::IBindingListView::get_SupportsAdvancedSorting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_SupportsAdvancedSorting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IBindingListView.get_SupportsFiltering
bool System::ComponentModel::IBindingListView::get_SupportsFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IBindingListView::get_SupportsFiltering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IBindingListView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ICancelAddNew
#include "System/ComponentModel/ICancelAddNew.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ICancelAddNew.CancelNew
void System::ComponentModel::ICancelAddNew::CancelNew(int itemIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICancelAddNew::CancelNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICancelAddNew*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemIndex);
}
// Autogenerated method: System.ComponentModel.ICancelAddNew.EndNew
void System::ComponentModel::ICancelAddNew::EndNew(int itemIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICancelAddNew::EndNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICancelAddNew*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IChangeTracking
#include "System/ComponentModel/IChangeTracking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IChangeTracking.get_IsChanged
bool System::ComponentModel::IChangeTracking::get_IsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IChangeTracking::get_IsChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IChangeTracking*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IChangeTracking.AcceptChanges
void System::ComponentModel::IChangeTracking::AcceptChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IChangeTracking::AcceptChanges");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IChangeTracking*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.IComNativeDescriptorHandler
#include "System/ComponentModel/IComNativeDescriptorHandler.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::IComNativeDescriptorHandler::GetAttributes(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetClassName
::StringW System::ComponentModel::IComNativeDescriptorHandler::GetClassName(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetClassName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::IComNativeDescriptorHandler::GetConverter(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent
::System::ComponentModel::EventDescriptor* System::ComponentModel::IComNativeDescriptorHandler::GetDefaultEvent(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetDefaultEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::IComNativeDescriptorHandler::GetDefaultProperty(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetDefaultProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetEditor
::Il2CppObject* System::ComponentModel::IComNativeDescriptorHandler::GetEditor(::Il2CppObject* component, ::System::Type* baseEditorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component, baseEditorType);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetName
::StringW System::ComponentModel::IComNativeDescriptorHandler::GetName(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::IComNativeDescriptorHandler::GetEvents(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::IComNativeDescriptorHandler::GetEvents(::Il2CppObject* component, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, component, attributes);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::IComNativeDescriptorHandler::GetProperties(::Il2CppObject* component, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, component, attributes);
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue
::Il2CppObject* System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue(::Il2CppObject* component, ::StringW propertyName, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component, propertyName, byref(success));
}
// Autogenerated method: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue
::Il2CppObject* System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue(::Il2CppObject* component, int dispid, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComNativeDescriptorHandler::GetPropertyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComNativeDescriptorHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component, dispid, byref(success));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IComponent.get_Site
::System::ComponentModel::ISite* System::ComponentModel::IComponent::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComponent::get_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComponent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IComponent.set_Site
void System::ComponentModel::IComponent::set_Site(::System::ComponentModel::ISite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComponent::set_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IComponent.add_Disposed
void System::ComponentModel::IComponent::add_Disposed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComponent::add_Disposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.IComponent.remove_Disposed
void System::ComponentModel::IComponent::remove_Disposed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComponent::remove_Disposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IComponent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.ComponentCollection
#include "System/ComponentModel/ComponentCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IContainer.Add
void System::ComponentModel::IContainer::Add(::System::ComponentModel::IComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.IContainer.Add
void System::ComponentModel::IContainer::Add(::System::ComponentModel::IComponent* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: System.ComponentModel.IContainer.get_Components
::System::ComponentModel::ComponentCollection* System::ComponentModel::IContainer::get_Components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::get_Components");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ComponentCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IContainer.Remove
void System::ComponentModel::IContainer::Remove(::System::ComponentModel::IComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IContainer*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ICustomTypeDescriptor::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetClassName
::StringW System::ComponentModel::ICustomTypeDescriptor::GetClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetClassName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
::StringW System::ComponentModel::ICustomTypeDescriptor::GetComponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetComponentName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ICustomTypeDescriptor::GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
::System::ComponentModel::EventDescriptor* System::ComponentModel::ICustomTypeDescriptor::GetDefaultEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetDefaultEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ICustomTypeDescriptor::GetDefaultProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetDefaultProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetEditor
::Il2CppObject* System::ComponentModel::ICustomTypeDescriptor::GetEditor(::System::Type* editorBaseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, editorBaseType);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetEvents
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetEvents(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ICustomTypeDescriptor::GetProperties(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
::Il2CppObject* System::ComponentModel::ICustomTypeDescriptor::GetPropertyOwner(::System::ComponentModel::PropertyDescriptor* pd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetPropertyOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ICustomTypeDescriptor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, pd);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IDataErrorInfo
#include "System/ComponentModel/IDataErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IDataErrorInfo.get_Item
::StringW System::ComponentModel::IDataErrorInfo::get_Item(::StringW columnName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IDataErrorInfo::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IDataErrorInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, columnName);
}
// Autogenerated method: System.ComponentModel.IDataErrorInfo.get_Error
::StringW System::ComponentModel::IDataErrorInfo::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IDataErrorInfo::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IDataErrorInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IEditableObject
#include "System/ComponentModel/IEditableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IEditableObject.BeginEdit
void System::ComponentModel::IEditableObject::BeginEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IEditableObject::BeginEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IEditableObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IEditableObject.EndEdit
void System::ComponentModel::IEditableObject::EndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IEditableObject::EndEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IEditableObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IEditableObject.CancelEdit
void System::ComponentModel::IEditableObject::CancelEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IEditableObject::CancelEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IEditableObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IExtenderProvider.CanExtend
bool System::ComponentModel::IExtenderProvider::CanExtend(::Il2CppObject* extendee) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IExtenderProvider::CanExtend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IExtenderProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, extendee);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IIntellisenseBuilder
#include "System/ComponentModel/IIntellisenseBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IIntellisenseBuilder.get_Name
::StringW System::ComponentModel::IIntellisenseBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IIntellisenseBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IIntellisenseBuilder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IIntellisenseBuilder.Show
bool System::ComponentModel::IIntellisenseBuilder::Show(::StringW language, ::StringW value, ByRef<::StringW> newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IIntellisenseBuilder::Show");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IIntellisenseBuilder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, language, value, byref(newValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IListSource
#include "System/ComponentModel/IListSource.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IListSource.get_ContainsListCollection
bool System::ComponentModel::IListSource::get_ContainsListCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IListSource::get_ContainsListCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IListSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.IListSource.GetList
::System::Collections::IList* System::ComponentModel::IListSource::GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IListSource::GetList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IListSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.INestedContainer
#include "System/ComponentModel/INestedContainer.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.INestedContainer.get_Owner
::System::ComponentModel::IComponent* System::ComponentModel::INestedContainer::get_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INestedContainer::get_Owner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INestedContainer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.INestedSite
#include "System/ComponentModel/INestedSite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.INestedSite.get_FullName
::StringW System::ComponentModel::INestedSite::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INestedSite::get_FullName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INestedSite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.INotifyDataErrorInfo
#include "System/ComponentModel/INotifyDataErrorInfo.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.ComponentModel.DataErrorsChangedEventArgs
#include "System/ComponentModel/DataErrorsChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.INotifyDataErrorInfo.get_HasErrors
bool System::ComponentModel::INotifyDataErrorInfo::get_HasErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyDataErrorInfo::get_HasErrors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyDataErrorInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.INotifyDataErrorInfo.GetErrors
::System::Collections::IEnumerable* System::ComponentModel::INotifyDataErrorInfo::GetErrors(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyDataErrorInfo::GetErrors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyDataErrorInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerable*, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: System.ComponentModel.INotifyDataErrorInfo.add_ErrorsChanged
void System::ComponentModel::INotifyDataErrorInfo::add_ErrorsChanged(::System::EventHandler_1<::System::ComponentModel::DataErrorsChangedEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyDataErrorInfo::add_ErrorsChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyDataErrorInfo*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.INotifyDataErrorInfo.remove_ErrorsChanged
void System::ComponentModel::INotifyDataErrorInfo::remove_ErrorsChanged(::System::EventHandler_1<::System::ComponentModel::DataErrorsChangedEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyDataErrorInfo::remove_ErrorsChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyDataErrorInfo*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.INotifyPropertyChanged
#include "System/ComponentModel/INotifyPropertyChanged.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged
void System::ComponentModel::INotifyPropertyChanged::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyPropertyChanged::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyPropertyChanged*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged
void System::ComponentModel::INotifyPropertyChanged::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyPropertyChanged::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyPropertyChanged*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.INotifyPropertyChanging
#include "System/ComponentModel/INotifyPropertyChanging.hpp"
// Including type: System.ComponentModel.PropertyChangingEventHandler
#include "System/ComponentModel/PropertyChangingEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.INotifyPropertyChanging.add_PropertyChanging
void System::ComponentModel::INotifyPropertyChanging::add_PropertyChanging(::System::ComponentModel::PropertyChangingEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyPropertyChanging::add_PropertyChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyPropertyChanging*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.INotifyPropertyChanging.remove_PropertyChanging
void System::ComponentModel::INotifyPropertyChanging::remove_PropertyChanging(::System::ComponentModel::PropertyChangingEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::INotifyPropertyChanging::remove_PropertyChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::INotifyPropertyChanging*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IRaiseItemChangedEvents
#include "System/ComponentModel/IRaiseItemChangedEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents
bool System::ComponentModel::IRaiseItemChangedEvents::get_RaisesItemChangedEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IRaiseItemChangedEvents::get_RaisesItemChangedEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IRaiseItemChangedEvents*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IRevertibleChangeTracking
#include "System/ComponentModel/IRevertibleChangeTracking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IRevertibleChangeTracking.RejectChanges
void System::ComponentModel::IRevertibleChangeTracking::RejectChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IRevertibleChangeTracking::RejectChanges");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::IRevertibleChangeTracking*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISite.get_Component
::System::ComponentModel::IComponent* System::ComponentModel::ISite::get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Component");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::ISite::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Container");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_DesignMode
bool System::ComponentModel::ISite::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_DesignMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_Name
::StringW System::ComponentModel::ISite::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.set_Name
void System::ComponentModel::ISite::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::set_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISite*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISupportInitialize
#include "System/ComponentModel/ISupportInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISupportInitialize.BeginInit
void System::ComponentModel::ISupportInitialize::BeginInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitialize::BeginInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitialize*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISupportInitialize.EndInit
void System::ComponentModel::ISupportInitialize::EndInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitialize::EndInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitialize*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISupportInitializeNotification
#include "System/ComponentModel/ISupportInitializeNotification.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISupportInitializeNotification.get_IsInitialized
bool System::ComponentModel::ISupportInitializeNotification::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitializeNotification::get_IsInitialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitializeNotification*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISupportInitializeNotification.add_Initialized
void System::ComponentModel::ISupportInitializeNotification::add_Initialized(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitializeNotification::add_Initialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitializeNotification*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ISupportInitializeNotification.remove_Initialized
void System::ComponentModel::ISupportInitializeNotification::remove_Initialized(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISupportInitializeNotification::remove_Initialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISupportInitializeNotification*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.get_InvokeRequired
bool System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ISynchronizeInvoke::BeginInvoke(::System::Delegate* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, method, args);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.EndInvoke
::Il2CppObject* System::ComponentModel::ISynchronizeInvoke::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.Invoke
::Il2CppObject* System::ComponentModel::ISynchronizeInvoke::Invoke(::System::Delegate* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ISynchronizeInvoke*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::ITypeDescriptorContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::get_Container");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.get_Instance
::Il2CppObject* System::ComponentModel::ITypeDescriptorContext::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::get_Instance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.get_PropertyDescriptor
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ITypeDescriptorContext::get_PropertyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::get_PropertyDescriptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
bool System::ComponentModel::ITypeDescriptorContext::OnComponentChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::OnComponentChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
void System::ComponentModel::ITypeDescriptorContext::OnComponentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypeDescriptorContext::OnComponentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypeDescriptorContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ITypedList
#include "System/ComponentModel/ITypedList.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ITypedList.GetListName
::StringW System::ComponentModel::ITypedList::GetListName(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypedList::GetListName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypedList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, listAccessors);
}
// Autogenerated method: System.ComponentModel.ITypedList.GetItemProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ITypedList::GetItemProperties(::ArrayW<::System::ComponentModel::PropertyDescriptor*> listAccessors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ITypedList::GetItemProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ITypedList*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, listAccessors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ImmutableObjectAttribute
#include "System/ComponentModel/ImmutableObjectAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Yes
::System::ComponentModel::ImmutableObjectAttribute* System::ComponentModel::ImmutableObjectAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ImmutableObjectAttribute*>("System.ComponentModel", "ImmutableObjectAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Yes
void System::ComponentModel::ImmutableObjectAttribute::_set_Yes(::System::ComponentModel::ImmutableObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ImmutableObjectAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ImmutableObjectAttribute No
::System::ComponentModel::ImmutableObjectAttribute* System::ComponentModel::ImmutableObjectAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ImmutableObjectAttribute*>("System.ComponentModel", "ImmutableObjectAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ImmutableObjectAttribute No
void System::ComponentModel::ImmutableObjectAttribute::_set_No(::System::ComponentModel::ImmutableObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ImmutableObjectAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Default
::System::ComponentModel::ImmutableObjectAttribute* System::ComponentModel::ImmutableObjectAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ImmutableObjectAttribute*>("System.ComponentModel", "ImmutableObjectAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ImmutableObjectAttribute Default
void System::ComponentModel::ImmutableObjectAttribute::_set_Default(::System::ComponentModel::ImmutableObjectAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ImmutableObjectAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean immutable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ImmutableObjectAttribute::dyn_immutable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::dyn_immutable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immutable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.get_Immutable
bool System::ComponentModel::ImmutableObjectAttribute::get_Immutable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::get_Immutable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Immutable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute..cctor
void System::ComponentModel::ImmutableObjectAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ImmutableObjectAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.Equals
bool System::ComponentModel::ImmutableObjectAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.GetHashCode
int System::ComponentModel::ImmutableObjectAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute
bool System::ComponentModel::ImmutableObjectAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ImmutableObjectAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.InitializationEventAttribute
#include "System/ComponentModel/InitializationEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String eventName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::InitializationEventAttribute::dyn_eventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InitializationEventAttribute::dyn_eventName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.InitializationEventAttribute.get_EventName
::StringW System::ComponentModel::InitializationEventAttribute::get_EventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InitializationEventAttribute::get_EventName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EventName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.InstallerTypeAttribute
#include "System/ComponentModel/InstallerTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::InstallerTypeAttribute::dyn__typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::dyn__typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.InstallerTypeAttribute.get_InstallerType
::System::Type* System::ComponentModel::InstallerTypeAttribute::get_InstallerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::get_InstallerType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::InstallerTypeAttribute*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.InstallerTypeAttribute.Equals
bool System::ComponentModel::InstallerTypeAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.InstallerTypeAttribute.GetHashCode
int System::ComponentModel::InstallerTypeAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstallerTypeAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.InstanceCreationEditor
#include "System/ComponentModel/InstanceCreationEditor.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.InstanceCreationEditor.get_Text
::StringW System::ComponentModel::InstanceCreationEditor::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstanceCreationEditor::get_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::InstanceCreationEditor*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.InstanceCreationEditor.CreateInstance
::Il2CppObject* System::ComponentModel::InstanceCreationEditor::CreateInstance(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* instanceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::InstanceCreationEditor::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::InstanceCreationEditor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, instanceType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int16Converter
#include "System/ComponentModel/Int16Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int16Converter.get_TargetType
::System::Type* System::ComponentModel::Int16Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, culture);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int16Converter.ToString
::StringW System::ComponentModel::Int16Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int32Converter
#include "System/ComponentModel/Int32Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int32Converter.get_TargetType
::System::Type* System::ComponentModel::Int32Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, culture);
}
// Autogenerated method: System.ComponentModel.Int32Converter.ToString
::StringW System::ComponentModel::Int32Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int64Converter
#include "System/ComponentModel/Int64Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int64Converter.get_TargetType
::System::Type* System::ComponentModel::Int64Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, culture);
}
// Autogenerated method: System.ComponentModel.Int64Converter.ToString
::StringW System::ComponentModel::Int64Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BaseNumberConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IntSecurity
#include "System/ComponentModel/IntSecurity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IntSecurity.UnsafeGetFullPath
::StringW System::ComponentModel::IntSecurity::UnsafeGetFullPath(::StringW fileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IntSecurity::UnsafeGetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "IntSecurity", "UnsafeGetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.InvalidAsynchronousStateException
#include "System/ComponentModel/InvalidAsynchronousStateException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.InvalidEnumArgumentException
#include "System/ComponentModel/InvalidEnumArgumentException.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicFileLicenseProvider
#include "System/ComponentModel/LicFileLicenseProvider.hpp"
// Including type: System.ComponentModel.LicFileLicenseProvider/LicFileLicense
#include "System/ComponentModel/LicFileLicenseProvider_LicFileLicense.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider.IsKeyValid
bool System::ComponentModel::LicFileLicenseProvider::IsKeyValid(::StringW key, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::IsKeyValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicFileLicenseProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, type);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider.GetKey
::StringW System::ComponentModel::LicFileLicenseProvider::GetKey(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::GetKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicFileLicenseProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider.GetLicense
::System::ComponentModel::License* System::ComponentModel::LicFileLicenseProvider::GetLicense(::System::ComponentModel::LicenseContext* context, ::System::Type* type, ::Il2CppObject* instance, bool allowExceptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::GetLicense");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::License*, false>(this, ___internal__method, context, type, instance, allowExceptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.LicFileLicenseProvider/LicFileLicense
#include "System/ComponentModel/LicFileLicenseProvider_LicFileLicense.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String key
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LicFileLicenseProvider::LicFileLicense::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::LicFileLicense::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider/LicFileLicense.get_LicenseKey
::StringW System::ComponentModel::LicFileLicenseProvider::LicFileLicense::get_LicenseKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::LicFileLicense::get_LicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicFileLicenseProvider/LicFileLicense.Dispose
void System::ComponentModel::LicFileLicenseProvider::LicFileLicense::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicFileLicenseProvider::LicFileLicense::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.License.get_LicenseKey
::StringW System::ComponentModel::License::get_LicenseKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::License::get_LicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.License.Dispose
void System::ComponentModel::License::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::License::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::License*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
// Including type: System.ComponentModel.LicenseUsageMode
#include "System/ComponentModel/LicenseUsageMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.LicenseContext.get_UsageMode
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseContext::get_UsageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::get_UsageMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseUsageMode, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseContext.GetSavedLicenseKey
::StringW System::ComponentModel::LicenseContext::GetSavedLicenseKey(::System::Type* type, ::System::Reflection::Assembly* resourceAssembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::GetSavedLicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, type, resourceAssembly);
}
// Autogenerated method: System.ComponentModel.LicenseContext.GetService
::Il2CppObject* System::ComponentModel::LicenseContext::GetService(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::GetService");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseContext.SetSavedLicenseKey
void System::ComponentModel::LicenseContext::SetSavedLicenseKey(::System::Type* type, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseContext::SetSavedLicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseException
#include "System/ComponentModel/LicenseException.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::LicenseException::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseException::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object instance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::LicenseException::dyn_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseException::dyn_instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LicenseException.get_LicensedType
::System::Type* System::ComponentModel::LicenseException::get_LicensedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseException::get_LicensedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LicensedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseException.GetObjectData
void System::ComponentModel::LicenseException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseManager
#include "System/ComponentModel/LicenseManager.hpp"
// Including type: System.ComponentModel.LicenseManager/LicenseInteropHelper
#include "System/ComponentModel/LicenseManager_LicenseInteropHelper.hpp"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.ComponentModel.LicenseUsageMode
#include "System/ComponentModel/LicenseUsageMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.LicenseProvider
#include "System/ComponentModel/LicenseProvider.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object selfLock
::Il2CppObject* System::ComponentModel::LicenseManager::_get_selfLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_selfLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "LicenseManager", "selfLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object selfLock
void System::ComponentModel::LicenseManager::_set_selfLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_selfLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "selfLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.LicenseContext context
::System::ComponentModel::LicenseContext* System::ComponentModel::LicenseManager::_get_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_context");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseContext*>("System.ComponentModel", "LicenseManager", "context"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.LicenseContext context
void System::ComponentModel::LicenseManager::_set_context(::System::ComponentModel::LicenseContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_context");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "context", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object contextLockHolder
::Il2CppObject* System::ComponentModel::LicenseManager::_get_contextLockHolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_contextLockHolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "LicenseManager", "contextLockHolder"));
}
// Autogenerated static field setter
// Set static field: static private System.Object contextLockHolder
void System::ComponentModel::LicenseManager::_set_contextLockHolder(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_contextLockHolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "contextLockHolder", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable providers
::System::Collections::Hashtable* System::ComponentModel::LicenseManager::_get_providers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_providers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "LicenseManager", "providers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable providers
void System::ComponentModel::LicenseManager::_set_providers(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_providers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "providers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable providerInstances
::System::Collections::Hashtable* System::ComponentModel::LicenseManager::_get_providerInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_providerInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "LicenseManager", "providerInstances"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable providerInstances
void System::ComponentModel::LicenseManager::_set_providerInstances(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_providerInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "providerInstances", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object internalSyncObject
::Il2CppObject* System::ComponentModel::LicenseManager::_get_internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_get_internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "LicenseManager", "internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object internalSyncObject
void System::ComponentModel::LicenseManager::_set_internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::_set_internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager", "internalSyncObject", value));
}
// Autogenerated method: System.ComponentModel.LicenseManager.get_CurrentContext
::System::ComponentModel::LicenseContext* System::ComponentModel::LicenseManager::get_CurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::get_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "get_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseManager.set_CurrentContext
void System::ComponentModel::LicenseManager::set_CurrentContext(::System::ComponentModel::LicenseContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::set_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "set_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.LicenseManager.get_UsageMode
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseManager::get_UsageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::get_UsageMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "get_UsageMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseUsageMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseManager.CacheProvider
void System::ComponentModel::LicenseManager::CacheProvider(::System::Type* type, ::System::ComponentModel::LicenseProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::CacheProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "CacheProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, provider);
}
// Autogenerated method: System.ComponentModel.LicenseManager.CreateWithContext
::Il2CppObject* System::ComponentModel::LicenseManager::CreateWithContext(::System::Type* type, ::System::ComponentModel::LicenseContext* creationContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::CreateWithContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "CreateWithContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(creationContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, creationContext);
}
// Autogenerated method: System.ComponentModel.LicenseManager.CreateWithContext
::Il2CppObject* System::ComponentModel::LicenseManager::CreateWithContext(::System::Type* type, ::System::ComponentModel::LicenseContext* creationContext, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::CreateWithContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "CreateWithContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(creationContext), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, creationContext, args);
}
// Autogenerated method: System.ComponentModel.LicenseManager.GetCachedNoLicenseProvider
bool System::ComponentModel::LicenseManager::GetCachedNoLicenseProvider(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::GetCachedNoLicenseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "GetCachedNoLicenseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.GetCachedProvider
::System::ComponentModel::LicenseProvider* System::ComponentModel::LicenseManager::GetCachedProvider(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::GetCachedProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "GetCachedProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.GetCachedProviderInstance
::System::ComponentModel::LicenseProvider* System::ComponentModel::LicenseManager::GetCachedProviderInstance(::System::Type* providerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::GetCachedProviderInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "GetCachedProviderInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, providerType);
}
// Autogenerated method: System.ComponentModel.LicenseManager.GetLicenseInteropHelperType
::System::IntPtr System::ComponentModel::LicenseManager::GetLicenseInteropHelperType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::GetLicenseInteropHelperType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "GetLicenseInteropHelperType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseManager.IsLicensed
bool System::ComponentModel::LicenseManager::IsLicensed(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::IsLicensed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "IsLicensed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.IsValid
bool System::ComponentModel::LicenseManager::IsValid(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.IsValid
bool System::ComponentModel::LicenseManager::IsValid(::System::Type* type, ::Il2CppObject* instance, ByRef<::System::ComponentModel::License*> license) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::License*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, instance, byref(license));
}
// Autogenerated method: System.ComponentModel.LicenseManager.LockContext
void System::ComponentModel::LicenseManager::LockContext(::Il2CppObject* contextUser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LockContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "LockContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contextUser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contextUser);
}
// Autogenerated method: System.ComponentModel.LicenseManager.UnlockContext
void System::ComponentModel::LicenseManager::UnlockContext(::Il2CppObject* contextUser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::UnlockContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "UnlockContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contextUser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contextUser);
}
// Autogenerated method: System.ComponentModel.LicenseManager.ValidateInternal
bool System::ComponentModel::LicenseManager::ValidateInternal(::System::Type* type, ::Il2CppObject* instance, bool allowExceptions, ByRef<::System::ComponentModel::License*> license) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::ValidateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "ValidateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(allowExceptions), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::License*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, instance, allowExceptions, byref(license));
}
// Autogenerated method: System.ComponentModel.LicenseManager.ValidateInternalRecursive
bool System::ComponentModel::LicenseManager::ValidateInternalRecursive(::System::ComponentModel::LicenseContext* context, ::System::Type* type, ::Il2CppObject* instance, bool allowExceptions, ByRef<::System::ComponentModel::License*> license, ByRef<::StringW> licenseKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::ValidateInternalRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "ValidateInternalRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(allowExceptions), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::License*&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, type, instance, allowExceptions, byref(license), byref(licenseKey));
}
// Autogenerated method: System.ComponentModel.LicenseManager.Validate
void System::ComponentModel::LicenseManager::Validate(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.LicenseManager.Validate
::System::ComponentModel::License* System::ComponentModel::LicenseManager::Validate(::System::Type* type, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::License*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, instance);
}
// Autogenerated method: System.ComponentModel.LicenseManager..cctor
void System::ComponentModel::LicenseManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseManager/LicenseInteropHelper
#include "System/ComponentModel/LicenseManager_LicenseInteropHelper.hpp"
// Including type: System.ComponentModel.LicenseManager/LicenseInteropHelper/CLRLicenseContext
#include "System/ComponentModel/LicenseManager_LicenseInteropHelper_CLRLicenseContext.hpp"
// Including type: System.ComponentModel.Design.DesigntimeLicenseContext
#include "System/ComponentModel/Design/DesigntimeLicenseContext.hpp"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 S_OK
int System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_S_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_S_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "S_OK"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 S_OK
void System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_S_OK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_S_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "S_OK", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 E_NOTIMPL
int System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_E_NOTIMPL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_E_NOTIMPL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "E_NOTIMPL"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 E_NOTIMPL
void System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_E_NOTIMPL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_E_NOTIMPL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "E_NOTIMPL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CLASS_E_NOTLICENSED
int System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_CLASS_E_NOTLICENSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_CLASS_E_NOTLICENSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "CLASS_E_NOTLICENSED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CLASS_E_NOTLICENSED
void System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_CLASS_E_NOTLICENSED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_CLASS_E_NOTLICENSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "CLASS_E_NOTLICENSED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 E_FAIL
int System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_E_FAIL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_get_E_FAIL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "E_FAIL"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 E_FAIL
void System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_E_FAIL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::_set_E_FAIL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "E_FAIL", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.Design.DesigntimeLicenseContext helperContext
[[deprecated("Use field access instead!")]] ::System::ComponentModel::Design::DesigntimeLicenseContext*& System::ComponentModel::LicenseManager::LicenseInteropHelper::dyn_helperContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::dyn_helperContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helperContext"))->offset;
  return *reinterpret_cast<::System::ComponentModel::Design::DesigntimeLicenseContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.LicenseContext savedLicenseContext
[[deprecated("Use field access instead!")]] ::System::ComponentModel::LicenseContext*& System::ComponentModel::LicenseManager::LicenseInteropHelper::dyn_savedLicenseContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::dyn_savedLicenseContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "savedLicenseContext"))->offset;
  return *reinterpret_cast<::System::ComponentModel::LicenseContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type savedType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::LicenseManager::LicenseInteropHelper::dyn_savedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::dyn_savedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "savedType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper.AllocateAndValidateLicense
::Il2CppObject* System::ComponentModel::LicenseManager::LicenseInteropHelper::AllocateAndValidateLicense(::System::RuntimeTypeHandle rth, ::System::IntPtr bstrKey, int fDesignTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::AllocateAndValidateLicense");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "AllocateAndValidateLicense", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rth), ::il2cpp_utils::ExtractType(bstrKey), ::il2cpp_utils::ExtractType(fDesignTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rth, bstrKey, fDesignTime);
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper.RequestLicKey
int System::ComponentModel::LicenseManager::LicenseInteropHelper::RequestLicKey(::System::RuntimeTypeHandle rth, ByRef<::System::IntPtr> pbstrKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::RequestLicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseManager/LicenseInteropHelper", "RequestLicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rth), ::il2cpp_utils::ExtractType(pbstrKey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rth, byref(pbstrKey));
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper.GetLicInfo
void System::ComponentModel::LicenseManager::LicenseInteropHelper::GetLicInfo(::System::RuntimeTypeHandle rth, ByRef<int> pRuntimeKeyAvail, ByRef<int> pLicVerified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::GetLicInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLicInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rth), ::il2cpp_utils::ExtractType(pRuntimeKeyAvail), ::il2cpp_utils::ExtractType(pLicVerified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rth, byref(pRuntimeKeyAvail), byref(pLicVerified));
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper.GetCurrentContextInfo
void System::ComponentModel::LicenseManager::LicenseInteropHelper::GetCurrentContextInfo(ByRef<int> fDesignTime, ByRef<::System::IntPtr> bstrKey, ::System::RuntimeTypeHandle rth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::GetCurrentContextInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentContextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fDesignTime), ::il2cpp_utils::ExtractType(bstrKey), ::il2cpp_utils::ExtractType(rth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(fDesignTime), byref(bstrKey), rth);
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper.SaveKeyInCurrentContext
void System::ComponentModel::LicenseManager::LicenseInteropHelper::SaveKeyInCurrentContext(::System::IntPtr bstrKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::SaveKeyInCurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveKeyInCurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bstrKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bstrKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.LicenseManager/LicenseInteropHelper/CLRLicenseContext
#include "System/ComponentModel/LicenseManager_LicenseInteropHelper_CLRLicenseContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.LicenseUsageMode usageMode
[[deprecated("Use field access instead!")]] ::System::ComponentModel::LicenseUsageMode& System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::dyn_usageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::dyn_usageMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usageMode"))->offset;
  return *reinterpret_cast<::System::ComponentModel::LicenseUsageMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String key
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper/CLRLicenseContext.get_UsageMode
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::get_UsageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::get_UsageMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::LicenseUsageMode, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper/CLRLicenseContext.GetSavedLicenseKey
::StringW System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::GetSavedLicenseKey(::System::Type* type, ::System::Reflection::Assembly* resourceAssembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::GetSavedLicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, type, resourceAssembly);
}
// Autogenerated method: System.ComponentModel.LicenseManager/LicenseInteropHelper/CLRLicenseContext.SetSavedLicenseKey
void System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::SetSavedLicenseKey(::System::Type* type, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseManager::LicenseInteropHelper::CLRLicenseContext::SetSavedLicenseKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseContext*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseProvider
#include "System/ComponentModel/LicenseProvider.hpp"
// Including type: System.ComponentModel.License
#include "System/ComponentModel/License.hpp"
// Including type: System.ComponentModel.LicenseContext
#include "System/ComponentModel/LicenseContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.LicenseProvider.GetLicense
::System::ComponentModel::License* System::ComponentModel::LicenseProvider::GetLicense(::System::ComponentModel::LicenseContext* context, ::System::Type* type, ::Il2CppObject* instance, bool allowExceptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProvider::GetLicense");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::LicenseProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::License*, false>(this, ___internal__method, context, type, instance, allowExceptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LicenseProviderAttribute
#include "System/ComponentModel/LicenseProviderAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LicenseProviderAttribute Default
::System::ComponentModel::LicenseProviderAttribute* System::ComponentModel::LicenseProviderAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseProviderAttribute*>("System.ComponentModel", "LicenseProviderAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LicenseProviderAttribute Default
void System::ComponentModel::LicenseProviderAttribute::_set_Default(::System::ComponentModel::LicenseProviderAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseProviderAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Type licenseProviderType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::LicenseProviderAttribute::dyn_licenseProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::dyn_licenseProviderType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "licenseProviderType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String licenseProviderName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LicenseProviderAttribute::dyn_licenseProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::dyn_licenseProviderName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "licenseProviderName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.get_LicenseProvider
::System::Type* System::ComponentModel::LicenseProviderAttribute::get_LicenseProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::get_LicenseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LicenseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute..cctor
void System::ComponentModel::LicenseProviderAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LicenseProviderAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::LicenseProviderAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.Equals
bool System::ComponentModel::LicenseProviderAttribute::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.LicenseProviderAttribute.GetHashCode
int System::ComponentModel::LicenseProviderAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseProviderAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.LicenseUsageMode
#include "System/ComponentModel/LicenseUsageMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.LicenseUsageMode Runtime
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseUsageMode::_get_Runtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_get_Runtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseUsageMode>("System.ComponentModel", "LicenseUsageMode", "Runtime"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.LicenseUsageMode Runtime
void System::ComponentModel::LicenseUsageMode::_set_Runtime(::System::ComponentModel::LicenseUsageMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_set_Runtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseUsageMode", "Runtime", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.LicenseUsageMode Designtime
::System::ComponentModel::LicenseUsageMode System::ComponentModel::LicenseUsageMode::_get_Designtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_get_Designtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LicenseUsageMode>("System.ComponentModel", "LicenseUsageMode", "Designtime"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.LicenseUsageMode Designtime
void System::ComponentModel::LicenseUsageMode::_set_Designtime(::System::ComponentModel::LicenseUsageMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::_set_Designtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LicenseUsageMode", "Designtime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::LicenseUsageMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LicenseUsageMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListBindableAttribute
#include "System/ComponentModel/ListBindableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ListBindableAttribute Yes
::System::ComponentModel::ListBindableAttribute* System::ComponentModel::ListBindableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListBindableAttribute*>("System.ComponentModel", "ListBindableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ListBindableAttribute Yes
void System::ComponentModel::ListBindableAttribute::_set_Yes(::System::ComponentModel::ListBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListBindableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ListBindableAttribute No
::System::ComponentModel::ListBindableAttribute* System::ComponentModel::ListBindableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListBindableAttribute*>("System.ComponentModel", "ListBindableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ListBindableAttribute No
void System::ComponentModel::ListBindableAttribute::_set_No(::System::ComponentModel::ListBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListBindableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.ListBindableAttribute Default
::System::ComponentModel::ListBindableAttribute* System::ComponentModel::ListBindableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListBindableAttribute*>("System.ComponentModel", "ListBindableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.ListBindableAttribute Default
void System::ComponentModel::ListBindableAttribute::_set_Default(::System::ComponentModel::ListBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListBindableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean listBindable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ListBindableAttribute::dyn_listBindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::dyn_listBindable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listBindable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDefault
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::ListBindableAttribute::dyn_isDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::dyn_isDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.get_ListBindable
bool System::ComponentModel::ListBindableAttribute::get_ListBindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::get_ListBindable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListBindable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute..cctor
void System::ComponentModel::ListBindableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ListBindableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.Equals
bool System::ComponentModel::ListBindableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.GetHashCode
int System::ComponentModel::ListBindableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListBindableAttribute.IsDefaultAttribute
bool System::ComponentModel::ListBindableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListBindableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ListChangedType listChangedType
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedType& System::ComponentModel::ListChangedEventArgs::dyn_listChangedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_listChangedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listChangedType"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 newIndex
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_newIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_newIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 oldIndex
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_oldIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_oldIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor propDesc
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptor*& System::ComponentModel::ListChangedEventArgs::dyn_propDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_propDesc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propDesc"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_ListChangedType
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedEventArgs::get_ListChangedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_ListChangedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListChangedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListChangedType, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_NewIndex
int System::ComponentModel::ListChangedEventArgs::get_NewIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_NewIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_OldIndex
int System::ComponentModel::ListChangedEventArgs::get_OldIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_OldIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OldIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListChangedEventArgs.get_PropertyDescriptor
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ListChangedEventArgs::get_PropertyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::get_PropertyDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.Invoke
void System::ComponentModel::ListChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListChangedEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ListChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListChangedEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.EndInvoke
void System::ComponentModel::ListChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListChangedEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType Reset
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType Reset
void System::ComponentModel::ListChangedType::_set_Reset(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "Reset", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemAdded
void System::ComponentModel::ListChangedType::_set_ItemAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemDeleted
void System::ComponentModel::ListChangedType::_set_ItemDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemMoved
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemMoved"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemMoved
void System::ComponentModel::ListChangedType::_set_ItemMoved(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemMoved", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemChanged
void System::ComponentModel::ListChangedType::_set_ItemChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.ListSortDescription
#include "System/ComponentModel/ListSortDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor property
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptor*& System::ComponentModel::ListSortDescription::dyn_property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::dyn_property");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "property"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ListSortDirection sortDirection
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListSortDirection& System::ComponentModel::ListSortDescription::dyn_sortDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::dyn_sortDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortDirection"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListSortDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.get_PropertyDescriptor
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::ListSortDescription::get_PropertyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::get_PropertyDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.set_PropertyDescriptor
void System::ComponentModel::ListSortDescription::set_PropertyDescriptor(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::set_PropertyDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.get_SortDirection
::System::ComponentModel::ListSortDirection System::ComponentModel::ListSortDescription::get_SortDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::get_SortDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDirection, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescription.set_SortDirection
void System::ComponentModel::ListSortDescription::set_SortDirection(::System::ComponentModel::ListSortDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescription::set_SortDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SortDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListSortDescriptionCollection
#include "System/ComponentModel/ListSortDescriptionCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.ComponentModel.ListSortDescription
#include "System/ComponentModel/ListSortDescription.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList sorts
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::ComponentModel::ListSortDescriptionCollection::dyn_sorts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::dyn_sorts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sorts"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.get_Item
::System::ComponentModel::ListSortDescription* System::ComponentModel::ListSortDescriptionCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDescription*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.set_Item
void System::ComponentModel::ListSortDescriptionCollection::set_Item(int index, ::System::ComponentModel::ListSortDescription* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.set_Item
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Add
int System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Clear
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.Contains
bool System::ComponentModel::ListSortDescriptionCollection::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.IndexOf
int System::ComponentModel::ListSortDescriptionCollection::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Insert
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.Remove
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::ListSortDescriptionCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.get_Count
int System::ComponentModel::ListSortDescriptionCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.get_IsSynchronized
bool System::ComponentModel::ListSortDescriptionCollection::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::ListSortDescriptionCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.CopyTo
void System::ComponentModel::ListSortDescriptionCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.ListSortDescriptionCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::ListSortDescriptionCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDescriptionCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ListSortDescriptionCollection*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListSortDirection
#include "System/ComponentModel/ListSortDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListSortDirection Ascending
::System::ComponentModel::ListSortDirection System::ComponentModel::ListSortDirection::_get_Ascending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_get_Ascending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListSortDirection>("System.ComponentModel", "ListSortDirection", "Ascending"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListSortDirection Ascending
void System::ComponentModel::ListSortDirection::_set_Ascending(::System::ComponentModel::ListSortDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_set_Ascending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListSortDirection", "Ascending", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListSortDirection Descending
::System::ComponentModel::ListSortDirection System::ComponentModel::ListSortDirection::_get_Descending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_get_Descending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListSortDirection>("System.ComponentModel", "ListSortDirection", "Descending"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListSortDirection Descending
void System::ComponentModel::ListSortDirection::_set_Descending(::System::ComponentModel::ListSortDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::_set_Descending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListSortDirection", "Descending", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListSortDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListSortDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LocalizableAttribute
#include "System/ComponentModel/LocalizableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LocalizableAttribute Yes
::System::ComponentModel::LocalizableAttribute* System::ComponentModel::LocalizableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LocalizableAttribute*>("System.ComponentModel", "LocalizableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LocalizableAttribute Yes
void System::ComponentModel::LocalizableAttribute::_set_Yes(::System::ComponentModel::LocalizableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LocalizableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LocalizableAttribute No
::System::ComponentModel::LocalizableAttribute* System::ComponentModel::LocalizableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LocalizableAttribute*>("System.ComponentModel", "LocalizableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LocalizableAttribute No
void System::ComponentModel::LocalizableAttribute::_set_No(::System::ComponentModel::LocalizableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LocalizableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LocalizableAttribute Default
::System::ComponentModel::LocalizableAttribute* System::ComponentModel::LocalizableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LocalizableAttribute*>("System.ComponentModel", "LocalizableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LocalizableAttribute Default
void System::ComponentModel::LocalizableAttribute::_set_Default(::System::ComponentModel::LocalizableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LocalizableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isLocalizable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::LocalizableAttribute::dyn_isLocalizable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::dyn_isLocalizable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLocalizable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.get_IsLocalizable
bool System::ComponentModel::LocalizableAttribute::get_IsLocalizable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::get_IsLocalizable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLocalizable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute..cctor
void System::ComponentModel::LocalizableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LocalizableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.IsDefaultAttribute
bool System::ComponentModel::LocalizableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.Equals
bool System::ComponentModel::LocalizableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.LocalizableAttribute.GetHashCode
int System::ComponentModel::LocalizableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LocalizableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.LookupBindingPropertiesAttribute
#include "System/ComponentModel/LookupBindingPropertiesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.LookupBindingPropertiesAttribute Default
::System::ComponentModel::LookupBindingPropertiesAttribute* System::ComponentModel::LookupBindingPropertiesAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::LookupBindingPropertiesAttribute*>("System.ComponentModel", "LookupBindingPropertiesAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.LookupBindingPropertiesAttribute Default
void System::ComponentModel::LookupBindingPropertiesAttribute::_set_Default(::System::ComponentModel::LookupBindingPropertiesAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "LookupBindingPropertiesAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String dataSource
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataSource"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String displayMember
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_displayMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_displayMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayMember"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String valueMember
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_valueMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_valueMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueMember"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String lookupMember
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::LookupBindingPropertiesAttribute::dyn_lookupMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::dyn_lookupMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookupMember"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_DataSource
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_DataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_DataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_DisplayMember
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_DisplayMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_DisplayMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_ValueMember
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_ValueMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_ValueMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.get_LookupMember
::StringW System::ComponentModel::LookupBindingPropertiesAttribute::get_LookupMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::get_LookupMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LookupMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute..cctor
void System::ComponentModel::LookupBindingPropertiesAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "LookupBindingPropertiesAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.Equals
bool System::ComponentModel::LookupBindingPropertiesAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.LookupBindingPropertiesAttribute.GetHashCode
int System::ComponentModel::LookupBindingPropertiesAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MarshalByValueComponent
#include "System/ComponentModel/MarshalByValueComponent.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object EventDisposed
::Il2CppObject* System::ComponentModel::MarshalByValueComponent::_get_EventDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::_get_EventDisposed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "MarshalByValueComponent", "EventDisposed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object EventDisposed
void System::ComponentModel::MarshalByValueComponent::_set_EventDisposed(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::_set_EventDisposed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MarshalByValueComponent", "EventDisposed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISite site
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISite*& System::ComponentModel::MarshalByValueComponent::dyn_site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::dyn_site");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "site"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList events
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList*& System::ComponentModel::MarshalByValueComponent::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.add_Disposed
void System::ComponentModel::MarshalByValueComponent::add_Disposed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::add_Disposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.remove_Disposed
void System::ComponentModel::MarshalByValueComponent::remove_Disposed(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::remove_Disposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_Events
::System::ComponentModel::EventHandlerList* System::ComponentModel::MarshalByValueComponent::get_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_Events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventHandlerList*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_Site
::System::ComponentModel::ISite* System::ComponentModel::MarshalByValueComponent::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.set_Site
void System::ComponentModel::MarshalByValueComponent::set_Site(::System::ComponentModel::ISite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::set_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.Dispose
void System::ComponentModel::MarshalByValueComponent::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.Dispose
void System::ComponentModel::MarshalByValueComponent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::MarshalByValueComponent::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_Container");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.GetService
::Il2CppObject* System::ComponentModel::MarshalByValueComponent::GetService(::System::Type* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::GetService");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, service);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.get_DesignMode
bool System::ComponentModel::MarshalByValueComponent::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::get_DesignMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent..cctor
void System::ComponentModel::MarshalByValueComponent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MarshalByValueComponent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.Finalize
void System::ComponentModel::MarshalByValueComponent::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MarshalByValueComponent.ToString
::StringW System::ComponentModel::MarshalByValueComponent::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MarshalByValueComponent::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MaskedTextProvider/CharDescriptor
#include "System/ComponentModel/MaskedTextProvider_CharDescriptor.hpp"
// Including type: System.ComponentModel.MaskedTextProvider
#include "System/ComponentModel/MaskedTextProvider.hpp"
// Including type: System.ComponentModel.MaskedTextProvider/CaseConversion
#include "System/ComponentModel/MaskedTextProvider_CaseConversion.hpp"
// Including type: System.ComponentModel.MaskedTextProvider/CharType
#include "System/ComponentModel/MaskedTextProvider_CharType.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.ComponentModel.MaskedTextResultHint
#include "System/ComponentModel/MaskedTextResultHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char spaceChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::_get_spaceChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_spaceChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.ComponentModel", "MaskedTextProvider", "spaceChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char spaceChar
void System::ComponentModel::MaskedTextProvider::_set_spaceChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_spaceChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "spaceChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char defaultPromptChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::_get_defaultPromptChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_defaultPromptChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.ComponentModel", "MaskedTextProvider", "defaultPromptChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char defaultPromptChar
void System::ComponentModel::MaskedTextProvider::_set_defaultPromptChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_defaultPromptChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "defaultPromptChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char nullPasswordChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::_get_nullPasswordChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_nullPasswordChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.ComponentModel", "MaskedTextProvider", "nullPasswordChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char nullPasswordChar
void System::ComponentModel::MaskedTextProvider::_set_nullPasswordChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_nullPasswordChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "nullPasswordChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean defaultAllowPrompt
bool System::ComponentModel::MaskedTextProvider::_get_defaultAllowPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_defaultAllowPrompt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "MaskedTextProvider", "defaultAllowPrompt"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean defaultAllowPrompt
void System::ComponentModel::MaskedTextProvider::_set_defaultAllowPrompt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_defaultAllowPrompt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "defaultAllowPrompt", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 invalidIndex
int System::ComponentModel::MaskedTextProvider::_get_invalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_invalidIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "invalidIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 invalidIndex
void System::ComponentModel::MaskedTextProvider::_set_invalidIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_invalidIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "invalidIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte editAny
uint8_t System::ComponentModel::MaskedTextProvider::_get_editAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_editAny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.ComponentModel", "MaskedTextProvider", "editAny"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte editAny
void System::ComponentModel::MaskedTextProvider::_set_editAny(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_editAny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "editAny", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte editUnassigned
uint8_t System::ComponentModel::MaskedTextProvider::_get_editUnassigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_editUnassigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.ComponentModel", "MaskedTextProvider", "editUnassigned"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte editUnassigned
void System::ComponentModel::MaskedTextProvider::_set_editUnassigned(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_editUnassigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "editUnassigned", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte editAssigned
uint8_t System::ComponentModel::MaskedTextProvider::_get_editAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_editAssigned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.ComponentModel", "MaskedTextProvider", "editAssigned"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte editAssigned
void System::ComponentModel::MaskedTextProvider::_set_editAssigned(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_editAssigned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "editAssigned", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean forward
bool System::ComponentModel::MaskedTextProvider::_get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_forward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "MaskedTextProvider", "forward"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean forward
void System::ComponentModel::MaskedTextProvider::_set_forward(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_forward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "forward", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean backward
bool System::ComponentModel::MaskedTextProvider::_get_backward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_backward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "MaskedTextProvider", "backward"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean backward
void System::ComponentModel::MaskedTextProvider::_set_backward(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_backward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "backward", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ASCII_ONLY
int System::ComponentModel::MaskedTextProvider::_get_ASCII_ONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_ASCII_ONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "ASCII_ONLY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ASCII_ONLY
void System::ComponentModel::MaskedTextProvider::_set_ASCII_ONLY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_ASCII_ONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "ASCII_ONLY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ALLOW_PROMPT_AS_INPUT
int System::ComponentModel::MaskedTextProvider::_get_ALLOW_PROMPT_AS_INPUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_ALLOW_PROMPT_AS_INPUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "ALLOW_PROMPT_AS_INPUT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ALLOW_PROMPT_AS_INPUT
void System::ComponentModel::MaskedTextProvider::_set_ALLOW_PROMPT_AS_INPUT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_ALLOW_PROMPT_AS_INPUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "ALLOW_PROMPT_AS_INPUT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 INCLUDE_PROMPT
int System::ComponentModel::MaskedTextProvider::_get_INCLUDE_PROMPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_INCLUDE_PROMPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "INCLUDE_PROMPT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 INCLUDE_PROMPT
void System::ComponentModel::MaskedTextProvider::_set_INCLUDE_PROMPT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_INCLUDE_PROMPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "INCLUDE_PROMPT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 INCLUDE_LITERALS
int System::ComponentModel::MaskedTextProvider::_get_INCLUDE_LITERALS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_INCLUDE_LITERALS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "INCLUDE_LITERALS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 INCLUDE_LITERALS
void System::ComponentModel::MaskedTextProvider::_set_INCLUDE_LITERALS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_INCLUDE_LITERALS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "INCLUDE_LITERALS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RESET_ON_PROMPT
int System::ComponentModel::MaskedTextProvider::_get_RESET_ON_PROMPT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_RESET_ON_PROMPT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "RESET_ON_PROMPT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RESET_ON_PROMPT
void System::ComponentModel::MaskedTextProvider::_set_RESET_ON_PROMPT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_RESET_ON_PROMPT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "RESET_ON_PROMPT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RESET_ON_LITERALS
int System::ComponentModel::MaskedTextProvider::_get_RESET_ON_LITERALS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_RESET_ON_LITERALS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "RESET_ON_LITERALS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RESET_ON_LITERALS
void System::ComponentModel::MaskedTextProvider::_set_RESET_ON_LITERALS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_RESET_ON_LITERALS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "RESET_ON_LITERALS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SKIP_SPACE
int System::ComponentModel::MaskedTextProvider::_get_SKIP_SPACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_SKIP_SPACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "MaskedTextProvider", "SKIP_SPACE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SKIP_SPACE
void System::ComponentModel::MaskedTextProvider::_set_SKIP_SPACE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_SKIP_SPACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "SKIP_SPACE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type maskTextProviderType
::System::Type* System::ComponentModel::MaskedTextProvider::_get_maskTextProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_get_maskTextProviderType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.ComponentModel", "MaskedTextProvider", "maskTextProviderType"));
}
// Autogenerated static field setter
// Set static field: static private System.Type maskTextProviderType
void System::ComponentModel::MaskedTextProvider::_set_maskTextProviderType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::_set_maskTextProviderType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider", "maskTextProviderType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.BitVector32 flagState
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::BitVector32& System::ComponentModel::MaskedTextProvider::dyn_flagState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_flagState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flagState"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::BitVector32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::ComponentModel::MaskedTextProvider::dyn_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder testString
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::ComponentModel::MaskedTextProvider::dyn_testString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_testString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testString"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 assignedCharCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn_assignedCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_assignedCharCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assignedCharCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 requiredCharCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn_requiredCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_requiredCharCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requiredCharCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 requiredEditChars
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn_requiredEditChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_requiredEditChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requiredEditChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 optionalEditChars
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::dyn_optionalEditChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_optionalEditChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "optionalEditChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mask
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MaskedTextProvider::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char passwordChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::ComponentModel::MaskedTextProvider::dyn_passwordChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_passwordChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passwordChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char promptChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::ComponentModel::MaskedTextProvider::dyn_promptChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_promptChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "promptChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.ComponentModel.MaskedTextProvider/CharDescriptor> stringDescriptor
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ComponentModel::MaskedTextProvider::CharDescriptor*>*& System::ComponentModel::MaskedTextProvider::dyn_stringDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::dyn_stringDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringDescriptor"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ComponentModel::MaskedTextProvider::CharDescriptor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Initialize
void System::ComponentModel::MaskedTextProvider::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AllowPromptAsInput
bool System::ComponentModel::MaskedTextProvider::get_AllowPromptAsInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AllowPromptAsInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowPromptAsInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AssignedEditPositionCount
int System::ComponentModel::MaskedTextProvider::get_AssignedEditPositionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AssignedEditPositionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssignedEditPositionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AvailableEditPositionCount
int System::ComponentModel::MaskedTextProvider::get_AvailableEditPositionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AvailableEditPositionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableEditPositionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Clone
::Il2CppObject* System::ComponentModel::MaskedTextProvider::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MaskedTextProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Culture
::System::Globalization::CultureInfo* System::ComponentModel::MaskedTextProvider::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_DefaultPasswordChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_DefaultPasswordChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_DefaultPasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "get_DefaultPasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_EditPositionCount
int System::ComponentModel::MaskedTextProvider::get_EditPositionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_EditPositionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditPositionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_EditPositions
::System::Collections::IEnumerator* System::ComponentModel::MaskedTextProvider::get_EditPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_EditPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EditPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_IncludeLiterals
bool System::ComponentModel::MaskedTextProvider::get_IncludeLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_IncludeLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludeLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_IncludeLiterals
void System::ComponentModel::MaskedTextProvider::set_IncludeLiterals(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_IncludeLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludeLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_IncludePrompt
bool System::ComponentModel::MaskedTextProvider::get_IncludePrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_IncludePrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludePrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_IncludePrompt
void System::ComponentModel::MaskedTextProvider::set_IncludePrompt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_IncludePrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludePrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_AsciiOnly
bool System::ComponentModel::MaskedTextProvider::get_AsciiOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_AsciiOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsciiOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_IsPassword
bool System::ComponentModel::MaskedTextProvider::get_IsPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_IsPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_IsPassword
void System::ComponentModel::MaskedTextProvider::set_IsPassword(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_IsPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_InvalidIndex
int System::ComponentModel::MaskedTextProvider::get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_InvalidIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "get_InvalidIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_LastAssignedPosition
int System::ComponentModel::MaskedTextProvider::get_LastAssignedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_LastAssignedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastAssignedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Length
int System::ComponentModel::MaskedTextProvider::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Mask
::StringW System::ComponentModel::MaskedTextProvider::get_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Mask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_MaskCompleted
bool System::ComponentModel::MaskedTextProvider::get_MaskCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_MaskCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaskCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_MaskFull
bool System::ComponentModel::MaskedTextProvider::get_MaskFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_MaskFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaskFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_PasswordChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_PasswordChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_PasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_PasswordChar
void System::ComponentModel::MaskedTextProvider::set_PasswordChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_PasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_PromptChar
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_PromptChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_PromptChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PromptChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_PromptChar
void System::ComponentModel::MaskedTextProvider::set_PromptChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_PromptChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PromptChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_ResetOnPrompt
bool System::ComponentModel::MaskedTextProvider::get_ResetOnPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_ResetOnPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetOnPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_ResetOnPrompt
void System::ComponentModel::MaskedTextProvider::set_ResetOnPrompt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_ResetOnPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetOnPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_ResetOnSpace
bool System::ComponentModel::MaskedTextProvider::get_ResetOnSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_ResetOnSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResetOnSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_ResetOnSpace
void System::ComponentModel::MaskedTextProvider::set_ResetOnSpace(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_ResetOnSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ResetOnSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_SkipLiterals
bool System::ComponentModel::MaskedTextProvider::get_SkipLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_SkipLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.set_SkipLiterals
void System::ComponentModel::MaskedTextProvider::set_SkipLiterals(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::set_SkipLiterals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SkipLiterals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.get_Item
::Il2CppChar System::ComponentModel::MaskedTextProvider::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::Il2CppChar input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Add
bool System::ComponentModel::MaskedTextProvider::Add(::StringW input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Clear
void System::ComponentModel::MaskedTextProvider::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Clear
void System::ComponentModel::MaskedTextProvider::Clear(ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAssignedEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindAssignedEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAssignedEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindEditPositionInRange(int startPosition, int endPosition, bool direction, uint8_t assignedStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(assignedStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction, assignedStatus);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindNonEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindNonEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNonEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindNonEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindNonEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNonEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindPositionInRange
int System::ComponentModel::MaskedTextProvider::FindPositionInRange(int startPosition, int endPosition, bool direction, ::System::ComponentModel::MaskedTextProvider::CharType charTypeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(charTypeFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction, charTypeFlags);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom
int System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionFrom(int position, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindUnassignedEditPositionFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange
int System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::FindUnassignedEditPositionInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindUnassignedEditPositionInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition, direction);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint
bool System::ComponentModel::MaskedTextProvider::GetOperationResultFromHint(::System::ComponentModel::MaskedTextResultHint hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::GetOperationResultFromHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "GetOperationResultFromHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hint);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::Il2CppChar input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::StringW input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAt
bool System::ComponentModel::MaskedTextProvider::InsertAt(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.InsertAtInt
bool System::ComponentModel::MaskedTextProvider::InsertAtInt(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint, bool testOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::InsertAtInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAtInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>(), ::il2cpp_utils::ExtractType(testOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint), testOnly);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAscii
bool System::ComponentModel::MaskedTextProvider::IsAscii(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAciiAlphanumeric
bool System::ComponentModel::MaskedTextProvider::IsAciiAlphanumeric(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAciiAlphanumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAciiAlphanumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAlphanumeric
bool System::ComponentModel::MaskedTextProvider::IsAlphanumeric(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAlphanumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAlphanumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAsciiLetter
bool System::ComponentModel::MaskedTextProvider::IsAsciiLetter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAsciiLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsAsciiLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsAvailablePosition
bool System::ComponentModel::MaskedTextProvider::IsAvailablePosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsAvailablePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAvailablePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsEditPosition
bool System::ComponentModel::MaskedTextProvider::IsEditPosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsEditPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEditPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsEditPosition
bool System::ComponentModel::MaskedTextProvider::IsEditPosition(::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsEditPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsEditPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charDescriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charDescriptor);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsLiteralPosition
bool System::ComponentModel::MaskedTextProvider::IsLiteralPosition(::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsLiteralPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsLiteralPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charDescriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charDescriptor);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsPrintableChar
bool System::ComponentModel::MaskedTextProvider::IsPrintableChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsPrintableChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsPrintableChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsValidInputChar
bool System::ComponentModel::MaskedTextProvider::IsValidInputChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsValidInputChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsValidInputChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsValidMaskChar
bool System::ComponentModel::MaskedTextProvider::IsValidMaskChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsValidMaskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsValidMaskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar
bool System::ComponentModel::MaskedTextProvider::IsValidPasswordChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::IsValidPasswordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", "IsValidPasswordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Remove
bool System::ComponentModel::MaskedTextProvider::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Remove
bool System::ComponentModel::MaskedTextProvider::Remove(ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAt
bool System::ComponentModel::MaskedTextProvider::RemoveAt(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAt
bool System::ComponentModel::MaskedTextProvider::RemoveAt(int startPosition, int endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, endPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAt
bool System::ComponentModel::MaskedTextProvider::RemoveAt(int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, endPosition, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.RemoveAtInt
bool System::ComponentModel::MaskedTextProvider::RemoveAtInt(int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint, bool testOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::RemoveAtInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAtInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>(), ::il2cpp_utils::ExtractType(testOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, endPosition, byref(testPosition), byref(resultHint), testOnly);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::Il2CppChar input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::Il2CppChar input, int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, startPosition, endPosition, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::StringW input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Replace
bool System::ComponentModel::MaskedTextProvider::Replace(::StringW input, int startPosition, int endPosition, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, startPosition, endPosition, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ResetChar
void System::ComponentModel::MaskedTextProvider::ResetChar(int testPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ResetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, testPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ResetString
void System::ComponentModel::MaskedTextProvider::ResetString(int startPosition, int endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ResetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startPosition, endPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Set
bool System::ComponentModel::MaskedTextProvider::Set(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.Set
bool System::ComponentModel::MaskedTextProvider::Set(::StringW input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.SetChar
void System::ComponentModel::MaskedTextProvider::SetChar(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::SetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.SetChar
void System::ComponentModel::MaskedTextProvider::SetChar(::Il2CppChar input, int position, ::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::SetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(charDescriptor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, position, charDescriptor);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.SetString
void System::ComponentModel::MaskedTextProvider::SetString(::StringW input, int testPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(testPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, testPosition);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestChar
bool System::ComponentModel::MaskedTextProvider::TestChar(::Il2CppChar input, int position, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestEscapeChar
bool System::ComponentModel::MaskedTextProvider::TestEscapeChar(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestEscapeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestEscapeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestEscapeChar
bool System::ComponentModel::MaskedTextProvider::TestEscapeChar(::Il2CppChar input, int position, ::System::ComponentModel::MaskedTextProvider::CharDescriptor* charDex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestEscapeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestEscapeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(charDex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, charDex);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestSetChar
bool System::ComponentModel::MaskedTextProvider::TestSetChar(::Il2CppChar input, int position, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestSetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestSetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestSetString
bool System::ComponentModel::MaskedTextProvider::TestSetString(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestSetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestSetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.TestString
bool System::ComponentModel::MaskedTextProvider::TestString(::StringW input, int position, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::TestString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToDisplayString
::StringW System::ComponentModel::MaskedTextProvider::ToDisplayString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToDisplayString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDisplayString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool ignorePasswordChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignorePasswordChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ignorePasswordChar);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool ignorePasswordChar, int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignorePasswordChar), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ignorePasswordChar, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool includePrompt, bool includeLiterals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrompt), ::il2cpp_utils::ExtractType(includeLiterals)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrompt, includeLiterals);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool includePrompt, bool includeLiterals, int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrompt), ::il2cpp_utils::ExtractType(includeLiterals), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrompt, includeLiterals, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignorePasswordChar), ::il2cpp_utils::ExtractType(includePrompt), ::il2cpp_utils::ExtractType(includeLiterals), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ignorePasswordChar, includePrompt, includeLiterals, startPosition, length);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyChar
bool System::ComponentModel::MaskedTextProvider::VerifyChar(::Il2CppChar input, int position, ByRef<::System::ComponentModel::MaskedTextResultHint> hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position, byref(hint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar
bool System::ComponentModel::MaskedTextProvider::VerifyEscapeChar(::Il2CppChar input, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyEscapeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyEscapeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, position);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyString
bool System::ComponentModel::MaskedTextProvider::VerifyString(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.VerifyString
bool System::ComponentModel::MaskedTextProvider::VerifyString(::StringW input, ByRef<int> testPosition, ByRef<::System::ComponentModel::MaskedTextResultHint> resultHint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::VerifyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::System::ComponentModel::MaskedTextResultHint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(testPosition), byref(resultHint));
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider..cctor
void System::ComponentModel::MaskedTextProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MaskedTextProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider.ToString
::StringW System::ComponentModel::MaskedTextProvider::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.MaskedTextProvider/CaseConversion
#include "System/ComponentModel/MaskedTextProvider_CaseConversion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion None
::System::ComponentModel::MaskedTextProvider::CaseConversion System::ComponentModel::MaskedTextProvider::CaseConversion::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CaseConversion>("System.ComponentModel", "MaskedTextProvider/CaseConversion", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion None
void System::ComponentModel::MaskedTextProvider::CaseConversion::_set_None(::System::ComponentModel::MaskedTextProvider::CaseConversion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CaseConversion", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToLower
::System::ComponentModel::MaskedTextProvider::CaseConversion System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToLower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CaseConversion>("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToLower"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToLower
void System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToLower(::System::ComponentModel::MaskedTextProvider::CaseConversion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToLower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToLower", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToUpper
::System::ComponentModel::MaskedTextProvider::CaseConversion System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_get_ToUpper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CaseConversion>("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToUpper"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CaseConversion ToUpper
void System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToUpper(::System::ComponentModel::MaskedTextProvider::CaseConversion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::_set_ToUpper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CaseConversion", "ToUpper", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::CaseConversion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CaseConversion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.MaskedTextProvider/CharType
#include "System/ComponentModel/MaskedTextProvider_CharType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType EditOptional
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_EditOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_EditOptional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "EditOptional"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType EditOptional
void System::ComponentModel::MaskedTextProvider::CharType::_set_EditOptional(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_EditOptional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "EditOptional", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType EditRequired
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_EditRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_EditRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "EditRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType EditRequired
void System::ComponentModel::MaskedTextProvider::CharType::_set_EditRequired(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_EditRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "EditRequired", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType Separator
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_Separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_Separator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "Separator"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType Separator
void System::ComponentModel::MaskedTextProvider::CharType::_set_Separator(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_Separator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "Separator", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType Literal
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType Literal
void System::ComponentModel::MaskedTextProvider::CharType::_set_Literal(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextProvider/CharType Modifier
::System::ComponentModel::MaskedTextProvider::CharType System::ComponentModel::MaskedTextProvider::CharType::_get_Modifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_get_Modifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextProvider::CharType>("System.ComponentModel", "MaskedTextProvider/CharType", "Modifier"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextProvider/CharType Modifier
void System::ComponentModel::MaskedTextProvider::CharType::_set_Modifier(::System::ComponentModel::MaskedTextProvider::CharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::_set_Modifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextProvider/CharType", "Modifier", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::CharType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MaskedTextProvider/CharDescriptor
#include "System/ComponentModel/MaskedTextProvider_CharDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaskPosition
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_MaskPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_MaskPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaskPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.ComponentModel.MaskedTextProvider/CaseConversion CaseConversion
[[deprecated("Use field access instead!")]] ::System::ComponentModel::MaskedTextProvider::CaseConversion& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CaseConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CaseConversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CaseConversion"))->offset;
  return *reinterpret_cast<::System::ComponentModel::MaskedTextProvider::CaseConversion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.ComponentModel.MaskedTextProvider/CharType CharType
[[deprecated("Use field access instead!")]] ::System::ComponentModel::MaskedTextProvider::CharType& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_CharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharType"))->offset;
  return *reinterpret_cast<::System::ComponentModel::MaskedTextProvider::CharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsAssigned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_IsAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::dyn_IsAssigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsAssigned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MaskedTextProvider/CharDescriptor.ToString
::StringW System::ComponentModel::MaskedTextProvider::CharDescriptor::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextProvider::CharDescriptor::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.MaskedTextResultHint
#include "System/ComponentModel/MaskedTextResultHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint Unknown
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint Unknown
void System::ComponentModel::MaskedTextResultHint::_set_Unknown(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint CharacterEscaped
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_CharacterEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_CharacterEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "CharacterEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint CharacterEscaped
void System::ComponentModel::MaskedTextResultHint::_set_CharacterEscaped(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_CharacterEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "CharacterEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint NoEffect
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_NoEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_NoEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "NoEffect"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint NoEffect
void System::ComponentModel::MaskedTextResultHint::_set_NoEffect(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_NoEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "NoEffect", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint SideEffect
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_SideEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_SideEffect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "SideEffect"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint SideEffect
void System::ComponentModel::MaskedTextResultHint::_set_SideEffect(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_SideEffect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "SideEffect", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint Success
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "Success"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint Success
void System::ComponentModel::MaskedTextResultHint::_set_Success(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint AsciiCharacterExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_AsciiCharacterExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_AsciiCharacterExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "AsciiCharacterExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint AsciiCharacterExpected
void System::ComponentModel::MaskedTextResultHint::_set_AsciiCharacterExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_AsciiCharacterExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "AsciiCharacterExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint AlphanumericCharacterExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_AlphanumericCharacterExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_AlphanumericCharacterExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "AlphanumericCharacterExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint AlphanumericCharacterExpected
void System::ComponentModel::MaskedTextResultHint::_set_AlphanumericCharacterExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_AlphanumericCharacterExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "AlphanumericCharacterExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint DigitExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_DigitExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_DigitExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "DigitExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint DigitExpected
void System::ComponentModel::MaskedTextResultHint::_set_DigitExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_DigitExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "DigitExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint LetterExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_LetterExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_LetterExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "LetterExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint LetterExpected
void System::ComponentModel::MaskedTextResultHint::_set_LetterExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_LetterExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "LetterExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint SignedDigitExpected
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_SignedDigitExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_SignedDigitExpected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "SignedDigitExpected"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint SignedDigitExpected
void System::ComponentModel::MaskedTextResultHint::_set_SignedDigitExpected(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_SignedDigitExpected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "SignedDigitExpected", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint InvalidInput
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_InvalidInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_InvalidInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "InvalidInput"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint InvalidInput
void System::ComponentModel::MaskedTextResultHint::_set_InvalidInput(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_InvalidInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "InvalidInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint PromptCharNotAllowed
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_PromptCharNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_PromptCharNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "PromptCharNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint PromptCharNotAllowed
void System::ComponentModel::MaskedTextResultHint::_set_PromptCharNotAllowed(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_PromptCharNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "PromptCharNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint UnavailableEditPosition
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_UnavailableEditPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_UnavailableEditPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "UnavailableEditPosition"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint UnavailableEditPosition
void System::ComponentModel::MaskedTextResultHint::_set_UnavailableEditPosition(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_UnavailableEditPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "UnavailableEditPosition", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint NonEditPosition
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_NonEditPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_NonEditPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "NonEditPosition"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint NonEditPosition
void System::ComponentModel::MaskedTextResultHint::_set_NonEditPosition(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_NonEditPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "NonEditPosition", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.MaskedTextResultHint PositionOutOfRange
::System::ComponentModel::MaskedTextResultHint System::ComponentModel::MaskedTextResultHint::_get_PositionOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_get_PositionOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MaskedTextResultHint>("System.ComponentModel", "MaskedTextResultHint", "PositionOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.MaskedTextResultHint PositionOutOfRange
void System::ComponentModel::MaskedTextResultHint::_set_PositionOutOfRange(::System::ComponentModel::MaskedTextResultHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::_set_PositionOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MaskedTextResultHint", "PositionOutOfRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MaskedTextResultHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MaskedTextResultHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MemberDescriptor
#include "System/ComponentModel/MemberDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String displayName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nameHash
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MemberDescriptor::dyn_nameHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_nameHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection attributeCollection
[[deprecated("Use field access instead!")]] ::System::ComponentModel::AttributeCollection*& System::ComponentModel::MemberDescriptor::dyn_attributeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributeCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeCollection"))->offset;
  return *reinterpret_cast<::System::ComponentModel::AttributeCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::MemberDescriptor::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] originalAttributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::MemberDescriptor::dyn_originalAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_originalAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalAttributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attributesFiltered
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MemberDescriptor::dyn_attributesFiltered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributesFiltered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributesFiltered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attributesFilled
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MemberDescriptor::dyn_attributesFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributesFilled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributesFilled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 metadataVersion
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MemberDescriptor::dyn_metadataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_metadataVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "metadataVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String category
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object lockCookie
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::MemberDescriptor::dyn_lockCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_lockCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockCookie"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_AttributeArray
::ArrayW<::System::Attribute*> System::ComponentModel::MemberDescriptor::get_AttributeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_AttributeArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.set_AttributeArray
void System::ComponentModel::MemberDescriptor::set_AttributeArray(::ArrayW<::System::Attribute*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::set_AttributeArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Attributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::MemberDescriptor::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Attributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Category
::StringW System::ComponentModel::MemberDescriptor::get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Category");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Description
::StringW System::ComponentModel::MemberDescriptor::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Description");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_IsBrowsable
bool System::ComponentModel::MemberDescriptor::get_IsBrowsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_IsBrowsable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Name
::StringW System::ComponentModel::MemberDescriptor::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_NameHashCode
int System::ComponentModel::MemberDescriptor::get_NameHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_NameHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_DesignTimeOnly
bool System::ComponentModel::MemberDescriptor::get_DesignTimeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_DesignTimeOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_DisplayName
::StringW System::ComponentModel::MemberDescriptor::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.CheckAttributesValid
void System::ComponentModel::MemberDescriptor::CheckAttributesValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::CheckAttributesValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAttributesValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
::System::ComponentModel::AttributeCollection* System::ComponentModel::MemberDescriptor::CreateAttributeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::CreateAttributeCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FillAttributes
void System::ComponentModel::MemberDescriptor::FillAttributes(::System::Collections::IList* attributeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FillAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeList);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FilterAttributesIfNeeded
void System::ComponentModel::MemberDescriptor::FilterAttributesIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FilterAttributesIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterAttributesIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FindMethod
::System::Reflection::MethodInfo* System::ComponentModel::MemberDescriptor::FindMethod(::System::Type* componentClass, ::StringW name, ::ArrayW<::System::Type*> args, ::System::Type* returnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MemberDescriptor", "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentClass), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(returnType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentClass, name, args, returnType);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FindMethod
::System::Reflection::MethodInfo* System::ComponentModel::MemberDescriptor::FindMethod(::System::Type* componentClass, ::StringW name, ::ArrayW<::System::Type*> args, ::System::Type* returnType, bool publicOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MemberDescriptor", "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentClass), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(publicOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentClass, name, args, returnType, publicOnly);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.GetInvocationTarget
::Il2CppObject* System::ComponentModel::MemberDescriptor::GetInvocationTarget(::System::Type* type, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::GetInvocationTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MemberDescriptor*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, instance);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.GetSite
::System::ComponentModel::ISite* System::ComponentModel::MemberDescriptor::GetSite(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::GetSite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MemberDescriptor", "GetSite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.GetInvokee
::Il2CppObject* System::ComponentModel::MemberDescriptor::GetInvokee(::System::Type* componentClass, ::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::GetInvokee");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MemberDescriptor", "GetInvokee", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentClass), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentClass, component);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.Equals
bool System::ComponentModel::MemberDescriptor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.GetHashCode
int System::ComponentModel::MemberDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MergablePropertyAttribute
#include "System/ComponentModel/MergablePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.MergablePropertyAttribute Yes
::System::ComponentModel::MergablePropertyAttribute* System::ComponentModel::MergablePropertyAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MergablePropertyAttribute*>("System.ComponentModel", "MergablePropertyAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.MergablePropertyAttribute Yes
void System::ComponentModel::MergablePropertyAttribute::_set_Yes(::System::ComponentModel::MergablePropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MergablePropertyAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.MergablePropertyAttribute No
::System::ComponentModel::MergablePropertyAttribute* System::ComponentModel::MergablePropertyAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MergablePropertyAttribute*>("System.ComponentModel", "MergablePropertyAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.MergablePropertyAttribute No
void System::ComponentModel::MergablePropertyAttribute::_set_No(::System::ComponentModel::MergablePropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MergablePropertyAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.MergablePropertyAttribute Default
::System::ComponentModel::MergablePropertyAttribute* System::ComponentModel::MergablePropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::MergablePropertyAttribute*>("System.ComponentModel", "MergablePropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.MergablePropertyAttribute Default
void System::ComponentModel::MergablePropertyAttribute::_set_Default(::System::ComponentModel::MergablePropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "MergablePropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowMerge
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MergablePropertyAttribute::dyn_allowMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::dyn_allowMerge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowMerge"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.get_AllowMerge
bool System::ComponentModel::MergablePropertyAttribute::get_AllowMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::get_AllowMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute..cctor
void System::ComponentModel::MergablePropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "MergablePropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.Equals
bool System::ComponentModel::MergablePropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.GetHashCode
int System::ComponentModel::MergablePropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
bool System::ComponentModel::MergablePropertyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MergablePropertyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Attribute*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MultilineStringConverter
#include "System/ComponentModel/MultilineStringConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.MultilineStringConverter.ConvertTo
::Il2CppObject* System::ComponentModel::MultilineStringConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MultilineStringConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.MultilineStringConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::MultilineStringConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MultilineStringConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.MultilineStringConverter.GetPropertiesSupported
bool System::ComponentModel::MultilineStringConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MultilineStringConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
