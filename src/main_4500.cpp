// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.SimpleJsonInstance
#include "PlayFab/Json/SimpleJsonInstance.hpp"
// Including type: PlayFab.Json.SimpleJsonInstance/PlayFabSimpleJsonCuztomization
#include "PlayFab/Json/SimpleJsonInstance_PlayFabSimpleJsonCuztomization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.SimpleJsonInstance/PlayFabSimpleJsonCuztomization ApiSerializerStrategy
::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization* PlayFab::Json::SimpleJsonInstance::_get_ApiSerializerStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::_get_ApiSerializerStrategy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization*>("PlayFab.Json", "SimpleJsonInstance", "ApiSerializerStrategy"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.SimpleJsonInstance/PlayFabSimpleJsonCuztomization ApiSerializerStrategy
void PlayFab::Json::SimpleJsonInstance::_set_ApiSerializerStrategy(::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::_set_ApiSerializerStrategy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "SimpleJsonInstance", "ApiSerializerStrategy", value));
}
// Autogenerated method: PlayFab.Json.SimpleJsonInstance.DeserializeObject
::Il2CppObject* PlayFab::Json::SimpleJsonInstance::DeserializeObject(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::DeserializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::SimpleJsonInstance*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, json);
}
// Autogenerated method: PlayFab.Json.SimpleJsonInstance.SerializeObject
::StringW PlayFab::Json::SimpleJsonInstance::SerializeObject(::Il2CppObject* json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::SerializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::SimpleJsonInstance*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, json);
}
// Autogenerated method: PlayFab.Json.SimpleJsonInstance.SerializeObject
::StringW PlayFab::Json::SimpleJsonInstance::SerializeObject(::Il2CppObject* json, ::Il2CppObject* jsonSerializerStrategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::SerializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::SimpleJsonInstance*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, json, jsonSerializerStrategy);
}
// Autogenerated method: PlayFab.Json.SimpleJsonInstance..cctor
void PlayFab::Json::SimpleJsonInstance::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "SimpleJsonInstance", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.SimpleJsonInstance/PlayFabSimpleJsonCuztomization
#include "PlayFab/Json/SimpleJsonInstance_PlayFabSimpleJsonCuztomization.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Json.SimpleJsonInstance/PlayFabSimpleJsonCuztomization.DeserializeObject
::Il2CppObject* PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::DeserializeObject(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::DeserializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, type);
}
// Autogenerated method: PlayFab.Json.SimpleJsonInstance/PlayFabSimpleJsonCuztomization.TrySerializeKnownTypes
bool PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::TrySerializeKnownTypes(::Il2CppObject* input, ByRef<::Il2CppObject*> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::TrySerializeKnownTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(output));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.Json.NullValueHandling
#include "PlayFab/Json/NullValueHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.NullValueHandling Include
::PlayFab::Json::NullValueHandling PlayFab::Json::NullValueHandling::_get_Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::NullValueHandling::_get_Include");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::NullValueHandling>("PlayFab.Json", "NullValueHandling", "Include"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.NullValueHandling Include
void PlayFab::Json::NullValueHandling::_set_Include(::PlayFab::Json::NullValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::NullValueHandling::_set_Include");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "NullValueHandling", "Include", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.NullValueHandling Ignore
::PlayFab::Json::NullValueHandling PlayFab::Json::NullValueHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::NullValueHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::NullValueHandling>("PlayFab.Json", "NullValueHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.NullValueHandling Ignore
void PlayFab::Json::NullValueHandling::_set_Ignore(::PlayFab::Json::NullValueHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::NullValueHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "NullValueHandling", "Ignore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::Json::NullValueHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::NullValueHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.Json.JsonProperty
#include "PlayFab/Json/JsonProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String PropertyName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::Json::JsonProperty::dyn_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonProperty::dyn_PropertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.Json.NullValueHandling NullValueHandling
[[deprecated("Use field access instead!")]] ::PlayFab::Json::NullValueHandling& PlayFab::Json::JsonProperty::dyn_NullValueHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonProperty::dyn_NullValueHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NullValueHandling"))->offset;
  return *reinterpret_cast<::PlayFab::Json::NullValueHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.JsonArray
#include "PlayFab/Json/JsonArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Json.JsonArray.ToString
::StringW PlayFab::Json::JsonArray::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonArray::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.JsonObject
#include "PlayFab/Json/JsonObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DICTIONARY_DEFAULT_SIZE
int PlayFab::Json::JsonObject::_get_DICTIONARY_DEFAULT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::_get_DICTIONARY_DEFAULT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PlayFab.Json", "JsonObject", "DICTIONARY_DEFAULT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DICTIONARY_DEFAULT_SIZE
void PlayFab::Json::JsonObject::_set_DICTIONARY_DEFAULT_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::_set_DICTIONARY_DEFAULT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "JsonObject", "DICTIONARY_DEFAULT_SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> _members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& PlayFab::Json::JsonObject::dyn__members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::dyn__members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Json.JsonObject.get_Item
::Il2CppObject* PlayFab::Json::JsonObject::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: PlayFab.Json.JsonObject.GetAtIndex
::Il2CppObject* PlayFab::Json::JsonObject::GetAtIndex(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::GetAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "JsonObject", "GetAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: PlayFab.Json.JsonObject.Add
void PlayFab::Json::JsonObject::Add(::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: PlayFab.Json.JsonObject.ContainsKey
bool PlayFab::Json::JsonObject::ContainsKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::ContainsKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: PlayFab.Json.JsonObject.get_Keys
::System::Collections::Generic::ICollection_1<::StringW>* PlayFab::Json::JsonObject::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Json.JsonObject.Remove
bool PlayFab::Json::JsonObject::Remove(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: PlayFab.Json.JsonObject.TryGetValue
bool PlayFab::Json::JsonObject::TryGetValue(::StringW key, ByRef<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::TryGetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
}
// Autogenerated method: PlayFab.Json.JsonObject.get_Values
::System::Collections::Generic::ICollection_1<::Il2CppObject*>* PlayFab::Json::JsonObject::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Json.JsonObject.get_Item
::Il2CppObject* PlayFab::Json::JsonObject::get_Item(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: PlayFab.Json.JsonObject.set_Item
void PlayFab::Json::JsonObject::set_Item(::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: PlayFab.Json.JsonObject.Add
void PlayFab::Json::JsonObject::Add(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: PlayFab.Json.JsonObject.Clear
void PlayFab::Json::JsonObject::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Json.JsonObject.Contains
bool PlayFab::Json::JsonObject::Contains(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: PlayFab.Json.JsonObject.CopyTo
void PlayFab::Json::JsonObject::CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: PlayFab.Json.JsonObject.get_Count
int PlayFab::Json::JsonObject::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Json.JsonObject.get_IsReadOnly
bool PlayFab::Json::JsonObject::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Json.JsonObject.Remove
bool PlayFab::Json::JsonObject::Remove(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: PlayFab.Json.JsonObject.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>* PlayFab::Json::JsonObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Json.JsonObject.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* PlayFab::Json::JsonObject::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::JsonObject*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.Json.JsonObject.ToString
::StringW PlayFab::Json::JsonObject::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.PlayFabSimpleJson
#include "PlayFab/Json/PlayFabSimpleJson.hpp"
// Including type: PlayFab.Json.PlayFabSimpleJson/TokenType
#include "PlayFab/Json/PlayFabSimpleJson_TokenType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: PlayFab.Json.IJsonSerializerStrategy
#include "PlayFab/Json/IJsonSerializerStrategy.hpp"
// Including type: PlayFab.Json.PocoJsonSerializerStrategy
#include "PlayFab/Json/PocoJsonSerializerStrategy.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: PlayFab.Json.JsonArray
#include "PlayFab/Json/JsonArray.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BUILDER_INIT
int PlayFab::Json::PlayFabSimpleJson::_get_BUILDER_INIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get_BUILDER_INIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PlayFab.Json", "PlayFabSimpleJson", "BUILDER_INIT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BUILDER_INIT
void PlayFab::Json::PlayFabSimpleJson::_set_BUILDER_INIT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set_BUILDER_INIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "BUILDER_INIT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] EscapeTable
::ArrayW<::Il2CppChar> PlayFab::Json::PlayFabSimpleJson::_get_EscapeTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get_EscapeTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("PlayFab.Json", "PlayFabSimpleJson", "EscapeTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] EscapeTable
void PlayFab::Json::PlayFabSimpleJson::_set_EscapeTable(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set_EscapeTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "EscapeTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] EscapeCharacters
::ArrayW<::Il2CppChar> PlayFab::Json::PlayFabSimpleJson::_get_EscapeCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get_EscapeCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("PlayFab.Json", "PlayFabSimpleJson", "EscapeCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] EscapeCharacters
void PlayFab::Json::PlayFabSimpleJson::_set_EscapeCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set_EscapeCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "EscapeCharacters", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<System.Type> NumberTypes
::System::Collections::Generic::List_1<::System::Type*>* PlayFab::Json::PlayFabSimpleJson::_get_NumberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get_NumberTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::Type*>*>("PlayFab.Json", "PlayFabSimpleJson", "NumberTypes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<System.Type> NumberTypes
void PlayFab::Json::PlayFabSimpleJson::_set_NumberTypes(::System::Collections::Generic::List_1<::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set_NumberTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "NumberTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder _serializeObjectBuilder
::System::Text::StringBuilder* PlayFab::Json::PlayFabSimpleJson::_get__serializeObjectBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get__serializeObjectBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("PlayFab.Json", "PlayFabSimpleJson", "_serializeObjectBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder _serializeObjectBuilder
void PlayFab::Json::PlayFabSimpleJson::_set__serializeObjectBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set__serializeObjectBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "_serializeObjectBuilder", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder _parseStringBuilder
::System::Text::StringBuilder* PlayFab::Json::PlayFabSimpleJson::_get__parseStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get__parseStringBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("PlayFab.Json", "PlayFabSimpleJson", "_parseStringBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder _parseStringBuilder
void PlayFab::Json::PlayFabSimpleJson::_set__parseStringBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set__parseStringBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "_parseStringBuilder", value));
}
// Autogenerated static field getter
// Get static field: static private PlayFab.Json.IJsonSerializerStrategy _currentJsonSerializerStrategy
::PlayFab::Json::IJsonSerializerStrategy* PlayFab::Json::PlayFabSimpleJson::_get__currentJsonSerializerStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get__currentJsonSerializerStrategy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::IJsonSerializerStrategy*>("PlayFab.Json", "PlayFabSimpleJson", "_currentJsonSerializerStrategy"));
}
// Autogenerated static field setter
// Set static field: static private PlayFab.Json.IJsonSerializerStrategy _currentJsonSerializerStrategy
void PlayFab::Json::PlayFabSimpleJson::_set__currentJsonSerializerStrategy(::PlayFab::Json::IJsonSerializerStrategy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set__currentJsonSerializerStrategy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "_currentJsonSerializerStrategy", value));
}
// Autogenerated static field getter
// Get static field: static private PlayFab.Json.PocoJsonSerializerStrategy _pocoJsonSerializerStrategy
::PlayFab::Json::PocoJsonSerializerStrategy* PlayFab::Json::PlayFabSimpleJson::_get__pocoJsonSerializerStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_get__pocoJsonSerializerStrategy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PocoJsonSerializerStrategy*>("PlayFab.Json", "PlayFabSimpleJson", "_pocoJsonSerializerStrategy"));
}
// Autogenerated static field setter
// Set static field: static private PlayFab.Json.PocoJsonSerializerStrategy _pocoJsonSerializerStrategy
void PlayFab::Json::PlayFabSimpleJson::_set__pocoJsonSerializerStrategy(::PlayFab::Json::PocoJsonSerializerStrategy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::_set__pocoJsonSerializerStrategy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson", "_pocoJsonSerializerStrategy", value));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson..cctor
void PlayFab::Json::PlayFabSimpleJson::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.DeserializeObject
::Il2CppObject* PlayFab::Json::PlayFabSimpleJson::DeserializeObject(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::DeserializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "DeserializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.TryDeserializeObject
bool PlayFab::Json::PlayFabSimpleJson::TryDeserializeObject(::StringW json, ByRef<::Il2CppObject*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TryDeserializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "TryDeserializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(obj));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.DeserializeObject
::Il2CppObject* PlayFab::Json::PlayFabSimpleJson::DeserializeObject(::StringW json, ::System::Type* type, ::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::DeserializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "DeserializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(jsonSerializerStrategy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, type, jsonSerializerStrategy);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.SerializeObject
::StringW PlayFab::Json::PlayFabSimpleJson::SerializeObject(::Il2CppObject* json, ::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(jsonSerializerStrategy)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, jsonSerializerStrategy);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.EscapeToJavascriptString
::StringW PlayFab::Json::PlayFabSimpleJson::EscapeToJavascriptString(::StringW jsonString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::EscapeToJavascriptString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "EscapeToJavascriptString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jsonString);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.ParseObject
::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* PlayFab::Json::PlayFabSimpleJson::ParseObject(::StringW json, ByRef<int> index, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::ParseObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "ParseObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(success)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(index), byref(success));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.ParseArray
::PlayFab::Json::JsonArray* PlayFab::Json::PlayFabSimpleJson::ParseArray(::StringW json, ByRef<int> index, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::ParseArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "ParseArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(success)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::JsonArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(index), byref(success));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.ParseValue
::Il2CppObject* PlayFab::Json::PlayFabSimpleJson::ParseValue(::StringW json, ByRef<int> index, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::ParseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(success)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(index), byref(success));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.ParseString
::StringW PlayFab::Json::PlayFabSimpleJson::ParseString(::StringW json, ByRef<int> index, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::ParseString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "ParseString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(success)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(index), byref(success));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.ConvertFromUtf32
::StringW PlayFab::Json::PlayFabSimpleJson::ConvertFromUtf32(int utf32) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::ConvertFromUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "ConvertFromUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(utf32)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, utf32);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.ParseNumber
::Il2CppObject* PlayFab::Json::PlayFabSimpleJson::ParseNumber(::StringW json, ByRef<int> index, ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(success)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(index), byref(success));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.GetLastIndexOfNumber
int PlayFab::Json::PlayFabSimpleJson::GetLastIndexOfNumber(::StringW json, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::GetLastIndexOfNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "GetLastIndexOfNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, index);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.EatWhitespace
void PlayFab::Json::PlayFabSimpleJson::EatWhitespace(::StringW json, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::EatWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "EatWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(index));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.LookAhead
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::LookAhead(::StringW json, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::LookAhead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "LookAhead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::PlayFabSimpleJson::TokenType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, index);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.NextToken
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::NextToken(::StringW json, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::NextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "NextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::PlayFabSimpleJson::TokenType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, byref(index));
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.SerializeValue
bool PlayFab::Json::PlayFabSimpleJson::SerializeValue(::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy, ::Il2CppObject* value, ::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::SerializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "SerializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonSerializerStrategy), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jsonSerializerStrategy, value, builder);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.SerializeObject
bool PlayFab::Json::PlayFabSimpleJson::SerializeObject(::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy, ::System::Collections::IEnumerable* keys, ::System::Collections::IEnumerable* values, ::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonSerializerStrategy), ::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jsonSerializerStrategy, keys, values, builder);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.SerializeArray
bool PlayFab::Json::PlayFabSimpleJson::SerializeArray(::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy, ::System::Collections::IEnumerable* anArray, ::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::SerializeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "SerializeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonSerializerStrategy), ::il2cpp_utils::ExtractType(anArray), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jsonSerializerStrategy, anArray, builder);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.SerializeString
bool PlayFab::Json::PlayFabSimpleJson::SerializeString(::StringW aString, ::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::SerializeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "SerializeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aString), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aString, builder);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.SerializeNumber
bool PlayFab::Json::PlayFabSimpleJson::SerializeNumber(::Il2CppObject* number, ::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::SerializeNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "SerializeNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, builder);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.IsNumeric
bool PlayFab::Json::PlayFabSimpleJson::IsNumeric(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.get_CurrentJsonSerializerStrategy
::PlayFab::Json::IJsonSerializerStrategy* PlayFab::Json::PlayFabSimpleJson::get_CurrentJsonSerializerStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::get_CurrentJsonSerializerStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "get_CurrentJsonSerializerStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::IJsonSerializerStrategy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.set_CurrentJsonSerializerStrategy
void PlayFab::Json::PlayFabSimpleJson::set_CurrentJsonSerializerStrategy(::PlayFab::Json::IJsonSerializerStrategy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::set_CurrentJsonSerializerStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "set_CurrentJsonSerializerStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.Json.PlayFabSimpleJson.get_PocoJsonSerializerStrategy
::PlayFab::Json::PocoJsonSerializerStrategy* PlayFab::Json::PlayFabSimpleJson::get_PocoJsonSerializerStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::get_PocoJsonSerializerStrategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "get_PocoJsonSerializerStrategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::PocoJsonSerializerStrategy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.Json.PlayFabSimpleJson/TokenType
#include "PlayFab/Json/PlayFabSimpleJson_TokenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType NONE
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType NONE
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_NONE(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType CURLY_OPEN
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_CURLY_OPEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_CURLY_OPEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "CURLY_OPEN"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType CURLY_OPEN
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_CURLY_OPEN(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_CURLY_OPEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "CURLY_OPEN", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType CURLY_CLOSE
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_CURLY_CLOSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_CURLY_CLOSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "CURLY_CLOSE"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType CURLY_CLOSE
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_CURLY_CLOSE(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_CURLY_CLOSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "CURLY_CLOSE", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType SQUARED_OPEN
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_SQUARED_OPEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_SQUARED_OPEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "SQUARED_OPEN"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType SQUARED_OPEN
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_SQUARED_OPEN(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_SQUARED_OPEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "SQUARED_OPEN", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType SQUARED_CLOSE
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_SQUARED_CLOSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_SQUARED_CLOSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "SQUARED_CLOSE"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType SQUARED_CLOSE
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_SQUARED_CLOSE(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_SQUARED_CLOSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "SQUARED_CLOSE", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType COLON
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_COLON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_COLON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "COLON"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType COLON
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_COLON(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_COLON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "COLON", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType COMMA
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_COMMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_COMMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "COMMA"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType COMMA
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_COMMA(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_COMMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "COMMA", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType STRING
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_STRING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_STRING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "STRING"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType STRING
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_STRING(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_STRING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "STRING", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType NUMBER
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_NUMBER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_NUMBER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "NUMBER"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType NUMBER
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_NUMBER(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_NUMBER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "NUMBER", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType TRUE
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_TRUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_TRUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "TRUE"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType TRUE
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_TRUE(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_TRUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "TRUE", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType FALSE
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_FALSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_FALSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "FALSE"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType FALSE
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_FALSE(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_FALSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "FALSE", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType NULL
::PlayFab::Json::PlayFabSimpleJson::TokenType PlayFab::Json::PlayFabSimpleJson::TokenType::_get_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_get_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::Json::PlayFabSimpleJson::TokenType>("PlayFab.Json", "PlayFabSimpleJson/TokenType", "NULL"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.Json.PlayFabSimpleJson/TokenType NULL
void PlayFab::Json::PlayFabSimpleJson::TokenType::_set_NULL(::PlayFab::Json::PlayFabSimpleJson::TokenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::_set_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PlayFabSimpleJson/TokenType", "NULL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& PlayFab::Json::PlayFabSimpleJson::TokenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::TokenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.IJsonSerializerStrategy
#include "PlayFab/Json/IJsonSerializerStrategy.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Json.IJsonSerializerStrategy.TrySerializeNonPrimitiveObject
bool PlayFab::Json::IJsonSerializerStrategy::TrySerializeNonPrimitiveObject(::Il2CppObject* input, ByRef<::Il2CppObject*> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::IJsonSerializerStrategy::TrySerializeNonPrimitiveObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::IJsonSerializerStrategy*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(output));
}
// Autogenerated method: PlayFab.Json.IJsonSerializerStrategy.DeserializeObject
::Il2CppObject* PlayFab::Json::IJsonSerializerStrategy::DeserializeObject(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::IJsonSerializerStrategy::DeserializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::IJsonSerializerStrategy*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.PocoJsonSerializerStrategy
#include "PlayFab/Json/PocoJsonSerializerStrategy.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: PlayFab.Json.JsonProperty
#include "PlayFab/Json/JsonProperty.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: PlayFab.Json.ReflectionUtils/ConstructorDelegate
#include "PlayFab/Json/ReflectionUtils_ConstructorDelegate.hpp"
// Including type: PlayFab.Json.ReflectionUtils/GetDelegate
#include "PlayFab/Json/ReflectionUtils_GetDelegate.hpp"
// Including type: PlayFab.Json.ReflectionUtils/SetDelegate
#include "PlayFab/Json/ReflectionUtils_SetDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Type[] EmptyTypes
::ArrayW<::System::Type*> PlayFab::Json::PocoJsonSerializerStrategy::_get_EmptyTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::_get_EmptyTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("PlayFab.Json", "PocoJsonSerializerStrategy", "EmptyTypes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Type[] EmptyTypes
void PlayFab::Json::PocoJsonSerializerStrategy::_set_EmptyTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::_set_EmptyTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PocoJsonSerializerStrategy", "EmptyTypes", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Type[] ArrayConstructorParameterTypes
::ArrayW<::System::Type*> PlayFab::Json::PocoJsonSerializerStrategy::_get_ArrayConstructorParameterTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::_get_ArrayConstructorParameterTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("PlayFab.Json", "PocoJsonSerializerStrategy", "ArrayConstructorParameterTypes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Type[] ArrayConstructorParameterTypes
void PlayFab::Json::PocoJsonSerializerStrategy::_set_ArrayConstructorParameterTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::_set_ArrayConstructorParameterTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PocoJsonSerializerStrategy", "ArrayConstructorParameterTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] Iso8601Format
::ArrayW<::StringW> PlayFab::Json::PocoJsonSerializerStrategy::_get_Iso8601Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::_get_Iso8601Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("PlayFab.Json", "PocoJsonSerializerStrategy", "Iso8601Format"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] Iso8601Format
void PlayFab::Json::PocoJsonSerializerStrategy::_set_Iso8601Format(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::_set_Iso8601Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "PocoJsonSerializerStrategy", "Iso8601Format", value));
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.IDictionary`2<System.Type,PlayFab.Json.ReflectionUtils/ConstructorDelegate> ConstructorCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::System::Type*, ::PlayFab::Json::ReflectionUtils::ConstructorDelegate*>*& PlayFab::Json::PocoJsonSerializerStrategy::dyn_ConstructorCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::dyn_ConstructorCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConstructorCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::System::Type*, ::PlayFab::Json::ReflectionUtils::ConstructorDelegate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Reflection.MemberInfo,PlayFab.Json.ReflectionUtils/GetDelegate>> GetCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Reflection::MemberInfo*, ::PlayFab::Json::ReflectionUtils::GetDelegate*>*>*& PlayFab::Json::PocoJsonSerializerStrategy::dyn_GetCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::dyn_GetCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GetCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Reflection::MemberInfo*, ::PlayFab::Json::ReflectionUtils::GetDelegate*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.String,System.Collections.Generic.KeyValuePair`2<System.Type,PlayFab.Json.ReflectionUtils/SetDelegate>>> SetCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::StringW, ::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::PlayFab::Json::ReflectionUtils::SetDelegate*>>*>*& PlayFab::Json::PocoJsonSerializerStrategy::dyn_SetCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::dyn_SetCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SetCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::StringW, ::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::PlayFab::Json::ReflectionUtils::SetDelegate*>>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.MapClrMemberNameToJsonFieldName
::StringW PlayFab::Json::PocoJsonSerializerStrategy::MapClrMemberNameToJsonFieldName(::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::MapClrMemberNameToJsonFieldName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, memberInfo);
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.MapClrMemberNameToJsonFieldName
void PlayFab::Json::PocoJsonSerializerStrategy::MapClrMemberNameToJsonFieldName(::System::Reflection::MemberInfo* memberInfo, ByRef<::StringW> jsonName, ByRef<::PlayFab::Json::JsonProperty*> jsonProp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::MapClrMemberNameToJsonFieldName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, memberInfo, byref(jsonName), byref(jsonProp));
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.ContructorDelegateFactory
::PlayFab::Json::ReflectionUtils::ConstructorDelegate* PlayFab::Json::PocoJsonSerializerStrategy::ContructorDelegateFactory(::System::Type* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::ContructorDelegateFactory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::ConstructorDelegate*, false>(this, ___internal__method, key);
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.GetterValueFactory
::System::Collections::Generic::IDictionary_2<::System::Reflection::MemberInfo*, ::PlayFab::Json::ReflectionUtils::GetDelegate*>* PlayFab::Json::PocoJsonSerializerStrategy::GetterValueFactory(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::GetterValueFactory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::System::Reflection::MemberInfo*, ::PlayFab::Json::ReflectionUtils::GetDelegate*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.SetterValueFactory
::System::Collections::Generic::IDictionary_2<::StringW, ::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::PlayFab::Json::ReflectionUtils::SetDelegate*>>* PlayFab::Json::PocoJsonSerializerStrategy::SetterValueFactory(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::SetterValueFactory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::PlayFab::Json::ReflectionUtils::SetDelegate*>>*, false>(this, ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.TrySerializeNonPrimitiveObject
bool PlayFab::Json::PocoJsonSerializerStrategy::TrySerializeNonPrimitiveObject(::Il2CppObject* input, ByRef<::Il2CppObject*> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::TrySerializeNonPrimitiveObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(output));
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.DeserializeObject
::Il2CppObject* PlayFab::Json::PocoJsonSerializerStrategy::DeserializeObject(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::DeserializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, type);
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.SerializeEnum
::Il2CppObject* PlayFab::Json::PocoJsonSerializerStrategy::SerializeEnum(::System::Enum* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::SerializeEnum");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, p);
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.TrySerializeKnownTypes
bool PlayFab::Json::PocoJsonSerializerStrategy::TrySerializeKnownTypes(::Il2CppObject* input, ByRef<::Il2CppObject*> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::TrySerializeKnownTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(output));
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy.TrySerializeUnknownTypes
bool PlayFab::Json::PocoJsonSerializerStrategy::TrySerializeUnknownTypes(::Il2CppObject* input, ByRef<::Il2CppObject*> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::TrySerializeUnknownTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::PocoJsonSerializerStrategy*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, byref(output));
}
// Autogenerated method: PlayFab.Json.PocoJsonSerializerStrategy..cctor
void PlayFab::Json::PocoJsonSerializerStrategy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PocoJsonSerializerStrategy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PocoJsonSerializerStrategy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils
#include "PlayFab/Json/ReflectionUtils.hpp"
// Including type: PlayFab.Json.ReflectionUtils/GetDelegate
#include "PlayFab/Json/ReflectionUtils_GetDelegate.hpp"
// Including type: PlayFab.Json.ReflectionUtils/SetDelegate
#include "PlayFab/Json/ReflectionUtils_SetDelegate.hpp"
// Including type: PlayFab.Json.ReflectionUtils/ConstructorDelegate
#include "PlayFab/Json/ReflectionUtils_ConstructorDelegate.hpp"
// Including type: PlayFab.Json.ReflectionUtils/ThreadSafeDictionaryValueFactory`2
#include "PlayFab/Json/ReflectionUtils_ThreadSafeDictionaryValueFactory_2.hpp"
// Including type: PlayFab.Json.ReflectionUtils/ThreadSafeDictionary`2
#include "PlayFab/Json/ReflectionUtils_ThreadSafeDictionary_2.hpp"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass26_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass26_0.hpp"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass30_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass30_0.hpp"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass31_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass31_0.hpp"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass34_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass34_0.hpp"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass35_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass35_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] EmptyObjects
::ArrayW<::Il2CppObject*> PlayFab::Json::ReflectionUtils::_get_EmptyObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::_get_EmptyObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("PlayFab.Json", "ReflectionUtils", "EmptyObjects"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] EmptyObjects
void PlayFab::Json::ReflectionUtils::_set_EmptyObjects(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::_set_EmptyObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "ReflectionUtils", "EmptyObjects", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] _1ObjArray
::ArrayW<::Il2CppObject*> PlayFab::Json::ReflectionUtils::_get__1ObjArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::_get__1ObjArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("PlayFab.Json", "ReflectionUtils", "_1ObjArray"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] _1ObjArray
void PlayFab::Json::ReflectionUtils::_set__1ObjArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::_set__1ObjArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.Json", "ReflectionUtils", "_1ObjArray", value));
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetTypeInfo
::System::Type* PlayFab::Json::ReflectionUtils::GetTypeInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetAttribute
::System::Attribute* PlayFab::Json::ReflectionUtils::GetAttribute(::System::Reflection::MemberInfo* info, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetGenericListElementType
::System::Type* PlayFab::Json::ReflectionUtils::GetGenericListElementType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetGenericListElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetGenericListElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetAttribute
::System::Attribute* PlayFab::Json::ReflectionUtils::GetAttribute(::System::Type* objectType, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, attributeType);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetGenericTypeArguments
::ArrayW<::System::Type*> PlayFab::Json::ReflectionUtils::GetGenericTypeArguments(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetGenericTypeArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetGenericTypeArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.IsTypeGeneric
bool PlayFab::Json::ReflectionUtils::IsTypeGeneric(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::IsTypeGeneric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "IsTypeGeneric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.IsTypeGenericeCollectionInterface
bool PlayFab::Json::ReflectionUtils::IsTypeGenericeCollectionInterface(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::IsTypeGenericeCollectionInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "IsTypeGenericeCollectionInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.IsAssignableFrom
bool PlayFab::Json::ReflectionUtils::IsAssignableFrom(::System::Type* type1, ::System::Type* type2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type1), ::il2cpp_utils::ExtractType(type2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type1, type2);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.IsTypeDictionary
bool PlayFab::Json::ReflectionUtils::IsTypeDictionary(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::IsTypeDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "IsTypeDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.IsNullableType
bool PlayFab::Json::ReflectionUtils::IsNullableType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::IsNullableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "IsNullableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.ToNullableType
::Il2CppObject* PlayFab::Json::ReflectionUtils::ToNullableType(::Il2CppObject* obj, ::System::Type* nullableType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::ToNullableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "ToNullableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(nullableType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, nullableType);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.IsValueType
bool PlayFab::Json::ReflectionUtils::IsValueType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::IsValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "IsValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetConstructors
::System::Collections::Generic::IEnumerable_1<::System::Reflection::ConstructorInfo*>* PlayFab::Json::ReflectionUtils::GetConstructors(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetConstructors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::ConstructorInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetConstructorInfo
::System::Reflection::ConstructorInfo* PlayFab::Json::ReflectionUtils::GetConstructorInfo(::System::Type* type, ::ArrayW<::System::Type*> argsType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetConstructorInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetConstructorInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(argsType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, argsType);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetProperties
::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>* PlayFab::Json::ReflectionUtils::GetProperties(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetFields
::System::Collections::Generic::IEnumerable_1<::System::Reflection::FieldInfo*>* PlayFab::Json::ReflectionUtils::GetFields(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::FieldInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetGetterMethodInfo
::System::Reflection::MethodInfo* PlayFab::Json::ReflectionUtils::GetGetterMethodInfo(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetGetterMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetGetterMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetSetterMethodInfo
::System::Reflection::MethodInfo* PlayFab::Json::ReflectionUtils::GetSetterMethodInfo(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetSetterMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetSetterMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetContructor
::PlayFab::Json::ReflectionUtils::ConstructorDelegate* PlayFab::Json::ReflectionUtils::GetContructor(::System::Reflection::ConstructorInfo* constructorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetContructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetContructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constructorInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::ConstructorDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constructorInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetContructor
::PlayFab::Json::ReflectionUtils::ConstructorDelegate* PlayFab::Json::ReflectionUtils::GetContructor(::System::Type* type, ::ArrayW<::System::Type*> argsType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetContructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetContructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(argsType)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::ConstructorDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, argsType);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetConstructorByReflection
::PlayFab::Json::ReflectionUtils::ConstructorDelegate* PlayFab::Json::ReflectionUtils::GetConstructorByReflection(::System::Reflection::ConstructorInfo* constructorInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetConstructorByReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetConstructorByReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constructorInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::ConstructorDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constructorInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetConstructorByReflection
::PlayFab::Json::ReflectionUtils::ConstructorDelegate* PlayFab::Json::ReflectionUtils::GetConstructorByReflection(::System::Type* type, ::ArrayW<::System::Type*> argsType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetConstructorByReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetConstructorByReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(argsType)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::ConstructorDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, argsType);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetGetMethod
::PlayFab::Json::ReflectionUtils::GetDelegate* PlayFab::Json::ReflectionUtils::GetGetMethod(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetGetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::GetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetGetMethod
::PlayFab::Json::ReflectionUtils::GetDelegate* PlayFab::Json::ReflectionUtils::GetGetMethod(::System::Reflection::FieldInfo* fieldInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetGetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::GetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetGetMethodByReflection
::PlayFab::Json::ReflectionUtils::GetDelegate* PlayFab::Json::ReflectionUtils::GetGetMethodByReflection(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetGetMethodByReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetGetMethodByReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::GetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetGetMethodByReflection
::PlayFab::Json::ReflectionUtils::GetDelegate* PlayFab::Json::ReflectionUtils::GetGetMethodByReflection(::System::Reflection::FieldInfo* fieldInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetGetMethodByReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetGetMethodByReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::GetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetSetMethod
::PlayFab::Json::ReflectionUtils::SetDelegate* PlayFab::Json::ReflectionUtils::GetSetMethod(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetSetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::SetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetSetMethod
::PlayFab::Json::ReflectionUtils::SetDelegate* PlayFab::Json::ReflectionUtils::GetSetMethod(::System::Reflection::FieldInfo* fieldInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetSetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::SetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetSetMethodByReflection
::PlayFab::Json::ReflectionUtils::SetDelegate* PlayFab::Json::ReflectionUtils::GetSetMethodByReflection(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetSetMethodByReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetSetMethodByReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::SetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils.GetSetMethodByReflection
::PlayFab::Json::ReflectionUtils::SetDelegate* PlayFab::Json::ReflectionUtils::GetSetMethodByReflection(::System::Reflection::FieldInfo* fieldInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetSetMethodByReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", "GetSetMethodByReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::Json::ReflectionUtils::SetDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldInfo);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils..cctor
void PlayFab::Json::ReflectionUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "ReflectionUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/GetDelegate
#include "PlayFab/Json/ReflectionUtils_GetDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Json.ReflectionUtils/GetDelegate.Invoke
::Il2CppObject* PlayFab::Json::ReflectionUtils::GetDelegate::Invoke(::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::GetDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, source);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/GetDelegate.BeginInvoke
::System::IAsyncResult* PlayFab::Json::ReflectionUtils::GetDelegate::BeginInvoke(::Il2CppObject* source, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::GetDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, callback, object);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/GetDelegate.EndInvoke
::Il2CppObject* PlayFab::Json::ReflectionUtils::GetDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::GetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::GetDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/SetDelegate
#include "PlayFab/Json/ReflectionUtils_SetDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Json.ReflectionUtils/SetDelegate.Invoke
void PlayFab::Json::ReflectionUtils::SetDelegate::Invoke(::Il2CppObject* source, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::SetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::SetDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, value);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/SetDelegate.BeginInvoke
::System::IAsyncResult* PlayFab::Json::ReflectionUtils::SetDelegate::BeginInvoke(::Il2CppObject* source, ::Il2CppObject* value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::SetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::SetDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, value, callback, object);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/SetDelegate.EndInvoke
void PlayFab::Json::ReflectionUtils::SetDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::SetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::SetDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/ConstructorDelegate
#include "PlayFab/Json/ReflectionUtils_ConstructorDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.Json.ReflectionUtils/ConstructorDelegate.Invoke
::Il2CppObject* PlayFab::Json::ReflectionUtils::ConstructorDelegate::Invoke(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::ConstructorDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::ConstructorDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/ConstructorDelegate.BeginInvoke
::System::IAsyncResult* PlayFab::Json::ReflectionUtils::ConstructorDelegate::BeginInvoke(::ArrayW<::Il2CppObject*> args, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::ConstructorDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::ConstructorDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, args, callback, object);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/ConstructorDelegate.EndInvoke
::Il2CppObject* PlayFab::Json::ReflectionUtils::ConstructorDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::ConstructorDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::Json::ReflectionUtils::ConstructorDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass26_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass26_0.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.ConstructorInfo constructorInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::ConstructorInfo*& PlayFab::Json::ReflectionUtils::$$c__DisplayClass26_0::dyn_constructorInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass26_0::dyn_constructorInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constructorInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/<>c__DisplayClass26_0.<GetConstructorByReflection>b__0
::Il2CppObject* PlayFab::Json::ReflectionUtils::$$c__DisplayClass26_0::$GetConstructorByReflection$b__0(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass26_0::<GetConstructorByReflection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetConstructorByReflection>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass30_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass30_0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo methodInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& PlayFab::Json::ReflectionUtils::$$c__DisplayClass30_0::dyn_methodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass30_0::dyn_methodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/<>c__DisplayClass30_0.<GetGetMethodByReflection>b__0
::Il2CppObject* PlayFab::Json::ReflectionUtils::$$c__DisplayClass30_0::$GetGetMethodByReflection$b__0(::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass30_0::<GetGetMethodByReflection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGetMethodByReflection>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass31_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass31_0.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.FieldInfo fieldInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::FieldInfo*& PlayFab::Json::ReflectionUtils::$$c__DisplayClass31_0::dyn_fieldInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass31_0::dyn_fieldInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/<>c__DisplayClass31_0.<GetGetMethodByReflection>b__0
::Il2CppObject* PlayFab::Json::ReflectionUtils::$$c__DisplayClass31_0::$GetGetMethodByReflection$b__0(::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass31_0::<GetGetMethodByReflection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGetMethodByReflection>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass34_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass34_0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodInfo methodInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& PlayFab::Json::ReflectionUtils::$$c__DisplayClass34_0::dyn_methodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass34_0::dyn_methodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/<>c__DisplayClass34_0.<GetSetMethodByReflection>b__0
void PlayFab::Json::ReflectionUtils::$$c__DisplayClass34_0::$GetSetMethodByReflection$b__0(::Il2CppObject* source, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass34_0::<GetSetMethodByReflection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSetMethodByReflection>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.Json.ReflectionUtils/<>c__DisplayClass35_0
#include "PlayFab/Json/ReflectionUtils_--c__DisplayClass35_0.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.FieldInfo fieldInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::FieldInfo*& PlayFab::Json::ReflectionUtils::$$c__DisplayClass35_0::dyn_fieldInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass35_0::dyn_fieldInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.Json.ReflectionUtils/<>c__DisplayClass35_0.<GetSetMethodByReflection>b__0
void PlayFab::Json::ReflectionUtils::$$c__DisplayClass35_0::$GetSetMethodByReflection$b__0(::Il2CppObject* source, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::ReflectionUtils::$$c__DisplayClass35_0::<GetSetMethodByReflection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSetMethodByReflection>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.EffectType
#include "PlayFab/ProfilesModels/EffectType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.ProfilesModels.EffectType Allow
::PlayFab::ProfilesModels::EffectType PlayFab::ProfilesModels::EffectType::_get_Allow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EffectType::_get_Allow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ProfilesModels::EffectType>("PlayFab.ProfilesModels", "EffectType", "Allow"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ProfilesModels.EffectType Allow
void PlayFab::ProfilesModels::EffectType::_set_Allow(::PlayFab::ProfilesModels::EffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EffectType::_set_Allow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ProfilesModels", "EffectType", "Allow", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ProfilesModels.EffectType Deny
::PlayFab::ProfilesModels::EffectType PlayFab::ProfilesModels::EffectType::_get_Deny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EffectType::_get_Deny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ProfilesModels::EffectType>("PlayFab.ProfilesModels", "EffectType", "Deny"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ProfilesModels.EffectType Deny
void PlayFab::ProfilesModels::EffectType::_set_Deny(::PlayFab::ProfilesModels::EffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EffectType::_set_Deny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ProfilesModels", "EffectType", "Deny", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::ProfilesModels::EffectType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EffectType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.ProfilesModels.EntityDataObject
#include "PlayFab/ProfilesModels/EntityDataObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object DataObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::ProfilesModels::EntityDataObject::dyn_DataObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityDataObject::dyn_DataObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EscapedDataObject
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityDataObject::dyn_EscapedDataObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityDataObject::dyn_EscapedDataObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EscapedDataObject"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ObjectName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityDataObject::dyn_ObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityDataObject::dyn_ObjectName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ObjectName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.EntityKey
#include "PlayFab/ProfilesModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityKey::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityKey::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Type
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityKey::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityKey::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.EntityLineage
#include "PlayFab/ProfilesModels/EntityLineage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String CharacterId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityLineage::dyn_CharacterId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityLineage::dyn_CharacterId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharacterId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GroupId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityLineage::dyn_GroupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityLineage::dyn_GroupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MasterPlayerAccountId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityLineage::dyn_MasterPlayerAccountId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityLineage::dyn_MasterPlayerAccountId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MasterPlayerAccountId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NamespaceId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityLineage::dyn_NamespaceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityLineage::dyn_NamespaceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NamespaceId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TitleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityLineage::dyn_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityLineage::dyn_TitleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TitlePlayerAccountId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityLineage::dyn_TitlePlayerAccountId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityLineage::dyn_TitlePlayerAccountId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitlePlayerAccountId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.ProfilesModels.EntityPermissionStatement
#include "PlayFab/ProfilesModels/EntityPermissionStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Action
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Comment
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Condition
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Condition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Condition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Condition"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.ProfilesModels.EffectType Effect
[[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EffectType& PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Effect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Effect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Effect"))->offset;
  return *reinterpret_cast<::PlayFab::ProfilesModels::EffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Principal
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Principal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Principal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Principal"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Resource
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Resource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityPermissionStatement::dyn_Resource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Resource"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.EntityProfileBody
#include "PlayFab/ProfilesModels/EntityProfileBody.hpp"
// Including type: PlayFab.ProfilesModels.EntityKey
#include "PlayFab/ProfilesModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ProfilesModels.EntityProfileFileMetadata
#include "PlayFab/ProfilesModels/EntityProfileFileMetadata.hpp"
// Including type: PlayFab.ProfilesModels.EntityLineage
#include "PlayFab/ProfilesModels/EntityLineage.hpp"
// Including type: PlayFab.ProfilesModels.EntityDataObject
#include "PlayFab/ProfilesModels/EntityDataObject.hpp"
// Including type: PlayFab.ProfilesModels.EntityPermissionStatement
#include "PlayFab/ProfilesModels/EntityPermissionStatement.hpp"
// Including type: PlayFab.ProfilesModels.EntityStatisticValue
#include "PlayFab/ProfilesModels/EntityStatisticValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AvatarUrl
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityProfileBody::dyn_AvatarUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_AvatarUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AvatarUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime Created
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::ProfilesModels::EntityProfileBody::dyn_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Created");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Created"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DisplayName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityProfileBody::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.ProfilesModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EntityKey*& PlayFab::ProfilesModels::EntityProfileBody::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::ProfilesModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EntityChain
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityProfileBody::dyn_EntityChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_EntityChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EntityChain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> ExperimentVariants
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::ProfilesModels::EntityProfileBody::dyn_ExperimentVariants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_ExperimentVariants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExperimentVariants"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ProfilesModels.EntityProfileFileMetadata> Files
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityProfileFileMetadata*>*& PlayFab::ProfilesModels::EntityProfileBody::dyn_Files() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Files");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Files"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityProfileFileMetadata*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Language
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityProfileBody::dyn_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LeaderboardMetadata
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityProfileBody::dyn_LeaderboardMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_LeaderboardMetadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeaderboardMetadata"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.ProfilesModels.EntityLineage Lineage
[[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EntityLineage*& PlayFab::ProfilesModels::EntityProfileBody::dyn_Lineage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Lineage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Lineage"))->offset;
  return *reinterpret_cast<::PlayFab::ProfilesModels::EntityLineage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ProfilesModels.EntityDataObject> Objects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityDataObject*>*& PlayFab::ProfilesModels::EntityProfileBody::dyn_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Objects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityDataObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ProfilesModels.EntityPermissionStatement> Permissions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>*& PlayFab::ProfilesModels::EntityProfileBody::dyn_Permissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Permissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Permissions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ProfilesModels.EntityStatisticValue> Statistics
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityStatisticValue*>*& PlayFab::ProfilesModels::EntityProfileBody::dyn_Statistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_Statistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Statistics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityStatisticValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 VersionNumber
[[deprecated("Use field access instead!")]] int& PlayFab::ProfilesModels::EntityProfileBody::dyn_VersionNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileBody::dyn_VersionNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.EntityProfileFileMetadata
#include "PlayFab/ProfilesModels/EntityProfileFileMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Checksum
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_Checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_Checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Checksum"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FileName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime LastModified
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_LastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_LastModified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastModified"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Size
[[deprecated("Use field access instead!")]] int& PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityProfileFileMetadata::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.EntityStatisticChildValue
#include "PlayFab/ProfilesModels/EntityStatisticChildValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ChildName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityStatisticChildValue::dyn_ChildName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticChildValue::dyn_ChildName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChildName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Metadata
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityStatisticChildValue::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticChildValue::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Value
[[deprecated("Use field access instead!")]] int& PlayFab::ProfilesModels::EntityStatisticChildValue::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticChildValue::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.EntityStatisticValue
#include "PlayFab/ProfilesModels/EntityStatisticValue.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ProfilesModels.EntityStatisticChildValue
#include "PlayFab/ProfilesModels/EntityStatisticChildValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ProfilesModels.EntityStatisticChildValue> ChildStatistics
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityStatisticChildValue*>*& PlayFab::ProfilesModels::EntityStatisticValue::dyn_ChildStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticValue::dyn_ChildStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChildStatistics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityStatisticChildValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Metadata
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityStatisticValue::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticValue::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::EntityStatisticValue::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticValue::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> Value
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::ProfilesModels::EntityStatisticValue::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticValue::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Version
[[deprecated("Use field access instead!")]] int& PlayFab::ProfilesModels::EntityStatisticValue::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityStatisticValue::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetEntityProfileRequest
#include "PlayFab/ProfilesModels/GetEntityProfileRequest.hpp"
// Including type: PlayFab.ProfilesModels.EntityKey
#include "PlayFab/ProfilesModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> DataAsObject
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& PlayFab::ProfilesModels::GetEntityProfileRequest::dyn_DataAsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetEntityProfileRequest::dyn_DataAsObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataAsObject"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.ProfilesModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EntityKey*& PlayFab::ProfilesModels::GetEntityProfileRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetEntityProfileRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::ProfilesModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetEntityProfileResponse
#include "PlayFab/ProfilesModels/GetEntityProfileResponse.hpp"
// Including type: PlayFab.ProfilesModels.EntityProfileBody
#include "PlayFab/ProfilesModels/EntityProfileBody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ProfilesModels.EntityProfileBody Profile
[[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EntityProfileBody*& PlayFab::ProfilesModels::GetEntityProfileResponse::dyn_Profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetEntityProfileResponse::dyn_Profile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Profile"))->offset;
  return *reinterpret_cast<::PlayFab::ProfilesModels::EntityProfileBody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetEntityProfilesRequest
#include "PlayFab/ProfilesModels/GetEntityProfilesRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ProfilesModels.EntityKey
#include "PlayFab/ProfilesModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Boolean> DataAsObject
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& PlayFab::ProfilesModels::GetEntityProfilesRequest::dyn_DataAsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetEntityProfilesRequest::dyn_DataAsObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataAsObject"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ProfilesModels.EntityKey> Entities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityKey*>*& PlayFab::ProfilesModels::GetEntityProfilesRequest::dyn_Entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetEntityProfilesRequest::dyn_Entities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetEntityProfilesResponse
#include "PlayFab/ProfilesModels/GetEntityProfilesResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ProfilesModels.EntityProfileBody
#include "PlayFab/ProfilesModels/EntityProfileBody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ProfilesModels.EntityProfileBody> Profiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityProfileBody*>*& PlayFab::ProfilesModels::GetEntityProfilesResponse::dyn_Profiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetEntityProfilesResponse::dyn_Profiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Profiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityProfileBody*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetGlobalPolicyRequest
#include "PlayFab/ProfilesModels/GetGlobalPolicyRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetGlobalPolicyResponse
#include "PlayFab/ProfilesModels/GetGlobalPolicyResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ProfilesModels.EntityPermissionStatement
#include "PlayFab/ProfilesModels/EntityPermissionStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ProfilesModels.EntityPermissionStatement> Permissions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>*& PlayFab::ProfilesModels::GetGlobalPolicyResponse::dyn_Permissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetGlobalPolicyResponse::dyn_Permissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Permissions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsRequest
#include "PlayFab/ProfilesModels/GetTitlePlayersFromMasterPlayerAccountIdsRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> MasterPlayerAccountIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsRequest::dyn_MasterPlayerAccountIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsRequest::dyn_MasterPlayerAccountIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MasterPlayerAccountIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TitleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsRequest::dyn_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsRequest::dyn_TitleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsResponse
#include "PlayFab/ProfilesModels/GetTitlePlayersFromMasterPlayerAccountIdsResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ProfilesModels.EntityKey
#include "PlayFab/ProfilesModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String TitleId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse::dyn_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse::dyn_TitleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ProfilesModels.EntityKey> TitlePlayerAccounts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityKey*>*& PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse::dyn_TitlePlayerAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse::dyn_TitlePlayerAccounts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitlePlayerAccounts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.OperationTypes
#include "PlayFab/ProfilesModels/OperationTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.ProfilesModels.OperationTypes Created
::PlayFab::ProfilesModels::OperationTypes PlayFab::ProfilesModels::OperationTypes::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ProfilesModels::OperationTypes>("PlayFab.ProfilesModels", "OperationTypes", "Created"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ProfilesModels.OperationTypes Created
void PlayFab::ProfilesModels::OperationTypes::_set_Created(::PlayFab::ProfilesModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ProfilesModels", "OperationTypes", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ProfilesModels.OperationTypes Updated
::PlayFab::ProfilesModels::OperationTypes PlayFab::ProfilesModels::OperationTypes::_get_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_get_Updated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ProfilesModels::OperationTypes>("PlayFab.ProfilesModels", "OperationTypes", "Updated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ProfilesModels.OperationTypes Updated
void PlayFab::ProfilesModels::OperationTypes::_set_Updated(::PlayFab::ProfilesModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_set_Updated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ProfilesModels", "OperationTypes", "Updated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ProfilesModels.OperationTypes Deleted
::PlayFab::ProfilesModels::OperationTypes PlayFab::ProfilesModels::OperationTypes::_get_Deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_get_Deleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ProfilesModels::OperationTypes>("PlayFab.ProfilesModels", "OperationTypes", "Deleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ProfilesModels.OperationTypes Deleted
void PlayFab::ProfilesModels::OperationTypes::_set_Deleted(::PlayFab::ProfilesModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_set_Deleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ProfilesModels", "OperationTypes", "Deleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.ProfilesModels.OperationTypes None
::PlayFab::ProfilesModels::OperationTypes PlayFab::ProfilesModels::OperationTypes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::ProfilesModels::OperationTypes>("PlayFab.ProfilesModels", "OperationTypes", "None"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.ProfilesModels.OperationTypes None
void PlayFab::ProfilesModels::OperationTypes::_set_None(::PlayFab::ProfilesModels::OperationTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.ProfilesModels", "OperationTypes", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::ProfilesModels::OperationTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::OperationTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.SetEntityProfilePolicyRequest
#include "PlayFab/ProfilesModels/SetEntityProfilePolicyRequest.hpp"
// Including type: PlayFab.ProfilesModels.EntityKey
#include "PlayFab/ProfilesModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ProfilesModels.EntityPermissionStatement
#include "PlayFab/ProfilesModels/EntityPermissionStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ProfilesModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EntityKey*& PlayFab::ProfilesModels::SetEntityProfilePolicyRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetEntityProfilePolicyRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::ProfilesModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ProfilesModels.EntityPermissionStatement> Statements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>*& PlayFab::ProfilesModels::SetEntityProfilePolicyRequest::dyn_Statements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetEntityProfilePolicyRequest::dyn_Statements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Statements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.SetEntityProfilePolicyResponse
#include "PlayFab/ProfilesModels/SetEntityProfilePolicyResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ProfilesModels.EntityPermissionStatement
#include "PlayFab/ProfilesModels/EntityPermissionStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ProfilesModels.EntityPermissionStatement> Permissions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>*& PlayFab::ProfilesModels::SetEntityProfilePolicyResponse::dyn_Permissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetEntityProfilePolicyResponse::dyn_Permissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Permissions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.SetGlobalPolicyRequest
#include "PlayFab/ProfilesModels/SetGlobalPolicyRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.ProfilesModels.EntityPermissionStatement
#include "PlayFab/ProfilesModels/EntityPermissionStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ProfilesModels.EntityPermissionStatement> Permissions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>*& PlayFab::ProfilesModels::SetGlobalPolicyRequest::dyn_Permissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetGlobalPolicyRequest::dyn_Permissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Permissions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ProfilesModels::EntityPermissionStatement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.SetGlobalPolicyResponse
#include "PlayFab/ProfilesModels/SetGlobalPolicyResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.SetProfileLanguageRequest
#include "PlayFab/ProfilesModels/SetProfileLanguageRequest.hpp"
// Including type: PlayFab.ProfilesModels.EntityKey
#include "PlayFab/ProfilesModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ProfilesModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EntityKey*& PlayFab::ProfilesModels::SetProfileLanguageRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetProfileLanguageRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::ProfilesModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> ExpectedVersion
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::ProfilesModels::SetProfileLanguageRequest::dyn_ExpectedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetProfileLanguageRequest::dyn_ExpectedVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectedVersion"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Language
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::ProfilesModels::SetProfileLanguageRequest::dyn_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetProfileLanguageRequest::dyn_Language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.ProfilesModels.SetProfileLanguageResponse
#include "PlayFab/ProfilesModels/SetProfileLanguageResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.ProfilesModels.OperationTypes> OperationResult
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ProfilesModels::OperationTypes>& PlayFab::ProfilesModels::SetProfileLanguageResponse::dyn_OperationResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetProfileLanguageResponse::dyn_OperationResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperationResult"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::ProfilesModels::OperationTypes>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> VersionNumber
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::ProfilesModels::SetProfileLanguageResponse::dyn_VersionNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::SetProfileLanguageResponse::dyn_VersionNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNumber"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AssetReference
#include "PlayFab/MultiplayerModels/AssetReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String FileName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::AssetReference::dyn_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AssetReference::dyn_FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MountPath
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::AssetReference::dyn_MountPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AssetReference::dyn_MountPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MountPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AssetReferenceParams
#include "PlayFab/MultiplayerModels/AssetReferenceParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String FileName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::AssetReferenceParams::dyn_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AssetReferenceParams::dyn_FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MountPath
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::AssetReferenceParams::dyn_MountPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AssetReferenceParams::dyn_MountPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MountPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AssetSummary
#include "PlayFab/MultiplayerModels/AssetSummary.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String FileName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::AssetSummary::dyn_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AssetSummary::dyn_FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Metadata
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::MultiplayerModels::AssetSummary::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AssetSummary::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AttributeMergeFunction
#include "PlayFab/MultiplayerModels/AttributeMergeFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AttributeMergeFunction Min
::PlayFab::MultiplayerModels::AttributeMergeFunction PlayFab::MultiplayerModels::AttributeMergeFunction::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeMergeFunction::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AttributeMergeFunction>("PlayFab.MultiplayerModels", "AttributeMergeFunction", "Min"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AttributeMergeFunction Min
void PlayFab::MultiplayerModels::AttributeMergeFunction::_set_Min(::PlayFab::MultiplayerModels::AttributeMergeFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeMergeFunction::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AttributeMergeFunction", "Min", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AttributeMergeFunction Max
::PlayFab::MultiplayerModels::AttributeMergeFunction PlayFab::MultiplayerModels::AttributeMergeFunction::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeMergeFunction::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AttributeMergeFunction>("PlayFab.MultiplayerModels", "AttributeMergeFunction", "Max"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AttributeMergeFunction Max
void PlayFab::MultiplayerModels::AttributeMergeFunction::_set_Max(::PlayFab::MultiplayerModels::AttributeMergeFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeMergeFunction::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AttributeMergeFunction", "Max", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AttributeMergeFunction Average
::PlayFab::MultiplayerModels::AttributeMergeFunction PlayFab::MultiplayerModels::AttributeMergeFunction::_get_Average() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeMergeFunction::_get_Average");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AttributeMergeFunction>("PlayFab.MultiplayerModels", "AttributeMergeFunction", "Average"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AttributeMergeFunction Average
void PlayFab::MultiplayerModels::AttributeMergeFunction::_set_Average(::PlayFab::MultiplayerModels::AttributeMergeFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeMergeFunction::_set_Average");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AttributeMergeFunction", "Average", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::AttributeMergeFunction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeMergeFunction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AttributeNotSpecifiedBehavior
#include "PlayFab/MultiplayerModels/AttributeNotSpecifiedBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AttributeNotSpecifiedBehavior UseDefault
::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_get_UseDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_get_UseDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior>("PlayFab.MultiplayerModels", "AttributeNotSpecifiedBehavior", "UseDefault"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AttributeNotSpecifiedBehavior UseDefault
void PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_set_UseDefault(::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_set_UseDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AttributeNotSpecifiedBehavior", "UseDefault", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AttributeNotSpecifiedBehavior MatchAny
::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_get_MatchAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_get_MatchAny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior>("PlayFab.MultiplayerModels", "AttributeNotSpecifiedBehavior", "MatchAny"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AttributeNotSpecifiedBehavior MatchAny
void PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_set_MatchAny(::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::_set_MatchAny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AttributeNotSpecifiedBehavior", "MatchAny", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AttributeSource
#include "PlayFab/MultiplayerModels/AttributeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AttributeSource User
::PlayFab::MultiplayerModels::AttributeSource PlayFab::MultiplayerModels::AttributeSource::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeSource::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AttributeSource>("PlayFab.MultiplayerModels", "AttributeSource", "User"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AttributeSource User
void PlayFab::MultiplayerModels::AttributeSource::_set_User(::PlayFab::MultiplayerModels::AttributeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeSource::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AttributeSource", "User", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AttributeSource PlayerEntity
::PlayFab::MultiplayerModels::AttributeSource PlayFab::MultiplayerModels::AttributeSource::_get_PlayerEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeSource::_get_PlayerEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AttributeSource>("PlayFab.MultiplayerModels", "AttributeSource", "PlayerEntity"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AttributeSource PlayerEntity
void PlayFab::MultiplayerModels::AttributeSource::_set_PlayerEntity(::PlayFab::MultiplayerModels::AttributeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeSource::_set_PlayerEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AttributeSource", "PlayerEntity", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::AttributeSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AttributeSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AzureRegion
#include "PlayFab/MultiplayerModels/AzureRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion AustraliaEast
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_AustraliaEast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_AustraliaEast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "AustraliaEast"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion AustraliaEast
void PlayFab::MultiplayerModels::AzureRegion::_set_AustraliaEast(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_AustraliaEast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "AustraliaEast", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion AustraliaSoutheast
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_AustraliaSoutheast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_AustraliaSoutheast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "AustraliaSoutheast"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion AustraliaSoutheast
void PlayFab::MultiplayerModels::AzureRegion::_set_AustraliaSoutheast(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_AustraliaSoutheast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "AustraliaSoutheast", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion BrazilSouth
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_BrazilSouth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_BrazilSouth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "BrazilSouth"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion BrazilSouth
void PlayFab::MultiplayerModels::AzureRegion::_set_BrazilSouth(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_BrazilSouth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "BrazilSouth", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion CentralUs
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_CentralUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_CentralUs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "CentralUs"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion CentralUs
void PlayFab::MultiplayerModels::AzureRegion::_set_CentralUs(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_CentralUs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "CentralUs", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion EastAsia
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_EastAsia() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_EastAsia");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "EastAsia"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion EastAsia
void PlayFab::MultiplayerModels::AzureRegion::_set_EastAsia(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_EastAsia");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "EastAsia", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion EastUs
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_EastUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_EastUs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "EastUs"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion EastUs
void PlayFab::MultiplayerModels::AzureRegion::_set_EastUs(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_EastUs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "EastUs", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion EastUs2
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_EastUs2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_EastUs2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "EastUs2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion EastUs2
void PlayFab::MultiplayerModels::AzureRegion::_set_EastUs2(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_EastUs2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "EastUs2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion JapanEast
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_JapanEast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_JapanEast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "JapanEast"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion JapanEast
void PlayFab::MultiplayerModels::AzureRegion::_set_JapanEast(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_JapanEast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "JapanEast", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion JapanWest
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_JapanWest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_JapanWest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "JapanWest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion JapanWest
void PlayFab::MultiplayerModels::AzureRegion::_set_JapanWest(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_JapanWest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "JapanWest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion NorthCentralUs
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_NorthCentralUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_NorthCentralUs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "NorthCentralUs"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion NorthCentralUs
void PlayFab::MultiplayerModels::AzureRegion::_set_NorthCentralUs(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_NorthCentralUs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "NorthCentralUs", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion NorthEurope
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_NorthEurope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_NorthEurope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "NorthEurope"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion NorthEurope
void PlayFab::MultiplayerModels::AzureRegion::_set_NorthEurope(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_NorthEurope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "NorthEurope", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion SouthCentralUs
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_SouthCentralUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_SouthCentralUs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "SouthCentralUs"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion SouthCentralUs
void PlayFab::MultiplayerModels::AzureRegion::_set_SouthCentralUs(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_SouthCentralUs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "SouthCentralUs", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion SoutheastAsia
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_SoutheastAsia() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_SoutheastAsia");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "SoutheastAsia"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion SoutheastAsia
void PlayFab::MultiplayerModels::AzureRegion::_set_SoutheastAsia(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_SoutheastAsia");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "SoutheastAsia", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion WestEurope
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_WestEurope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_WestEurope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "WestEurope"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion WestEurope
void PlayFab::MultiplayerModels::AzureRegion::_set_WestEurope(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_WestEurope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "WestEurope", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion WestUs
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_WestUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_WestUs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "WestUs"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion WestUs
void PlayFab::MultiplayerModels::AzureRegion::_set_WestUs(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_WestUs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "WestUs", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion ChinaEast2
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_ChinaEast2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_ChinaEast2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "ChinaEast2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion ChinaEast2
void PlayFab::MultiplayerModels::AzureRegion::_set_ChinaEast2(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_ChinaEast2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "ChinaEast2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion ChinaNorth2
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_ChinaNorth2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_ChinaNorth2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "ChinaNorth2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion ChinaNorth2
void PlayFab::MultiplayerModels::AzureRegion::_set_ChinaNorth2(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_ChinaNorth2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "ChinaNorth2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureRegion SouthAfricaNorth
::PlayFab::MultiplayerModels::AzureRegion PlayFab::MultiplayerModels::AzureRegion::_get_SouthAfricaNorth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_get_SouthAfricaNorth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureRegion>("PlayFab.MultiplayerModels", "AzureRegion", "SouthAfricaNorth"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureRegion SouthAfricaNorth
void PlayFab::MultiplayerModels::AzureRegion::_set_SouthAfricaNorth(::PlayFab::MultiplayerModels::AzureRegion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::_set_SouthAfricaNorth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureRegion", "SouthAfricaNorth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::AzureRegion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureRegion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AzureVmFamily
#include "PlayFab/MultiplayerModels/AzureVmFamily.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmFamily A
::PlayFab::MultiplayerModels::AzureVmFamily PlayFab::MultiplayerModels::AzureVmFamily::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmFamily>("PlayFab.MultiplayerModels", "AzureVmFamily", "A"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmFamily A
void PlayFab::MultiplayerModels::AzureVmFamily::_set_A(::PlayFab::MultiplayerModels::AzureVmFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmFamily", "A", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmFamily Av2
::PlayFab::MultiplayerModels::AzureVmFamily PlayFab::MultiplayerModels::AzureVmFamily::_get_Av2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_get_Av2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmFamily>("PlayFab.MultiplayerModels", "AzureVmFamily", "Av2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmFamily Av2
void PlayFab::MultiplayerModels::AzureVmFamily::_set_Av2(::PlayFab::MultiplayerModels::AzureVmFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_set_Av2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmFamily", "Av2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmFamily Dv2
::PlayFab::MultiplayerModels::AzureVmFamily PlayFab::MultiplayerModels::AzureVmFamily::_get_Dv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_get_Dv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmFamily>("PlayFab.MultiplayerModels", "AzureVmFamily", "Dv2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmFamily Dv2
void PlayFab::MultiplayerModels::AzureVmFamily::_set_Dv2(::PlayFab::MultiplayerModels::AzureVmFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_set_Dv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmFamily", "Dv2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmFamily Dv3
::PlayFab::MultiplayerModels::AzureVmFamily PlayFab::MultiplayerModels::AzureVmFamily::_get_Dv3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_get_Dv3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmFamily>("PlayFab.MultiplayerModels", "AzureVmFamily", "Dv3"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmFamily Dv3
void PlayFab::MultiplayerModels::AzureVmFamily::_set_Dv3(::PlayFab::MultiplayerModels::AzureVmFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_set_Dv3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmFamily", "Dv3", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmFamily F
::PlayFab::MultiplayerModels::AzureVmFamily PlayFab::MultiplayerModels::AzureVmFamily::_get_F() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_get_F");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmFamily>("PlayFab.MultiplayerModels", "AzureVmFamily", "F"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmFamily F
void PlayFab::MultiplayerModels::AzureVmFamily::_set_F(::PlayFab::MultiplayerModels::AzureVmFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_set_F");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmFamily", "F", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmFamily Fsv2
::PlayFab::MultiplayerModels::AzureVmFamily PlayFab::MultiplayerModels::AzureVmFamily::_get_Fsv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_get_Fsv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmFamily>("PlayFab.MultiplayerModels", "AzureVmFamily", "Fsv2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmFamily Fsv2
void PlayFab::MultiplayerModels::AzureVmFamily::_set_Fsv2(::PlayFab::MultiplayerModels::AzureVmFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_set_Fsv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmFamily", "Fsv2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmFamily Dasv4
::PlayFab::MultiplayerModels::AzureVmFamily PlayFab::MultiplayerModels::AzureVmFamily::_get_Dasv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_get_Dasv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmFamily>("PlayFab.MultiplayerModels", "AzureVmFamily", "Dasv4"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmFamily Dasv4
void PlayFab::MultiplayerModels::AzureVmFamily::_set_Dasv4(::PlayFab::MultiplayerModels::AzureVmFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::_set_Dasv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmFamily", "Dasv4", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::AzureVmFamily::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmFamily::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.AzureVmSize
#include "PlayFab/MultiplayerModels/AzureVmSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A1
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A1"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A1
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A1(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A1", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A3
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A3"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A3
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A3(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A3", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A4
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A4"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A4
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A4(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A4", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A1_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A1_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A1_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A1_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A1_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A1_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A1_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A1_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A2_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A2_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A2_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A2_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A2_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A2_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A2_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A2_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A4_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A4_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A4_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A4_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A4_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A4_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A4_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A4_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A8_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A8_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_A8_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A8_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_A8_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A8_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_A8_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_A8_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D1_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D1_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D1_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D1_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D1_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D1_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D1_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D1_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D2_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D2_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D2_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D2_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D2_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D2_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D2_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D2_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D3_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D3_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D3_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D3_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D3_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D3_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D3_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D3_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D4_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D4_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D4_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D4_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D4_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D4_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D4_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D4_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D5_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D5_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D5_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D5_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D5_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D5_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D5_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D5_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D2_v3
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D2_v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D2_v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D2_v3"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D2_v3
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D2_v3(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D2_v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D2_v3", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D4_v3
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D4_v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D4_v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D4_v3"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D4_v3
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D4_v3(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D4_v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D4_v3", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D8_v3
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D8_v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D8_v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D8_v3"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D8_v3
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D8_v3(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D8_v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D8_v3", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D16_v3
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D16_v3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D16_v3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D16_v3"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D16_v3
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D16_v3(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D16_v3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D16_v3", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F1
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F1"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F1
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F1(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F1", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F4
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F4"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F4
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F4(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F4", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F8
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F8"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F8
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F8(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F8", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F16
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F16"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F16
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F16(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F16", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F2s_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F2s_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F2s_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F2s_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F2s_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F2s_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F2s_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F2s_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F4s_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F4s_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F4s_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F4s_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F4s_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F4s_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F4s_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F4s_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F8s_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F8s_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F8s_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F8s_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F8s_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F8s_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F8s_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F8s_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F16s_v2
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F16s_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_F16s_v2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F16s_v2"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_F16s_v2
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F16s_v2(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_F16s_v2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_F16s_v2", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D2as_v4
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D2as_v4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D2as_v4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D2as_v4"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D2as_v4
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D2as_v4(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D2as_v4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D2as_v4", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D4as_v4
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D4as_v4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D4as_v4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D4as_v4"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D4as_v4
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D4as_v4(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D4as_v4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D4as_v4", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D8as_v4
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D8as_v4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D8as_v4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D8as_v4"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D8as_v4
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D8as_v4(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D8as_v4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D8as_v4", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D16as_v4
::PlayFab::MultiplayerModels::AzureVmSize PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D16as_v4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_get_Standard_D16as_v4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::AzureVmSize>("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D16as_v4"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.AzureVmSize Standard_D16as_v4
void PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D16as_v4(::PlayFab::MultiplayerModels::AzureVmSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::_set_Standard_D16as_v4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "AzureVmSize", "Standard_D16as_v4", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::AzureVmSize::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::AzureVmSize::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.BuildAliasDetailsResponse
#include "PlayFab/MultiplayerModels/BuildAliasDetailsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.BuildSelectionCriterion
#include "PlayFab/MultiplayerModels/BuildSelectionCriterion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AliasId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_AliasId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_AliasId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AliasId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AliasName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_AliasName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_AliasName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AliasName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildSelectionCriterion> BuildSelectionCriteria
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildSelectionCriterion*>*& PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_BuildSelectionCriteria() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_BuildSelectionCriteria");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildSelectionCriteria"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildSelectionCriterion*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildAliasDetailsResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.BuildAliasParams
#include "PlayFab/MultiplayerModels/BuildAliasParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AliasId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildAliasParams::dyn_AliasId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildAliasParams::dyn_AliasId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AliasId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.BuildRegion
#include "PlayFab/MultiplayerModels/BuildRegion.hpp"
// Including type: PlayFab.MultiplayerModels.CurrentServerStats
#include "PlayFab/MultiplayerModels/CurrentServerStats.hpp"
// Including type: PlayFab.MultiplayerModels.DynamicStandbySettings
#include "PlayFab/MultiplayerModels/DynamicStandbySettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.CurrentServerStats CurrentServerStats
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::CurrentServerStats*& PlayFab::MultiplayerModels::BuildRegion::dyn_CurrentServerStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegion::dyn_CurrentServerStats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentServerStats"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::CurrentServerStats**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.DynamicStandbySettings DynamicStandbySettings
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::DynamicStandbySettings*& PlayFab::MultiplayerModels::BuildRegion::dyn_DynamicStandbySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegion::dyn_DynamicStandbySettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DynamicStandbySettings"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::DynamicStandbySettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxServers
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::BuildRegion::dyn_MaxServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegion::dyn_MaxServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxServers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildRegion::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegion::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StandbyServers
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::BuildRegion::dyn_StandbyServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegion::dyn_StandbyServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StandbyServers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Status
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildRegion::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegion::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.BuildRegionParams
#include "PlayFab/MultiplayerModels/BuildRegionParams.hpp"
// Including type: PlayFab.MultiplayerModels.DynamicStandbySettings
#include "PlayFab/MultiplayerModels/DynamicStandbySettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.DynamicStandbySettings DynamicStandbySettings
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::DynamicStandbySettings*& PlayFab::MultiplayerModels::BuildRegionParams::dyn_DynamicStandbySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegionParams::dyn_DynamicStandbySettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DynamicStandbySettings"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::DynamicStandbySettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxServers
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::BuildRegionParams::dyn_MaxServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegionParams::dyn_MaxServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxServers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildRegionParams::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegionParams::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StandbyServers
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::BuildRegionParams::dyn_StandbyServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildRegionParams::dyn_StandbyServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StandbyServers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.BuildSelectionCriterion
#include "PlayFab/MultiplayerModels/BuildSelectionCriterion.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.UInt32> BuildWeightDistribution
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, uint>*& PlayFab::MultiplayerModels::BuildSelectionCriterion::dyn_BuildWeightDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildSelectionCriterion::dyn_BuildWeightDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildWeightDistribution"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.BuildSummary
#include "PlayFab/MultiplayerModels/BuildSummary.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.BuildRegion
#include "PlayFab/MultiplayerModels/BuildRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildSummary::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildSummary::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BuildName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::BuildSummary::dyn_BuildName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildSummary::dyn_BuildName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> CreationTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::BuildSummary::dyn_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildSummary::dyn_CreationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreationTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Metadata
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::MultiplayerModels::BuildSummary::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildSummary::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildRegion> RegionConfigurations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>*& PlayFab::MultiplayerModels::BuildSummary::dyn_RegionConfigurations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::BuildSummary::dyn_RegionConfigurations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionConfigurations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelAllMatchmakingTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/CancelAllMatchmakingTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::EntityKey*& PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelAllMatchmakingTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/CancelAllMatchmakingTicketsForPlayerResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelAllServerBackfillTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/CancelAllServerBackfillTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::EntityKey*& PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelAllServerBackfillTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/CancelAllServerBackfillTicketsForPlayerResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancellationReason
#include "PlayFab/MultiplayerModels/CancellationReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.CancellationReason Requested
::PlayFab::MultiplayerModels::CancellationReason PlayFab::MultiplayerModels::CancellationReason::_get_Requested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancellationReason::_get_Requested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::CancellationReason>("PlayFab.MultiplayerModels", "CancellationReason", "Requested"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.CancellationReason Requested
void PlayFab::MultiplayerModels::CancellationReason::_set_Requested(::PlayFab::MultiplayerModels::CancellationReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancellationReason::_set_Requested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "CancellationReason", "Requested", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.CancellationReason Internal
::PlayFab::MultiplayerModels::CancellationReason PlayFab::MultiplayerModels::CancellationReason::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancellationReason::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::CancellationReason>("PlayFab.MultiplayerModels", "CancellationReason", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.CancellationReason Internal
void PlayFab::MultiplayerModels::CancellationReason::_set_Internal(::PlayFab::MultiplayerModels::CancellationReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancellationReason::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "CancellationReason", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.CancellationReason Timeout
::PlayFab::MultiplayerModels::CancellationReason PlayFab::MultiplayerModels::CancellationReason::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancellationReason::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::CancellationReason>("PlayFab.MultiplayerModels", "CancellationReason", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.CancellationReason Timeout
void PlayFab::MultiplayerModels::CancellationReason::_set_Timeout(::PlayFab::MultiplayerModels::CancellationReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancellationReason::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "CancellationReason", "Timeout", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CancellationReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancellationReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CancelMatchmakingTicketRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CancelMatchmakingTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelMatchmakingTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CancelMatchmakingTicketRequest::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelMatchmakingTicketRequest::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/CancelMatchmakingTicketResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/CancelServerBackfillTicketRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CancelServerBackfillTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelServerBackfillTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CancelServerBackfillTicketRequest::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CancelServerBackfillTicketRequest::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CancelServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/CancelServerBackfillTicketResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.Certificate
#include "PlayFab/MultiplayerModels/Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Base64EncodedValue
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::Certificate::dyn_Base64EncodedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::Certificate::dyn_Base64EncodedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Base64EncodedValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::Certificate::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::Certificate::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Password
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::Certificate::dyn_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::Certificate::dyn_Password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CertificateSummary
#include "PlayFab/MultiplayerModels/CertificateSummary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CertificateSummary::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CertificateSummary::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Thumbprint
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CertificateSummary::dyn_Thumbprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CertificateSummary::dyn_Thumbprint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Thumbprint"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ConnectedPlayer
#include "PlayFab/MultiplayerModels/ConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String PlayerId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ConnectedPlayer::dyn_PlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ConnectedPlayer::dyn_PlayerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ContainerFlavor
#include "PlayFab/MultiplayerModels/ContainerFlavor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ContainerFlavor ManagedWindowsServerCore
::PlayFab::MultiplayerModels::ContainerFlavor PlayFab::MultiplayerModels::ContainerFlavor::_get_ManagedWindowsServerCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_get_ManagedWindowsServerCore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ContainerFlavor>("PlayFab.MultiplayerModels", "ContainerFlavor", "ManagedWindowsServerCore"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ContainerFlavor ManagedWindowsServerCore
void PlayFab::MultiplayerModels::ContainerFlavor::_set_ManagedWindowsServerCore(::PlayFab::MultiplayerModels::ContainerFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_set_ManagedWindowsServerCore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ContainerFlavor", "ManagedWindowsServerCore", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ContainerFlavor CustomLinux
::PlayFab::MultiplayerModels::ContainerFlavor PlayFab::MultiplayerModels::ContainerFlavor::_get_CustomLinux() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_get_CustomLinux");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ContainerFlavor>("PlayFab.MultiplayerModels", "ContainerFlavor", "CustomLinux"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ContainerFlavor CustomLinux
void PlayFab::MultiplayerModels::ContainerFlavor::_set_CustomLinux(::PlayFab::MultiplayerModels::ContainerFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_set_CustomLinux");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ContainerFlavor", "CustomLinux", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ContainerFlavor ManagedWindowsServerCorePreview
::PlayFab::MultiplayerModels::ContainerFlavor PlayFab::MultiplayerModels::ContainerFlavor::_get_ManagedWindowsServerCorePreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_get_ManagedWindowsServerCorePreview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ContainerFlavor>("PlayFab.MultiplayerModels", "ContainerFlavor", "ManagedWindowsServerCorePreview"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ContainerFlavor ManagedWindowsServerCorePreview
void PlayFab::MultiplayerModels::ContainerFlavor::_set_ManagedWindowsServerCorePreview(::PlayFab::MultiplayerModels::ContainerFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_set_ManagedWindowsServerCorePreview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ContainerFlavor", "ManagedWindowsServerCorePreview", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ContainerFlavor Invalid
::PlayFab::MultiplayerModels::ContainerFlavor PlayFab::MultiplayerModels::ContainerFlavor::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ContainerFlavor>("PlayFab.MultiplayerModels", "ContainerFlavor", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ContainerFlavor Invalid
void PlayFab::MultiplayerModels::ContainerFlavor::_set_Invalid(::PlayFab::MultiplayerModels::ContainerFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ContainerFlavor", "Invalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ContainerFlavor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerFlavor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ContainerImageReference
#include "PlayFab/MultiplayerModels/ContainerImageReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ImageName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ContainerImageReference::dyn_ImageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerImageReference::dyn_ImageName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Tag
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ContainerImageReference::dyn_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ContainerImageReference::dyn_Tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CoreCapacity
#include "PlayFab/MultiplayerModels/CoreCapacity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Available
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CoreCapacity::dyn_Available() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CoreCapacity::dyn_Available");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Available"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CoreCapacity::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CoreCapacity::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Total
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CoreCapacity::dyn_Total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CoreCapacity::dyn_Total");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmFamily> VmFamily
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmFamily>& PlayFab::MultiplayerModels::CoreCapacity::dyn_VmFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CoreCapacity::dyn_VmFamily");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmFamily"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmFamily>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateBuildAliasRequest
#include "PlayFab/MultiplayerModels/CreateBuildAliasRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.BuildSelectionCriterion
#include "PlayFab/MultiplayerModels/BuildSelectionCriterion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AliasName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildAliasRequest::dyn_AliasName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildAliasRequest::dyn_AliasName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AliasName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildSelectionCriterion> BuildSelectionCriteria
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildSelectionCriterion*>*& PlayFab::MultiplayerModels::CreateBuildAliasRequest::dyn_BuildSelectionCriteria() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildAliasRequest::dyn_BuildSelectionCriteria");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildSelectionCriteria"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildSelectionCriterion*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateBuildWithCustomContainerRequest
#include "PlayFab/MultiplayerModels/CreateBuildWithCustomContainerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ContainerImageReference
#include "PlayFab/MultiplayerModels/ContainerImageReference.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.AssetReferenceParams
#include "PlayFab/MultiplayerModels/AssetReferenceParams.hpp"
// Including type: PlayFab.MultiplayerModels.GameCertificateReferenceParams
#include "PlayFab/MultiplayerModels/GameCertificateReferenceParams.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
// Including type: PlayFab.MultiplayerModels.BuildRegionParams
#include "PlayFab/MultiplayerModels/BuildRegionParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_BuildName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_BuildName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.ContainerFlavor> ContainerFlavor
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_ContainerFlavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_ContainerFlavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerFlavor"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.ContainerImageReference ContainerImageReference
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ContainerImageReference*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_ContainerImageReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_ContainerImageReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerImageReference"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::ContainerImageReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ContainerRunCommand
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_ContainerRunCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_ContainerRunCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerRunCommand"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.AssetReferenceParams> GameAssetReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReferenceParams*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_GameAssetReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_GameAssetReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameAssetReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReferenceParams*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.GameCertificateReferenceParams> GameCertificateReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReferenceParams*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_GameCertificateReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_GameCertificateReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameCertificateReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReferenceParams*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Metadata
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MultiplayerServerCountPerVm
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_MultiplayerServerCountPerVm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_MultiplayerServerCountPerVm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerServerCountPerVm"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildRegionParams> RegionConfigurations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegionParams*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_RegionConfigurations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_RegionConfigurations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionConfigurations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegionParams*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmSize> VmSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_VmSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest::dyn_VmSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateBuildWithCustomContainerResponse
#include "PlayFab/MultiplayerModels/CreateBuildWithCustomContainerResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ContainerImageReference
#include "PlayFab/MultiplayerModels/ContainerImageReference.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.AssetReference
#include "PlayFab/MultiplayerModels/AssetReference.hpp"
// Including type: PlayFab.MultiplayerModels.GameCertificateReference
#include "PlayFab/MultiplayerModels/GameCertificateReference.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
// Including type: PlayFab.MultiplayerModels.BuildRegion
#include "PlayFab/MultiplayerModels/BuildRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BuildName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_BuildName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_BuildName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.ContainerFlavor> ContainerFlavor
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_ContainerFlavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_ContainerFlavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerFlavor"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ContainerRunCommand
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_ContainerRunCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_ContainerRunCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerRunCommand"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> CreationTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_CreationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreationTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.ContainerImageReference CustomGameContainerImage
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ContainerImageReference*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_CustomGameContainerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_CustomGameContainerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomGameContainerImage"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::ContainerImageReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.AssetReference> GameAssetReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReference*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_GameAssetReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_GameAssetReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameAssetReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReference*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.GameCertificateReference> GameCertificateReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReference*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_GameCertificateReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_GameCertificateReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameCertificateReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReference*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Metadata
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MultiplayerServerCountPerVm
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_MultiplayerServerCountPerVm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_MultiplayerServerCountPerVm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerServerCountPerVm"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OsPlatform
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_OsPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_OsPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OsPlatform"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildRegion> RegionConfigurations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>*& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_RegionConfigurations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_RegionConfigurations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionConfigurations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_ServerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_ServerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmSize> VmSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>& PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_VmSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse::dyn_VmSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateBuildWithManagedContainerRequest
#include "PlayFab/MultiplayerModels/CreateBuildWithManagedContainerRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.AssetReferenceParams
#include "PlayFab/MultiplayerModels/AssetReferenceParams.hpp"
// Including type: PlayFab.MultiplayerModels.GameCertificateReferenceParams
#include "PlayFab/MultiplayerModels/GameCertificateReferenceParams.hpp"
// Including type: PlayFab.MultiplayerModels.InstrumentationConfiguration
#include "PlayFab/MultiplayerModels/InstrumentationConfiguration.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
// Including type: PlayFab.MultiplayerModels.BuildRegionParams
#include "PlayFab/MultiplayerModels/BuildRegionParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_BuildName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_BuildName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.ContainerFlavor> ContainerFlavor
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_ContainerFlavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_ContainerFlavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerFlavor"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.AssetReferenceParams> GameAssetReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReferenceParams*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_GameAssetReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_GameAssetReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameAssetReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReferenceParams*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.GameCertificateReferenceParams> GameCertificateReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReferenceParams*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_GameCertificateReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_GameCertificateReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameCertificateReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReferenceParams*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GameWorkingDirectory
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_GameWorkingDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_GameWorkingDirectory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameWorkingDirectory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.InstrumentationConfiguration InstrumentationConfiguration
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::InstrumentationConfiguration*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_InstrumentationConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_InstrumentationConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstrumentationConfiguration"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::InstrumentationConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Metadata
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MultiplayerServerCountPerVm
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_MultiplayerServerCountPerVm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_MultiplayerServerCountPerVm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerServerCountPerVm"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildRegionParams> RegionConfigurations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegionParams*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_RegionConfigurations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_RegionConfigurations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionConfigurations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegionParams*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String StartMultiplayerServerCommand
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_StartMultiplayerServerCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_StartMultiplayerServerCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartMultiplayerServerCommand"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmSize> VmSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_VmSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest::dyn_VmSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateBuildWithManagedContainerResponse
#include "PlayFab/MultiplayerModels/CreateBuildWithManagedContainerResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.AssetReference
#include "PlayFab/MultiplayerModels/AssetReference.hpp"
// Including type: PlayFab.MultiplayerModels.GameCertificateReference
#include "PlayFab/MultiplayerModels/GameCertificateReference.hpp"
// Including type: PlayFab.MultiplayerModels.InstrumentationConfiguration
#include "PlayFab/MultiplayerModels/InstrumentationConfiguration.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
// Including type: PlayFab.MultiplayerModels.BuildRegion
#include "PlayFab/MultiplayerModels/BuildRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BuildName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_BuildName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_BuildName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.ContainerFlavor> ContainerFlavor
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_ContainerFlavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_ContainerFlavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerFlavor"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> CreationTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_CreationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreationTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.AssetReference> GameAssetReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReference*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_GameAssetReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_GameAssetReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameAssetReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReference*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.GameCertificateReference> GameCertificateReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReference*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_GameCertificateReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_GameCertificateReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameCertificateReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReference*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GameWorkingDirectory
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_GameWorkingDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_GameWorkingDirectory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameWorkingDirectory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.InstrumentationConfiguration InstrumentationConfiguration
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::InstrumentationConfiguration*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_InstrumentationConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_InstrumentationConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstrumentationConfiguration"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::InstrumentationConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Metadata
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MultiplayerServerCountPerVm
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_MultiplayerServerCountPerVm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_MultiplayerServerCountPerVm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerServerCountPerVm"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OsPlatform
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_OsPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_OsPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OsPlatform"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildRegion> RegionConfigurations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>*& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_RegionConfigurations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_RegionConfigurations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionConfigurations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_ServerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_ServerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String StartMultiplayerServerCommand
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_StartMultiplayerServerCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_StartMultiplayerServerCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartMultiplayerServerCommand"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmSize> VmSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>& PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_VmSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse::dyn_VmSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CreateMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayer
#include "PlayFab/MultiplayerModels/MatchmakingPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.MatchmakingPlayer Creator
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::MatchmakingPlayer*& PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_Creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_Creator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Creator"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::MatchmakingPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GiveUpAfterSeconds
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_GiveUpAfterSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_GiveUpAfterSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GiveUpAfterSeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.EntityKey> MembersToMatchWith
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::EntityKey*>*& PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_MembersToMatchWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_MembersToMatchWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MembersToMatchWith"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/CreateMatchmakingTicketResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateMatchmakingTicketResult::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateMatchmakingTicketResult::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateRemoteUserRequest
#include "PlayFab/MultiplayerModels/CreateRemoteUserRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> ExpirationTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_ExpirationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_ExpirationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpirationTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Username
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_Username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VmId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_VmId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserRequest::dyn_VmId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateRemoteUserResponse
#include "PlayFab/MultiplayerModels/CreateRemoteUserResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> ExpirationTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::CreateRemoteUserResponse::dyn_ExpirationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserResponse::dyn_ExpirationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpirationTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Password
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateRemoteUserResponse::dyn_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserResponse::dyn_Password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Username
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateRemoteUserResponse::dyn_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateRemoteUserResponse::dyn_Username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/CreateServerBackfillTicketRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment
#include "PlayFab/MultiplayerModels/MatchmakingPlayerWithTeamAssignment.hpp"
// Including type: PlayFab.MultiplayerModels.ServerDetails
#include "PlayFab/MultiplayerModels/ServerDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 GiveUpAfterSeconds
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_GiveUpAfterSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_GiveUpAfterSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GiveUpAfterSeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>*& PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.ServerDetails ServerDetails
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ServerDetails*& PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_ServerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::dyn_ServerDetails");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerDetails"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::ServerDetails**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/CreateServerBackfillTicketResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateServerBackfillTicketResult::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerBackfillTicketResult::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CreateServerMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CreateServerMatchmakingTicketRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayer
#include "PlayFab/MultiplayerModels/MatchmakingPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 GiveUpAfterSeconds
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest::dyn_GiveUpAfterSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest::dyn_GiveUpAfterSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GiveUpAfterSeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingPlayer> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayer*>*& PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CurrentServerStats
#include "PlayFab/MultiplayerModels/CurrentServerStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Active
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CurrentServerStats::dyn_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CurrentServerStats::dyn_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Active"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Propping
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CurrentServerStats::dyn_Propping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CurrentServerStats::dyn_Propping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Propping"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StandingBy
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CurrentServerStats::dyn_StandingBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CurrentServerStats::dyn_StandingBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StandingBy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Total
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::CurrentServerStats::dyn_Total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CurrentServerStats::dyn_Total");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CustomDifferenceRuleExpansion
#include "PlayFab/MultiplayerModels/CustomDifferenceRuleExpansion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.OverrideDouble
#include "PlayFab/MultiplayerModels/OverrideDouble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.OverrideDouble> DifferenceOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>*& PlayFab::MultiplayerModels::CustomDifferenceRuleExpansion::dyn_DifferenceOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomDifferenceRuleExpansion::dyn_DifferenceOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DifferenceOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::CustomDifferenceRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomDifferenceRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CustomRegionSelectionRuleExpansion
#include "PlayFab/MultiplayerModels/CustomRegionSelectionRuleExpansion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.OverrideUnsignedInt
#include "PlayFab/MultiplayerModels/OverrideUnsignedInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.OverrideUnsignedInt> MaxLatencyOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideUnsignedInt*>*& PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion::dyn_MaxLatencyOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion::dyn_MaxLatencyOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxLatencyOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideUnsignedInt*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CustomSetIntersectionRuleExpansion
#include "PlayFab/MultiplayerModels/CustomSetIntersectionRuleExpansion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.OverrideUnsignedInt
#include "PlayFab/MultiplayerModels/OverrideUnsignedInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.OverrideUnsignedInt> MinIntersectionSizeOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideUnsignedInt*>*& PlayFab::MultiplayerModels::CustomSetIntersectionRuleExpansion::dyn_MinIntersectionSizeOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomSetIntersectionRuleExpansion::dyn_MinIntersectionSizeOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinIntersectionSizeOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideUnsignedInt*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::CustomSetIntersectionRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomSetIntersectionRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CustomTeamDifferenceRuleExpansion
#include "PlayFab/MultiplayerModels/CustomTeamDifferenceRuleExpansion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.OverrideDouble
#include "PlayFab/MultiplayerModels/OverrideDouble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.OverrideDouble> DifferenceOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>*& PlayFab::MultiplayerModels::CustomTeamDifferenceRuleExpansion::dyn_DifferenceOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomTeamDifferenceRuleExpansion::dyn_DifferenceOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DifferenceOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::CustomTeamDifferenceRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomTeamDifferenceRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.CustomTeamSizeBalanceRuleExpansion
#include "PlayFab/MultiplayerModels/CustomTeamSizeBalanceRuleExpansion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.OverrideUnsignedInt
#include "PlayFab/MultiplayerModels/OverrideUnsignedInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.OverrideUnsignedInt> DifferenceOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideUnsignedInt*>*& PlayFab::MultiplayerModels::CustomTeamSizeBalanceRuleExpansion::dyn_DifferenceOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomTeamSizeBalanceRuleExpansion::dyn_DifferenceOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DifferenceOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideUnsignedInt*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::CustomTeamSizeBalanceRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CustomTeamSizeBalanceRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DeleteAssetRequest
#include "PlayFab/MultiplayerModels/DeleteAssetRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String FileName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteAssetRequest::dyn_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteAssetRequest::dyn_FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DeleteBuildAliasRequest
#include "PlayFab/MultiplayerModels/DeleteBuildAliasRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AliasId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteBuildAliasRequest::dyn_AliasId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteBuildAliasRequest::dyn_AliasId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AliasId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DeleteBuildRegionRequest
#include "PlayFab/MultiplayerModels/DeleteBuildRegionRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteBuildRegionRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteBuildRegionRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteBuildRegionRequest::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteBuildRegionRequest::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DeleteBuildRequest
#include "PlayFab/MultiplayerModels/DeleteBuildRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteBuildRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteBuildRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DeleteCertificateRequest
#include "PlayFab/MultiplayerModels/DeleteCertificateRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteCertificateRequest::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteCertificateRequest::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DeleteContainerImageRequest
#include "PlayFab/MultiplayerModels/DeleteContainerImageRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ImageName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteContainerImageRequest::dyn_ImageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteContainerImageRequest::dyn_ImageName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DeleteRemoteUserRequest
#include "PlayFab/MultiplayerModels/DeleteRemoteUserRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Username
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_Username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VmId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_VmId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DeleteRemoteUserRequest::dyn_VmId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
