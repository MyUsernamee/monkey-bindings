// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c
#include "GorillaNetworking/CosmeticsController_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptResult
#include "PlayFab/ClientModels/ExecuteCloudScriptResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaNetworking.CosmeticsController/<>c <>9
::GorillaNetworking::CosmeticsController::$$c* GorillaNetworking::CosmeticsController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::$$c*>("GorillaNetworking", "CosmeticsController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaNetworking.CosmeticsController/<>c <>9
void GorillaNetworking::CosmeticsController::$$c::_set_$$9(::GorillaNetworking::CosmeticsController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.ClientModels.ExecuteCloudScriptResult> <>9__113_0
::System::Action_1<::PlayFab::ClientModels::ExecuteCloudScriptResult*>* GorillaNetworking::CosmeticsController::$$c::_get_$$9__113_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_get_$$9__113_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::ClientModels::ExecuteCloudScriptResult*>*>("GorillaNetworking", "CosmeticsController/<>c", "<>9__113_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.ClientModels.ExecuteCloudScriptResult> <>9__113_0
void GorillaNetworking::CosmeticsController::$$c::_set_$$9__113_0(::System::Action_1<::PlayFab::ClientModels::ExecuteCloudScriptResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_set_$$9__113_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/<>c", "<>9__113_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__115_1
::System::Action_1<::PlayFab::PlayFabError*>* GorillaNetworking::CosmeticsController::$$c::_get_$$9__115_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_get_$$9__115_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("GorillaNetworking", "CosmeticsController/<>c", "<>9__115_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__115_1
void GorillaNetworking::CosmeticsController::$$c::_set_$$9__115_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_set_$$9__115_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/<>c", "<>9__115_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__122_1
::System::Action_1<::PlayFab::PlayFabError*>* GorillaNetworking::CosmeticsController::$$c::_get_$$9__122_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_get_$$9__122_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("GorillaNetworking", "CosmeticsController/<>c", "<>9__122_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__122_1
void GorillaNetworking::CosmeticsController::$$c::_set_$$9__122_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_set_$$9__122_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/<>c", "<>9__122_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<GorillaNetworking.CosmeticsController/CosmeticItem> <>9__126_0
::System::Predicate_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* GorillaNetworking::CosmeticsController::$$c::_get_$$9__126_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_get_$$9__126_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*>("GorillaNetworking", "CosmeticsController/<>c", "<>9__126_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<GorillaNetworking.CosmeticsController/CosmeticItem> <>9__126_0
void GorillaNetworking::CosmeticsController::$$c::_set_$$9__126_0(::System::Predicate_1<::GorillaNetworking::CosmeticsController::CosmeticItem>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::_set_$$9__126_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/<>c", "<>9__126_0", value)));
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c..cctor
void GorillaNetworking::CosmeticsController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaNetworking", "CosmeticsController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c.<ClearMyLock>b__113_0
void GorillaNetworking::CosmeticsController::$$c::$ClearMyLock$b__113_0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::<ClearMyLock>b__113_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearMyLock>b__113_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c.<GetMyDaily>b__115_1
void GorillaNetworking::CosmeticsController::$$c::$GetMyDaily$b__115_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::<GetMyDaily>b__115_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMyDaily>b__115_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c.<GetCurrencyBalance>b__122_1
void GorillaNetworking::CosmeticsController::$$c::$GetCurrencyBalance$b__122_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::<GetCurrencyBalance>b__122_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCurrencyBalance>b__122_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c.<OnGetViewerPurchasesStartup>b__126_0
bool GorillaNetworking::CosmeticsController::$$c::$OnGetViewerPurchasesStartup$b__126_0(::GorillaNetworking::CosmeticsController::CosmeticItem x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c::<OnGetViewerPurchasesStartup>b__126_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnGetViewerPurchasesStartup>b__126_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.CosmeticsController/<CheckCanGetDaily>d__114
#include "GorillaNetworking/CosmeticsController_-CheckCanGetDaily-d__114.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckCanGetDaily>d__114.System.IDisposable.Dispose
void GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckCanGetDaily>d__114.MoveNext
bool GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckCanGetDaily>d__114.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckCanGetDaily>d__114.System.Collections.IEnumerator.Reset
void GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckCanGetDaily>d__114.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.CosmeticsController/<GetMyDaily>d__115
#include "GorillaNetworking/CosmeticsController_-GetMyDaily-d__115.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<GetMyDaily>d__115.System.IDisposable.Dispose
void GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<GetMyDaily>d__115.MoveNext
bool GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<GetMyDaily>d__115.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<GetMyDaily>d__115.System.Collections.IEnumerator.Reset
void GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<GetMyDaily>d__115.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_0.hpp"
// Including type: PlayFab.ClientModels.GetUserInventoryResult
#include "PlayFab/ClientModels/GetUserInventoryResult.hpp"
// Including type: PlayFab.ClientModels.GetCatalogItemsResult
#include "PlayFab/ClientModels/GetCatalogItemsResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ClientModels.GetUserInventoryResult result
[[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::GetUserInventoryResult*& GorillaNetworking::CosmeticsController::$$c__DisplayClass116_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::PlayFab::ClientModels::GetUserInventoryResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$$c__DisplayClass116_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_0.<GetUserCosmeticsAllowed>b__2
void GorillaNetworking::CosmeticsController::$$c__DisplayClass116_0::$GetUserCosmeticsAllowed$b__2(::PlayFab::ClientModels::GetCatalogItemsResult* result2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_0::<GetUserCosmeticsAllowed>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_1
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_1.hpp"
// Including type: PlayFab.ClientModels.CatalogItem
#include "PlayFab/ClientModels/CatalogItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ClientModels.CatalogItem catalogItem
[[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::CatalogItem*& GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::dyn_catalogItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::dyn_catalogItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "catalogItem"))->offset;
  return *reinterpret_cast<::PlayFab::ClientModels::CatalogItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_1.<GetUserCosmeticsAllowed>b__4
bool GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::$GetUserCosmeticsAllowed$b__4(::GorillaNetworking::CosmeticsController::CosmeticItem x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::<GetUserCosmeticsAllowed>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_2
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String setItemName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::$$c__DisplayClass116_2::dyn_setItemName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_2::dyn_setItemName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setItemName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_2.<GetUserCosmeticsAllowed>b__5
bool GorillaNetworking::CosmeticsController::$$c__DisplayClass116_2::$GetUserCosmeticsAllowed$b__5(::GorillaNetworking::CosmeticsController::CosmeticItem x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_2::<GetUserCosmeticsAllowed>b__5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_3
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_3.hpp"
// Including type: PlayFab.ClientModels.ItemInstance
#include "PlayFab/ClientModels/ItemInstance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.ClientModels.ItemInstance item
[[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::ItemInstance*& GorillaNetworking::CosmeticsController::$$c__DisplayClass116_3::dyn_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_3::dyn_item");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "item"))->offset;
  return *reinterpret_cast<::PlayFab::ClientModels::ItemInstance**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_3.<GetUserCosmeticsAllowed>b__6
bool GorillaNetworking::CosmeticsController::$$c__DisplayClass116_3::$GetUserCosmeticsAllowed$b__6(::GorillaNetworking::CosmeticsController::CosmeticItem x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_3::<GetUserCosmeticsAllowed>b__6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.CosmeticsController/<CheckIfQuitPurchase>d__124
#include "GorillaNetworking/CosmeticsController_-CheckIfQuitPurchase-d__124.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfQuitPurchase>d__124.System.IDisposable.Dispose
void GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfQuitPurchase>d__124.MoveNext
bool GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfQuitPurchase>d__124.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfQuitPurchase>d__124.System.Collections.IEnumerator.Reset
void GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfQuitPurchase>d__124.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaComputer
#include "GorillaNetworking/GorillaComputer.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: GorillaNetworking.GorillaComputer/<ButtonColorUpdate>d__78
#include "GorillaNetworking/GorillaComputer_-ButtonColorUpdate-d__78.hpp"
// Including type: GorillaNetworking.GorillaComputer/<>c__DisplayClass125_0
#include "GorillaNetworking/GorillaComputer_--c__DisplayClass125_0.hpp"
// Including type: GorillaNetworking.GorillaComputer/<>c
#include "GorillaNetworking/GorillaComputer_--c.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: GorillaLevelScreen
#include "GlobalNamespace/GorillaLevelScreen.hpp"
// Including type: GorillaNetworking.PhotonNetworkController
#include "GorillaNetworking/PhotonNetworkController.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
// Including type: GorillaFriendCollider
#include "GlobalNamespace/GorillaFriendCollider.hpp"
// Including type: GorillaNetworking.GorillaNetworkJoinTrigger
#include "GorillaNetworking/GorillaNetworkJoinTrigger.hpp"
// Including type: ModeSelectButton
#include "GlobalNamespace/ModeSelectButton.hpp"
// Including type: GorillaNetworking.GorillaKeyboardButton
#include "GorillaNetworking/GorillaKeyboardButton.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptResult
#include "PlayFab/ClientModels/ExecuteCloudScriptResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: PlayFab.ClientModels.GetTimeResult
#include "PlayFab/ClientModels/GetTimeResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer instance
::GorillaNetworking::GorillaComputer* GorillaNetworking::GorillaComputer::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer*>("GorillaNetworking", "GorillaComputer", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer instance
void GorillaNetworking::GorillaComputer::_set_instance(::GorillaNetworking::GorillaComputer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean tryGetTimeAgain
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaComputer::dyn_tryGetTimeAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_tryGetTimeAgain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryGetTimeAgain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material unpressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaNetworking::GorillaComputer::dyn_unpressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_unpressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unpressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material pressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaNetworking::GorillaComputer::dyn_pressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_pressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentTextField
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_currentTextField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_currentTextField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTextField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single buttonFadeTime
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaComputer::dyn_buttonFadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_buttonFadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonFadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text offlineScoreboard
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_offlineScoreboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_offlineScoreboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineScoreboard"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text screenText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_screenText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_screenText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text functionSelectText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_functionSelectText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_functionSelectText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "functionSelectText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text wallScreenText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_wallScreenText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_wallScreenText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallScreenText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text tutorialWallScreenText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_tutorialWallScreenText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_tutorialWallScreenText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tutorialWallScreenText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text offlineVRRigNametagText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_offlineVRRigNametagText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_offlineVRRigNametagText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRigNametagText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String versionText
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_versionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_versionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "versionText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String versionMismatch
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_versionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_versionMismatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "versionMismatch"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String unableToConnect
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_unableToConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_unableToConnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unableToConnect"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material wrongVersionMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaNetworking::GorillaComputer::dyn_wrongVersionMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_wrongVersionMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wrongVersionMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer wallScreenRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaNetworking::GorillaComputer::dyn_wallScreenRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_wallScreenRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallScreenRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer tutorialWallScreenRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaNetworking::GorillaComputer::dyn_tutorialWallScreenRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_tutorialWallScreenRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tutorialWallScreenRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer computerScreenRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaNetworking::GorillaComputer::dyn_computerScreenRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_computerScreenRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computerScreenRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer scoreboardRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaNetworking::GorillaComputer::dyn_scoreboardRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_scoreboardRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreboardRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLevelScreen[] levelScreens
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaLevelScreen*>& GorillaNetworking::GorillaComputer::dyn_levelScreens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_levelScreens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelScreens"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaLevelScreen*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 startupMillis
[[deprecated("Use field access instead!")]] int64_t& GorillaNetworking::GorillaComputer::dyn_startupMillis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_startupMillis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startupMillis"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text currentGameModeText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_currentGameModeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_currentGameModeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGameModeText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 includeUpdatedServerSynchTest
[[deprecated("Use field access instead!")]] int& GorillaNetworking::GorillaComputer::dyn_includeUpdatedServerSynchTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_includeUpdatedServerSynchTest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeUpdatedServerSynchTest"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController networkController
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GorillaNetworking::GorillaComputer::dyn_networkController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_networkController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkController"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single updateCooldown
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaComputer::dyn_updateCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_updateCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastUpdateTime
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaComputer::dyn_lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isConnectedToMaster
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaComputer::dyn_isConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_isConnectedToMaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isConnectedToMaster"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] allowedMapsToJoin
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GorillaNetworking::GorillaComputer::dyn_allowedMapsToJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_allowedMapsToJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowedMapsToJoin"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaComputer/ComputerState currentState
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaComputer::ComputerState& GorillaNetworking::GorillaComputer::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaComputer::ComputerState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 usersBanned
[[deprecated("Use field access instead!")]] int& GorillaNetworking::GorillaComputer::dyn_usersBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_usersBanned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usersBanned"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text motdText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::GorillaComputer::dyn_motdText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_motdText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motdText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String lastMOTD
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_lastMOTD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_lastMOTD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMOTD"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material updatedMOTDMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GorillaNetworking::GorillaComputer::dyn_updatedMOTDMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_updatedMOTDMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatedMOTDMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer motdRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GorillaNetworking::GorillaComputer::dyn_motdRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_motdRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "motdRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single redValue
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaComputer::dyn_redValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_redValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String redText
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_redText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_redText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single blueValue
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaComputer::dyn_blueValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_blueValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blueValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String blueText
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_blueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_blueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blueText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single greenValue
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaComputer::dyn_greenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_greenValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "greenValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String greenText
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_greenText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_greenText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "greenText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 colorCursorLine
[[deprecated("Use field access instead!")]] int& GorillaNetworking::GorillaComputer::dyn_colorCursorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_colorCursorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorCursorLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String savedName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_savedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_savedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "savedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_currentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_currentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] exactOneWeek
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GorillaNetworking::GorillaComputer::dyn_exactOneWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_exactOneWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactOneWeek"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] anywhereOneWeek
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GorillaNetworking::GorillaComputer::dyn_anywhereOneWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_anywhereOneWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anywhereOneWeek"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] anywhereTwoWeek
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GorillaNetworking::GorillaComputer::dyn_anywhereTwoWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_anywhereTwoWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anywhereTwoWeek"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset exactOneWeekFile
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GorillaNetworking::GorillaComputer::dyn_exactOneWeekFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_exactOneWeekFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactOneWeekFile"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset anywhereOneWeekFile
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GorillaNetworking::GorillaComputer::dyn_anywhereOneWeekFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_anywhereOneWeekFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anywhereOneWeekFile"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset anywhereTwoWeekFile
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GorillaNetworking::GorillaComputer::dyn_anywhereTwoWeekFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_anywhereTwoWeekFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anywhereTwoWeekFile"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String roomToJoin
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_roomToJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_roomToJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomToJoin"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean roomFull
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaComputer::dyn_roomFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_roomFull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomFull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean roomNotAllowed
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaComputer::dyn_roomNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_roomNotAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomNotAllowed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 turnValue
[[deprecated("Use field access instead!")]] int& GorillaNetworking::GorillaComputer::dyn_turnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_turnValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String turnType
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_turnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_turnType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn gorillaTurn
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn*& GorillaNetworking::GorillaComputer::dyn_gorillaTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_gorillaTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaTurn"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String pttType
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_pttType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_pttType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pttType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentQueue
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_currentQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_currentQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentQueue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean allowedInCompetitive
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaComputer::dyn_allowedInCompetitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_allowedInCompetitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowedInCompetitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String groupMapJoin
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_groupMapJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_groupMapJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupMapJoin"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 groupMapJoinIndex
[[deprecated("Use field access instead!")]] int& GorillaNetworking::GorillaComputer::dyn_groupMapJoinIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_groupMapJoinIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupMapJoinIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaFriendCollider friendJoinCollider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaFriendCollider*& GorillaNetworking::GorillaComputer::dyn_friendJoinCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_friendJoinCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendJoinCollider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaFriendCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger caveMapTrigger
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::GorillaComputer::dyn_caveMapTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_caveMapTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caveMapTrigger"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger forestMapTrigger
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::GorillaComputer::dyn_forestMapTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_forestMapTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forestMapTrigger"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger canyonMapTrigger
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::GorillaComputer::dyn_canyonMapTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_canyonMapTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canyonMapTrigger"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger cityMapTrigger
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::GorillaComputer::dyn_cityMapTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_cityMapTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cityMapTrigger"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger mountainMapTrigger
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::GorillaComputer::dyn_mountainMapTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_mountainMapTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mountainMapTrigger"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String voiceChatOn
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_voiceChatOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_voiceChatOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceChatOn"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ModeSelectButton[] modeSelectButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ModeSelectButton*>& GorillaNetworking::GorillaComputer::dyn_modeSelectButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_modeSelectButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modeSelectButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ModeSelectButton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentGameMode
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::dyn_currentGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_currentGameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableParticles
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaComputer::dyn_disableParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_disableParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableParticles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single instrumentVolume
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaComputer::dyn_instrumentVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_instrumentVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instrumentVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] updatedMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GorillaNetworking::GorillaComputer::dyn_updatedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::dyn_updatedMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatedMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.Awake
void GorillaNetworking::GorillaComputer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.Update
void GorillaNetworking::GorillaComputer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnConnectedToMasterStuff
void GorillaNetworking::GorillaComputer::OnConnectedToMasterStuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnConnectedToMasterStuff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnConnectedToMasterStuff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.PressButton
void GorillaNetworking::GorillaComputer::PressButton(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::PressButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ButtonColorUpdate
::System::Collections::IEnumerator* GorillaNetworking::GorillaComputer::ButtonColorUpdate(::GorillaNetworking::GorillaKeyboardButton* button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ButtonColorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonColorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, button);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeStartupState
void GorillaNetworking::GorillaComputer::InitializeStartupState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeStartupState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeStartupState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeRoomState
void GorillaNetworking::GorillaComputer::InitializeRoomState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeColorState
void GorillaNetworking::GorillaComputer::InitializeColorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeColorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeColorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeNameState
void GorillaNetworking::GorillaComputer::InitializeNameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeNameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeTurnState
void GorillaNetworking::GorillaComputer::InitializeTurnState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeTurnState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeTurnState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeMicState
void GorillaNetworking::GorillaComputer::InitializeMicState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeMicState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMicState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeQueueState
void GorillaNetworking::GorillaComputer::InitializeQueueState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeQueueState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeQueueState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeGroupState
void GorillaNetworking::GorillaComputer::InitializeGroupState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeGroupState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeGroupState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeVoiceState
void GorillaNetworking::GorillaComputer::InitializeVoiceState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeVoiceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeVoiceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeGameMode
void GorillaNetworking::GorillaComputer::InitializeGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeGameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeGameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.InitializeVisualsState
void GorillaNetworking::GorillaComputer::InitializeVisualsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::InitializeVisualsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeVisualsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToColorState
void GorillaNetworking::GorillaComputer::SwitchToColorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToColorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToColorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToRoomState
void GorillaNetworking::GorillaComputer::SwitchToRoomState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToNameState
void GorillaNetworking::GorillaComputer::SwitchToNameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToNameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToNameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToTurnState
void GorillaNetworking::GorillaComputer::SwitchToTurnState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToTurnState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToTurnState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToMicState
void GorillaNetworking::GorillaComputer::SwitchToMicState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToMicState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToMicState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToQueueState
void GorillaNetworking::GorillaComputer::SwitchToQueueState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToQueueState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToQueueState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToGroupState
void GorillaNetworking::GorillaComputer::SwitchToGroupState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToGroupState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToGroupState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToVoiceState
void GorillaNetworking::GorillaComputer::SwitchToVoiceState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToVoiceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToVoiceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToCreditsState
void GorillaNetworking::GorillaComputer::SwitchToCreditsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToCreditsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToCreditsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SwitchToVisualsState
void GorillaNetworking::GorillaComputer::SwitchToVisualsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SwitchToVisualsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToVisualsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessStartupState
void GorillaNetworking::GorillaComputer::ProcessStartupState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessStartupState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessStartupState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessColorState
void GorillaNetworking::GorillaComputer::ProcessColorState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessColorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessColorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessNameState
void GorillaNetworking::GorillaComputer::ProcessNameState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessNameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessRoomState
void GorillaNetworking::GorillaComputer::ProcessRoomState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessTurnState
void GorillaNetworking::GorillaComputer::ProcessTurnState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessTurnState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTurnState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessMicState
void GorillaNetworking::GorillaComputer::ProcessMicState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessMicState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMicState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessQueueState
void GorillaNetworking::GorillaComputer::ProcessQueueState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessQueueState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessQueueState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessGroupState
void GorillaNetworking::GorillaComputer::ProcessGroupState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessGroupState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessGroupState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessVoiceState
void GorillaNetworking::GorillaComputer::ProcessVoiceState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessVoiceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessVoiceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessVisualsState
void GorillaNetworking::GorillaComputer::ProcessVisualsState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessVisualsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessVisualsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.ProcessCreditsState
void GorillaNetworking::GorillaComputer::ProcessCreditsState(::GorillaNetworking::GorillaKeyboardButton* buttonPressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ProcessCreditsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCreditsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonPressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonPressed);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.UpdateScreen
void GorillaNetworking::GorillaComputer::UpdateScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::UpdateScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.UpdateFunctionScreen
void GorillaNetworking::GorillaComputer::UpdateFunctionScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::UpdateFunctionScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFunctionScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnReturnCurrentVersion
void GorillaNetworking::GorillaComputer::OnReturnCurrentVersion(::PlayFab::ClientModels::ExecuteCloudScriptResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnReturnCurrentVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReturnCurrentVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.CheckAutoBanList
bool GorillaNetworking::GorillaComputer::CheckAutoBanList(::StringW nameToCheck, bool forRoom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::CheckAutoBanList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAutoBanList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameToCheck), ::il2cpp_utils::ExtractType(forRoom)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nameToCheck, forRoom);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.CheckAutoBanListForName
bool GorillaNetworking::GorillaComputer::CheckAutoBanListForName(::StringW nameToCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::CheckAutoBanListForName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAutoBanListForName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameToCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nameToCheck);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.BanMe
void GorillaNetworking::GorillaComputer::BanMe(int hours, ::StringW nameToCheck, bool forRoom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::BanMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BanMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(nameToCheck), ::il2cpp_utils::ExtractType(forRoom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hours, nameToCheck, forRoom);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnReturnBan
void GorillaNetworking::GorillaComputer::OnReturnBan(::PlayFab::ClientModels::ExecuteCloudScriptResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnReturnBan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnReturnBan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.GeneralFailureMessage
void GorillaNetworking::GorillaComputer::GeneralFailureMessage(::StringW failMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::GeneralFailureMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneralFailureMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failMessage);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnErrorShared
void GorillaNetworking::GorillaComputer::OnErrorShared(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnErrorShared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaNetworking", "GorillaComputer", "OnErrorShared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.GetCurrentTime
void GorillaNetworking::GorillaComputer::GetCurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::GetCurrentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnGetTimeSuccess
void GorillaNetworking::GorillaComputer::OnGetTimeSuccess(::PlayFab::ClientModels::GetTimeResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnGetTimeSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetTimeSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnGetTimeFailure
void GorillaNetworking::GorillaComputer::OnGetTimeFailure(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnGetTimeFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetTimeFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnModeSelectButtonPress
void GorillaNetworking::GorillaComputer::OnModeSelectButtonPress(::StringW gameMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnModeSelectButtonPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnModeSelectButtonPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameMode);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.OnGroupJoinButtonPress
void GorillaNetworking::GorillaComputer::OnGroupJoinButtonPress(int mapJoinIndex, ::GlobalNamespace::GorillaFriendCollider* chosenFriendJoinCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::OnGroupJoinButtonPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGroupJoinButtonPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mapJoinIndex), ::il2cpp_utils::ExtractType(chosenFriendJoinCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mapJoinIndex, chosenFriendJoinCollider);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.SaveModAccountData
void GorillaNetworking::GorillaComputer::SaveModAccountData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::SaveModAccountData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveModAccountData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer.CompQueueUnlockButtonPress
void GorillaNetworking::GorillaComputer::CompQueueUnlockButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::CompQueueUnlockButtonPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompQueueUnlockButtonPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaComputer/ComputerState
#include "GorillaNetworking/GorillaComputer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Startup
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Startup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Startup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Startup"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Startup
void GorillaNetworking::GorillaComputer::ComputerState::_set_Startup(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Startup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Startup", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Color
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Color"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Color
void GorillaNetworking::GorillaComputer::ComputerState::_set_Color(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Name
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Name"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Name
void GorillaNetworking::GorillaComputer::ComputerState::_set_Name(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Turn
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Turn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Turn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Turn"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Turn
void GorillaNetworking::GorillaComputer::ComputerState::_set_Turn(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Turn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Turn", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Mic
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Mic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Mic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Mic"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Mic
void GorillaNetworking::GorillaComputer::ComputerState::_set_Mic(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Mic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Mic", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Room
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Room");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Room"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Room
void GorillaNetworking::GorillaComputer::ComputerState::_set_Room(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Room");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Room", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Queue
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Queue"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Queue
void GorillaNetworking::GorillaComputer::ComputerState::_set_Queue(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Queue", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Group
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Group"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Group
void GorillaNetworking::GorillaComputer::ComputerState::_set_Group(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Voice
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Voice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Voice"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Voice
void GorillaNetworking::GorillaComputer::ComputerState::_set_Voice(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Voice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Voice", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Credits
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Credits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Credits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Credits"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Credits
void GorillaNetworking::GorillaComputer::ComputerState::_set_Credits(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Credits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Credits", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.GorillaComputer/ComputerState Visuals
::GorillaNetworking::GorillaComputer::ComputerState GorillaNetworking::GorillaComputer::ComputerState::_get_Visuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_get_Visuals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::ComputerState>("GorillaNetworking", "GorillaComputer/ComputerState", "Visuals"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.GorillaComputer/ComputerState Visuals
void GorillaNetworking::GorillaComputer::ComputerState::_set_Visuals(::GorillaNetworking::GorillaComputer::ComputerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::_set_Visuals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/ComputerState", "Visuals", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaNetworking::GorillaComputer::ComputerState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::ComputerState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.GorillaComputer/<ButtonColorUpdate>d__78
#include "GorillaNetworking/GorillaComputer_-ButtonColorUpdate-d__78.hpp"
// Including type: GorillaNetworking.GorillaKeyboardButton
#include "GorillaNetworking/GorillaKeyboardButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaComputer <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaComputer*& GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaComputer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaKeyboardButton button
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaKeyboardButton*& GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::dyn_button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "button"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaKeyboardButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<ButtonColorUpdate>d__78.System.IDisposable.Dispose
void GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<ButtonColorUpdate>d__78.MoveNext
bool GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<ButtonColorUpdate>d__78.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<ButtonColorUpdate>d__78.System.Collections.IEnumerator.Reset
void GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<ButtonColorUpdate>d__78.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::GorillaComputer::$ButtonColorUpdate$d__78*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaComputer/<>c__DisplayClass125_0
#include "GorillaNetworking/GorillaComputer_--c__DisplayClass125_0.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptResult
#include "PlayFab/ClientModels/ExecuteCloudScriptResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaComputer::$$c__DisplayClass125_0::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c__DisplayClass125_0::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<>c__DisplayClass125_0.<SaveModAccountData>b__0
void GorillaNetworking::GorillaComputer::$$c__DisplayClass125_0::$SaveModAccountData$b__0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c__DisplayClass125_0::<SaveModAccountData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveModAccountData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaComputer/<>c
#include "GorillaNetworking/GorillaComputer_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaNetworking.GorillaComputer/<>c <>9
::GorillaNetworking::GorillaComputer::$$c* GorillaNetworking::GorillaComputer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaNetworking::GorillaComputer::$$c*>("GorillaNetworking", "GorillaComputer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaNetworking.GorillaComputer/<>c <>9
void GorillaNetworking::GorillaComputer::$$c::_set_$$9(::GorillaNetworking::GorillaComputer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__125_1
::System::Action_1<::PlayFab::PlayFabError*>* GorillaNetworking::GorillaComputer::$$c::_get_$$9__125_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c::_get_$$9__125_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("GorillaNetworking", "GorillaComputer/<>c", "<>9__125_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__125_1
void GorillaNetworking::GorillaComputer::$$c::_set_$$9__125_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c::_set_$$9__125_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "GorillaComputer/<>c", "<>9__125_1", value)));
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<>c..cctor
void GorillaNetworking::GorillaComputer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaNetworking", "GorillaComputer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaComputer/<>c.<SaveModAccountData>b__125_1
void GorillaNetworking::GorillaComputer::$$c::$SaveModAccountData$b__125_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c::<SaveModAccountData>b__125_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveModAccountData>b__125_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaKeyboardButton
#include "GorillaNetworking/GorillaKeyboardButton.hpp"
// Including type: GorillaNetworking.GorillaComputer
#include "GorillaNetworking/GorillaComputer.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String characterString
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaKeyboardButton::dyn_characterString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_characterString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaComputer computer
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaComputer*& GorillaNetworking::GorillaKeyboardButton::dyn_computer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_computer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computer"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaComputer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pressTime
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaKeyboardButton::dyn_pressTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_pressTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean functionKey
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaKeyboardButton::dyn_functionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_functionKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "functionKey"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testClick
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaKeyboardButton::dyn_testClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_testClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testClick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean repeatTestClick
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::GorillaKeyboardButton::dyn_repeatTestClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_repeatTestClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repeatTestClick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single repeatCooldown
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaKeyboardButton::dyn_repeatCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_repeatCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repeatCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastTestClick
[[deprecated("Use field access instead!")]] float& GorillaNetworking::GorillaKeyboardButton::dyn_lastTestClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::dyn_lastTestClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTestClick"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.GorillaKeyboardButton.Start
void GorillaNetworking::GorillaKeyboardButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaKeyboardButton.Update
void GorillaNetworking::GorillaKeyboardButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaKeyboardButton.OnTriggerEnter
void GorillaNetworking::GorillaKeyboardButton::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaKeyboardButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaNetworkDisconnectTrigger
#include "GorillaNetworking/GorillaNetworkDisconnectTrigger.hpp"
// Including type: GorillaNetworking.PhotonNetworkController
#include "GorillaNetworking/PhotonNetworkController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController photonNetworkController
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_photonNetworkController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_photonNetworkController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonNetworkController"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject offlineVRRig
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_offlineVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_offlineVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRig"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject makeSureThisIsEnabled
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_makeSureThisIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_makeSureThisIsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsEnabled"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureTheseAreEnabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_makeSureTheseAreEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_makeSureTheseAreEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureTheseAreEnabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String componentTypeToRemove
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_componentTypeToRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_componentTypeToRemove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTypeToRemove"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject componentTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_componentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkDisconnectTrigger::dyn_componentTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.GorillaNetworkDisconnectTrigger.OnBoxTriggered
void GorillaNetworking::GorillaNetworkDisconnectTrigger::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkDisconnectTrigger::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaNetworkJoinTrigger
#include "GorillaNetworking/GorillaNetworkJoinTrigger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaNetworking.PhotonNetworkController
#include "GorillaNetworking/PhotonNetworkController.hpp"
// Including type: GorillaLevelScreen
#include "GlobalNamespace/GorillaLevelScreen.hpp"
// Including type: GorillaFriendCollider
#include "GlobalNamespace/GorillaFriendCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsDisabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_makeSureThisIsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_makeSureThisIsDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsDisabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsEnabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_makeSureThisIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_makeSureThisIsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsEnabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String gameModeName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_gameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_gameModeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController photonNetworkController
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_photonNetworkController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_photonNetworkController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonNetworkController"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String componentTypeToAdd
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_componentTypeToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_componentTypeToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTypeToAdd"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject componentTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_componentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_componentTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLevelScreen[] joinScreens
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaLevelScreen*>& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_joinScreens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_joinScreens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinScreens"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaLevelScreen*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLevelScreen[] leaveScreens
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaLevelScreen*>& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_leaveScreens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_leaveScreens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaveScreens"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaLevelScreen*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaFriendCollider myCollider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaFriendCollider*& GorillaNetworking::GorillaNetworkJoinTrigger::dyn_myCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::dyn_myCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myCollider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaFriendCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.GorillaNetworkJoinTrigger.UpdateScreens
void GorillaNetworking::GorillaNetworkJoinTrigger::UpdateScreens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::UpdateScreens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScreens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.GorillaNetworkJoinTrigger.OnBoxTriggered
void GorillaNetworking::GorillaNetworkJoinTrigger::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkJoinTrigger::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.GorillaNetworkLobbyJoinTrigger
#include "GorillaNetworking/GorillaNetworkLobbyJoinTrigger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaNetworking.PhotonNetworkController
#include "GorillaNetworking/PhotonNetworkController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsDisabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_makeSureThisIsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_makeSureThisIsDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsDisabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsEnabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_makeSureThisIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_makeSureThisIsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsEnabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String gameModeName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_gameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_gameModeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController photonNetworkController
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_photonNetworkController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_photonNetworkController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonNetworkController"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String componentTypeToRemove
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentTypeToRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentTypeToRemove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTypeToRemove"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject componentRemoveTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentRemoveTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentRemoveTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentRemoveTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String componentTypeToAdd
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentTypeToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentTypeToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTypeToAdd"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject componentAddTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentAddTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_componentAddTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentAddTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gorillaParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_gorillaParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_gorillaParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject joinFailedBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_joinFailedBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaNetworkLobbyJoinTrigger::dyn_joinFailedBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinFailedBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.PhotonNetworkController
#include "GorillaNetworking/PhotonNetworkController.hpp"
// Including type: GorillaNetworking.PlayFabAuthenticator
#include "GorillaNetworking/PlayFabAuthenticator.hpp"
// Including type: GorillaNetworking.PhotonNetworkController/ConnectionEvent
#include "GorillaNetworking/PhotonNetworkController_ConnectionEvent.hpp"
// Including type: GorillaNetworking.PhotonNetworkController/<DisableOnStart>d__53
#include "GorillaNetworking/PhotonNetworkController_-DisableOnStart-d__53.hpp"
// Including type: GorillaNetworking.PhotonNetworkController/<SearchForFriendToJoin>d__90
#include "GorillaNetworking/PhotonNetworkController_-SearchForFriendToJoin-d__90.hpp"
// Including type: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94
#include "GorillaNetworking/PhotonNetworkController_-UpdatePlayerCount-d__94.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaNetworking.GorillaNetworkJoinTrigger
#include "GorillaNetworking/GorillaNetworkJoinTrigger.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController Instance
::GorillaNetworking::PhotonNetworkController* GorillaNetworking::PhotonNetworkController::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController*>("GorillaNetworking", "PhotonNetworkController", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController Instance
void GorillaNetworking::PhotonNetworkController::_set_Instance(::GorillaNetworking::PhotonNetworkController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 incrementCounter
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PhotonNetworkController::dyn_incrementCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_incrementCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incrementCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaNetworking.PhotonNetworkController/ConnectionState currentState
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController::ConnectionState& GorillaNetworking::PhotonNetworkController::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PlayFabAuthenticator playFabAuthenticator
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PlayFabAuthenticator*& GorillaNetworking::PhotonNetworkController::dyn_playFabAuthenticator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_playFabAuthenticator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playFabAuthenticator"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PlayFabAuthenticator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] serverRegions
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GorillaNetworking::PhotonNetworkController::dyn_serverRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_serverRegions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRegions"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _gameVersion
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PhotonNetworkController::dyn__gameVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn__gameVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPrivate
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_isPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_isPrivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPrivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String customRoomID
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PhotonNetworkController::dyn_customRoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_customRoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customRoomID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::PhotonNetworkController::dyn_playerOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_playerOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer[] offlineVRRig
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::SkinnedMeshRenderer*>& GorillaNetworking::PhotonNetworkController::dyn_offlineVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_offlineVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRig"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::SkinnedMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean attemptingToConnect
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_attemptingToConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_attemptingToConnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attemptingToConnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentRegionIndex
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PhotonNetworkController::dyn_currentRegionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_currentRegionIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRegionIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentGameType
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PhotonNetworkController::dyn_currentGameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_currentGameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentGameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wrongVersion
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_wrongVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_wrongVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wrongVersion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean roomCosmeticsInitialized
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_roomCosmeticsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_roomCosmeticsInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCosmeticsInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject photonVoiceObjectPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::PhotonNetworkController::dyn_photonVoiceObjectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_photonVoiceObjectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonVoiceObjectPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Boolean> playerCosmeticsLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, bool>*& GorillaNetworking::PhotonNetworkController::dyn_playerCosmeticsLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_playerCosmeticsLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerCosmeticsLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pastFirstConnection
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_pastFirstConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_pastFirstConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pastFirstConnection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastHeadRightHandDistance
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_lastHeadRightHandDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_lastHeadRightHandDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadRightHandDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastHeadLeftHandDistance
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_lastHeadLeftHandDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_lastHeadLeftHandDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadLeftHandDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single pauseTime
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_pauseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_pauseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single disconnectTime
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_disconnectTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_disconnectTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableAFKKick
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_disableAFKKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_disableAFKKick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableAFKKick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single headRightHandDistance
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_headRightHandDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_headRightHandDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRightHandDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single headLeftHandDistance
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_headLeftHandDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_headLeftHandDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headLeftHandDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion headQuat
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaNetworking::PhotonNetworkController::dyn_headQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_headQuat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headQuat"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion lastHeadQuat
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GorillaNetworking::PhotonNetworkController::dyn_lastHeadQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_lastHeadQuat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadQuat"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] disableOnStartup
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaNetworking::PhotonNetworkController::dyn_disableOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_disableOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableOnStartup"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] enableOnStartup
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GorillaNetworking::PhotonNetworkController::dyn_enableOnStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_enableOnStartup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableOnStartup"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String roomCharacters
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PhotonNetworkController::dyn_roomCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_roomCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCharacters"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updatedName
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_updatedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_updatedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatedName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] playersInRegion
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GorillaNetworking::PhotonNetworkController::dyn_playersInRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_playersInRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playersInRegion"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] pingInRegion
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GorillaNetworking::PhotonNetworkController::dyn_pingInRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_pingInRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingInRegion"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> friendIDList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GorillaNetworking::PhotonNetworkController::dyn_friendIDList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_friendIDList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendIDList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean successfullyFoundFriend
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_successfullyFoundFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_successfullyFoundFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "successfullyFoundFriend"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startingToLookForFriend
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_startingToLookForFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_startingToLookForFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingToLookForFriend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeToSpendLookingForFriend
[[deprecated("Use field access instead!")]] float& GorillaNetworking::PhotonNetworkController::dyn_timeToSpendLookingForFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_timeToSpendLookingForFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToSpendLookingForFriend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean joiningWithFriend
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_joiningWithFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_joiningWithFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joiningWithFriend"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String friendToFollow
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PhotonNetworkController::dyn_friendToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_friendToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendToFollow"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRoomFull
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_isRoomFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_isRoomFull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRoomFull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doesRoomExist
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_doesRoomExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_doesRoomExist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doesRoomExist"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean createRoom
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_createRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_createRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger privateTrigger
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::PhotonNetworkController::dyn_privateTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_privateTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "privateTrigger"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger currentJoinTrigger
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::PhotonNetworkController::dyn_currentJoinTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_currentJoinTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentJoinTrigger"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean allowedInPubRoom
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PhotonNetworkController::dyn_allowedInPubRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::dyn_allowedInPubRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowedInPubRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.get_gameVersion
::StringW GorillaNetworking::PhotonNetworkController::get_gameVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::get_gameVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.set_gameVersion
void GorillaNetworking::PhotonNetworkController::set_gameVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::set_gameVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.InitiateConnection
void GorillaNetworking::PhotonNetworkController::InitiateConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::InitiateConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.Awake
void GorillaNetworking::PhotonNetworkController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.Start
void GorillaNetworking::PhotonNetworkController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.DisableOnStart
::System::Collections::IEnumerator* GorillaNetworking::PhotonNetworkController::DisableOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::DisableOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.FixedUpdate
void GorillaNetworking::PhotonNetworkController::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessInitializationState
void GorillaNetworking::PhotonNetworkController::ProcessInitializationState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessInitializationState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInitializationState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessDeterminingPingsAndPlayerCountState
void GorillaNetworking::PhotonNetworkController::ProcessDeterminingPingsAndPlayerCountState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessDeterminingPingsAndPlayerCountState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDeterminingPingsAndPlayerCountState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessConnectedAndWaitingState
void GorillaNetworking::PhotonNetworkController::ProcessConnectedAndWaitingState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessConnectedAndWaitingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessConnectedAndWaitingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessDisconnectingFromRoomState
void GorillaNetworking::PhotonNetworkController::ProcessDisconnectingFromRoomState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessDisconnectingFromRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDisconnectingFromRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessJoiningPublicRoomState
void GorillaNetworking::PhotonNetworkController::ProcessJoiningPublicRoomState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessJoiningPublicRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessJoiningPublicRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessJoiningSpecificRoomState
void GorillaNetworking::PhotonNetworkController::ProcessJoiningSpecificRoomState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessJoiningSpecificRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessJoiningSpecificRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessJoiningFriendState
void GorillaNetworking::PhotonNetworkController::ProcessJoiningFriendState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessJoiningFriendState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessJoiningFriendState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessInPrivateRoomState
void GorillaNetworking::PhotonNetworkController::ProcessInPrivateRoomState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessInPrivateRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInPrivateRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessInPublicRoomState
void GorillaNetworking::PhotonNetworkController::ProcessInPublicRoomState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessInPublicRoomState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInPublicRoomState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessWrongVersionState
void GorillaNetworking::PhotonNetworkController::ProcessWrongVersionState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessWrongVersionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWrongVersionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ProcessState
void GorillaNetworking::PhotonNetworkController::ProcessState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ProcessState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.InvalidState
void GorillaNetworking::PhotonNetworkController::InvalidState(::GorillaNetworking::PhotonNetworkController::ConnectionEvent connectionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::InvalidState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionEvent);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.AttemptToJoinPublicRoom
void GorillaNetworking::PhotonNetworkController::AttemptToJoinPublicRoom(::GorillaNetworking::GorillaNetworkJoinTrigger* triggeredTrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::AttemptToJoinPublicRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttemptToJoinPublicRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triggeredTrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, triggeredTrigger);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.AttemptToJoinSpecificRoom
void GorillaNetworking::PhotonNetworkController::AttemptToJoinSpecificRoom(::StringW roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::AttemptToJoinSpecificRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttemptToJoinSpecificRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.JoinPublicRoom
void GorillaNetworking::PhotonNetworkController::JoinPublicRoom(bool joinWithFriends) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::JoinPublicRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinPublicRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinWithFriends)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joinWithFriends);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.JoinSpecificRoom
void GorillaNetworking::PhotonNetworkController::JoinSpecificRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::JoinSpecificRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinSpecificRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.DisconnectCleanup
void GorillaNetworking::PhotonNetworkController::DisconnectCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::DisconnectCleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectCleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.CreatePublicRoom
void GorillaNetworking::PhotonNetworkController::CreatePublicRoom(bool joinWithFriends) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::CreatePublicRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePublicRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinWithFriends)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joinWithFriends);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.CreatePrivateRoom
void GorillaNetworking::PhotonNetworkController::CreatePrivateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::CreatePrivateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePrivateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ConnectToRegion
void GorillaNetworking::PhotonNetworkController::ConnectToRegion(::StringW region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectToRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, region);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.AttemptJoinPublicWithFriends
void GorillaNetworking::PhotonNetworkController::AttemptJoinPublicWithFriends(::GorillaNetworking::GorillaNetworkJoinTrigger* triggeredTrigger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::AttemptJoinPublicWithFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttemptJoinPublicWithFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triggeredTrigger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, triggeredTrigger);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.AttemptToFollowFriendIntoPub
void GorillaNetworking::PhotonNetworkController::AttemptToFollowFriendIntoPub(::StringW userIDToFollow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::AttemptToFollowFriendIntoPub");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttemptToFollowFriendIntoPub", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userIDToFollow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userIDToFollow);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.AttemptDisconnect
void GorillaNetworking::PhotonNetworkController::AttemptDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::AttemptDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttemptDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.DisconnectFromRoom
void GorillaNetworking::PhotonNetworkController::DisconnectFromRoom(::GorillaNetworking::PhotonNetworkController::ConnectionState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::DisconnectFromRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectFromRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.WrongVersion
void GorillaNetworking::PhotonNetworkController::WrongVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::WrongVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrongVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnApplicationQuit
void GorillaNetworking::PhotonNetworkController::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.ReturnRoomName
::StringW GorillaNetworking::PhotonNetworkController::ReturnRoomName(::StringW currentGameMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ReturnRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentGameMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, currentGameMode);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.GetRoomSize
uint8_t GorillaNetworking::PhotonNetworkController::GetRoomSize(::StringW gameModeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::GetRoomSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameModeName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, gameModeName);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.StartSearchingForFriend
void GorillaNetworking::PhotonNetworkController::StartSearchingForFriend(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::StartSearchingForFriend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSearchingForFriend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.SearchForFriendToJoin
::System::Collections::IEnumerator* GorillaNetworking::PhotonNetworkController::SearchForFriendToJoin(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::SearchForFriendToJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForFriendToJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, userID);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.GetRegionWithLowestPing
::StringW GorillaNetworking::PhotonNetworkController::GetRegionWithLowestPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::GetRegionWithLowestPing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegionWithLowestPing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.TotalUsers
int GorillaNetworking::PhotonNetworkController::TotalUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::TotalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TotalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.UpdatePlayerCount
::System::Collections::IEnumerator* GorillaNetworking::PhotonNetworkController::UpdatePlayerCount(bool leaving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::UpdatePlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaving)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, leaving);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnConnectedToMaster
void GorillaNetworking::PhotonNetworkController::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnJoinedRoom
void GorillaNetworking::PhotonNetworkController::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnJoinRoomFailed
void GorillaNetworking::PhotonNetworkController::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnJoinRandomFailed
void GorillaNetworking::PhotonNetworkController::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnCreateRoomFailed
void GorillaNetworking::PhotonNetworkController::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnDisconnected
void GorillaNetworking::PhotonNetworkController::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController.OnFriendListUpdate
void GorillaNetworking::PhotonNetworkController::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.PhotonNetworkController/ConnectionState
#include "GorillaNetworking/PhotonNetworkController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState Initialization
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_Initialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_Initialization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "Initialization"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState Initialization
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_Initialization(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_Initialization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "Initialization", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState WrongVersion
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_WrongVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_WrongVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "WrongVersion"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState WrongVersion
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_WrongVersion(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_WrongVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "WrongVersion", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState DeterminingPingsAndPlayerCount
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_DeterminingPingsAndPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_DeterminingPingsAndPlayerCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "DeterminingPingsAndPlayerCount"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState DeterminingPingsAndPlayerCount
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_DeterminingPingsAndPlayerCount(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_DeterminingPingsAndPlayerCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "DeterminingPingsAndPlayerCount", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState ConnectedAndWaiting
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_ConnectedAndWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_ConnectedAndWaiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "ConnectedAndWaiting"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState ConnectedAndWaiting
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_ConnectedAndWaiting(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_ConnectedAndWaiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "ConnectedAndWaiting", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState DisconnectingFromRoom
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_DisconnectingFromRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_DisconnectingFromRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "DisconnectingFromRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState DisconnectingFromRoom
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_DisconnectingFromRoom(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_DisconnectingFromRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "DisconnectingFromRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState JoiningPublicRoom
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_JoiningPublicRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_JoiningPublicRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "JoiningPublicRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState JoiningPublicRoom
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_JoiningPublicRoom(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_JoiningPublicRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "JoiningPublicRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState JoiningSpecificRoom
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_JoiningSpecificRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_JoiningSpecificRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "JoiningSpecificRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState JoiningSpecificRoom
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_JoiningSpecificRoom(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_JoiningSpecificRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "JoiningSpecificRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState JoiningFriend
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_JoiningFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_JoiningFriend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "JoiningFriend"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState JoiningFriend
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_JoiningFriend(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_JoiningFriend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "JoiningFriend", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState InPrivateRoom
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_InPrivateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_InPrivateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "InPrivateRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState InPrivateRoom
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_InPrivateRoom(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_InPrivateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "InPrivateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState InPublicRoom
::GorillaNetworking::PhotonNetworkController::ConnectionState GorillaNetworking::PhotonNetworkController::ConnectionState::_get_InPublicRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_get_InPublicRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionState>("GorillaNetworking", "PhotonNetworkController/ConnectionState", "InPublicRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionState InPublicRoom
void GorillaNetworking::PhotonNetworkController::ConnectionState::_set_InPublicRoom(::GorillaNetworking::PhotonNetworkController::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::_set_InPublicRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionState", "InPublicRoom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PhotonNetworkController::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.PhotonNetworkController/ConnectionEvent
#include "GorillaNetworking/PhotonNetworkController_ConnectionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent InitialConnection
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_InitialConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_InitialConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "InitialConnection"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent InitialConnection
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_InitialConnection(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_InitialConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "InitialConnection", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnConnectedToMaster
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnConnectedToMaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnConnectedToMaster"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnConnectedToMaster
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnConnectedToMaster(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnConnectedToMaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnConnectedToMaster", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent AttemptJoinPublicRoom
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_AttemptJoinPublicRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_AttemptJoinPublicRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "AttemptJoinPublicRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent AttemptJoinPublicRoom
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_AttemptJoinPublicRoom(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_AttemptJoinPublicRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "AttemptJoinPublicRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent AttemptJoinSpecificRoom
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_AttemptJoinSpecificRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_AttemptJoinSpecificRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "AttemptJoinSpecificRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent AttemptJoinSpecificRoom
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_AttemptJoinSpecificRoom(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_AttemptJoinSpecificRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "AttemptJoinSpecificRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent AttemptToCreateRoom
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_AttemptToCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_AttemptToCreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "AttemptToCreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent AttemptToCreateRoom
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_AttemptToCreateRoom(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_AttemptToCreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "AttemptToCreateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent Disconnect
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent Disconnect
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_Disconnect(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnJoinedRoom
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnJoinedRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnJoinedRoom"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnJoinedRoom
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnJoinedRoom(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnJoinedRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnJoinedRoom", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnJoinRoomFailed
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnJoinRoomFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnJoinRoomFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnJoinRoomFailed"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnJoinRoomFailed
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnJoinRoomFailed(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnJoinRoomFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnJoinRoomFailed", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnJoinRandomFailed
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnJoinRandomFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnJoinRandomFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnJoinRandomFailed"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnJoinRandomFailed
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnJoinRandomFailed(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnJoinRandomFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnJoinRandomFailed", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnCreateRoomFailed
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnCreateRoomFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnCreateRoomFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnCreateRoomFailed"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnCreateRoomFailed
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnCreateRoomFailed(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnCreateRoomFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnCreateRoomFailed", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnDisconnected
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_OnDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent OnDisconnected
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnDisconnected(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_OnDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "OnDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent FoundFriendToJoin
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_FoundFriendToJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_FoundFriendToJoin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "FoundFriendToJoin"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent FoundFriendToJoin
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_FoundFriendToJoin(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_FoundFriendToJoin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "FoundFriendToJoin", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent FollowFriendToPub
::GorillaNetworking::PhotonNetworkController::ConnectionEvent GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_FollowFriendToPub() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_get_FollowFriendToPub");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PhotonNetworkController::ConnectionEvent>("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "FollowFriendToPub"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PhotonNetworkController/ConnectionEvent FollowFriendToPub
void GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_FollowFriendToPub(::GorillaNetworking::PhotonNetworkController::ConnectionEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::_set_FollowFriendToPub");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PhotonNetworkController/ConnectionEvent", "FollowFriendToPub", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PhotonNetworkController::ConnectionEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::ConnectionEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.PhotonNetworkController/<DisableOnStart>d__53
#include "GorillaNetworking/PhotonNetworkController_-DisableOnStart-d__53.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<DisableOnStart>d__53.System.IDisposable.Dispose
void GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<DisableOnStart>d__53.MoveNext
bool GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<DisableOnStart>d__53.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<DisableOnStart>d__53.System.Collections.IEnumerator.Reset
void GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<DisableOnStart>d__53.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$DisableOnStart$d__53*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.PhotonNetworkController/<SearchForFriendToJoin>d__90
#include "GorillaNetworking/PhotonNetworkController_-SearchForFriendToJoin-d__90.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userID
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_userID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_userID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<SearchForFriendToJoin>d__90.System.IDisposable.Dispose
void GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<SearchForFriendToJoin>d__90.MoveNext
bool GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<SearchForFriendToJoin>d__90.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<SearchForFriendToJoin>d__90.System.Collections.IEnumerator.Reset
void GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<SearchForFriendToJoin>d__90.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$SearchForFriendToJoin$d__90*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94
#include "GorillaNetworking/PhotonNetworkController_-UpdatePlayerCount-d__94.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::dyn_$www$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94.System.IDisposable.Dispose
void GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94.MoveNext
bool GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94.<>m__Finally1
void GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94.System.Collections.IEnumerator.Reset
void GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PhotonNetworkController/<UpdatePlayerCount>d__94.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::PhotonNetworkController::$UpdatePlayerCount$d__94*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.PlayFabAuthenticator
#include "GorillaNetworking/PlayFabAuthenticator.hpp"
// Including type: GorillaNetworking.PlayFabAuthenticator/<>c
#include "GorillaNetworking/PlayFabAuthenticator_--c.hpp"
// Including type: GorillaNetworking.PlayFabAuthenticator/<>c__DisplayClass34_0
#include "GorillaNetworking/PlayFabAuthenticator_--c__DisplayClass34_0.hpp"
// Including type: GorillaNetworking.GorillaNetworkJoinTrigger
#include "GorillaNetworking/GorillaNetworkJoinTrigger.hpp"
// Including type: GorillaNetworking.GorillaComputer
#include "GorillaNetworking/GorillaComputer.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: PlayFab.ClientModels.LoginResult
#include "PlayFab/ClientModels/LoginResult.hpp"
// Including type: PlayFab.ClientModels.GetPhotonAuthenticationTokenResult
#include "PlayFab/ClientModels/GetPhotonAuthenticationTokenResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: PlayFab.ClientModels.GetPlayerProfileResult
#include "PlayFab/ClientModels/GetPlayerProfileResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.PlayFabAuthenticator instance
::GorillaNetworking::PlayFabAuthenticator* GorillaNetworking::PlayFabAuthenticator::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::PlayFabAuthenticator*>("GorillaNetworking", "PlayFabAuthenticator", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.PlayFabAuthenticator instance
void GorillaNetworking::PlayFabAuthenticator::_set_instance(::GorillaNetworking::PlayFabAuthenticator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "PlayFabAuthenticator", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isTestAccount
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PlayFabAuthenticator::dyn_isTestAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_isTestAccount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isTestAccount"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String testAccountName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn_testAccountName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_testAccountName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testAccountName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaNetworkJoinTrigger testJoin
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaNetworkJoinTrigger*& GorillaNetworking::PlayFabAuthenticator::dyn_testJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_testJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testJoin"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaNetworkJoinTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String testRoomToJoin
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn_testRoomToJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_testRoomToJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testRoomToJoin"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String testGameMode
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn_testGameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_testGameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testGameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _playFabPlayerIdCache
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn__playFabPlayerIdCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn__playFabPlayerIdCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playFabPlayerIdCache"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _displayName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn__displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn__displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userID
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn_userID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_userID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String orgScopedID
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn_orgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_orgScopedID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orgScopedID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String userToken
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::dyn_userToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_userToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaComputer gorillaComputer
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaComputer*& GorillaNetworking::PlayFabAuthenticator::dyn_gorillaComputer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_gorillaComputer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaComputer"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaComputer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_Ticket
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GorillaNetworking::PlayFabAuthenticator::dyn_m_Ticket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_m_Ticket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ticket"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_pcbTicket
[[deprecated("Use field access instead!")]] uint& GorillaNetworking::PlayFabAuthenticator::dyn_m_pcbTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_m_pcbTicket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pcbTicket"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text debugText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::PlayFabAuthenticator::dyn_debugText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_debugText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenDebugMode
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PlayFabAuthenticator::dyn_screenDebugMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_screenDebugMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenDebugMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loginFailed
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PlayFabAuthenticator::dyn_loginFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_loginFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loginFailed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject emptyObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaNetworking::PlayFabAuthenticator::dyn_emptyObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_emptyObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxLoginAttempts
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PlayFabAuthenticator::dyn_maxLoginAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_maxLoginAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLoginAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentLoginAttempts
[[deprecated("Use field access instead!")]] int& GorillaNetworking::PlayFabAuthenticator::dyn_currentLoginAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_currentLoginAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentLoginAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isModded
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::PlayFabAuthenticator::dyn_isModded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::dyn_isModded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isModded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.Awake
void GorillaNetworking::PlayFabAuthenticator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.OculusLoginFail
void GorillaNetworking::PlayFabAuthenticator::OculusLoginFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::OculusLoginFail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OculusLoginFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.RegularLogin
bool GorillaNetworking::PlayFabAuthenticator::RegularLogin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::RegularLogin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegularLogin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.OculusAttemptFail
void GorillaNetworking::PlayFabAuthenticator::OculusAttemptFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::OculusAttemptFail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OculusAttemptFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.EntitlementCallback
void GorillaNetworking::PlayFabAuthenticator::EntitlementCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::EntitlementCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitlementCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.GetOculusUserCallback
void GorillaNetworking::PlayFabAuthenticator::GetOculusUserCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::GetOculusUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOculusUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.GetOculusOrgScopedIDCallback
void GorillaNetworking::PlayFabAuthenticator::GetOculusOrgScopedIDCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::GetOculusOrgScopedIDCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOculusOrgScopedIDCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.AuthenticateWithPlayFab
void GorillaNetworking::PlayFabAuthenticator::AuthenticateWithPlayFab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::AuthenticateWithPlayFab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithPlayFab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.RequestPhotonToken
void GorillaNetworking::PlayFabAuthenticator::RequestPhotonToken(::PlayFab::ClientModels::LoginResult* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::RequestPhotonToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestPhotonToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.AuthenticateWithPhoton
void GorillaNetworking::PlayFabAuthenticator::AuthenticateWithPhoton(::PlayFab::ClientModels::GetPhotonAuthenticationTokenResult* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::AuthenticateWithPhoton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithPhoton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.OnPlayFabError
void GorillaNetworking::PlayFabAuthenticator::OnPlayFabError(::PlayFab::PlayFabError* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::OnPlayFabError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayFabError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.LogMessage
void GorillaNetworking::PlayFabAuthenticator::LogMessage(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::LogMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.GetPlayerDisplayName
void GorillaNetworking::PlayFabAuthenticator::GetPlayerDisplayName(::StringW playFabId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::GetPlayerDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playFabId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playFabId);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.SetDisplayName
void GorillaNetworking::PlayFabAuthenticator::SetDisplayName(::StringW playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::SetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerName);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.ScreenDebug
void GorillaNetworking::PlayFabAuthenticator::ScreenDebug(::StringW debugString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::ScreenDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugString);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.ScreenDebugClear
void GorillaNetworking::PlayFabAuthenticator::ScreenDebugClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::ScreenDebugClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenDebugClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator.<GetPlayerDisplayName>b__33_0
void GorillaNetworking::PlayFabAuthenticator::$GetPlayerDisplayName$b__33_0(::PlayFab::ClientModels::GetPlayerProfileResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::<GetPlayerDisplayName>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPlayerDisplayName>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.PlayFabAuthenticator/<>c
#include "GorillaNetworking/PlayFabAuthenticator_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaNetworking.PlayFabAuthenticator/<>c <>9
::GorillaNetworking::PlayFabAuthenticator::$$c* GorillaNetworking::PlayFabAuthenticator::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GorillaNetworking::PlayFabAuthenticator::$$c*>("GorillaNetworking", "PlayFabAuthenticator/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaNetworking.PlayFabAuthenticator/<>c <>9
void GorillaNetworking::PlayFabAuthenticator::$$c::_set_$$9(::GorillaNetworking::PlayFabAuthenticator::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "PlayFabAuthenticator/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__33_1
::System::Action_1<::PlayFab::PlayFabError*>* GorillaNetworking::PlayFabAuthenticator::$$c::_get_$$9__33_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::_get_$$9__33_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("GorillaNetworking", "PlayFabAuthenticator/<>c", "<>9__33_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__33_1
void GorillaNetworking::PlayFabAuthenticator::$$c::_set_$$9__33_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::_set_$$9__33_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "PlayFabAuthenticator/<>c", "<>9__33_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__34_1
::System::Action_1<::PlayFab::PlayFabError*>* GorillaNetworking::PlayFabAuthenticator::$$c::_get_$$9__34_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::_get_$$9__34_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("GorillaNetworking", "PlayFabAuthenticator/<>c", "<>9__34_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__34_1
void GorillaNetworking::PlayFabAuthenticator::$$c::_set_$$9__34_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::_set_$$9__34_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("GorillaNetworking", "PlayFabAuthenticator/<>c", "<>9__34_1", value)));
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator/<>c..cctor
void GorillaNetworking::PlayFabAuthenticator::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaNetworking", "PlayFabAuthenticator/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator/<>c.<GetPlayerDisplayName>b__33_1
void GorillaNetworking::PlayFabAuthenticator::$$c::$GetPlayerDisplayName$b__33_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::<GetPlayerDisplayName>b__33_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPlayerDisplayName>b__33_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator/<>c.<SetDisplayName>b__34_1
void GorillaNetworking::PlayFabAuthenticator::$$c::$SetDisplayName$b__34_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c::<SetDisplayName>b__34_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetDisplayName>b__34_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.PlayFabAuthenticator/<>c__DisplayClass34_0
#include "GorillaNetworking/PlayFabAuthenticator_--c__DisplayClass34_0.hpp"
// Including type: PlayFab.ClientModels.UpdateUserTitleDisplayNameResult
#include "PlayFab/ClientModels/UpdateUserTitleDisplayNameResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PlayFabAuthenticator <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PlayFabAuthenticator*& GorillaNetworking::PlayFabAuthenticator::$$c__DisplayClass34_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c__DisplayClass34_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PlayFabAuthenticator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::PlayFabAuthenticator::$$c__DisplayClass34_0::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c__DisplayClass34_0::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.PlayFabAuthenticator/<>c__DisplayClass34_0.<SetDisplayName>b__0
void GorillaNetworking::PlayFabAuthenticator::$$c__DisplayClass34_0::$SetDisplayName$b__0(::PlayFab::ClientModels::UpdateUserTitleDisplayNameResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::PlayFabAuthenticator::$$c__DisplayClass34_0::<SetDisplayName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetDisplayName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.FaceType
#include "Oculus/Spatializer/Propagation/FaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_TRIANGLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType TRIANGLES
void Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_TRIANGLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "TRIANGLES", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
::Oculus::Spatializer::Propagation::FaceType Oculus::Spatializer::Propagation::FaceType::_get_QUADS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_get_QUADS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::FaceType>("Oculus.Spatializer.Propagation", "FaceType", "QUADS"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.FaceType QUADS
void Oculus::Spatializer::Propagation::FaceType::_set_QUADS(::Oculus::Spatializer::Propagation::FaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::_set_QUADS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "FaceType", "QUADS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::FaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::FaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Spatializer.Propagation.MaterialProperty
#include "Oculus/Spatializer/Propagation/MaterialProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_ABSORPTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty ABSORPTION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_ABSORPTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "ABSORPTION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_TRANSMISSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty TRANSMISSION
void Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_TRANSMISSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "TRANSMISSION", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
::Oculus::Spatializer::Propagation::MaterialProperty Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_get_SCATTERING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Spatializer::Propagation::MaterialProperty>("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Spatializer.Propagation.MaterialProperty SCATTERING
void Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING(::Oculus::Spatializer::Propagation::MaterialProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::_set_SCATTERING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Spatializer.Propagation", "MaterialProperty", "SCATTERING", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Spatializer::Propagation::MaterialProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColorGrabbable
#include "OculusSampleFramework/ColorGrabbable.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_GRAB
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_GRAB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_GRAB
void OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_GRAB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_GRAB", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
::UnityEngine::Color OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_get_COLOR_HIGHLIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color COLOR_HIGHLIGHT
void OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::_set_COLOR_HIGHLIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ColorGrabbable", "COLOR_HIGHLIGHT", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::ColorGrabbable::dyn_m_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] m_meshRenderers
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_highlight
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ColorGrabbable::dyn_m_highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::dyn_m_highlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.get_Highlight
bool OculusSampleFramework::ColorGrabbable::get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::get_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.set_Highlight
void OculusSampleFramework::ColorGrabbable::set_Highlight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::set_Highlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Highlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.UpdateColor
void OculusSampleFramework::ColorGrabbable::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.Awake
void OculusSampleFramework::ColorGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.SetColor
void OculusSampleFramework::ColorGrabbable::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable..cctor
void OculusSampleFramework::ColorGrabbable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "ColorGrabbable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabBegin
void OculusSampleFramework::ColorGrabbable::GrabBegin(::GlobalNamespace::OVRGrabber* hand, ::UnityEngine::Collider* grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, grabPoint);
}
// Autogenerated method: OculusSampleFramework.ColorGrabbable.GrabEnd
void OculusSampleFramework::ColorGrabbable::GrabEnd(::UnityEngine::Vector3 linearVelocity, ::UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColorGrabbable::GrabEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String m_materialColorField
[[deprecated("Use field access instead!")]] ::StringW& OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_materialColorField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialColorField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair m_crosshair
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshair"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabManager m_crosshairManager
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabManager*& OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_crosshairManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_crosshairManager"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& OculusSampleFramework::DistanceGrabbable::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_mpb
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& OculusSampleFramework::DistanceGrabbable::dyn_m_mpb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_mpb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mpb"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_inRange
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_inRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_inRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_targeted
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabbable::dyn_m_targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::dyn_m_targeted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targeted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_InRange
bool OculusSampleFramework::DistanceGrabbable::get_InRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_InRange
void OculusSampleFramework::DistanceGrabbable::set_InRange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.get_Targeted
bool OculusSampleFramework::DistanceGrabbable::get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::get_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.set_Targeted
void OculusSampleFramework::DistanceGrabbable::set_Targeted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::set_Targeted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Targeted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.RefreshCrosshair
void OculusSampleFramework::DistanceGrabbable::RefreshCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::RefreshCrosshair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCrosshair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabbable.Start
void OculusSampleFramework::DistanceGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabbable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabbable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.DistanceGrabber
#include "OculusSampleFramework/DistanceGrabber.hpp"
// Including type: OculusSampleFramework.DistanceGrabbable
#include "OculusSampleFramework/DistanceGrabbable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_spherecastRadius
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_spherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_noSnapThreshhold
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_noSnapThreshhold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_noSnapThreshhold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useSpherecast
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_useSpherecast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useSpherecast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_preventGrabThroughWalls
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_preventGrabThroughWalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preventGrabThroughWalls"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullVelocity
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_objectPullMaxRotationRate
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_objectPullMaxRotationRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectPullMaxRotationRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_movingObjectToHand
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_movingObjectToHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movingObjectToHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_maxGrabDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_maxGrabDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxGrabDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_grabObjectsInLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_grabObjectsInLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabObjectsInLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_obstructionLayer
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_obstructionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_obstructionLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.DistanceGrabber m_otherHand
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabber*& OculusSampleFramework::DistanceGrabber::dyn_m_otherHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_otherHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_otherHand"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.DistanceGrabbable m_target
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::DistanceGrabbable*& OculusSampleFramework::DistanceGrabber::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::DistanceGrabbable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Collider m_targetCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::dyn_m_targetCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.get_UseSpherecast
bool OculusSampleFramework::DistanceGrabber::get_UseSpherecast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::get_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.set_UseSpherecast
void OculusSampleFramework::DistanceGrabber::set_UseSpherecast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::set_UseSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.HitInfoToGrabbable
::OculusSampleFramework::DistanceGrabbable* OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable(::UnityEngine::RaycastHit hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::HitInfoToGrabbable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "DistanceGrabber", "HitInfoToGrabbable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::DistanceGrabbable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hitInfo);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTarget
bool OculusSampleFramework::DistanceGrabber::FindTarget(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.FindTargetWithSpherecast
bool OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast(ByRef<::OculusSampleFramework::DistanceGrabbable*> dgOut, ByRef<::UnityEngine::Collider*> collOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::FindTargetWithSpherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetWithSpherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::OculusSampleFramework::DistanceGrabbable*&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(dgOut), byref(collOut));
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Start
void OculusSampleFramework::DistanceGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.Update
void OculusSampleFramework::DistanceGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabBegin
void OculusSampleFramework::DistanceGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabBegin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.MoveGrabbedObject
void OculusSampleFramework::DistanceGrabber::MoveGrabbedObject(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::MoveGrabbedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.GrabVolumeEnable
void OculusSampleFramework::DistanceGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::GrabVolumeEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OculusSampleFramework.DistanceGrabber.OffhandGrabbed
void OculusSampleFramework::DistanceGrabber::OffhandGrabbed(::GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::DistanceGrabber::OffhandGrabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRGrabber*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabManager
#include "OculusSampleFramework/GrabManager.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider m_grabVolume
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::GrabManager::dyn_m_grabVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_m_grabVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabVolume"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorInRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorInRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorInRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorInRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorHighlighted
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorHighlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorHighlighted"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color OutlineColorOutOfRange
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& OculusSampleFramework::GrabManager::dyn_OutlineColorOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::dyn_OutlineColorOutOfRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutlineColorOutOfRange"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerEnter
void OculusSampleFramework::GrabManager::OnTriggerEnter(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OculusSampleFramework.GrabManager.OnTriggerExit
void OculusSampleFramework::GrabManager::OnTriggerExit(::UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabManager::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherCollider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.GrabbableCrosshair/CrosshairState m_state
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::GrabbableCrosshair::CrosshairState& OculusSampleFramework::GrabbableCrosshair::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::GrabbableCrosshair::CrosshairState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_centerEyeAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_centerEyeAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_centerEyeAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_targetedCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_targetedCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetedCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_enabledCrosshair
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::dyn_m_enabledCrosshair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enabledCrosshair"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Start
void OculusSampleFramework::GrabbableCrosshair::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.SetState
void OculusSampleFramework::GrabbableCrosshair::SetState(::OculusSampleFramework::GrabbableCrosshair::CrosshairState cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cs);
}
// Autogenerated method: OculusSampleFramework.GrabbableCrosshair.Update
void OculusSampleFramework::GrabbableCrosshair::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.GrabbableCrosshair/CrosshairState
#include "OculusSampleFramework/GrabbableCrosshair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Disabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Disabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Enabled
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Enabled
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Targeted
::OculusSampleFramework::GrabbableCrosshair::CrosshairState OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_get_Targeted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::GrabbableCrosshair::CrosshairState>("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.GrabbableCrosshair/CrosshairState Targeted
void OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted(::OculusSampleFramework::GrabbableCrosshair::CrosshairState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::_set_Targeted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "GrabbableCrosshair/CrosshairState", "Targeted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::GrabbableCrosshair::CrosshairState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PauseOnInputLoss
#include "OculusSampleFramework/PauseOnInputLoss.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.Start
void OculusSampleFramework::PauseOnInputLoss::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusLost
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PauseOnInputLoss.OnInputFocusAcquired
void OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PauseOnInputLoss::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolTags ToolTags
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableToolTags& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_ToolTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToolTags"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolTags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<OculusSampleFramework.ColliderZone> CollidersTouchingUs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn_CollidersTouchingUs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidersTouchingUs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.ColliderZone> _elementsToCleanUp
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>*& OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::dyn__elementsToCleanUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsToCleanUp"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::ColliderZone*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnDisable
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.Update
void OculusSampleFramework::BoneCapsuleTriggerLogic::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerEnter
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.OnTriggerExit
void OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusSampleFramework.BoneCapsuleTriggerLogic.CleanUpDeadColliders
void OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::BoneCapsuleTriggerLogic::CleanUpDeadColliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpDeadColliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController
#include "OculusSampleFramework/ButtonController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single ENTRY_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_ENTRY_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ENTRY_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_ENTRY_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "ENTRY_DOT_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single PERP_DOT_THRESHOLD
float OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_get_PERP_DOT_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PERP_DOT_THRESHOLD
void OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::_set_PERP_DOT_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController", "PERP_DOT_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _proximityZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__proximityZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__proximityZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _contactZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__contactZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _actionZone
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonController::dyn__actionZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__actionZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZone"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.ButtonController/ContactTest[] _contactTests
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>& OculusSampleFramework::ButtonController::dyn__contactTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__contactTests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactTests"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::ButtonController::ContactTest>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _buttonPlaneCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__buttonPlaneCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonPlaneCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _makeSureToolIsOnPositiveSide
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__makeSureToolIsOnPositiveSide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeSureToolIsOnPositiveSide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localButtonDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::ButtonController::dyn__localButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__localButtonDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localButtonDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableToolTags[] _allValidToolsTags
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::InteractableToolTags>& OculusSampleFramework::ButtonController::dyn__allValidToolsTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__allValidToolsTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allValidToolsTags"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::InteractableToolTags>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _toolTagsMask
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::dyn__toolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolTagsMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolTagsMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableState _currentButtonState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::ButtonController::dyn__currentButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__currentButtonState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentButtonState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.InteractableTool,OculusSampleFramework.InteractableState> _toolToState
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>*& OculusSampleFramework::ButtonController::dyn__toolToState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::dyn__toolToState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolToState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::InteractableTool*, ::OculusSampleFramework::InteractableState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_LocalButtonDirection
::UnityEngine::Vector3 OculusSampleFramework::ButtonController::get_LocalButtonDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_LocalButtonDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalButtonDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.FireInteractionEventsOnDepth
void OculusSampleFramework::ButtonController::FireInteractionEventsOnDepth(::OculusSampleFramework::InteractableCollisionDepth oldDepth, ::OculusSampleFramework::InteractableTool* collidingTool, ::OculusSampleFramework::InteractionType interactionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::FireInteractionEventsOnDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireInteractionEventsOnDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDepth), ::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(interactionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDepth, collidingTool, interactionType);
}
// Autogenerated method: OculusSampleFramework.ButtonController.GetUpcomingStateNearField
::OculusSampleFramework::InteractableState OculusSampleFramework::ButtonController::GetUpcomingStateNearField(::OculusSampleFramework::InteractableState oldState, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::GetUpcomingStateNearField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUpcomingStateNearField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newCollisionDepth), ::il2cpp_utils::ExtractType(toolIsInActionZone), ::il2cpp_utils::ExtractType(toolIsInContactZone), ::il2cpp_utils::ExtractType(toolIsInProximity), ::il2cpp_utils::ExtractType(validContact), ::il2cpp_utils::ExtractType(onPositiveSideOfInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableState, false>(this, ___internal__method, oldState, newCollisionDepth, toolIsInActionZone, toolIsInContactZone, toolIsInProximity, validContact, onPositiveSideOfInteractable);
}
// Autogenerated method: OculusSampleFramework.ButtonController.IsValidContact
bool OculusSampleFramework::ButtonController::IsValidContact(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::IsValidContact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidContact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassEntryTest
bool OculusSampleFramework::ButtonController::PassEntryTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassEntryTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassEntryTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.PassPerpTest
bool OculusSampleFramework::ButtonController::PassPerpTest(::OculusSampleFramework::InteractableTool* collidingTool, ::UnityEngine::Vector3 buttonDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::PassPerpTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassPerpTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidingTool), ::il2cpp_utils::ExtractType(buttonDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, collidingTool, buttonDirection);
}
// Autogenerated method: OculusSampleFramework.ButtonController.get_ValidToolTagsMask
int OculusSampleFramework::ButtonController::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.Awake
void OculusSampleFramework::ButtonController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonController.UpdateCollisionDepth
void OculusSampleFramework::ButtonController::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, newCollisionDepth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonController/ContactTest
#include "OculusSampleFramework/ButtonController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/ContactTest PerpenTest
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_PerpenTest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/ContactTest PerpenTest
void OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_PerpenTest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "PerpenTest", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ButtonController/ContactTest BackwardsPress
::OculusSampleFramework::ButtonController::ContactTest OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_get_BackwardsPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ButtonController::ContactTest>("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ButtonController/ContactTest BackwardsPress
void OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress(::OculusSampleFramework::ButtonController::ContactTest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::_set_BackwardsPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ButtonController/ContactTest", "BackwardsPress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ButtonController::ContactTest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonController::ContactTest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ButtonTriggerZone
#include "OculusSampleFramework/ButtonTriggerZone.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _parentInteractableObj
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn__parentInteractableObj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentInteractableObj"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider <Collider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$Collider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Collider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable <ParentInteractable>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::dyn_$ParentInteractable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParentInteractable>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ButtonTriggerZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_Collider
void OculusSampleFramework::ButtonTriggerZone::set_Collider(::UnityEngine::Collider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_Collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.set_ParentInteractable
void OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable(::OculusSampleFramework::Interactable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::set_ParentInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ButtonTriggerZone*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ButtonTriggerZone.Awake
void OculusSampleFramework::ButtonTriggerZone::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ButtonTriggerZone::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.ColliderZone.get_Collider
::UnityEngine::Collider* OculusSampleFramework::ColliderZone::get_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_Collider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_ParentInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::ColliderZone::get_ParentInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_ParentInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.ColliderZone.get_CollisionDepth
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::ColliderZone::get_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZone::get_CollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::ColliderZone*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableCollisionDepth, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZone Collider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::ColliderZoneArgs::dyn_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_Collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Collider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single FrameTime
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_FrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool CollidingTool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractionType InteractionT
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractionType& OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ColliderZoneArgs::dyn_InteractionT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractionT"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractionType
#include "OculusSampleFramework/InteractionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Enter
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Enter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Enter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Enter"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Enter
void OculusSampleFramework::InteractionType::_set_Enter(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Enter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Enter", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Stay
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Stay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Stay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Stay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Stay
void OculusSampleFramework::InteractionType::_set_Stay(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Stay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Stay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractionType Exit
::OculusSampleFramework::InteractionType OculusSampleFramework::InteractionType::_get_Exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_get_Exit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractionType>("OculusSampleFramework", "InteractionType", "Exit"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractionType Exit
void OculusSampleFramework::InteractionType::_set_Exit(::OculusSampleFramework::InteractionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::_set_Exit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractionType", "Exit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRSkeletonRenderer
#include "GlobalNamespace/OVRSkeletonRenderer.hpp"
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSkeleton/BoneId
#include "GlobalNamespace/OVRSkeleton_BoneId.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String SKELETON_VISUALIZER_NAME
::StringW OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_SKELETON_VISUALIZER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String SKELETON_VISUALIZER_NAME
void OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_SKELETON_VISUALIZER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "SKELETON_VISUALIZER_NAME", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAF3580
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_get_$Instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager*>("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.HandsManager <Instance>k__BackingField
void OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::_set_$Instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager", "<Instance>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager/HandsVisualMode VisualMode
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager::HandsVisualMode& OculusSampleFramework::HandsManager::dyn_VisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_VisualMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VisualMode"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager::HandsVisualMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHand[] _hand
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRHand*>& OculusSampleFramework::HandsManager::dyn__hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hand"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRHand*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton[] _handSkeleton
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeleton*>& OculusSampleFramework::HandsManager::dyn__handSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeleton"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeleton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeletonRenderer[] _handSkeletonRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>& OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handSkeletonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handSkeletonRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRSkeletonRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMesh[] _handMesh
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMesh*>& OculusSampleFramework::HandsManager::dyn__handMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMesh"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMesh*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRMeshRenderer[] _handMeshRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRMeshRenderer*>& OculusSampleFramework::HandsManager::dyn__handMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__handMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMeshRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _leftMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__leftMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer _rightMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& OculusSampleFramework::HandsManager::dyn__rightMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leftSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__leftSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _rightSkeletonVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__rightSkeletonVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSkeletonVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentHandAlpha
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::HandsManager::dyn__currentHandAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn__currentHandAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHandAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 HandAlphaId
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::dyn_HandAlphaId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::dyn_HandAlphaId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandAlphaId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHand
void OculusSampleFramework::HandsManager::set_RightHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_RightHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeleton
void OculusSampleFramework::HandsManager::set_RightHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_RightHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMesh
void OculusSampleFramework::HandsManager::set_RightHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_RightHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_RightHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_RightHandMeshRenderer
void OculusSampleFramework::HandsManager::set_RightHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_RightHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHand
::GlobalNamespace::OVRHand* OculusSampleFramework::HandsManager::get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHand*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHand
void OculusSampleFramework::HandsManager::set_LeftHand(::GlobalNamespace::OVRHand* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeleton
::GlobalNamespace::OVRSkeleton* OculusSampleFramework::HandsManager::get_LeftHandSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeleton*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeleton
void OculusSampleFramework::HandsManager::set_LeftHandSkeleton(::GlobalNamespace::OVRSkeleton* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandSkeletonRenderer
::GlobalNamespace::OVRSkeletonRenderer* OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRSkeletonRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandSkeletonRenderer
void OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer(::GlobalNamespace::OVRSkeletonRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandSkeletonRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandSkeletonRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMesh
::GlobalNamespace::OVRMesh* OculusSampleFramework::HandsManager::get_LeftHandMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMesh*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMesh
void OculusSampleFramework::HandsManager::set_LeftHandMesh(::GlobalNamespace::OVRMesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_LeftHandMeshRenderer
::GlobalNamespace::OVRMeshRenderer* OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRMeshRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_LeftHandMeshRenderer
void OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer(::GlobalNamespace::OVRMeshRenderer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_LeftHandMeshRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftHandMeshRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.get_Instance
::OculusSampleFramework::HandsManager* OculusSampleFramework::HandsManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::HandsManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.set_Instance
void OculusSampleFramework::HandsManager::set_Instance(::OculusSampleFramework::HandsManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Awake
void OculusSampleFramework::HandsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.Update
void OculusSampleFramework::HandsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.FindSkeletonVisualGameObjects
::System::Collections::IEnumerator* OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::FindSkeletonVisualGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSkeletonVisualGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SwitchVisualization
void OculusSampleFramework::HandsManager::SwitchVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SwitchVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.SetToCurrentVisualMode
void OculusSampleFramework::HandsManager::SetToCurrentVisualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::SetToCurrentVisualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCurrentVisualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager.GetCapsulesPerBone
::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>* OculusSampleFramework::HandsManager::GetCapsulesPerBone(::GlobalNamespace::OVRSkeleton* skeleton, ::GlobalNamespace::OVRSkeleton::BoneId boneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::GetCapsulesPerBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "HandsManager", "GetCapsulesPerBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skeleton), ::il2cpp_utils::ExtractType(boneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::OVRBoneCapsule*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skeleton, boneId);
}
// Autogenerated method: OculusSampleFramework.HandsManager.IsInitialized
bool OculusSampleFramework::HandsManager::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.HandsManager/HandsVisualMode
#include "OculusSampleFramework/HandsManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Mesh
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Mesh
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Mesh", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Skeleton
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Skeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Skeleton
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Skeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Skeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Both
::OculusSampleFramework::HandsManager::HandsVisualMode OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::HandsManager::HandsVisualMode>("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.HandsManager/HandsVisualMode Both
void OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both(::OculusSampleFramework::HandsManager::HandsVisualMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "HandsManager/HandsVisualMode", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::HandsVisualMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52
#include "OculusSampleFramework/HandsManager_-FindSkeletonVisualGameObjects-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.HandsManager <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager*& OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.IDisposable.Dispose
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.MoveNext
bool OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.Reset
void OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.HandsManager/<FindSkeletonVisualGameObjects>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::HandsManager::$FindSkeletonVisualGameObjects$d__52*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.Interactable/InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _proximityZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__proximityZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__proximityZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proximityZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _contactZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__contactZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__contactZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contactZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OculusSampleFramework.ColliderZone _actionZoneCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::Interactable::dyn__actionZoneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn__actionZoneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionZoneCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ProximityZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ProximityZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ProximityZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProximityZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ContactZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ContactZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ContactZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContactZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OculusSampleFramework.ColliderZoneArgs> ActionZoneEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>*& OculusSampleFramework::Interactable::dyn_ActionZoneEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_ActionZoneEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActionZoneEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.Interactable/InteractableStateArgsEvent InteractableStateChanged
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable::InteractableStateArgsEvent*& OculusSampleFramework::Interactable::dyn_InteractableStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::dyn_InteractableStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableStateChanged"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable::InteractableStateArgsEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ProximityCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ProximityCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ProximityCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProximityCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ContactCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ContactCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ContactCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContactCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ActionCollider
::OculusSampleFramework::ColliderZone* OculusSampleFramework::Interactable::get_ActionCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ActionCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActionCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ColliderZone*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.get_ValidToolTagsMask
int OculusSampleFramework::Interactable::get_ValidToolTagsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::get_ValidToolTagsMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ProximityZoneEvent
void OculusSampleFramework::Interactable::add_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ProximityZoneEvent
void OculusSampleFramework::Interactable::remove_ProximityZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ProximityZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ProximityZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnProximityZoneEvent
void OculusSampleFramework::Interactable::OnProximityZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnProximityZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ContactZoneEvent
void OculusSampleFramework::Interactable::add_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ContactZoneEvent
void OculusSampleFramework::Interactable::remove_ContactZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ContactZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ContactZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnContactZoneEvent
void OculusSampleFramework::Interactable::OnContactZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnContactZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.add_ActionZoneEvent
void OculusSampleFramework::Interactable::add_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::add_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.remove_ActionZoneEvent
void OculusSampleFramework::Interactable::remove_ActionZoneEvent(::System::Action_1<::OculusSampleFramework::ColliderZoneArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::remove_ActionZoneEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ActionZoneEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnActionZoneEvent
void OculusSampleFramework::Interactable::OnActionZoneEvent(::OculusSampleFramework::ColliderZoneArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnActionZoneEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: OculusSampleFramework.Interactable.UpdateCollisionDepth
void OculusSampleFramework::Interactable::UpdateCollisionDepth(::OculusSampleFramework::InteractableTool* interactableTool, ::OculusSampleFramework::InteractableCollisionDepth oldCollisionDepth, ::OculusSampleFramework::InteractableCollisionDepth newCollisionDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::UpdateCollisionDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool, oldCollisionDepth, newCollisionDepth);
}
// Autogenerated method: OculusSampleFramework.Interactable.Awake
void OculusSampleFramework::Interactable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.Interactable.OnDestroy
void OculusSampleFramework::Interactable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::Interactable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::Interactable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.Interactable/InteractableStateArgsEvent
#include "OculusSampleFramework/Interactable_InteractableStateArgsEvent.hpp"
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionDepth
#include "OculusSampleFramework/InteractableCollisionDepth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth None
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth None
void OculusSampleFramework::InteractableCollisionDepth::_set_None(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Proximity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Proximity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Proximity"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Proximity
void OculusSampleFramework::InteractableCollisionDepth::_set_Proximity(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Proximity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Proximity", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Contact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Contact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Contact"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Contact
void OculusSampleFramework::InteractableCollisionDepth::_set_Contact(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Contact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Contact", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableCollisionDepth Action
::OculusSampleFramework::InteractableCollisionDepth OculusSampleFramework::InteractableCollisionDepth::_get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_get_Action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableCollisionDepth>("OculusSampleFramework", "InteractableCollisionDepth", "Action"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableCollisionDepth Action
void OculusSampleFramework::InteractableCollisionDepth::_set_Action(::OculusSampleFramework::InteractableCollisionDepth value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::_set_Action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableCollisionDepth", "Action", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableCollisionDepth::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionDepth::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableState
#include "OculusSampleFramework/InteractableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState Default
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState Default
void OculusSampleFramework::InteractableState::_set_Default(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ProximityState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ProximityState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ProximityState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ProximityState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ProximityState
void OculusSampleFramework::InteractableState::_set_ProximityState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ProximityState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ProximityState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ContactState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ContactState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ContactState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ContactState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ContactState
void OculusSampleFramework::InteractableState::_set_ContactState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ContactState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ContactState", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableState ActionState
::OculusSampleFramework::InteractableState OculusSampleFramework::InteractableState::_get_ActionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_get_ActionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableState>("OculusSampleFramework", "InteractableState", "ActionState"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableState ActionState
void OculusSampleFramework::InteractableState::_set_ActionState(::OculusSampleFramework::InteractableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::_set_ActionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableState", "ActionState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableStateArgs
#include "OculusSampleFramework/InteractableStateArgs.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.ColliderZoneArgs
#include "OculusSampleFramework/ColliderZoneArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.Interactable Interactable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::InteractableStateArgs::dyn_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Interactable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableTool Tool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableStateArgs::dyn_Tool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_Tool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState OldInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_OldInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OldInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.InteractableState NewInteractableState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableState& OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_NewInteractableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NewInteractableState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly OculusSampleFramework.ColliderZoneArgs ColliderArgs
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZoneArgs*& OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableStateArgs::dyn_ColliderArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColliderArgs"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZoneArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableRegistry
#include "OculusSampleFramework/InteractableRegistry.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::_get__interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_get__interactables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*>("OculusSampleFramework", "InteractableRegistry", "_interactables"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.HashSet`1<OculusSampleFramework.Interactable> _interactables
void OculusSampleFramework::InteractableRegistry::_set__interactables(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::_set__interactables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableRegistry", "_interactables", value));
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.get_Interactables
::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>* OculusSampleFramework::InteractableRegistry::get_Interactables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::get_Interactables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "get_Interactables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::Interactable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.RegisterInteractable
void OculusSampleFramework::InteractableRegistry::RegisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::RegisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "RegisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry.UnregisterInteractable
void OculusSampleFramework::InteractableRegistry::UnregisterInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::UnregisterInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", "UnregisterInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableRegistry..cctor
void OculusSampleFramework::InteractableRegistry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableRegistry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableRegistry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsCreator
#include "OculusSampleFramework/InteractableToolsCreator.hpp"
// Including type: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] LeftHandTools
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_LeftHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] RightHandTools
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::dyn_RightHandTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHandTools"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.Awake
void OculusSampleFramework::InteractableToolsCreator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolsToHands
::System::Collections::IEnumerator* OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands(::ArrayW<::UnityEngine::Transform*> toolObjects, bool isRightHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolsToHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolsToHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toolObjects), ::il2cpp_utils::ExtractType(isRightHand)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, toolObjects, isRightHand);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator.AttachToolToHandTransform
void OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform(::UnityEngine::Transform* tool, bool isRightHanded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::AttachToolToHandTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToolToHandTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tool), ::il2cpp_utils::ExtractType(isRightHanded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tool, isRightHanded);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3
#include "OculusSampleFramework/InteractableToolsCreator_-AttachToolsToHands-d__3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.HandsManager
#include "OculusSampleFramework/HandsManager.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] toolObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_toolObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toolObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRightHand
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_isRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRightHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableToolsCreator <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableToolsCreator*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableToolsCreator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.HandsManager <handsManagerObj>5__2
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::HandsManager*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handsManagerObj$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsManagerObj>5__2"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::HandsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1/Enumerator<UnityEngine.Transform> <>7__wrap2
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::HashSet_1<::UnityEngine::Transform*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <toolObject>5__4
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$toolObject$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<toolObject>5__4"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSkeleton <handSkeletonToAttachTo>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRSkeleton*& OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::dyn_$handSkeletonToAttachTo$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handSkeletonToAttachTo>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRSkeleton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.IDisposable.Dispose
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.MoveNext
bool OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.<>m__Finally1
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.IEnumerator.Reset
void OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsCreator/<AttachToolsToHands>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolsCreator::$AttachToolsToHands$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolsInputRouter
#include "OculusSampleFramework/InteractableToolsInputRouter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolsInputRouter*>("OculusSampleFramework", "InteractableToolsInputRouter", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OculusSampleFramework.InteractableToolsInputRouter _instance
void OculusSampleFramework::InteractableToolsInputRouter::_set__instance(::OculusSampleFramework::InteractableToolsInputRouter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolsInputRouter", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leftPinch
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rightPinch
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightPinch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightPinch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandNearTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _leftHandFarTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__leftHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandNearTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandNearTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandNearTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<OculusSampleFramework.InteractableTool> _rightHandFarTools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>*& OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::dyn__rightHandFarTools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandFarTools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.get_Instance
::OculusSampleFramework::InteractableToolsInputRouter* OculusSampleFramework::InteractableToolsInputRouter::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "InteractableToolsInputRouter", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolsInputRouter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.RegisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::RegisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UnregisterInteractableTool
void OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool(::OculusSampleFramework::InteractableTool* interactableTool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UnregisterInteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableTool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableTool);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.Update
void OculusSampleFramework::InteractableToolsInputRouter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateToolsAndEnableState
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool toolsAreEnabledThisFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateToolsAndEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateToolsAndEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(toolsAreEnabledThisFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, toolsAreEnabledThisFrame);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.UpdateTools
bool OculusSampleFramework::InteractableToolsInputRouter::UpdateTools(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool resetCollisionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::UpdateTools");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTools", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(resetCollisionData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tools, resetCollisionData);
}
// Autogenerated method: OculusSampleFramework.InteractableToolsInputRouter.ToggleToolsEnableState
void OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState(::System::Collections::Generic::HashSet_1<::OculusSampleFramework::InteractableTool*>* tools, bool enableState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolsInputRouter::ToggleToolsEnableState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleToolsEnableState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tools), ::il2cpp_utils::ExtractType(enableState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tools, enableState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeTool
#include "OculusSampleFramework/FingerTipPokeTool.hpp"
// Including type: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: OculusSampleFramework.BoneCapsuleTriggerLogic
#include "OculusSampleFramework/BoneCapsuleTriggerLogic.hpp"
// Including type: OVRBoneCapsule
#include "GlobalNamespace/OVRBoneCapsule.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_VELOCITY_FRAMES
int OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_get_NUM_VELOCITY_FRAMES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_VELOCITY_FRAMES
void OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::_set_NUM_VELOCITY_FRAMES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "FingerTipPokeTool", "NUM_VELOCITY_FRAMES", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.FingerTipPokeToolView _fingerTipPokeToolView
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::FingerTipPokeToolView*& OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerTipPokeToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerTipPokeToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRPlugin/HandFinger _fingerToFollow
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::HandFinger& OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__fingerToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fingerToFollow"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::HandFinger*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _velocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__velocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currVelocityFrame
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__currVelocityFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currVelocityFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sampledMaxFramesAlready
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__sampledMaxFramesAlready");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampledMaxFramesAlready"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::FingerTipPokeTool::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic
[[deprecated("Use field access instead!")]] ::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>& OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__boneCapsuleTriggerLogic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boneCapsuleTriggerLogic"))->offset;
  return *reinterpret_cast<::ArrayW<::OculusSampleFramework::BoneCapsuleTriggerLogic*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastScale
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::FingerTipPokeTool::dyn__lastScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__lastScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRBoneCapsule _capsuleToTrack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRBoneCapsule*& OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::dyn__capsuleToTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsuleToTrack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRBoneCapsule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.AttachTriggerLogic
::System::Collections::IEnumerator* OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::AttachTriggerLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachTriggerLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Update
void OculusSampleFramework::FingerTipPokeTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.UpdateAverageVelocity
void OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::UpdateAverageVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverageVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.CheckAndUpdateScale
void OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::CheckAndUpdateScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndUpdateScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::FingerTipPokeTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::FingerTipPokeTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_IsFarFieldTool
bool OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.get_EnableState
bool OculusSampleFramework::FingerTipPokeTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.set_EnableState
void OculusSampleFramework::FingerTipPokeTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.Initialize
void OculusSampleFramework::FingerTipPokeTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.FocusOnInteractable
void OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool.DeFocus
void OculusSampleFramework::FingerTipPokeTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21
#include "OculusSampleFramework/FingerTipPokeTool_-AttachTriggerLogic-d__21.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.FingerTipPokeTool <>4__this
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::FingerTipPokeTool*& OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::FingerTipPokeTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.IDisposable.Dispose
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.MoveNext
bool OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.IEnumerator.Reset
void OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeTool/<AttachTriggerLogic>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeTool::$AttachTriggerLogic$d__21*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.FingerTipPokeToolView
#include "OculusSampleFramework/FingerTipPokeToolView.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _sphereMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn__sphereMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sphereMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ToolActivateState>k__BackingField
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$ToolActivateState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ToolActivateState>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <SphereRadius>k__BackingField
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::dyn_$SphereRadius$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SphereRadius>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_InteractableTool
void OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_EnableState
bool OculusSampleFramework::FingerTipPokeToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_EnableState
void OculusSampleFramework::FingerTipPokeToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_ToolActivateState
bool OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_ToolActivateState
void OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.get_SphereRadius
float OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::get_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.set_SphereRadius
void OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::set_SphereRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SphereRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.Awake
void OculusSampleFramework::FingerTipPokeToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.FingerTipPokeToolView.SetFocusedInteractable
void OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::FingerTipPokeToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::FingerTipPokeToolView*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags None
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags None
void OculusSampleFramework::InteractableToolTags::_set_None(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Ray
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Ray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Ray"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Ray
void OculusSampleFramework::InteractableToolTags::_set_Ray(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Ray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Ray", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags Poke
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_Poke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_Poke");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "Poke"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags Poke
void OculusSampleFramework::InteractableToolTags::_set_Poke(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_Poke");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "Poke", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.InteractableToolTags All
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableToolTags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::InteractableToolTags>("OculusSampleFramework", "InteractableToolTags", "All"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.InteractableToolTags All
void OculusSampleFramework::InteractableToolTags::_set_All(::OculusSampleFramework::InteractableToolTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "InteractableToolTags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::InteractableToolTags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolTags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState Inactive
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState Inactive
void OculusSampleFramework::ToolInputState::_set_Inactive(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDown
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDown(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputDownStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputDownStay
void OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputDownStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputDownStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
::OculusSampleFramework::ToolInputState OculusSampleFramework::ToolInputState::_get_PrimaryInputUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_get_PrimaryInputUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::ToolInputState>("OculusSampleFramework", "ToolInputState", "PrimaryInputUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.ToolInputState PrimaryInputUp
void OculusSampleFramework::ToolInputState::_set_PrimaryInputUp(::OculusSampleFramework::ToolInputState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::_set_PrimaryInputUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "ToolInputState", "PrimaryInputUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::ToolInputState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::ToolInputState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.ColliderZone InteractableCollider
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::ColliderZone*& OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_InteractableCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InteractableCollider"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::ColliderZone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableCollisionDepth CollisionDepth
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableCollisionDepth& OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollisionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollisionDepth"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableCollisionDepth*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusSampleFramework.InteractableTool CollidingTool
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableCollisionInfo::dyn_CollidingTool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollidingTool"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRightHandedTool>k__BackingField
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$IsRightHandedTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRightHandedTool>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <Velocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$Velocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Velocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <InteractionPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn_$InteractionPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractionPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<OculusSampleFramework.InteractableCollisionInfo> _currentIntersectingObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currentIntersectingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentIntersectingObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _addedInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__addedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__addedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _removedInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__removedInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__removedInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removedInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OculusSampleFramework.Interactable> _remainingInteractables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>*& OculusSampleFramework::InteractableTool::dyn__remainingInteractables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__remainingInteractables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remainingInteractables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OculusSampleFramework::Interactable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _currInteractableToCollisionInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__currInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<OculusSampleFramework.Interactable,OculusSampleFramework.InteractableCollisionInfo> _prevInteractableToCollisionInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>*& OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::dyn__prevInteractableToCollisionInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevInteractableToCollisionInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTransform
::UnityEngine::Transform* OculusSampleFramework::InteractableTool::get_ToolTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ToolTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsRightHandedTool
bool OculusSampleFramework::InteractableTool::get_IsRightHandedTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_IsRightHandedTool
void OculusSampleFramework::InteractableTool::set_IsRightHandedTool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_IsRightHandedTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRightHandedTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::InteractableTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::InteractableTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_IsFarFieldTool
bool OculusSampleFramework::InteractableTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_Velocity
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_Velocity
void OculusSampleFramework::InteractableTool::set_Velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_InteractionPosition
::UnityEngine::Vector3 OculusSampleFramework::InteractableTool::get_InteractionPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_InteractionPosition
void OculusSampleFramework::InteractableTool::set_InteractionPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_InteractionPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractionPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetCurrentIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetCurrentIntersectingObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::InteractableTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.FocusOnInteractable
void OculusSampleFramework::InteractableTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.DeFocus
void OculusSampleFramework::InteractableTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.get_EnableState
bool OculusSampleFramework::InteractableTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.set_EnableState
void OculusSampleFramework::InteractableTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.Initialize
void OculusSampleFramework::InteractableTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.GetFirstCurrentCollisionInfo
::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*> OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::GetFirstCurrentCollisionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstCurrentCollisionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::OculusSampleFramework::Interactable*, ::OculusSampleFramework::InteractableCollisionInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.ClearAllCurrentCollisionInfos
void OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::ClearAllCurrentCollisionInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllCurrentCollisionInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateCurrentCollisionsBasedOnDepth
void OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateCurrentCollisionsBasedOnDepth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableTool.UpdateLatestCollisionData
void OculusSampleFramework::InteractableTool::UpdateLatestCollisionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableTool::UpdateLatestCollisionData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.InteractableToolView
#include "OculusSampleFramework/InteractableToolView.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::InteractableToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.SetFocusedInteractable
void OculusSampleFramework::InteractableToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_EnableState
bool OculusSampleFramework::InteractableToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_EnableState
void OculusSampleFramework::InteractableToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.get_ToolActivateState
bool OculusSampleFramework::InteractableToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.InteractableToolView.set_ToolActivateState
void OculusSampleFramework::InteractableToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::InteractableToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableToolView*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single PINCH_STRENGTH_THRESHOLD
float OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_get_PINCH_STRENGTH_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single PINCH_STRENGTH_THRESHOLD
void OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::_set_PINCH_STRENGTH_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule", "PINCH_STRENGTH_THRESHOLD", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule/PinchState _currPinchState
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PinchStateModule::PinchState& OculusSampleFramework::PinchStateModule::dyn__currPinchState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__currPinchState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currPinchState"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule::PinchState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _firstFocusedInteractable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::dyn__firstFocusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFocusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchUpAndDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchUpAndDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchUpAndDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchSteadyOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchSteadyOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchSteadyOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.get_PinchDownOnFocusedObject
bool OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::get_PinchDownOnFocusedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PinchDownOnFocusedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.PinchStateModule.UpdateState
void OculusSampleFramework::PinchStateModule::UpdateState(::GlobalNamespace::OVRHand* hand, ::OculusSampleFramework::Interactable* currFocusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(currFocusedInteractable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, currFocusedInteractable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.PinchStateModule/PinchState
#include "OculusSampleFramework/PinchStateModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState None
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState None
void OculusSampleFramework::PinchStateModule::PinchState::_set_None(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchDown
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchDown
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchDown", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchStay
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchStay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchStay
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchStay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchStay", value));
}
// Autogenerated static field getter
// Get static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchUp
::OculusSampleFramework::PinchStateModule::PinchState OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_get_PinchUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OculusSampleFramework::PinchStateModule::PinchState>("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp"));
}
// Autogenerated static field setter
// Set static field: static public OculusSampleFramework.PinchStateModule/PinchState PinchUp
void OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp(::OculusSampleFramework::PinchStateModule::PinchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::_set_PinchUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "PinchStateModule/PinchState", "PinchUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OculusSampleFramework::PinchStateModule::PinchState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::PinchStateModule::PinchState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayTool
#include "OculusSampleFramework/RayTool.hpp"
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: OculusSampleFramework.PinchStateModule
#include "OculusSampleFramework/PinchStateModule.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OculusSampleFramework.InteractableToolTags
#include "OculusSampleFramework/InteractableToolTags.hpp"
// Including type: OculusSampleFramework.ToolInputState
#include "OculusSampleFramework/ToolInputState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OculusSampleFramework.InteractableCollisionInfo
#include "OculusSampleFramework/InteractableCollisionInfo.hpp"
// Including type: OculusSampleFramework.ColliderZone
#include "OculusSampleFramework/ColliderZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
float OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_MINIMUM_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MINIMUM_RAY_CAST_DISTANCE
void OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_MINIMUM_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "MINIMUM_RAY_CAST_DISTANCE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single COLLIDER_RADIUS
float OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_COLLIDER_RADIUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single COLLIDER_RADIUS
void OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_COLLIDER_RADIUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "COLLIDER_RADIUS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_PRIMARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_PRIMARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_PRIMARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_PRIMARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
int OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_MAX_SECONDARY_HITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_MAX_SECONDARY_HITS
void OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_MAX_SECONDARY_HITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_MAX_SECONDARY_HITS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
int OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_get_NUM_COLLIDERS_TO_TEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_COLLIDERS_TO_TEST
void OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::_set_NUM_COLLIDERS_TO_TEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayTool", "NUM_COLLIDERS_TO_TEST", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.RayToolView _rayToolView
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::RayToolView*& OculusSampleFramework::RayTool::dyn__rayToolView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__rayToolView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rayToolView"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::RayToolView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleDegrees
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__coneAngleDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _farFieldMaxDistance
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__farFieldMaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__farFieldMaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_farFieldMaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.PinchStateModule _pinchStateModule
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::PinchStateModule*& OculusSampleFramework::RayTool::dyn__pinchStateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__pinchStateModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinchStateModule"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::PinchStateModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _focusedInteractable
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__focusedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__focusedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedInteractable"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _collidersOverlapped
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__collidersOverlapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__collidersOverlapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collidersOverlapped"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.Interactable _currInteractableCastedAgainst
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::Interactable*& OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__currInteractableCastedAgainst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currInteractableCastedAgainst"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _coneAngleReleaseDegrees
[[deprecated("Use field access instead!")]] float& OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__coneAngleReleaseDegrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coneAngleReleaseDegrees"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] _primaryHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& OculusSampleFramework::RayTool::dyn__primaryHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__primaryHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] _secondaryOverlapResults
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OculusSampleFramework::RayTool::dyn__secondaryOverlapResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__secondaryOverlapResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryOverlapResults"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::RayTool::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayTool.OnDestroy
void OculusSampleFramework::RayTool::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.Update
void OculusSampleFramework::RayTool::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetRayCastOrigin
::UnityEngine::Vector3 OculusSampleFramework::RayTool::GetRayCastOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetRayCastOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRayCastOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.HasRayReleasedInteractable
bool OculusSampleFramework::RayTool::HasRayReleasedInteractable(::OculusSampleFramework::Interactable* focusedInteractable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::HasRayReleasedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRayReleasedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focusedInteractable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, focusedInteractable);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindTargetInteractable
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindTargetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindTargetInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindPrimaryRaycastHit
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindPrimaryRaycastHit(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindPrimaryRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPrimaryRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.FindInteractableViaConeTest
::OculusSampleFramework::Interactable* OculusSampleFramework::RayTool::FindInteractableViaConeTest(::UnityEngine::Vector3 rayOrigin, ::UnityEngine::Vector3 rayDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FindInteractableViaConeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindInteractableViaConeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rayOrigin), ::il2cpp_utils::ExtractType(rayDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::Interactable*, false>(this, ___internal__method, rayOrigin, rayDirection);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolTags
::OculusSampleFramework::InteractableToolTags OculusSampleFramework::RayTool::get_ToolTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolTags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableToolTags, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_ToolInputState
::OculusSampleFramework::ToolInputState OculusSampleFramework::RayTool::get_ToolInputState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_ToolInputState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::ToolInputState, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_IsFarFieldTool
bool OculusSampleFramework::RayTool::get_IsFarFieldTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_IsFarFieldTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.get_EnableState
bool OculusSampleFramework::RayTool::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.set_EnableState
void OculusSampleFramework::RayTool::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayTool.Initialize
void OculusSampleFramework::RayTool::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.GetNextIntersectingObjects
::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>* OculusSampleFramework::RayTool::GetNextIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::GetNextIntersectingObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::OculusSampleFramework::InteractableCollisionInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayTool.FocusOnInteractable
void OculusSampleFramework::RayTool::FocusOnInteractable(::OculusSampleFramework::Interactable* focusedInteractable, ::OculusSampleFramework::ColliderZone* colliderZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::FocusOnInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focusedInteractable, colliderZone);
}
// Autogenerated method: OculusSampleFramework.RayTool.DeFocus
void OculusSampleFramework::RayTool::DeFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayTool::DeFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::InteractableTool*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSampleFramework.RayToolView
#include "OculusSampleFramework/RayToolView.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OculusSampleFramework.InteractableTool
#include "OculusSampleFramework/InteractableTool.hpp"
// Including type: OculusSampleFramework.Interactable
#include "OculusSampleFramework/Interactable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
int OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_NUM_RAY_LINE_POSITIONS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_RAY_LINE_POSITIONS
void OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_NUM_RAY_LINE_POSITIONS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "NUM_RAY_LINE_POSITIONS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
float OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_get_DEFAULT_RAY_CAST_DISTANCE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single DEFAULT_RAY_CAST_DISTANCE
void OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::_set_DEFAULT_RAY_CAST_DISTANCE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OculusSampleFramework", "RayToolView", "DEFAULT_RAY_CAST_DISTANCE", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& OculusSampleFramework::RayToolView::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _toolActivateState
[[deprecated("Use field access instead!")]] bool& OculusSampleFramework::RayToolView::dyn__toolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__toolActivateState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toolActivateState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _focusedTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OculusSampleFramework::RayToolView::dyn__focusedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__focusedTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_focusedTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] linePositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& OculusSampleFramework::RayToolView::dyn_linePositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_linePositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _oldColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__oldColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__oldColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _highLightColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& OculusSampleFramework::RayToolView::dyn__highLightColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn__highLightColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highLightColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusSampleFramework.InteractableTool <InteractableTool>k__BackingField
[[deprecated("Use field access instead!")]] ::OculusSampleFramework::InteractableTool*& OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::dyn_$InteractableTool$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InteractableTool>k__BackingField"))->offset;
  return *reinterpret_cast<::OculusSampleFramework::InteractableTool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_EnableState
bool OculusSampleFramework::RayToolView::get_EnableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_EnableState
void OculusSampleFramework::RayToolView::set_EnableState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_EnableState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_ToolActivateState
bool OculusSampleFramework::RayToolView::get_ToolActivateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_ToolActivateState
void OculusSampleFramework::RayToolView::set_ToolActivateState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_ToolActivateState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Awake
void OculusSampleFramework::RayToolView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.get_InteractableTool
::OculusSampleFramework::InteractableTool* OculusSampleFramework::RayToolView::get_InteractableTool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::get_InteractableTool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::OculusSampleFramework::InteractableTool*, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.set_InteractableTool
void OculusSampleFramework::RayToolView::set_InteractableTool(::OculusSampleFramework::InteractableTool* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::set_InteractableTool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InteractableTool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusSampleFramework.RayToolView.SetFocusedInteractable
void OculusSampleFramework::RayToolView::SetFocusedInteractable(::OculusSampleFramework::Interactable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::SetFocusedInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OculusSampleFramework::RayToolView*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: OculusSampleFramework.RayToolView.Update
void OculusSampleFramework::RayToolView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSampleFramework.RayToolView.GetPointOnBezierCurve
::UnityEngine::Vector3 OculusSampleFramework::RayToolView::GetPointOnBezierCurve(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OculusSampleFramework::RayToolView::GetPointOnBezierCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OculusSampleFramework", "RayToolView", "GetPointOnBezierCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.Hand
#include "OVRTouchSample/Hand.hpp"
// Including type: OVRTouchSample.Hand/<>c
#include "OVRTouchSample/Hand_--c.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: OVRTouchSample.HandPose
#include "OVRTouchSample/HandPose.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String ANIM_LAYER_NAME_POINT
::StringW OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_POINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_POINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_POINT"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_LAYER_NAME_POINT
void OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_POINT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_POINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_POINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_LAYER_NAME_THUMB
::StringW OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_THUMB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_LAYER_NAME_THUMB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_THUMB"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_LAYER_NAME_THUMB
void OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_THUMB(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_LAYER_NAME_THUMB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_LAYER_NAME_THUMB", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_PARAM_NAME_FLEX
::StringW OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_FLEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_FLEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_FLEX"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_PARAM_NAME_FLEX
void OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_FLEX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_FLEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_FLEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ANIM_PARAM_NAME_POSE
::StringW OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_POSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_ANIM_PARAM_NAME_POSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_POSE"));
}
// Autogenerated static field setter
// Set static field: static public System.String ANIM_PARAM_NAME_POSE
void OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_POSE(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_ANIM_PARAM_NAME_POSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "ANIM_PARAM_NAME_POSE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single THRESH_COLLISION_FLEX
float OVRTouchSample::Hand::_get_THRESH_COLLISION_FLEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_THRESH_COLLISION_FLEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "THRESH_COLLISION_FLEX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single THRESH_COLLISION_FLEX
void OVRTouchSample::Hand::_set_THRESH_COLLISION_FLEX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_THRESH_COLLISION_FLEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "THRESH_COLLISION_FLEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single INPUT_RATE_CHANGE
float OVRTouchSample::Hand::_get_INPUT_RATE_CHANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_INPUT_RATE_CHANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "INPUT_RATE_CHANGE"));
}
// Autogenerated static field setter
// Set static field: static public System.Single INPUT_RATE_CHANGE
void OVRTouchSample::Hand::_set_INPUT_RATE_CHANGE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_INPUT_RATE_CHANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "INPUT_RATE_CHANGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single COLLIDER_SCALE_MIN
float OVRTouchSample::Hand::_get_COLLIDER_SCALE_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_COLLIDER_SCALE_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "COLLIDER_SCALE_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single COLLIDER_SCALE_MIN
void OVRTouchSample::Hand::_set_COLLIDER_SCALE_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_COLLIDER_SCALE_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "COLLIDER_SCALE_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single COLLIDER_SCALE_MAX
float OVRTouchSample::Hand::_get_COLLIDER_SCALE_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_COLLIDER_SCALE_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "COLLIDER_SCALE_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single COLLIDER_SCALE_MAX
void OVRTouchSample::Hand::_set_COLLIDER_SCALE_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_COLLIDER_SCALE_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "COLLIDER_SCALE_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single COLLIDER_SCALE_PER_SECOND
float OVRTouchSample::Hand::_get_COLLIDER_SCALE_PER_SECOND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_COLLIDER_SCALE_PER_SECOND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "COLLIDER_SCALE_PER_SECOND"));
}
// Autogenerated static field setter
// Set static field: static public System.Single COLLIDER_SCALE_PER_SECOND
void OVRTouchSample::Hand::_set_COLLIDER_SCALE_PER_SECOND(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_COLLIDER_SCALE_PER_SECOND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "COLLIDER_SCALE_PER_SECOND", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single TRIGGER_DEBOUNCE_TIME
float OVRTouchSample::Hand::_get_TRIGGER_DEBOUNCE_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_TRIGGER_DEBOUNCE_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "TRIGGER_DEBOUNCE_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Single TRIGGER_DEBOUNCE_TIME
void OVRTouchSample::Hand::_set_TRIGGER_DEBOUNCE_TIME(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_TRIGGER_DEBOUNCE_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "TRIGGER_DEBOUNCE_TIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single THUMB_DEBOUNCE_TIME
float OVRTouchSample::Hand::_get_THUMB_DEBOUNCE_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_get_THUMB_DEBOUNCE_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("OVRTouchSample", "Hand", "THUMB_DEBOUNCE_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Single THUMB_DEBOUNCE_TIME
void OVRTouchSample::Hand::_set_THUMB_DEBOUNCE_TIME(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::_set_THUMB_DEBOUNCE_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand", "THUMB_DEBOUNCE_TIME", value));
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& OVRTouchSample::Hand::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& OVRTouchSample::Hand::dyn_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTouchSample.HandPose m_defaultGrabPose
[[deprecated("Use field access instead!")]] ::OVRTouchSample::HandPose*& OVRTouchSample::Hand::dyn_m_defaultGrabPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_defaultGrabPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultGrabPose"))->offset;
  return *reinterpret_cast<::OVRTouchSample::HandPose**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] m_colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& OVRTouchSample::Hand::dyn_m_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_collisionEnabled
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_collisionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_collisionEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_collisionEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRGrabber m_grabber
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRGrabber*& OVRTouchSample::Hand::dyn_m_grabber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_grabber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_grabber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRGrabber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> m_showAfterInputFocusAcquired
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& OVRTouchSample::Hand::dyn_m_showAfterInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_showAfterInputFocusAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showAfterInputFocusAcquired"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animLayerIndexThumb
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animLayerIndexThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animLayerIndexThumb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animLayerIndexThumb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animLayerIndexPoint
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animLayerIndexPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animLayerIndexPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animLayerIndexPoint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animParamIndexFlex
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animParamIndexFlex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animParamIndexFlex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animParamIndexFlex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animParamIndexPose
[[deprecated("Use field access instead!")]] int& OVRTouchSample::Hand::dyn_m_animParamIndexPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_animParamIndexPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animParamIndexPose"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isPointing
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_isPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_isPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isGivingThumbsUp
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_isGivingThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_isGivingThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isGivingThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_pointBlend
[[deprecated("Use field access instead!")]] float& OVRTouchSample::Hand::dyn_m_pointBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_pointBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pointBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_thumbsUpBlend
[[deprecated("Use field access instead!")]] float& OVRTouchSample::Hand::dyn_m_thumbsUpBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_thumbsUpBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_thumbsUpBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::Hand::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_collisionScaleCurrent
[[deprecated("Use field access instead!")]] float& OVRTouchSample::Hand::dyn_m_collisionScaleCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::dyn_m_collisionScaleCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_collisionScaleCurrent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.Hand.Awake
void OVRTouchSample::Hand::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.Start
void OVRTouchSample::Hand::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnDestroy
void OVRTouchSample::Hand::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.Update
void OVRTouchSample::Hand::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.UpdateCapTouchStates
void OVRTouchSample::Hand::UpdateCapTouchStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::UpdateCapTouchStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCapTouchStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.LateUpdate
void OVRTouchSample::Hand::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnInputFocusLost
void OVRTouchSample::Hand::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.OnInputFocusAcquired
void OVRTouchSample::Hand::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.InputValueRateChange
float OVRTouchSample::Hand::InputValueRateChange(bool isDown, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::InputValueRateChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputValueRateChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDown), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, isDown, value);
}
// Autogenerated method: OVRTouchSample.Hand.UpdateAnimStates
void OVRTouchSample::Hand::UpdateAnimStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::UpdateAnimStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnimStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand.CollisionEnable
void OVRTouchSample::Hand::CollisionEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::CollisionEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollisionEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.Hand/<>c
#include "OVRTouchSample/Hand_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRTouchSample.Hand/<>c <>9
::OVRTouchSample::Hand::$$c* OVRTouchSample::Hand::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVRTouchSample::Hand::$$c*>("OVRTouchSample", "Hand/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRTouchSample.Hand/<>c <>9
void OVRTouchSample::Hand::$$c::_set_$$9(::OVRTouchSample::Hand::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__28_0
::System::Func_2<::UnityEngine::Collider*, bool>* OVRTouchSample::Hand::$$c::_get_$$9__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_get_$$9__28_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Collider*, bool>*>("OVRTouchSample", "Hand/<>c", "<>9__28_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__28_0
void OVRTouchSample::Hand::$$c::_set_$$9__28_0(::System::Func_2<::UnityEngine::Collider*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::_set_$$9__28_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVRTouchSample", "Hand/<>c", "<>9__28_0", value)));
}
// Autogenerated method: OVRTouchSample.Hand/<>c..cctor
void OVRTouchSample::Hand::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRTouchSample", "Hand/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchSample.Hand/<>c.<Start>b__28_0
bool OVRTouchSample::Hand::$$c::$Start$b__28_0(::UnityEngine::Collider* childCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::Hand::$$c::<Start>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childCollider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, childCollider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.HandPoseId
#include "OVRTouchSample/HandPoseId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Default
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Default
void OVRTouchSample::HandPoseId::_set_Default(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Generic
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Generic
void OVRTouchSample::HandPoseId::_set_Generic(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Generic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId PingPongBall
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_PingPongBall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_PingPongBall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "PingPongBall"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId PingPongBall
void OVRTouchSample::HandPoseId::_set_PingPongBall(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_PingPongBall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "PingPongBall", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchSample.HandPoseId Controller
::OVRTouchSample::HandPoseId OVRTouchSample::HandPoseId::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRTouchSample::HandPoseId>("OVRTouchSample", "HandPoseId", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchSample.HandPoseId Controller
void OVRTouchSample::HandPoseId::_set_Controller(::OVRTouchSample::HandPoseId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRTouchSample", "HandPoseId", "Controller", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVRTouchSample::HandPoseId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPoseId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.HandPose
#include "OVRTouchSample/HandPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowPointing
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::HandPose::dyn_m_allowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_allowPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_allowThumbsUp
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::HandPose::dyn_m_allowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_allowThumbsUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowThumbsUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRTouchSample.HandPoseId m_poseId
[[deprecated("Use field access instead!")]] ::OVRTouchSample::HandPoseId& OVRTouchSample::HandPose::dyn_m_poseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::dyn_m_poseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poseId"))->offset;
  return *reinterpret_cast<::OVRTouchSample::HandPoseId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.HandPose.get_AllowPointing
bool OVRTouchSample::HandPose::get_AllowPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_AllowPointing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowPointing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.HandPose.get_AllowThumbsUp
bool OVRTouchSample::HandPose::get_AllowThumbsUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_AllowThumbsUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowThumbsUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.HandPose.get_PoseId
::OVRTouchSample::HandPoseId OVRTouchSample::HandPose::get_PoseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::HandPose::get_PoseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PoseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRTouchSample::HandPoseId, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchSample.TouchController
#include "OVRTouchSample/TouchController.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller m_controller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& OVRTouchSample::TouchController::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator m_animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& OVRTouchSample::TouchController::dyn_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
[[deprecated("Use field access instead!")]] bool& OVRTouchSample::TouchController::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRTouchSample.TouchController.Update
void OVRTouchSample::TouchController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.TouchController.OnInputFocusLost
void OVRTouchSample::TouchController::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchSample.TouchController.OnInputFocusAcquired
void OVRTouchSample::TouchController::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRTouchSample::TouchController::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.TestScript
#include "OVR/TestScript.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound1
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound1"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound2
[[deprecated("Use field access instead!")]] ::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound2"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.TestScript.Start
void OVR::TestScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.TestScript.Update
void OVR::TestScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AmbienceEmitter
#include "OVR/AmbienceEmitter.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef[] ambientSounds
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundFXRef*>& OVR::AmbienceEmitter::dyn_ambientSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_ambientSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFXRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoActivate
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_autoActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoRetrigger
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_autoRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRetrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 randomRetriggerDelaySecs
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomRetriggerDelaySecs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] playPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& OVR::AmbienceEmitter::dyn_playPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean activated
[[deprecated("Use field access instead!")]] bool& OVR::AmbienceEmitter::dyn_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_activated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated("Use field access instead!")]] int& OVR::AmbienceEmitter::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPlayTime
[[deprecated("Use field access instead!")]] float& OVR::AmbienceEmitter::dyn_nextPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_nextPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::AmbienceEmitter::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPosIdx
[[deprecated("Use field access instead!")]] int& OVR::AmbienceEmitter::dyn_lastPosIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_lastPosIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AmbienceEmitter.Awake
void OVR::AmbienceEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.Update
void OVR::AmbienceEmitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.OnTriggerEnter
void OVR::AmbienceEmitter::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: OVR.AmbienceEmitter.Play
void OVR::AmbienceEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.EnableEmitter
void OVR::AmbienceEmitter::EnableEmitter(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::EnableEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.PreloadSounds
#include "OVR/PreloadSounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Default
::OVR::PreloadSounds OVR::PreloadSounds::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Default
void OVR::PreloadSounds::_set_Default(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Preload
::OVR::PreloadSounds OVR::PreloadSounds::_get_Preload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Preload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Preload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Preload
void OVR::PreloadSounds::_set_Preload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Preload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Preload", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds ManualPreload
::OVR::PreloadSounds OVR::PreloadSounds::_get_ManualPreload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_ManualPreload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "ManualPreload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds ManualPreload
void OVR::PreloadSounds::_set_ManualPreload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_ManualPreload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "ManualPreload", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::PreloadSounds::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.Fade In
::OVR::Fade OVR::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade In
void OVR::Fade::_set_In(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.Fade Out
::OVR::Fade OVR::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade Out
void OVR::Fade::_set_Out(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundGroup::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFX[] soundList
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundFX*>& OVR::SoundGroup::dyn_soundList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_soundList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundList"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFX*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup mixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::SoundGroup::dyn_mixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_mixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayingSounds
[[deprecated("Use field access instead!")]] int& OVR::SoundGroup::dyn_maxPlayingSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_maxPlayingSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayingSounds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.PreloadSounds preloadAudio
[[deprecated("Use field access instead!")]] ::OVR::PreloadSounds& OVR::SoundGroup::dyn_preloadAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_preloadAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preloadAudio"))->offset;
  return *reinterpret_cast<::OVR::PreloadSounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeOverride
[[deprecated("Use field access instead!")]] float& OVR::SoundGroup::dyn_volumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_volumeOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playingSoundCount
[[deprecated("Use field access instead!")]] int& OVR::SoundGroup::dyn_playingSoundCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_playingSoundCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundGroup.IncrementPlayCount
void OVR::SoundGroup::IncrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::IncrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.DecrementPlayCount
void OVR::SoundGroup::DecrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::DecrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.CanPlaySound
bool OVR::SoundGroup::CanPlaySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::CanPlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.AudioManager
#include "OVR/AudioManager.hpp"
// Including type: OVR.AudioManager/Fade
#include "OVR/AudioManager_Fade.hpp"
// Including type: OVR.AudioManager/<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.AudioManager/<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: FastList`1
#include "GlobalNamespace/FastList_1.hpp"
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVR.AudioManager theAudioManager
::OVR::AudioManager* OVR::AudioManager::_get_theAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_theAudioManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager*>("OVR", "AudioManager", "theAudioManager"));
}
// Autogenerated static field setter
// Set static field: static private OVR.AudioManager theAudioManager
void OVR::AudioManager::_set_theAudioManager(::OVR::AudioManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_theAudioManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "theAudioManager", value));
}
// Autogenerated static field getter
// Get static field: static private FastList`1<System.String> names
::GlobalNamespace::FastList_1<::StringW>* OVR::AudioManager::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FastList_1<::StringW>*>("OVR", "AudioManager", "names"));
}
// Autogenerated static field setter
// Set static field: static private FastList`1<System.String> names
void OVR::AudioManager::_set_names(::GlobalNamespace::FastList_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "names", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] defaultSound
::ArrayW<::StringW> OVR::AudioManager::_get_defaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("OVR", "AudioManager", "defaultSound"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] defaultSound
void OVR::AudioManager::_set_defaultSound(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultSound", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.SoundFX nullSound
::OVR::SoundFX* OVR::AudioManager::_get_nullSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_nullSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFX*>("OVR", "AudioManager", "nullSound"));
}
// Autogenerated static field setter
// Set static field: static private OVR.SoundFX nullSound
void OVR::AudioManager::_set_nullSound(::OVR::SoundFX* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_nullSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "nullSound", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hideWarnings
bool OVR::AudioManager::_get_hideWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_hideWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "hideWarnings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hideWarnings
void OVR::AudioManager::_set_hideWarnings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_hideWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "hideWarnings", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject soundEmitterParent
::UnityEngine::GameObject* OVR::AudioManager::_get_soundEmitterParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEmitterParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("OVR", "AudioManager", "soundEmitterParent"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject soundEmitterParent
void OVR::AudioManager::_set_soundEmitterParent(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEmitterParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEmitterParent", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform staticListenerPosition
::UnityEngine::Transform* OVR::AudioManager::_get_staticListenerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_staticListenerPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("OVR", "AudioManager", "staticListenerPosition"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform staticListenerPosition
void OVR::AudioManager::_set_staticListenerPosition(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_staticListenerPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "staticListenerPosition", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean showPlayingEmitterCount
bool OVR::AudioManager::_get_showPlayingEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_showPlayingEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "showPlayingEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean showPlayingEmitterCount
void OVR::AudioManager::_set_showPlayingEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_showPlayingEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "showPlayingEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean forceShowEmitterCount
bool OVR::AudioManager::_get_forceShowEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_forceShowEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "forceShowEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean forceShowEmitterCount
void OVR::AudioManager::_set_forceShowEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_forceShowEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "forceShowEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean soundEnabled
bool OVR::AudioManager::_get_soundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "soundEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean soundEnabled
void OVR::AudioManager::_set_soundEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
::UnityEngine::AnimationCurve* OVR::AudioManager::_get_defaultReverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultReverbZoneMix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCurve*>("OVR", "AudioManager", "defaultReverbZoneMix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
void OVR::AudioManager::_set_defaultReverbZoneMix(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultReverbZoneMix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultReverbZoneMix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean makePersistent
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_makePersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_makePersistent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makePersistent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedAudio
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_enableSpatializedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedFastOverride
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_enableSpatializedFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixer audioMixer
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixer*& OVR::AudioManager::dyn_audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup defaultMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_defaultMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_defaultMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup reservedMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_reservedMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_reservedMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reservedMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup voiceChatMixerGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_voiceChatMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_voiceChatMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceChatMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean verboseLogging
[[deprecated("Use field access instead!")]] bool& OVR::AudioManager::dyn_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_verboseLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verboseLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxSoundEmitters
[[deprecated("Use field access instead!")]] int& OVR::AudioManager::dyn_maxSoundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_maxSoundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSoundEmitters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeSoundFX
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_volumeSoundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_volumeSoundFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeSoundFX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single soundFxFadeSecs
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_soundFxFadeSecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFxFadeSecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFxFadeSecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMinFallOffDistance
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMinFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMinFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMinFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMaxFallOffDistance
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMaxFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup[] soundGroupings
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundGroup*>& OVR::AudioManager::dyn_soundGroupings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundGroupings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroupings"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVR.SoundFX> soundFXCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>*& OVR::AudioManager::dyn_soundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFXCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single audioMaxFallOffDistanceSqr
[[deprecated("Use field access instead!")]] float& OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistanceSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter[] soundEmitters
[[deprecated("Use field access instead!")]] ::ArrayW<::OVR::SoundEmitter*>& OVR::AudioManager::dyn_soundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEmitters"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundEmitter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> playingEmitters
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_playingEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_playingEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> nextFreeEmitters
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_nextFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_nextFreeEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreeEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.MixerSnapshot currentSnapshot
[[deprecated("Use field access instead!")]] ::OVR::MixerSnapshot*& OVR::AudioManager::dyn_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_currentSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSnapshot"))->offset;
  return *reinterpret_cast<::OVR::MixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager.get_enableSpatialization
bool OVR::AudioManager::get_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_enableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_enableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_Instance
::OVR::AudioManager* OVR::AudioManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::AudioManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_NearFallOff
float OVR::AudioManager::get_NearFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_NearFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_NearFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_FarFallOff
float OVR::AudioManager::get_FarFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_FarFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_FarFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_EmitterGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_EmitterGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_EmitterGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_EmitterGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_ReservedGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_ReservedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_ReservedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_ReservedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_VoipGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_VoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_VoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Awake
void OVR::AudioManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.OnDestroy
void OVR::AudioManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Init
void OVR::AudioManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Update
void OVR::AudioManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.RebuildSoundFXCache
void OVR::AudioManager::RebuildSoundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::RebuildSoundFXCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSoundFXCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FindSoundFX
::OVR::SoundFX* OVR::AudioManager::FindSoundFX(::StringW name, bool rebuildCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindSoundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindSoundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(rebuildCache)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, rebuildCache);
}
// Autogenerated method: OVR.AudioManager.FindAudioManager
bool OVR::AudioManager::FindAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindAudioManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindAudioManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.GetGameObject
::UnityEngine::GameObject* OVR::AudioManager::GetGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.NameMinusGroup
::StringW OVR::AudioManager::NameMinusGroup(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::NameMinusGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "NameMinusGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: OVR.AudioManager.GetSoundFXNames
::ArrayW<::StringW> OVR::AudioManager::GetSoundFXNames(::StringW currentValue, ByRef<int> currentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetSoundFXNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetSoundFXNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentValue, byref(currentIdx));
}
// Autogenerated method: OVR.AudioManager.get_SoundEnabled
bool OVR::AudioManager::get_SoundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_SoundEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_SoundEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.CalculateMaxEmittersSize
int OVR::AudioManager::CalculateMaxEmittersSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::CalculateMaxEmittersSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "CalculateMaxEmittersSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ValidateEmitterIndex
bool OVR::AudioManager::ValidateEmitterIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ValidateEmitterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "ValidateEmitterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: OVR.AudioManager.InitializeSoundSystem
void OVR::AudioManager::InitializeSoundSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::InitializeSoundSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSoundSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.UpdateFreeEmitters
void OVR::AudioManager::UpdateFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UpdateFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Fmt
::StringW OVR::AudioManager::Fmt(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fmt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fmt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.FmtFree
::StringW OVR::AudioManager::FmtFree(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FmtFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FmtFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.OnPreSceneLoad
void OVR::AudioManager::OnPreSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnPreSceneLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSceneLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ResetFreeEmitters
void OVR::AudioManager::ResetFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ResetFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FadeOutSoundChannel
void OVR::AudioManager::FadeOutSoundChannel(int channel, float delaySecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, delaySecs, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopSound
bool OVR::AudioManager::StopSound(int idx, bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime, volume);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.FadeOutSound
void OVR::AudioManager::FadeOutSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopAllSounds
void OVR::AudioManager::StopAllSounds(bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.MuteAllSounds
void OVR::AudioManager::MuteAllSounds(bool mute, bool muteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::MuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute), ::il2cpp_utils::ExtractType(muteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute, muteReserved);
}
// Autogenerated method: OVR.AudioManager.UnMuteAllSounds
void OVR::AudioManager::UnMuteAllSounds(bool unmute, bool unmuteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UnMuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnMuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unmute), ::il2cpp_utils::ExtractType(unmuteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unmute, unmuteReserved);
}
// Autogenerated method: OVR.AudioManager.GetEmitterEndTime
float OVR::AudioManager::GetEmitterEndTime(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetEmitterEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetEmitterEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.SetEmitterTime
float OVR::AudioManager::SetEmitterTime(int idx, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, time);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitchVariance, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitchVariance), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, volume, src, delay, pitchVariance, loop);
}
// Autogenerated method: OVR.AudioManager.FindFreeEmitter
int OVR::AudioManager::FindFreeEmitter(::OVR::EmitterChannel src, ::OVR::SoundPriority priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindFreeEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindFreeEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, priority);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundFX, src, delay);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, soundFX, src, delay, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.AudioManager.PlayRandomSoundAt
int OVR::AudioManager::PlayRandomSoundAt(::UnityEngine::Vector3 position, ::ArrayW<::UnityEngine::AudioClip*> clips, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlayRandomSoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlayRandomSoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clips), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clips, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clip, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished, obj);
}
// Autogenerated method: OVR.AudioManager.AttachSoundToParent
void OVR::AudioManager::AttachSoundToParent(int idx, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::AttachSoundToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "AttachSoundToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, parent);
}
// Autogenerated method: OVR.AudioManager.DetachSoundFromParent
void OVR::AudioManager::DetachSoundFromParent(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.DetachSoundsFromParent
void OVR::AudioManager::DetachSoundsFromParent(::ArrayW<::OVR::SoundEmitter*> emitters, bool stopSounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundsFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundsFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitters), ::il2cpp_utils::ExtractType(stopSounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitters, stopSounds);
}
// Autogenerated method: OVR.AudioManager.SetEmitterMixerGroup
void OVR::AudioManager::SetEmitterMixerGroup(int idx, ::UnityEngine::Audio::AudioMixerGroup* mixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(mixerGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, mixerGroup);
}
// Autogenerated method: OVR.AudioManager.GetActiveSnapshot
::OVR::MixerSnapshot* OVR::AudioManager::GetActiveSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetActiveSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetActiveSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::MixerSnapshot*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.SetCurrentSnapshot
void OVR::AudioManager::SetCurrentSnapshot(::OVR::MixerSnapshot* mixerSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixerSnapshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixerSnapshot);
}
// Autogenerated method: OVR.AudioManager.BlendWithCurrentSnapshot
void OVR::AudioManager::BlendWithCurrentSnapshot(::OVR::MixerSnapshot* blendSnapshot, float weight, float blendTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::BlendWithCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "BlendWithCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendSnapshot), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(blendTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blendSnapshot, weight, blendTime);
}
// Autogenerated method: OVR.AudioManager..cctor
void OVR::AudioManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/Fade
#include "OVR/AudioManager_Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/Fade In
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/Fade In
void OVR::AudioManager::Fade::_set_In(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/Fade Out
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/Fade Out
void OVR::AudioManager::Fade::_set_Out(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::AudioManager::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager/<>c__DisplayClass77_0.<FindFreeEmitter>b__0
bool OVR::AudioManager::$$c__DisplayClass77_0::$FindFreeEmitter$b__0(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::<FindFreeEmitter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVR.AudioManager/<>c <>9
::OVR::AudioManager::$$c* OVR::AudioManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVR::AudioManager::$$c*>("OVR", "AudioManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVR.AudioManager/<>c <>9
void OVR::AudioManager::$$c::_set_$$9(::OVR::AudioManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
::System::Predicate_1<::OVR::SoundEmitter*>* OVR::AudioManager::$$c::_get_$$9__77_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9__77_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::OVR::SoundEmitter*>*>("OVR", "AudioManager/<>c", "<>9__77_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
void OVR::AudioManager::$$c::_set_$$9__77_1(::System::Predicate_1<::OVR::SoundEmitter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9__77_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9__77_1", value)));
}
// Autogenerated method: OVR.AudioManager/<>c..cctor
void OVR::AudioManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager/<>c.<FindFreeEmitter>b__77_1
bool OVR::AudioManager::$$c::$FindFreeEmitter$b__77_1(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::<FindFreeEmitter>b__77_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__77_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel None
::OVR::EmitterChannel OVR::EmitterChannel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel None
void OVR::EmitterChannel::_set_None(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Reserved
::OVR::EmitterChannel OVR::EmitterChannel::_get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Reserved
void OVR::EmitterChannel::_set_Reserved(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Any
::OVR::EmitterChannel OVR::EmitterChannel::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Any
void OVR::EmitterChannel::_set_Any(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::EmitterChannel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot snapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& OVR::MixerSnapshot::dyn_snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single transitionTime
[[deprecated("Use field access instead!")]] float& OVR::MixerSnapshot::dyn_transitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_transitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MinMaxAttribute
#include "OVR/MinMaxAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minDefaultVal
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_minDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_minDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDefaultVal
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_maxDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_maxDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated("Use field access instead!")]] float& OVR::MinMaxAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVR.SoundEmitter/<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
// Including type: OVR.SoundEmitter/<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
// Including type: OVR.SoundEmitter/<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioVelocityUpdateMode
#include "UnityEngine/AudioVelocityUpdateMode.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.EmitterChannel channel
[[deprecated("Use field access instead!")]] ::OVR::EmitterChannel& OVR::SoundEmitter::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<::OVR::EmitterChannel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableSpatialization
[[deprecated("Use field access instead!")]] bool& OVR::SoundEmitter::dyn_disableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_disableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter/FadeState state
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter::FadeState& OVR::SoundEmitter::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter::FadeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& OVR::SoundEmitter::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::SoundEmitter::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPAudioSource osp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPAudioSource*& OVR::SoundEmitter::dyn_osp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_osp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endPlayTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::dyn_endPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_endPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lastParentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_lastParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_lastParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform defaultParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& OVR::SoundEmitter::dyn_defaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 originalIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::dyn_originalIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_originalIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onFinished
[[deprecated("Use field access instead!")]] ::System::Action*& OVR::SoundEmitter::dyn_onFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinished"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Object> onFinishedObject
[[deprecated("Use field access instead!")]] ::System::Action_1<::Il2CppObject*>*& OVR::SoundEmitter::dyn_onFinishedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedObject"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object onFinishedParam
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::dyn_onFinishedParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedParam"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup playingSoundGroup
[[deprecated("Use field access instead!")]] ::OVR::SoundGroup*& OVR::SoundEmitter::dyn_playingSoundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_playingSoundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter.get_volume
float OVR::SoundEmitter::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_volume
void OVR::SoundEmitter::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_pitch
float OVR::SoundEmitter::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_pitch
void OVR::SoundEmitter::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_clip
::UnityEngine::AudioClip* OVR::SoundEmitter::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_clip
void OVR::SoundEmitter::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_time
float OVR::SoundEmitter::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_time
void OVR::SoundEmitter::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_length
float OVR::SoundEmitter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.get_loop
bool OVR::SoundEmitter::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_loop
void OVR::SoundEmitter::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_mute
bool OVR::SoundEmitter::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_mute
void OVR::SoundEmitter::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_velocityUpdateMode
::UnityEngine::AudioVelocityUpdateMode OVR::SoundEmitter::get_velocityUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioVelocityUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_velocityUpdateMode
void OVR::SoundEmitter::set_velocityUpdateMode(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_isPlaying
bool OVR::SoundEmitter::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Awake
void OVR::SoundEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.SetPlayingSoundGroup
void OVR::SoundEmitter::SetPlayingSoundGroup(::OVR::SoundGroup* soundGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetPlayingSoundGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayingSoundGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundGroup);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundEmitter.SetChannel
void OVR::SoundEmitter::SetChannel(int _channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _channel);
}
// Autogenerated method: OVR.SoundEmitter.SetDefaultParent
void OVR::SoundEmitter::SetDefaultParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetDefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SetAudioMixer
void OVR::SoundEmitter::SetAudioMixer(::UnityEngine::Audio::AudioMixerGroup* _mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetAudioMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAudioMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_mixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _mixer);
}
// Autogenerated method: OVR.SoundEmitter.IsPlaying
bool OVR::SoundEmitter::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Play
void OVR::SoundEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Pause
void OVR::SoundEmitter::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Stop
void OVR::SoundEmitter::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.GetSampleTime
int OVR::SoundEmitter::GetSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::GetSampleTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ParentTo
void OVR::SoundEmitter::ParentTo(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ParentTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.DetachFromParent
void OVR::SoundEmitter::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ResetParent
void OVR::SoundEmitter::ResetParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ResetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SyncTo
void OVR::SoundEmitter::SyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.DelayedSyncTo
::System::Collections::IEnumerator* OVR::SoundEmitter::DelayedSyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DelayedSyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeTo
void OVR::SoundEmitter::FadeTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(defaultVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, defaultVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOut
void OVR::SoundEmitter::FadeOut(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOutDelayed
void OVR::SoundEmitter::FadeOutDelayed(float delayedSecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOutDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayedSecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delayedSecs, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannelTo
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannelTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannelTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannelTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannel
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannel(float delaySecs, float fadeTime, ::OVR::Fade fadeType, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(fadeType), ::il2cpp_utils::ExtractType(defaultVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delaySecs, fadeTime, fadeType, defaultVolume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundEmitter/FadeState
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState Null
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState Null
void OVR::SoundEmitter::FadeState::_set_Null(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState FadingIn
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState FadingIn
void OVR::SoundEmitter::FadeState::_set_FadingIn(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingIn", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState FadingOut
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState FadingOut
void OVR::SoundEmitter::FadeState::_set_FadingOut(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/FadeState Ducking
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Ducking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Ducking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Ducking"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/FadeState Ducking
void OVR::SoundEmitter::FadeState::_set_Ducking(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Ducking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Ducking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::FadeState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter other
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "other"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.IDisposable.Dispose
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.MoveNext
bool OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<DelayedSyncTo>d__57.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$DelayedSyncTo$d__57*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__4
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__5
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannelTo$d__63*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delaySecs
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delaySecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.Fade fadeType
[[deprecated("Use field access instead!")]] ::OVR::Fade& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeType"))->offset;
  return *reinterpret_cast<::OVR::Fade*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
[[deprecated("Use field access instead!")]] ::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <restartPlay>5__4
[[deprecated("Use field access instead!")]] bool& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<restartPlay>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__5
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__6
[[deprecated("Use field access instead!")]] float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/<FadeSoundChannel>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::OVR::SoundEmitter::$FadeSoundChannel$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundFXNext
#include "OVR/SoundFXNext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Random
::OVR::SoundFXNext OVR::SoundFXNext::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Random"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Random
void OVR::SoundFXNext::_set_Random(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Sequential
::OVR::SoundFXNext OVR::SoundFXNext::_get_Sequential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Sequential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Sequential"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Sequential
void OVR::SoundFXNext::_set_Sequential(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Sequential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Sequential", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundFXNext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.FreqHint
#include "OVR/FreqHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint None
::OVR::FreqHint OVR::FreqHint::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint None
void OVR::FreqHint::_set_None(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Wide
::OVR::FreqHint OVR::FreqHint::_get_Wide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Wide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Wide"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Wide
void OVR::FreqHint::_set_Wide(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Wide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Wide", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Narrow
::OVR::FreqHint OVR::FreqHint::_get_Narrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Narrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Narrow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Narrow
void OVR::FreqHint::_set_Narrow(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Narrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Narrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::FreqHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryLow
::OVR::SoundPriority OVR::SoundPriority::_get_VeryLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryLow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryLow
void OVR::SoundPriority::_set_VeryLow(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Low
::OVR::SoundPriority OVR::SoundPriority::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Low
void OVR::SoundPriority::_set_Low(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Default
::OVR::SoundPriority OVR::SoundPriority::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Default
void OVR::SoundPriority::_set_Default(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority High
::OVR::SoundPriority OVR::SoundPriority::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority High
void OVR::SoundPriority::_set_High(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryHigh
::OVR::SoundPriority OVR::SoundPriority::_get_VeryHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryHigh
void OVR::SoundPriority::_set_VeryHigh(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryHigh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::SoundPriority::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatialization
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFastOverride
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_useFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_useFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated("Use field access instead!")]] float& OVR::OSPProps::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableInvSquare
[[deprecated("Use field access instead!")]] bool& OVR::OSPProps::dyn_enableInvSquare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableInvSquare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableInvSquare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumetric
[[deprecated("Use field access instead!")]] float& OVR::OSPProps::dyn_volumetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_volumetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetric"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 invSquareFalloff
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::OSPProps::dyn_invSquareFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_invSquareFalloff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invSquareFalloff"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundFX::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXNext playback
[[deprecated("Use field access instead!")]] ::OVR::SoundFXNext& OVR::SoundFX::dyn_playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playback"))->offset;
  return *reinterpret_cast<::OVR::SoundFXNext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pitchVariance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_pitchVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pitchVariance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchVariance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 falloffDistance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_falloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioRolloffMode falloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioRolloffMode& OVR::SoundFX::dyn_falloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioRolloffMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve volumeFalloffCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_volumeFalloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volumeFalloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeFalloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve reverbZoneMix
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbZoneMix"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pctChanceToPlay
[[deprecated("Use field access instead!")]] float& OVR::SoundFX::dyn_pctChanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pctChanceToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pctChanceToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
[[deprecated("Use field access instead!")]] ::OVR::SoundPriority& OVR::SoundFX::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 delay
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& OVR::SoundFX::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean looping
[[deprecated("Use field access instead!")]] bool& OVR::SoundFX::dyn_looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_looping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "looping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OSPProps ospProps
[[deprecated("Use field access instead!")]] ::OVR::OSPProps*& OVR::SoundFX::dyn_ospProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_ospProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ospProps"))->offset;
  return *reinterpret_cast<::OVR::OSPProps**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] soundClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& OVR::SoundFX::dyn_soundClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visibilityToggle
[[deprecated("Use field access instead!")]] bool& OVR::SoundFX::dyn_visibilityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_visibilityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibilityToggle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundGroup soundGroup
[[deprecated("Use field access instead!")]] ::OVR::SoundGroup*& OVR::SoundFX::dyn_soundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundFX::dyn_lastIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_lastIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
[[deprecated("Use field access instead!")]] int& OVR::SoundFX::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFX.get_Length
int OVR::SoundFX::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_IsValid
bool OVR::SoundFX::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_Group
::OVR::SoundGroup* OVR::SoundFX::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundGroup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.set_Group
void OVR::SoundFX::set_Group(::OVR::SoundGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFX.get_MaxFalloffDistSquared
float OVR::SoundFX::get_MaxFalloffDistSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_MaxFalloffDistSquared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFalloffDistSquared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_GroupVolumeOverride
float OVR::SoundFX::get_GroupVolumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_GroupVolumeOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupVolumeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClip
::UnityEngine::AudioClip* OVR::SoundFX::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetMixerGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::SoundFX::GetMixerGroup(::UnityEngine::Audio::AudioMixerGroup* defaultMixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultMixerGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(this, ___internal__method, defaultMixerGroup);
}
// Autogenerated method: OVR.SoundFX.ReachedGroupPlayLimit
bool OVR::SoundFX::ReachedGroupPlayLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::ReachedGroupPlayLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedGroupPlayLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClipLength
float OVR::SoundFX::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFX.GetPitch
float OVR::SoundFX::GetPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.PlaySound
int OVR::SoundFX::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFX.PlaySoundAt
int OVR::SoundFX::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFX.StopSound
bool OVR::SoundFX::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.AttachToParent
void OVR::SoundFX::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFX.DetachFromParent
void OVR::SoundFX::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String soundFXName
[[deprecated("Use field access instead!")]] ::StringW& OVR::SoundFXRef::dyn_soundFXName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& OVR::SoundFXRef::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundFX soundFXCached
[[deprecated("Use field access instead!")]] ::OVR::SoundFX*& OVR::SoundFXRef::dyn_soundFXCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCached"))->offset;
  return *reinterpret_cast<::OVR::SoundFX**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFXRef.get_soundFX
::OVR::SoundFX* OVR::SoundFXRef::get_soundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_soundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_name
::StringW OVR::SoundFXRef::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.set_name
void OVR::SoundFXRef::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFXRef.Init
void OVR::SoundFXRef::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_Length
int OVR::SoundFXRef::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_IsValid
bool OVR::SoundFXRef::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClip
::UnityEngine::AudioClip* OVR::SoundFXRef::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClipLength
float OVR::SoundFXRef::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFXRef.PlaySound
int OVR::SoundFXRef::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFXRef.PlaySoundAt
int OVR::SoundFXRef::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volume, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volume, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFXRef.StopSound
bool OVR::SoundFXRef::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.AttachToParent
void OVR::SoundFXRef::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFXRef.DetachFromParent
void OVR::SoundFXRef::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakeryAlwaysRender
#include "GlobalNamespace/BakeryAlwaysRender.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakeryDirectLight
#include "GlobalNamespace/BakeryDirectLight.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 lightsChanged
int GlobalNamespace::BakeryDirectLight::_get_lightsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::_get_lightsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakeryDirectLight", "lightsChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 lightsChanged
void GlobalNamespace::BakeryDirectLight::_set_lightsChanged(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::_set_lightsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryDirectLight", "lightsChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BakeryDirectLight::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shadowSpread
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_shadowSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_shadowSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowSpread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 samples
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryDirectLight::dyn_samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_samples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bitmask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryDirectLight::dyn_bitmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_bitmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitmask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bakeToIndirect
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryDirectLight::dyn_bakeToIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_bakeToIndirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakeToIndirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shadowmask
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryDirectLight::dyn_shadowmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_shadowmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowmask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shadowmaskDenoise
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryDirectLight::dyn_shadowmaskDenoise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_shadowmaskDenoise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadowmaskDenoise"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single indirectIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_indirectIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_indirectIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indirectIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D cloudShadow
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BakeryDirectLight::dyn_cloudShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadow"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowTilingX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowTilingX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowTilingY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowTilingY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowTilingY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowOffsetX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowOffsetX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cloudShadowOffsetY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_cloudShadowOffsetY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudShadowOffsetY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 UID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryDirectLight::dyn_UID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::dyn_UID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakeryDirectLight..cctor
void GlobalNamespace::BakeryDirectLight::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryDirectLight::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakeryDirectLight", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakeryLightMesh
#include "GlobalNamespace/BakeryLightMesh.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 lightsChanged
int GlobalNamespace::BakeryLightMesh::_get_lightsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::_get_lightsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakeryLightMesh", "lightsChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 lightsChanged
void GlobalNamespace::BakeryLightMesh::_set_lightsChanged(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::_set_lightsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakeryLightMesh", "lightsChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 UID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightMesh::dyn_UID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_UID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BakeryLightMesh::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightMesh::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D texture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BakeryLightMesh::dyn_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutoff
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightMesh::dyn_cutoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_cutoff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoff"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 samples
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightMesh::dyn_samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_samples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 samples2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightMesh::dyn_samples2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_samples2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samples2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bitmask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightMesh::dyn_bitmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_bitmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitmask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean selfShadow
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightMesh::dyn_selfShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_selfShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selfShadow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bakeToIndirect
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightMesh::dyn_bakeToIndirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_bakeToIndirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakeToIndirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single indirectIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightMesh::dyn_indirectIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_indirectIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indirectIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lmid
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightMesh::dyn_lmid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::dyn_lmid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lmid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakeryLightMesh.OnDrawGizmosSelected
void GlobalNamespace::BakeryLightMesh::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BakeryLightMesh..cctor
void GlobalNamespace::BakeryLightMesh::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightMesh::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakeryLightMesh", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakeryLightmapGroup
#include "GlobalNamespace/BakeryLightmapGroup.hpp"
// Including type: BakeryLightmapGroupPlain
#include "GlobalNamespace/BakeryLightmapGroupPlain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 resolution
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolution"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bitmask
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_bitmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_bitmask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitmask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortingID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_sortingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sortingID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortingID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isImplicit
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_isImplicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_isImplicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isImplicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single area
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_area() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_area");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "area"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 totalVertexCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_totalVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_totalVertexCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalVertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 vertexCounter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_vertexCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_vertexCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertexCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneLodLevel
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_sceneLodLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sceneLodLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneLodLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sceneName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BakeryLightmapGroup::dyn_sceneName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sceneName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean containsTerrains
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_containsTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_containsTerrains");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containsTerrains"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean probes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_probes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_probes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "probes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/ftLMGroupMode mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode& GlobalNamespace::BakeryLightmapGroup::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::ftLMGroupMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/RenderMode renderMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::RenderMode& GlobalNamespace::BakeryLightmapGroup::dyn_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_renderMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::RenderMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/RenderDirMode renderDirMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::RenderDirMode& GlobalNamespace::BakeryLightmapGroup::dyn_renderDirMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_renderDirMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderDirMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::RenderDirMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BakeryLightmapGroup/AtlasPacker atlasPacker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakeryLightmapGroup::AtlasPacker& GlobalNamespace::BakeryLightmapGroup::dyn_atlasPacker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_atlasPacker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlasPacker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakeryLightmapGroup::AtlasPacker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean computeSSS
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_computeSSS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_computeSSS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computeSSS"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sssSamples
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_sssSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssSamples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sssDensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_sssDensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssDensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssDensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color sssColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BakeryLightmapGroup::dyn_sssColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sssScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_sssScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_sssScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sssScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fakeShadowBias
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BakeryLightmapGroup::dyn_fakeShadowBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_fakeShadowBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fakeShadowBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean transparentSelfShadow
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_transparentSelfShadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_transparentSelfShadow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentSelfShadow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean flipNormal
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_flipNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_flipNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String parentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BakeryLightmapGroup::dyn_parentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_parentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String overridePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BakeryLightmapGroup::dyn_overridePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_overridePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overridePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fixPos3D
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BakeryLightmapGroup::dyn_fixPos3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_fixPos3D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixPos3D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 voxelSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BakeryLightmapGroup::dyn_voxelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_voxelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voxelSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 passedFilter
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakeryLightmapGroup::dyn_passedFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::dyn_passedFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passedFilter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakeryLightmapGroup.GetPlainStruct
::GlobalNamespace::BakeryLightmapGroupPlain GlobalNamespace::BakeryLightmapGroup::GetPlainStruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroup::GetPlainStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlainStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BakeryLightmapGroupPlain, false>(this, ___internal__method);
}
