// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.PhotonVoiceLagSimulationGui
#include "Photon/Voice/Unity/UtilityScripts/PhotonVoiceLagSimulationGui.hpp"
// Including type: Photon.Voice.Unity.VoiceConnection
#include "Photon/Voice/Unity/VoiceConnection.hpp"
// Including type: ExitGames.Client.Photon.PhotonPeer
#include "ExitGames/Client/Photon/PhotonPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.VoiceConnection voiceConnection
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_voiceConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_voiceConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceConnection"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect windowRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_windowRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_windowRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 windowId
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_windowId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_windowId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean visible
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.PhotonPeer peer
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::PhotonPeer*& Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_peer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peer"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::PhotonPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single debugLostPercent
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_debugLostPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::dyn_debugLostPercent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugLostPercent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceLagSimulationGui.OnEnable
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceLagSimulationGui.OnGUI
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceLagSimulationGui.NetSimHasNoPeerWindow
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::NetSimHasNoPeerWindow(int windowId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::NetSimHasNoPeerWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetSimHasNoPeerWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowId);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceLagSimulationGui.NetSimWindow
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::NetSimWindow(int windowId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceLagSimulationGui::NetSimWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetSimWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.PhotonVoiceStatsGui
#include "Photon/Voice/Unity/UtilityScripts/PhotonVoiceStatsGui.hpp"
// Including type: ExitGames.Client.Photon.PhotonPeer
#include "ExitGames/Client/Photon/PhotonPeer.hpp"
// Including type: Photon.Voice.Unity.VoiceConnection
#include "Photon/Voice/Unity/VoiceConnection.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean statsWindowOn
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_statsWindowOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_statsWindowOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsWindowOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean statsOn
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_statsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_statsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean healthStatsVisible
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_healthStatsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_healthStatsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "healthStatsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean trafficStatsOn
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_trafficStatsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_trafficStatsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trafficStatsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buttonsOn
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_buttonsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_buttonsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean voiceStatsOn
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_voiceStatsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_voiceStatsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceStatsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect statsRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_statsRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_statsRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 windowId
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_windowId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_windowId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.PhotonPeer peer
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::PhotonPeer*& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_peer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peer"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::PhotonPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.VoiceConnection voiceConnection
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_voiceConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_voiceConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceConnection"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.VoiceClient voiceClient
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_voiceClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::dyn_voiceClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceClient"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceStatsGui.OnEnable
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceStatsGui.Update
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceStatsGui.OnGUI
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.PhotonVoiceStatsGui.TrafficStatsWindow
void Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::TrafficStatsWindow(int windowId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::PhotonVoiceStatsGui::TrafficStatsWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrafficStatsWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, windowId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile
#include "Photon/Voice/Unity/UtilityScripts/SaveIncomingStreamToFile.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile/<>c__DisplayClass5_0
#include "Photon/Voice/Unity/UtilityScripts/SaveIncomingStreamToFile_--c__DisplayClass5_0.hpp"
// Including type: Photon.Voice.Unity.VoiceConnection
#include "Photon/Voice/Unity/VoiceConnection.hpp"
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
// Including type: Photon.Voice.Unity.RemoteVoiceLink
#include "Photon/Voice/Unity/RemoteVoiceLink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.VoiceConnection voiceConnection
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::dyn_voiceConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::dyn_voiceConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceConnection"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean muteLocalSpeaker
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::dyn_muteLocalSpeaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::dyn_muteLocalSpeaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muteLocalSpeaker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile.OnSpeakerLinked
void Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::OnSpeakerLinked(::Photon::Voice::Unity::Speaker* speaker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::OnSpeakerLinked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSpeakerLinked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speaker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile.OnDestroy
void Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile.OnRemoteVoiceAdded
void Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::OnRemoteVoiceAdded(::Photon::Voice::Unity::RemoteVoiceLink* remoteVoiceLink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::OnRemoteVoiceAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteVoiceAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteVoiceLink)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteVoiceLink);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile.GetFilePath
::StringW Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::GetFilePath(::Photon::Voice::Unity::RemoteVoiceLink* remoteVoiceLink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::GetFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteVoiceLink)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, remoteVoiceLink);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile.Awake
void Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile/<>c__DisplayClass5_0
#include "Photon/Voice/Unity/UtilityScripts/SaveIncomingStreamToFile_--c__DisplayClass5_0.hpp"
// Including type: CSCore.Codecs.WAV.WaveWriter
#include "CSCore/Codecs/WAV/WaveWriter.hpp"
// Including type: Photon.Voice.FrameOut`1
#include "Photon/Voice/FrameOut_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CSCore.Codecs.WAV.WaveWriter waveWriter
[[deprecated("Use field access instead!")]] ::CSCore::Codecs::WAV::WaveWriter*& Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::dyn_waveWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::dyn_waveWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waveWriter"))->offset;
  return *reinterpret_cast<::CSCore::Codecs::WAV::WaveWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile*& Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile/<>c__DisplayClass5_0.<OnRemoteVoiceAdded>b__0
void Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::$OnRemoteVoiceAdded$b__0(::Photon::Voice::FrameOut_1<float>* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::<OnRemoteVoiceAdded>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnRemoteVoiceAdded>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile/<>c__DisplayClass5_0.<OnRemoteVoiceAdded>b__1
void Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::$OnRemoteVoiceAdded$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::<OnRemoteVoiceAdded>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnRemoteVoiceAdded>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile
#include "Photon/Voice/Unity/UtilityScripts/SaveOutgoingStreamToFile.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverFloat
#include "Photon/Voice/Unity/UtilityScripts/SaveOutgoingStreamToFile_OutgoingStreamSaverFloat.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverShort
#include "Photon/Voice/Unity/UtilityScripts/SaveOutgoingStreamToFile_OutgoingStreamSaverShort.hpp"
// Including type: CSCore.Codecs.WAV.WaveWriter
#include "CSCore/Codecs/WAV/WaveWriter.hpp"
// Including type: Photon.Voice.Unity.PhotonVoiceCreatedParams
#include "Photon/Voice/Unity/PhotonVoiceCreatedParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CSCore.Codecs.WAV.WaveWriter wavWriter
[[deprecated("Use field access instead!")]] ::CSCore::Codecs::WAV::WaveWriter*& Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::dyn_wavWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::dyn_wavWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wavWriter"))->offset;
  return *reinterpret_cast<::CSCore::Codecs::WAV::WaveWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile.PhotonVoiceCreated
void Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceCreated(::Photon::Voice::Unity::PhotonVoiceCreatedParams* photonVoiceCreatedParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PhotonVoiceCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(photonVoiceCreatedParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonVoiceCreatedParams);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile.GetFilePath
::StringW Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::GetFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::GetFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile.PhotonVoiceRemoved
void Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PhotonVoiceRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverFloat
#include "Photon/Voice/Unity/UtilityScripts/SaveOutgoingStreamToFile_OutgoingStreamSaverFloat.hpp"
// Including type: CSCore.Codecs.WAV.WaveWriter
#include "CSCore/Codecs/WAV/WaveWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CSCore.Codecs.WAV.WaveWriter wavWriter
[[deprecated("Use field access instead!")]] ::CSCore::Codecs::WAV::WaveWriter*& Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat::dyn_wavWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat::dyn_wavWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wavWriter"))->offset;
  return *reinterpret_cast<::CSCore::Codecs::WAV::WaveWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverFloat.Process
::ArrayW<float> Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat::Process(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, buf);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverFloat.Dispose
void Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverShort
#include "Photon/Voice/Unity/UtilityScripts/SaveOutgoingStreamToFile_OutgoingStreamSaverShort.hpp"
// Including type: CSCore.Codecs.WAV.WaveWriter
#include "CSCore/Codecs/WAV/WaveWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CSCore.Codecs.WAV.WaveWriter wavWriter
[[deprecated("Use field access instead!")]] ::CSCore::Codecs::WAV::WaveWriter*& Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::dyn_wavWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::dyn_wavWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wavWriter"))->offset;
  return *reinterpret_cast<::CSCore::Codecs::WAV::WaveWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverShort.Process
::ArrayW<int16_t> Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Process(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(this, ___internal__method, buf);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/OutgoingStreamSaverShort.Dispose
void Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.TestTone
#include "Photon/Voice/Unity/UtilityScripts/TestTone.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.TestTone/<>c
#include "Photon/Voice/Unity/UtilityScripts/TestTone_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.TestTone.Start
void Photon::Voice::Unity::UtilityScripts::TestTone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::TestTone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.TestTone/<>c
#include "Photon/Voice/Unity/UtilityScripts/TestTone_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Photon.Voice.IAudioDesc
#include "Photon/Voice/IAudioDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Voice.Unity.UtilityScripts.TestTone/<>c <>9
::Photon::Voice::Unity::UtilityScripts::TestTone::$$c* Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::UtilityScripts::TestTone::$$c*>("Photon.Voice.Unity.UtilityScripts", "TestTone/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Voice.Unity.UtilityScripts.TestTone/<>c <>9
void Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_set_$$9(::Photon::Voice::Unity::UtilityScripts::TestTone::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice.Unity.UtilityScripts", "TestTone/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<Photon.Voice.IAudioDesc> <>9__0_0
::System::Func_1<::Photon::Voice::IAudioDesc*>* Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::Photon::Voice::IAudioDesc*>*>("Photon.Voice.Unity.UtilityScripts", "TestTone/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<Photon.Voice.IAudioDesc> <>9__0_0
void Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_set_$$9__0_0(::System::Func_1<::Photon::Voice::IAudioDesc*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice.Unity.UtilityScripts", "TestTone/<>c", "<>9__0_0", value)));
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.TestTone/<>c..cctor
void Photon::Voice::Unity::UtilityScripts::TestTone::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::TestTone::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity.UtilityScripts", "TestTone/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.TestTone/<>c.<Start>b__0_0
::Photon::Voice::IAudioDesc* Photon::Voice::Unity::UtilityScripts::TestTone::$$c::$Start$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::TestTone::$$c::<Start>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IAudioDesc*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.ToneAudioReader
#include "Photon/Voice/Unity/UtilityScripts/ToneAudioReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double k
[[deprecated("Use field access instead!")]] double& Photon::Voice::Unity::UtilityScripts::ToneAudioReader::dyn_k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ToneAudioReader::dyn_k");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "k"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 timeSamples
[[deprecated("Use field access instead!")]] int64_t& Photon::Voice::Unity::UtilityScripts::ToneAudioReader::dyn_timeSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ToneAudioReader::dyn_timeSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSamples"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ToneAudioReader.get_Channels
int Photon::Voice::Unity::UtilityScripts::ToneAudioReader::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ToneAudioReader::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ToneAudioReader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ToneAudioReader.get_SamplingRate
int Photon::Voice::Unity::UtilityScripts::ToneAudioReader::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ToneAudioReader::get_SamplingRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ToneAudioReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ToneAudioReader.get_Error
::StringW Photon::Voice::Unity::UtilityScripts::ToneAudioReader::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ToneAudioReader::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ToneAudioReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ToneAudioReader.Dispose
void Photon::Voice::Unity::UtilityScripts::ToneAudioReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ToneAudioReader::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ToneAudioReader*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ToneAudioReader.Read
bool Photon::Voice::Unity::UtilityScripts::ToneAudioReader::Read(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ToneAudioReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ToneAudioReader*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.PUN.PhotonVoiceNetwork
#include "Photon/Voice/PUN/PhotonVoiceNetwork.hpp"
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Photon.Realtime.ClientState
#include "Photon/Realtime/ClientState.hpp"
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String VoiceRoomNameSuffix
::StringW Photon::Voice::PUN::PhotonVoiceNetwork::_get_VoiceRoomNameSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_get_VoiceRoomNameSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Voice.PUN", "PhotonVoiceNetwork", "VoiceRoomNameSuffix"));
}
// Autogenerated static field setter
// Set static field: static public System.String VoiceRoomNameSuffix
void Photon::Voice::PUN::PhotonVoiceNetwork::_set_VoiceRoomNameSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_set_VoiceRoomNameSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.PUN", "PhotonVoiceNetwork", "VoiceRoomNameSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object instanceLock
::Il2CppObject* Photon::Voice::PUN::PhotonVoiceNetwork::_get_instanceLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_get_instanceLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Photon.Voice.PUN", "PhotonVoiceNetwork", "instanceLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object instanceLock
void Photon::Voice::PUN::PhotonVoiceNetwork::_set_instanceLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_set_instanceLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.PUN", "PhotonVoiceNetwork", "instanceLock", value));
}
// Autogenerated static field getter
// Get static field: static private Photon.Voice.PUN.PhotonVoiceNetwork instance
::Photon::Voice::PUN::PhotonVoiceNetwork* Photon::Voice::PUN::PhotonVoiceNetwork::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PUN::PhotonVoiceNetwork*>("Photon.Voice.PUN", "PhotonVoiceNetwork", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Voice.PUN.PhotonVoiceNetwork instance
void Photon::Voice::PUN::PhotonVoiceNetwork::_set_instance(::Photon::Voice::PUN::PhotonVoiceNetwork* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.PUN", "PhotonVoiceNetwork", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean instantiated
bool Photon::Voice::PUN::PhotonVoiceNetwork::_get_instantiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_get_instantiated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Photon.Voice.PUN", "PhotonVoiceNetwork", "instantiated"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean instantiated
void Photon::Voice::PUN::PhotonVoiceNetwork::_set_instantiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::_set_instantiated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.PUN", "PhotonVoiceNetwork", "instantiated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoConnectAndJoin
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_AutoConnectAndJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_AutoConnectAndJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoConnectAndJoin"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoLeaveAndDisconnect
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_AutoLeaveAndDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_AutoLeaveAndDisconnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoLeaveAndDisconnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean WorkInOfflineMode
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_WorkInOfflineMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_WorkInOfflineMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WorkInOfflineMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.EnterRoomParams voiceRoomParams
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EnterRoomParams*& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_voiceRoomParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_voiceRoomParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceRoomParams"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EnterRoomParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clientCalledConnectAndJoin
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_clientCalledConnectAndJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_clientCalledConnectAndJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCalledConnectAndJoin"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clientCalledDisconnect
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_clientCalledDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_clientCalledDisconnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCalledDisconnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clientCalledConnectOnly
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_clientCalledConnectOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_clientCalledConnectOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCalledConnectOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean internalDisconnect
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_internalDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_internalDisconnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalDisconnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean internalConnect
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_internalConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_internalConnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalConnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usePunAppSettings
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_usePunAppSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_usePunAppSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePunAppSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usePunAuthValues
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceNetwork::dyn_usePunAuthValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::dyn_usePunAuthValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePunAuthValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.get_Instance
::Photon::Voice::PUN::PhotonVoiceNetwork* Photon::Voice::PUN::PhotonVoiceNetwork::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.PUN", "PhotonVoiceNetwork", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::PUN::PhotonVoiceNetwork*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.set_Instance
void Photon::Voice::PUN::PhotonVoiceNetwork::set_Instance(::Photon::Voice::PUN::PhotonVoiceNetwork* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.PUN", "PhotonVoiceNetwork", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.get_UsePunAuthValues
bool Photon::Voice::PUN::PhotonVoiceNetwork::get_UsePunAuthValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::get_UsePunAuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UsePunAuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.set_UsePunAuthValues
void Photon::Voice::PUN::PhotonVoiceNetwork::set_UsePunAuthValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::set_UsePunAuthValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UsePunAuthValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.ConnectAndJoinRoom
bool Photon::Voice::PUN::PhotonVoiceNetwork::ConnectAndJoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::ConnectAndJoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectAndJoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.Disconnect
void Photon::Voice::PUN::PhotonVoiceNetwork::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.OnEnable
void Photon::Voice::PUN::PhotonVoiceNetwork::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.OnPunStateChanged
void Photon::Voice::PUN::PhotonVoiceNetwork::OnPunStateChanged(::Photon::Realtime::ClientState fromState, ::Photon::Realtime::ClientState toState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::OnPunStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPunStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromState), ::il2cpp_utils::ExtractType(toState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromState, toState);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.FollowPun
void Photon::Voice::PUN::PhotonVoiceNetwork::FollowPun(::Photon::Realtime::ClientState toState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::FollowPun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FollowPun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toState);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.GetVoiceRoomName
::StringW Photon::Voice::PUN::PhotonVoiceNetwork::GetVoiceRoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::GetVoiceRoomName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.PUN", "PhotonVoiceNetwork", "GetVoiceRoomName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.ConnectOrJoin
void Photon::Voice::PUN::PhotonVoiceNetwork::ConnectOrJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::ConnectOrJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectOrJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.Connect
bool Photon::Voice::PUN::PhotonVoiceNetwork::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.JoinRoom
bool Photon::Voice::PUN::PhotonVoiceNetwork::JoinRoom(::StringW voiceRoomName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceRoomName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, voiceRoomName);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.FollowPun
void Photon::Voice::PUN::PhotonVoiceNetwork::FollowPun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::FollowPun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FollowPun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.CheckLateLinking
void Photon::Voice::PUN::PhotonVoiceNetwork::CheckLateLinking(::Photon::Voice::Unity::Speaker* speaker, int viewId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::CheckLateLinking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLateLinking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speaker), ::il2cpp_utils::ExtractType(viewId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, viewId);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork..cctor
void Photon::Voice::PUN::PhotonVoiceNetwork::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.PUN", "PhotonVoiceNetwork", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.Awake
void Photon::Voice::PUN::PhotonVoiceNetwork::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.OnDisable
void Photon::Voice::PUN::PhotonVoiceNetwork::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.OnDestroy
void Photon::Voice::PUN::PhotonVoiceNetwork::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.OnVoiceStateChanged
void Photon::Voice::PUN::PhotonVoiceNetwork::OnVoiceStateChanged(::Photon::Realtime::ClientState fromState, ::Photon::Realtime::ClientState toState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::OnVoiceStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromState, toState);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceNetwork.SimpleSpeakerFactory
::Photon::Voice::Unity::Speaker* Photon::Voice::PUN::PhotonVoiceNetwork::SimpleSpeakerFactory(int playerId, uint8_t voiceId, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceNetwork::SimpleSpeakerFactory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Speaker*, false>(this, ___internal__method, playerId, voiceId, userData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.PUN.PhotonVoiceView
#include "Photon/Voice/PUN/PhotonVoiceView.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView photonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& Photon::Voice::PUN::PhotonVoiceView::dyn_photonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_photonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder recorderInUse
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& Photon::Voice::PUN::PhotonVoiceView::dyn_recorderInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_recorderInUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recorderInUse"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Speaker speakerInUse
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Speaker*& Photon::Voice::PUN::PhotonVoiceView::dyn_speakerInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_speakerInUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speakerInUse"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Speaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean onEnableCalledOnce
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceView::dyn_onEnableCalledOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_onEnableCalledOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onEnableCalledOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoCreateRecorderIfNotFound
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceView::dyn_AutoCreateRecorderIfNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_AutoCreateRecorderIfNotFound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoCreateRecorderIfNotFound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UsePrimaryRecorder
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceView::dyn_UsePrimaryRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_UsePrimaryRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsePrimaryRecorder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SetupDebugSpeaker
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceView::dyn_SetupDebugSpeaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_SetupDebugSpeaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SetupDebugSpeaker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsSpeaker>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceView::dyn_$IsSpeaker$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_$IsSpeaker$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsSpeaker>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsRecorder>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::PhotonVoiceView::dyn_$IsRecorder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::dyn_$IsRecorder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsRecorder>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_RecorderInUse
::Photon::Voice::Unity::Recorder* Photon::Voice::PUN::PhotonVoiceView::get_RecorderInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_RecorderInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecorderInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Recorder*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.set_RecorderInUse
void Photon::Voice::PUN::PhotonVoiceView::set_RecorderInUse(::Photon::Voice::Unity::Recorder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::set_RecorderInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecorderInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_SpeakerInUse
::Photon::Voice::Unity::Speaker* Photon::Voice::PUN::PhotonVoiceView::get_SpeakerInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_SpeakerInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpeakerInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Speaker*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.set_SpeakerInUse
void Photon::Voice::PUN::PhotonVoiceView::set_SpeakerInUse(::Photon::Voice::Unity::Speaker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::set_SpeakerInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SpeakerInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_IsSetup
bool Photon::Voice::PUN::PhotonVoiceView::get_IsSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_IsSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_IsSpeaker
bool Photon::Voice::PUN::PhotonVoiceView::get_IsSpeaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_IsSpeaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSpeaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.set_IsSpeaker
void Photon::Voice::PUN::PhotonVoiceView::set_IsSpeaker(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::set_IsSpeaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSpeaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_IsSpeaking
bool Photon::Voice::PUN::PhotonVoiceView::get_IsSpeaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_IsSpeaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSpeaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_IsRecorder
bool Photon::Voice::PUN::PhotonVoiceView::get_IsRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_IsRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.set_IsRecorder
void Photon::Voice::PUN::PhotonVoiceView::set_IsRecorder(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::set_IsRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_IsRecording
bool Photon::Voice::PUN::PhotonVoiceView::get_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_IsSpeakerLinked
bool Photon::Voice::PUN::PhotonVoiceView::get_IsSpeakerLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_IsSpeakerLinked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSpeakerLinked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_IsPhotonViewReady
bool Photon::Voice::PUN::PhotonVoiceView::get_IsPhotonViewReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_IsPhotonViewReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPhotonViewReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_RequiresSpeaker
bool Photon::Voice::PUN::PhotonVoiceView::get_RequiresSpeaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_RequiresSpeaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresSpeaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.get_RequiresRecorder
bool Photon::Voice::PUN::PhotonVoiceView::get_RequiresRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::get_RequiresRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.OnEnable
void Photon::Voice::PUN::PhotonVoiceView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.Start
void Photon::Voice::PUN::PhotonVoiceView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.CheckLateLinking
void Photon::Voice::PUN::PhotonVoiceView::CheckLateLinking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::CheckLateLinking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLateLinking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.Setup
void Photon::Voice::PUN::PhotonVoiceView::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.SetupRecorder
bool Photon::Voice::PUN::PhotonVoiceView::SetupRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::SetupRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.SetupRecorder
bool Photon::Voice::PUN::PhotonVoiceView::SetupRecorder(::Photon::Voice::Unity::Recorder* recorder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::SetupRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recorder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, recorder);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.SetupSpeaker
bool Photon::Voice::PUN::PhotonVoiceView::SetupSpeaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::SetupSpeaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupSpeaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.SetupSpeaker
bool Photon::Voice::PUN::PhotonVoiceView::SetupSpeaker(::Photon::Voice::Unity::Speaker* speaker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::SetupSpeaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupSpeaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speaker)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, speaker);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.SetupRecorderInUse
void Photon::Voice::PUN::PhotonVoiceView::SetupRecorderInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::SetupRecorderInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupRecorderInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.SetupSpeakerInUse
void Photon::Voice::PUN::PhotonVoiceView::SetupSpeakerInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::SetupSpeakerInUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupSpeakerInUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.Init
void Photon::Voice::PUN::PhotonVoiceView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.PhotonVoiceView.Awake
void Photon::Voice::PUN::PhotonVoiceView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::PhotonVoiceView::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript
#include "Photon/Voice/PUN/UtilityScripts/VoiceDebugScript.hpp"
// Including type: Photon.Voice.PUN.PhotonVoiceView
#include "Photon/Voice/PUN/PhotonVoiceView.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.PUN.PhotonVoiceView photonVoiceView
[[deprecated("Use field access instead!")]] ::Photon::Voice::PUN::PhotonVoiceView*& Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_photonVoiceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_photonVoiceView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonVoiceView"))->offset;
  return *reinterpret_cast<::Photon::Voice::PUN::PhotonVoiceView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ForceRecordingAndTransmission
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_ForceRecordingAndTransmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_ForceRecordingAndTransmission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForceRecordingAndTransmission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip TestAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_TestAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_TestAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TestAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TestUsingAudioClip
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_TestUsingAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_TestUsingAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TestUsingAudioClip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisableVad
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_DisableVad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_DisableVad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisableVad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IncreaseLogLevels
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_IncreaseLogLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_IncreaseLogLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IncreaseLogLevels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LocalDebug
[[deprecated("Use field access instead!")]] bool& Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_LocalDebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::dyn_LocalDebug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalDebug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript.Awake
void Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript.Update
void Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript.CantHearYou
void Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::CantHearYou() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::CantHearYou");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CantHearYou", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript.CantHearYou
void Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::CantHearYou(::StringW roomName, ::StringW serverIp, ::StringW appVersion, ::Photon::Pun::PhotonMessageInfo photonMessageInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::CantHearYou");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CantHearYou", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomName), ::il2cpp_utils::ExtractType(serverIp), ::il2cpp_utils::ExtractType(appVersion), ::il2cpp_utils::ExtractType(photonMessageInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomName, serverIp, appVersion, photonMessageInfo);
}
// Autogenerated method: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript.Reply
void Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::Reply(::StringW why, ::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::Reply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(why), ::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, why, player);
}
// Autogenerated method: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript.HeresWhy
void Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::HeresWhy(::StringW why, ::Photon::Pun::PhotonMessageInfo photonMessageInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::HeresWhy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeresWhy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(why), ::il2cpp_utils::ExtractType(photonMessageInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, why, photonMessageInfo);
}
// Autogenerated method: Photon.Voice.PUN.UtilityScripts.VoiceDebugScript.MaxLogs
void Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::MaxLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PUN::UtilityScripts::VoiceDebugScript::MaxLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFabSharedSettings
#include "GlobalNamespace/PlayFabSharedSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String TitleId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabSharedSettings::dyn_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_TitleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TitleId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String VerticalName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabSharedSettings::dyn_VerticalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_VerticalName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VerticalName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProductionEnvironmentUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabSharedSettings::dyn_ProductionEnvironmentUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_ProductionEnvironmentUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProductionEnvironmentUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.WebRequestType RequestType
[[deprecated("Use field access instead!")]] ::PlayFab::WebRequestType& GlobalNamespace::PlayFabSharedSettings::dyn_RequestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_RequestType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestType"))->offset;
  return *reinterpret_cast<::PlayFab::WebRequestType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AdvertisingIdType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabSharedSettings::dyn_AdvertisingIdType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_AdvertisingIdType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdvertisingIdType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AdvertisingIdValue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabSharedSettings::dyn_AdvertisingIdValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_AdvertisingIdValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdvertisingIdValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisableAdvertising
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayFabSharedSettings::dyn_DisableAdvertising() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_DisableAdvertising");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisableAdvertising"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisableDeviceInfo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayFabSharedSettings::dyn_DisableDeviceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_DisableDeviceInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisableDeviceInfo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean DisableFocusTimeCollection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayFabSharedSettings::dyn_DisableFocusTimeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_DisableFocusTimeCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisableFocusTimeCollection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RequestTimeout
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayFabSharedSettings::dyn_RequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_RequestTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RequestKeepAlive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayFabSharedSettings::dyn_RequestKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_RequestKeepAlive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestKeepAlive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CompressApiData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayFabSharedSettings::dyn_CompressApiData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_CompressApiData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressApiData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.PlayFabLogLevel LogLevel
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabLogLevel& GlobalNamespace::PlayFabSharedSettings::dyn_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_LogLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogLevel"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabLogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LoggerHost
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayFabSharedSettings::dyn_LoggerHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_LoggerHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggerHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LoggerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayFabSharedSettings::dyn_LoggerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_LoggerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRealTimeLogging
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayFabSharedSettings::dyn_EnableRealTimeLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_EnableRealTimeLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRealTimeLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LogCapLimit
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayFabSharedSettings::dyn_LogCapLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayFabSharedSettings::dyn_LogCapLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogCapLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.BlockState
#include "Ionic/Zlib/BlockState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.BlockState NeedMore
::Ionic::Zlib::BlockState Ionic::Zlib::BlockState::_get_NeedMore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_get_NeedMore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::BlockState>("Ionic.Zlib", "BlockState", "NeedMore"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.BlockState NeedMore
void Ionic::Zlib::BlockState::_set_NeedMore(::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_set_NeedMore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "BlockState", "NeedMore", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.BlockState BlockDone
::Ionic::Zlib::BlockState Ionic::Zlib::BlockState::_get_BlockDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_get_BlockDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::BlockState>("Ionic.Zlib", "BlockState", "BlockDone"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.BlockState BlockDone
void Ionic::Zlib::BlockState::_set_BlockDone(::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_set_BlockDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "BlockState", "BlockDone", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.BlockState FinishStarted
::Ionic::Zlib::BlockState Ionic::Zlib::BlockState::_get_FinishStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_get_FinishStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::BlockState>("Ionic.Zlib", "BlockState", "FinishStarted"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.BlockState FinishStarted
void Ionic::Zlib::BlockState::_set_FinishStarted(::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_set_FinishStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "BlockState", "FinishStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.BlockState FinishDone
::Ionic::Zlib::BlockState Ionic::Zlib::BlockState::_get_FinishDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_get_FinishDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::BlockState>("Ionic.Zlib", "BlockState", "FinishDone"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.BlockState FinishDone
void Ionic::Zlib::BlockState::_set_FinishDone(::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::_set_FinishDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "BlockState", "FinishDone", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::BlockState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::BlockState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.DeflateFlavor
#include "Ionic/Zlib/DeflateFlavor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.DeflateFlavor Store
::Ionic::Zlib::DeflateFlavor Ionic::Zlib::DeflateFlavor::_get_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateFlavor::_get_Store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::DeflateFlavor>("Ionic.Zlib", "DeflateFlavor", "Store"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.DeflateFlavor Store
void Ionic::Zlib::DeflateFlavor::_set_Store(::Ionic::Zlib::DeflateFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateFlavor::_set_Store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateFlavor", "Store", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.DeflateFlavor Fast
::Ionic::Zlib::DeflateFlavor Ionic::Zlib::DeflateFlavor::_get_Fast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateFlavor::_get_Fast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::DeflateFlavor>("Ionic.Zlib", "DeflateFlavor", "Fast"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.DeflateFlavor Fast
void Ionic::Zlib::DeflateFlavor::_set_Fast(::Ionic::Zlib::DeflateFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateFlavor::_set_Fast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateFlavor", "Fast", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.DeflateFlavor Slow
::Ionic::Zlib::DeflateFlavor Ionic::Zlib::DeflateFlavor::_get_Slow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateFlavor::_get_Slow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::DeflateFlavor>("Ionic.Zlib", "DeflateFlavor", "Slow"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.DeflateFlavor Slow
void Ionic::Zlib::DeflateFlavor::_set_Slow(::Ionic::Zlib::DeflateFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateFlavor::_set_Slow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateFlavor", "Slow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateFlavor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateFlavor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.DeflateManager
#include "Ionic/Zlib/DeflateManager.hpp"
// Including type: Ionic.Zlib.DeflateManager/CompressFunc
#include "Ionic/Zlib/DeflateManager_CompressFunc.hpp"
// Including type: Ionic.Zlib.DeflateManager/Config
#include "Ionic/Zlib/DeflateManager_Config.hpp"
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
// Including type: Ionic.Zlib.ZTree
#include "Ionic/Zlib/ZTree.hpp"
// Including type: Ionic.Zlib.BlockState
#include "Ionic/Zlib/BlockState.hpp"
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MEM_LEVEL_MAX
int Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "MEM_LEVEL_MAX"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MEM_LEVEL_MAX
void Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "MEM_LEVEL_MAX", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MEM_LEVEL_DEFAULT
int Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "MEM_LEVEL_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MEM_LEVEL_DEFAULT
void Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_DEFAULT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "MEM_LEVEL_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] _ErrorMessage
::ArrayW<::StringW> Ionic::Zlib::DeflateManager::_get__ErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get__ErrorMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Ionic.Zlib", "DeflateManager", "_ErrorMessage"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] _ErrorMessage
void Ionic::Zlib::DeflateManager::_set__ErrorMessage(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set__ErrorMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "_ErrorMessage", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 PRESET_DICT
int Ionic::Zlib::DeflateManager::_get_PRESET_DICT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_PRESET_DICT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "PRESET_DICT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 PRESET_DICT
void Ionic::Zlib::DeflateManager::_set_PRESET_DICT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_PRESET_DICT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "PRESET_DICT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 INIT_STATE
int Ionic::Zlib::DeflateManager::_get_INIT_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_INIT_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "INIT_STATE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 INIT_STATE
void Ionic::Zlib::DeflateManager::_set_INIT_STATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_INIT_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "INIT_STATE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 BUSY_STATE
int Ionic::Zlib::DeflateManager::_get_BUSY_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_BUSY_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "BUSY_STATE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 BUSY_STATE
void Ionic::Zlib::DeflateManager::_set_BUSY_STATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_BUSY_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "BUSY_STATE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 FINISH_STATE
int Ionic::Zlib::DeflateManager::_get_FINISH_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_FINISH_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "FINISH_STATE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 FINISH_STATE
void Ionic::Zlib::DeflateManager::_set_FINISH_STATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_FINISH_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "FINISH_STATE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_DEFLATED
int Ionic::Zlib::DeflateManager::_get_Z_DEFLATED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_Z_DEFLATED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "Z_DEFLATED"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_DEFLATED
void Ionic::Zlib::DeflateManager::_set_Z_DEFLATED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_Z_DEFLATED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "Z_DEFLATED", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 STORED_BLOCK
int Ionic::Zlib::DeflateManager::_get_STORED_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_STORED_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "STORED_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 STORED_BLOCK
void Ionic::Zlib::DeflateManager::_set_STORED_BLOCK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_STORED_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "STORED_BLOCK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 STATIC_TREES
int Ionic::Zlib::DeflateManager::_get_STATIC_TREES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_STATIC_TREES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "STATIC_TREES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 STATIC_TREES
void Ionic::Zlib::DeflateManager::_set_STATIC_TREES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_STATIC_TREES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "STATIC_TREES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 DYN_TREES
int Ionic::Zlib::DeflateManager::_get_DYN_TREES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_DYN_TREES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "DYN_TREES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 DYN_TREES
void Ionic::Zlib::DeflateManager::_set_DYN_TREES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_DYN_TREES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "DYN_TREES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_BINARY
int Ionic::Zlib::DeflateManager::_get_Z_BINARY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_Z_BINARY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "Z_BINARY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_BINARY
void Ionic::Zlib::DeflateManager::_set_Z_BINARY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_Z_BINARY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "Z_BINARY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_ASCII
int Ionic::Zlib::DeflateManager::_get_Z_ASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_Z_ASCII");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "Z_ASCII"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_ASCII
void Ionic::Zlib::DeflateManager::_set_Z_ASCII(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_Z_ASCII");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "Z_ASCII", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_UNKNOWN
int Ionic::Zlib::DeflateManager::_get_Z_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_Z_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "Z_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_UNKNOWN
void Ionic::Zlib::DeflateManager::_set_Z_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_Z_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "Z_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Buf_size
int Ionic::Zlib::DeflateManager::_get_Buf_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_Buf_size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "Buf_size"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Buf_size
void Ionic::Zlib::DeflateManager::_set_Buf_size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_Buf_size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "Buf_size", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MIN_MATCH
int Ionic::Zlib::DeflateManager::_get_MIN_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_MIN_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "MIN_MATCH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MIN_MATCH
void Ionic::Zlib::DeflateManager::_set_MIN_MATCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_MIN_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "MIN_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MAX_MATCH
int Ionic::Zlib::DeflateManager::_get_MAX_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_MAX_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "MAX_MATCH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MAX_MATCH
void Ionic::Zlib::DeflateManager::_set_MAX_MATCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_MAX_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "MAX_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MIN_LOOKAHEAD
int Ionic::Zlib::DeflateManager::_get_MIN_LOOKAHEAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_MIN_LOOKAHEAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "MIN_LOOKAHEAD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MIN_LOOKAHEAD
void Ionic::Zlib::DeflateManager::_set_MIN_LOOKAHEAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_MIN_LOOKAHEAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "MIN_LOOKAHEAD", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 HEAP_SIZE
int Ionic::Zlib::DeflateManager::_get_HEAP_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_HEAP_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "HEAP_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 HEAP_SIZE
void Ionic::Zlib::DeflateManager::_set_HEAP_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_HEAP_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "HEAP_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 END_BLOCK
int Ionic::Zlib::DeflateManager::_get_END_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_get_END_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "DeflateManager", "END_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 END_BLOCK
void Ionic::Zlib::DeflateManager::_set_END_BLOCK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_set_END_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager", "END_BLOCK", value));
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Zlib.DeflateManager/CompressFunc DeflateFunction
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::DeflateManager::CompressFunc*& Ionic::Zlib::DeflateManager::dyn_DeflateFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_DeflateFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeflateFunction"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::DeflateManager::CompressFunc**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZlibCodec _codec
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibCodec*& Ionic::Zlib::DeflateManager::dyn__codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn__codec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codec"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 status
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] pending
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::DeflateManager::dyn_pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_pending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pending"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 nextPending
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_nextPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_nextPending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPending"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 pendingCount
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_pendingCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_pendingCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pendingCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.SByte data_type
[[deprecated("Use field access instead!")]] int8_t& Ionic::Zlib::DeflateManager::dyn_data_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_data_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data_type"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last_flush
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_last_flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_last_flush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last_flush"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 w_size
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_w_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_w_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 w_bits
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_w_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_w_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w_bits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 w_mask
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_w_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_w_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] window
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::DeflateManager::dyn_window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 window_size
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_window_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_window_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] prev
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::DeflateManager::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] head
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::DeflateManager::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ins_h
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_ins_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_ins_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ins_h"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_size
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_hash_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_hash_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_bits
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_hash_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_hash_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_bits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_mask
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_hash_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_hash_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_shift
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_hash_shift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_hash_shift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_shift"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 block_start
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_block_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_block_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "block_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Zlib.DeflateManager/Config config
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::DeflateManager::Config*& Ionic::Zlib::DeflateManager::dyn_config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "config"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::DeflateManager::Config**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 match_length
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_match_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_match_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "match_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 prev_match
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_prev_match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_prev_match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev_match"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 match_available
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_match_available() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_match_available");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "match_available"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 strstart
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_strstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_strstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 match_start
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_match_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_match_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "match_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lookahead
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_lookahead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_lookahead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookahead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 prev_length
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_prev_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_prev_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.CompressionLevel compressionLevel
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionLevel& Ionic::Zlib::DeflateManager::dyn_compressionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_compressionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressionLevel"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.CompressionStrategy compressionStrategy
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionStrategy& Ionic::Zlib::DeflateManager::dyn_compressionStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_compressionStrategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressionStrategy"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] dyn_ltree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::DeflateManager::dyn_dyn_ltree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_dyn_ltree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dyn_ltree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] dyn_dtree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::DeflateManager::dyn_dyn_dtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_dyn_dtree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dyn_dtree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] bl_tree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::DeflateManager::dyn_bl_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_bl_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bl_tree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZTree treeLiterals
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZTree*& Ionic::Zlib::DeflateManager::dyn_treeLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_treeLiterals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeLiterals"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZTree treeDistances
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZTree*& Ionic::Zlib::DeflateManager::dyn_treeDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_treeDistances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeDistances"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZTree treeBitLengths
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZTree*& Ionic::Zlib::DeflateManager::dyn_treeBitLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_treeBitLengths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeBitLengths"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] bl_count
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::DeflateManager::dyn_bl_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_bl_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bl_count"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] heap
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::DeflateManager::dyn_heap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_heap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 heap_len
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_heap_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_heap_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 heap_max
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_heap_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_heap_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap_max"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.SByte[] depth
[[deprecated("Use field access instead!")]] ::ArrayW<int8_t>& Ionic::Zlib::DeflateManager::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<::ArrayW<int8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _lengthOffset
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn__lengthOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn__lengthOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lit_bufsize
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_lit_bufsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_lit_bufsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lit_bufsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last_lit
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_last_lit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_last_lit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last_lit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _distanceOffset
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn__distanceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn__distanceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 opt_len
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_opt_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_opt_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opt_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 static_len
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_static_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_static_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "static_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 matches
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matches"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last_eob_len
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_last_eob_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_last_eob_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last_eob_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16 bi_buf
[[deprecated("Use field access instead!")]] int16_t& Ionic::Zlib::DeflateManager::dyn_bi_buf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_bi_buf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bi_buf"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bi_valid
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::dyn_bi_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_bi_valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bi_valid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean Rfc1950BytesEmitted
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::DeflateManager::dyn_Rfc1950BytesEmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn_Rfc1950BytesEmitted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rfc1950BytesEmitted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _WantRfc1950HeaderBytes
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::DeflateManager::dyn__WantRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::dyn__WantRfc1950HeaderBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_WantRfc1950HeaderBytes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._InitializeLazyMatch
void Ionic::Zlib::DeflateManager::_InitializeLazyMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_InitializeLazyMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializeLazyMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._InitializeTreeData
void Ionic::Zlib::DeflateManager::_InitializeTreeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_InitializeTreeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializeTreeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._InitializeBlocks
void Ionic::Zlib::DeflateManager::_InitializeBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_InitializeBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializeBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.pqdownheap
void Ionic::Zlib::DeflateManager::pqdownheap(::ArrayW<int16_t> tree, int k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::pqdownheap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "pqdownheap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(k)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, k);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._IsSmaller
bool Ionic::Zlib::DeflateManager::_IsSmaller(::ArrayW<int16_t> tree, int n, int m, ::ArrayW<int8_t> depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_IsSmaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateManager", "_IsSmaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree, n, m, depth);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.scan_tree
void Ionic::Zlib::DeflateManager::scan_tree(::ArrayW<int16_t> tree, int max_code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::scan_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "scan_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(max_code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, max_code);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.build_bl_tree
int Ionic::Zlib::DeflateManager::build_bl_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::build_bl_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "build_bl_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.send_all_trees
void Ionic::Zlib::DeflateManager::send_all_trees(int lcodes, int dcodes, int blcodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::send_all_trees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_all_trees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcodes), ::il2cpp_utils::ExtractType(dcodes), ::il2cpp_utils::ExtractType(blcodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lcodes, dcodes, blcodes);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.send_tree
void Ionic::Zlib::DeflateManager::send_tree(::ArrayW<int16_t> tree, int max_code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::send_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(max_code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, max_code);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.put_bytes
void Ionic::Zlib::DeflateManager::put_bytes(::ArrayW<uint8_t> p, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::put_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "put_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, start, len);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.send_code
void Ionic::Zlib::DeflateManager::send_code(int c, ::ArrayW<int16_t> tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::send_code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(tree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, tree);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.send_bits
void Ionic::Zlib::DeflateManager::send_bits(int value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::send_bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, length);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._tr_align
void Ionic::Zlib::DeflateManager::_tr_align() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_tr_align");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_align", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._tr_tally
bool Ionic::Zlib::DeflateManager::_tr_tally(int dist, int lc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_tr_tally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_tally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dist), ::il2cpp_utils::ExtractType(lc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dist, lc);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.send_compressed_block
void Ionic::Zlib::DeflateManager::send_compressed_block(::ArrayW<int16_t> ltree, ::ArrayW<int16_t> dtree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::send_compressed_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_compressed_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ltree), ::il2cpp_utils::ExtractType(dtree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ltree, dtree);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.set_data_type
void Ionic::Zlib::DeflateManager::set_data_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::set_data_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_data_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.bi_flush
void Ionic::Zlib::DeflateManager::bi_flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::bi_flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "bi_flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.bi_windup
void Ionic::Zlib::DeflateManager::bi_windup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::bi_windup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "bi_windup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.copy_block
void Ionic::Zlib::DeflateManager::copy_block(int buf, int len, bool header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::copy_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "copy_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(header)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf, len, header);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.flush_block_only
void Ionic::Zlib::DeflateManager::flush_block_only(bool eof) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::flush_block_only");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "flush_block_only", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eof)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eof);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.DeflateNone
::Ionic::Zlib::BlockState Ionic::Zlib::DeflateManager::DeflateNone(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::DeflateNone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._tr_stored_block
void Ionic::Zlib::DeflateManager::_tr_stored_block(int buf, int stored_len, bool eof) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_tr_stored_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_stored_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(stored_len), ::il2cpp_utils::ExtractType(eof)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf, stored_len, eof);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._tr_flush_block
void Ionic::Zlib::DeflateManager::_tr_flush_block(int buf, int stored_len, bool eof) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_tr_flush_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_flush_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(stored_len), ::il2cpp_utils::ExtractType(eof)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf, stored_len, eof);
}
// Autogenerated method: Ionic.Zlib.DeflateManager._fillWindow
void Ionic::Zlib::DeflateManager::_fillWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::_fillWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_fillWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.DeflateFast
::Ionic::Zlib::BlockState Ionic::Zlib::DeflateManager::DeflateFast(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::DeflateFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.DeflateSlow
::Ionic::Zlib::BlockState Ionic::Zlib::DeflateManager::DeflateSlow(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::DeflateSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.longest_match
int Ionic::Zlib::DeflateManager::longest_match(int cur_match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::longest_match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "longest_match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cur_match)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cur_match);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.get_WantRfc1950HeaderBytes
bool Ionic::Zlib::DeflateManager::get_WantRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::get_WantRfc1950HeaderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WantRfc1950HeaderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.set_WantRfc1950HeaderBytes
void Ionic::Zlib::DeflateManager::set_WantRfc1950HeaderBytes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::set_WantRfc1950HeaderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WantRfc1950HeaderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.Initialize
int Ionic::Zlib::DeflateManager::Initialize(::Ionic::Zlib::ZlibCodec* codec, ::Ionic::Zlib::CompressionLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, level);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.Initialize
int Ionic::Zlib::DeflateManager::Initialize(::Ionic::Zlib::ZlibCodec* codec, ::Ionic::Zlib::CompressionLevel level, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, level, bits);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.Initialize
int Ionic::Zlib::DeflateManager::Initialize(::Ionic::Zlib::ZlibCodec* codec, ::Ionic::Zlib::CompressionLevel level, int bits, ::Ionic::Zlib::CompressionStrategy compressionStrategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(compressionStrategy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, level, bits, compressionStrategy);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.Initialize
int Ionic::Zlib::DeflateManager::Initialize(::Ionic::Zlib::ZlibCodec* codec, ::Ionic::Zlib::CompressionLevel level, int windowBits, int memLevel, ::Ionic::Zlib::CompressionStrategy strategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(windowBits), ::il2cpp_utils::ExtractType(memLevel), ::il2cpp_utils::ExtractType(strategy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, level, windowBits, memLevel, strategy);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.Reset
void Ionic::Zlib::DeflateManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.End
int Ionic::Zlib::DeflateManager::End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.SetDeflater
void Ionic::Zlib::DeflateManager::SetDeflater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::SetDeflater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeflater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.SetParams
int Ionic::Zlib::DeflateManager::SetParams(::Ionic::Zlib::CompressionLevel level, ::Ionic::Zlib::CompressionStrategy strategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::SetParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(strategy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, level, strategy);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.SetDictionary
int Ionic::Zlib::DeflateManager::SetDictionary(::ArrayW<uint8_t> dictionary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::SetDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dictionary);
}
// Autogenerated method: Ionic.Zlib.DeflateManager.Deflate
int Ionic::Zlib::DeflateManager::Deflate(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Deflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.DeflateManager..cctor
void Ionic::Zlib::DeflateManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Ionic.Zlib.DeflateManager/CompressFunc
#include "Ionic/Zlib/DeflateManager_CompressFunc.hpp"
// Including type: Ionic.Zlib.BlockState
#include "Ionic/Zlib/BlockState.hpp"
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Ionic.Zlib.DeflateManager/CompressFunc.Invoke
::Ionic::Zlib::BlockState Ionic::Zlib::DeflateManager::CompressFunc::Invoke(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::CompressFunc::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::DeflateManager::CompressFunc*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.DeflateManager/CompressFunc.BeginInvoke
::System::IAsyncResult* Ionic::Zlib::DeflateManager::CompressFunc::BeginInvoke(::Ionic::Zlib::FlushType flush, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::CompressFunc::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::DeflateManager::CompressFunc*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, flush, callback, object);
}
// Autogenerated method: Ionic.Zlib.DeflateManager/CompressFunc.EndInvoke
::Ionic::Zlib::BlockState Ionic::Zlib::DeflateManager::CompressFunc::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::CompressFunc::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::DeflateManager::CompressFunc*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::BlockState, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.DeflateManager/Config
#include "Ionic/Zlib/DeflateManager_Config.hpp"
// Including type: Ionic.Zlib.CompressionLevel
#include "Ionic/Zlib/CompressionLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Ionic.Zlib.DeflateManager/Config[] Table
::ArrayW<::Ionic::Zlib::DeflateManager::Config*> Ionic::Zlib::DeflateManager::Config::_get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::_get_Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Ionic::Zlib::DeflateManager::Config*>>("Ionic.Zlib", "DeflateManager/Config", "Table"));
}
// Autogenerated static field setter
// Set static field: static private readonly Ionic.Zlib.DeflateManager/Config[] Table
void Ionic::Zlib::DeflateManager::Config::_set_Table(::ArrayW<::Ionic::Zlib::DeflateManager::Config*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::_set_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "DeflateManager/Config", "Table", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 GoodLength
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::Config::dyn_GoodLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::dyn_GoodLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GoodLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 MaxLazy
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::Config::dyn_MaxLazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::dyn_MaxLazy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxLazy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NiceLength
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::Config::dyn_NiceLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::dyn_NiceLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NiceLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 MaxChainLength
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::DeflateManager::Config::dyn_MaxChainLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::dyn_MaxChainLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxChainLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.DeflateFlavor Flavor
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::DeflateFlavor& Ionic::Zlib::DeflateManager::Config::dyn_Flavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::dyn_Flavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flavor"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::DeflateFlavor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.DeflateManager/Config.Lookup
::Ionic::Zlib::DeflateManager::Config* Ionic::Zlib::DeflateManager::Config::Lookup(::Ionic::Zlib::CompressionLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateManager/Config", "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::DeflateManager::Config*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Ionic.Zlib.DeflateManager/Config..cctor
void Ionic::Zlib::DeflateManager::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateManager::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateManager/Config", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.DeflateStream
#include "Ionic/Zlib/DeflateStream.hpp"
// Including type: Ionic.Zlib.ZlibBaseStream
#include "Ionic/Zlib/ZlibBaseStream.hpp"
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
// Including type: Ionic.Zlib.CompressionStrategy
#include "Ionic/Zlib/CompressionStrategy.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZlibBaseStream _baseStream
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibBaseStream*& Ionic::Zlib::DeflateStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibBaseStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Ionic::Zlib::DeflateStream::dyn__innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::dyn__innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::DeflateStream::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_FlushMode
::Ionic::Zlib::FlushType Ionic::Zlib::DeflateStream::get_FlushMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_FlushMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::DeflateStream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::FlushType, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.set_FlushMode
void Ionic::Zlib::DeflateStream::set_FlushMode(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::set_FlushMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::DeflateStream*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_BufferSize
int Ionic::Zlib::DeflateStream::get_BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.set_BufferSize
void Ionic::Zlib::DeflateStream::set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::set_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_Strategy
::Ionic::Zlib::CompressionStrategy Ionic::Zlib::DeflateStream::get_Strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_Strategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Strategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::CompressionStrategy, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.set_Strategy
void Ionic::Zlib::DeflateStream::set_Strategy(::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::set_Strategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Strategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_TotalIn
int64_t Ionic::Zlib::DeflateStream::get_TotalIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_TotalIn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::DeflateStream*), 36));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_TotalOut
int64_t Ionic::Zlib::DeflateStream::get_TotalOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_TotalOut");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::DeflateStream*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.CompressString
::ArrayW<uint8_t> Ionic::Zlib::DeflateStream::CompressString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::CompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateStream", "CompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.CompressBuffer
::ArrayW<uint8_t> Ionic::Zlib::DeflateStream::CompressBuffer(::ArrayW<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::CompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateStream", "CompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.UncompressString
::StringW Ionic::Zlib::DeflateStream::UncompressString(::ArrayW<uint8_t> compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::UncompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateStream", "UncompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.UncompressBuffer
::ArrayW<uint8_t> Ionic::Zlib::DeflateStream::UncompressBuffer(::ArrayW<uint8_t> compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::UncompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "DeflateStream", "UncompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.Dispose
void Ionic::Zlib::DeflateStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_CanRead
bool Ionic::Zlib::DeflateStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_CanSeek
bool Ionic::Zlib::DeflateStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_CanWrite
bool Ionic::Zlib::DeflateStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.Flush
void Ionic::Zlib::DeflateStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_Length
int64_t Ionic::Zlib::DeflateStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.get_Position
int64_t Ionic::Zlib::DeflateStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.set_Position
void Ionic::Zlib::DeflateStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.Read
int Ionic::Zlib::DeflateStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.Seek
int64_t Ionic::Zlib::DeflateStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.SetLength
void Ionic::Zlib::DeflateStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.DeflateStream.Write
void Ionic::Zlib::DeflateStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::DeflateStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.GZipStream
#include "Ionic/Zlib/GZipStream.hpp"
// Including type: Ionic.Zlib.ZlibBaseStream
#include "Ionic/Zlib/ZlibBaseStream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime _unixEpoch
::System::DateTime Ionic::Zlib::GZipStream::_get__unixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::_get__unixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("Ionic.Zlib", "GZipStream", "_unixEpoch"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime _unixEpoch
void Ionic::Zlib::GZipStream::_set__unixEpoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::_set__unixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "GZipStream", "_unixEpoch", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Text.Encoding iso8859dash1
::System::Text::Encoding* Ionic::Zlib::GZipStream::_get_iso8859dash1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::_get_iso8859dash1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Ionic.Zlib", "GZipStream", "iso8859dash1"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Text.Encoding iso8859dash1
void Ionic::Zlib::GZipStream::_set_iso8859dash1(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::_set_iso8859dash1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "GZipStream", "iso8859dash1", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> LastModified
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& Ionic::Zlib::GZipStream::dyn_LastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn_LastModified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastModified"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _headerByteCount
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::GZipStream::dyn__headerByteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn__headerByteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerByteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZlibBaseStream _baseStream
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibBaseStream*& Ionic::Zlib::GZipStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibBaseStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::GZipStream::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstReadDone
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::GZipStream::dyn__firstReadDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn__firstReadDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstReadDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _FileName
[[deprecated("Use field access instead!")]] ::StringW& Ionic::Zlib::GZipStream::dyn__FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn__FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _Comment
[[deprecated("Use field access instead!")]] ::StringW& Ionic::Zlib::GZipStream::dyn__Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn__Comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Crc32
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::GZipStream::dyn__Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::dyn__Crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Crc32"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_Comment
::StringW Ionic::Zlib::GZipStream::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.set_Comment
void Ionic::Zlib::GZipStream::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_FileName
::StringW Ionic::Zlib::GZipStream::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.set_FileName
void Ionic::Zlib::GZipStream::set_FileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::set_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_Crc32
int Ionic::Zlib::GZipStream::get_Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_Crc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_FlushMode
::Ionic::Zlib::FlushType Ionic::Zlib::GZipStream::get_FlushMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_FlushMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::GZipStream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::FlushType, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.set_FlushMode
void Ionic::Zlib::GZipStream::set_FlushMode(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::set_FlushMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::GZipStream*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_BufferSize
int Ionic::Zlib::GZipStream::get_BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.set_BufferSize
void Ionic::Zlib::GZipStream::set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::set_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_TotalIn
int64_t Ionic::Zlib::GZipStream::get_TotalIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_TotalIn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::GZipStream*), 36));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_TotalOut
int64_t Ionic::Zlib::GZipStream::get_TotalOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_TotalOut");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::GZipStream*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.EmitHeader
int Ionic::Zlib::GZipStream::EmitHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::EmitHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmitHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.CompressString
::ArrayW<uint8_t> Ionic::Zlib::GZipStream::CompressString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::CompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "GZipStream", "CompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Ionic.Zlib.GZipStream.CompressBuffer
::ArrayW<uint8_t> Ionic::Zlib::GZipStream::CompressBuffer(::ArrayW<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::CompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "GZipStream", "CompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: Ionic.Zlib.GZipStream.UncompressString
::StringW Ionic::Zlib::GZipStream::UncompressString(::ArrayW<uint8_t> compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::UncompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "GZipStream", "UncompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed);
}
// Autogenerated method: Ionic.Zlib.GZipStream.UncompressBuffer
::ArrayW<uint8_t> Ionic::Zlib::GZipStream::UncompressBuffer(::ArrayW<uint8_t> compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::UncompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "GZipStream", "UncompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed);
}
// Autogenerated method: Ionic.Zlib.GZipStream..cctor
void Ionic::Zlib::GZipStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "GZipStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.Dispose
void Ionic::Zlib::GZipStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_CanRead
bool Ionic::Zlib::GZipStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_CanSeek
bool Ionic::Zlib::GZipStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_CanWrite
bool Ionic::Zlib::GZipStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.Flush
void Ionic::Zlib::GZipStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_Length
int64_t Ionic::Zlib::GZipStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.get_Position
int64_t Ionic::Zlib::GZipStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.GZipStream.set_Position
void Ionic::Zlib::GZipStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.GZipStream.Read
int Ionic::Zlib::GZipStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Zlib.GZipStream.Seek
int64_t Ionic::Zlib::GZipStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Ionic.Zlib.GZipStream.SetLength
void Ionic::Zlib::GZipStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.GZipStream.Write
void Ionic::Zlib::GZipStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::GZipStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.InfTree
#include "Ionic/Zlib/InfTree.hpp"
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MANY
int Ionic::Zlib::InfTree::_get_MANY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_MANY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "MANY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MANY
void Ionic::Zlib::InfTree::_set_MANY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_MANY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "MANY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_OK
int Ionic::Zlib::InfTree::_get_Z_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_OK"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_OK
void Ionic::Zlib::InfTree::_set_Z_OK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_OK", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_STREAM_END
int Ionic::Zlib::InfTree::_get_Z_STREAM_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_STREAM_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_STREAM_END"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_STREAM_END
void Ionic::Zlib::InfTree::_set_Z_STREAM_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_STREAM_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_STREAM_END", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_NEED_DICT
int Ionic::Zlib::InfTree::_get_Z_NEED_DICT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_NEED_DICT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_NEED_DICT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_NEED_DICT
void Ionic::Zlib::InfTree::_set_Z_NEED_DICT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_NEED_DICT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_NEED_DICT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_ERRNO
int Ionic::Zlib::InfTree::_get_Z_ERRNO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_ERRNO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_ERRNO"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_ERRNO
void Ionic::Zlib::InfTree::_set_Z_ERRNO(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_ERRNO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_ERRNO", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_STREAM_ERROR
int Ionic::Zlib::InfTree::_get_Z_STREAM_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_STREAM_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_STREAM_ERROR"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_STREAM_ERROR
void Ionic::Zlib::InfTree::_set_Z_STREAM_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_STREAM_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_STREAM_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_DATA_ERROR
int Ionic::Zlib::InfTree::_get_Z_DATA_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_DATA_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_DATA_ERROR"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_DATA_ERROR
void Ionic::Zlib::InfTree::_set_Z_DATA_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_DATA_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_DATA_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_MEM_ERROR
int Ionic::Zlib::InfTree::_get_Z_MEM_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_MEM_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_MEM_ERROR"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_MEM_ERROR
void Ionic::Zlib::InfTree::_set_Z_MEM_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_MEM_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_MEM_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_BUF_ERROR
int Ionic::Zlib::InfTree::_get_Z_BUF_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_BUF_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_BUF_ERROR"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_BUF_ERROR
void Ionic::Zlib::InfTree::_set_Z_BUF_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_BUF_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_BUF_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_VERSION_ERROR
int Ionic::Zlib::InfTree::_get_Z_VERSION_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_Z_VERSION_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "Z_VERSION_ERROR"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_VERSION_ERROR
void Ionic::Zlib::InfTree::_set_Z_VERSION_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_Z_VERSION_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "Z_VERSION_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 fixed_bl
int Ionic::Zlib::InfTree::_get_fixed_bl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_fixed_bl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "fixed_bl"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 fixed_bl
void Ionic::Zlib::InfTree::_set_fixed_bl(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_fixed_bl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "fixed_bl", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 fixed_bd
int Ionic::Zlib::InfTree::_get_fixed_bd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_fixed_bd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "fixed_bd"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 fixed_bd
void Ionic::Zlib::InfTree::_set_fixed_bd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_fixed_bd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "fixed_bd", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] fixed_tl
::ArrayW<int> Ionic::Zlib::InfTree::_get_fixed_tl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_fixed_tl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InfTree", "fixed_tl"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] fixed_tl
void Ionic::Zlib::InfTree::_set_fixed_tl(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_fixed_tl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "fixed_tl", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] fixed_td
::ArrayW<int> Ionic::Zlib::InfTree::_get_fixed_td() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_fixed_td");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InfTree", "fixed_td"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] fixed_td
void Ionic::Zlib::InfTree::_set_fixed_td(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_fixed_td");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "fixed_td", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cplens
::ArrayW<int> Ionic::Zlib::InfTree::_get_cplens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_cplens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InfTree", "cplens"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cplens
void Ionic::Zlib::InfTree::_set_cplens(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_cplens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "cplens", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cplext
::ArrayW<int> Ionic::Zlib::InfTree::_get_cplext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_cplext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InfTree", "cplext"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cplext
void Ionic::Zlib::InfTree::_set_cplext(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_cplext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "cplext", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cpdist
::ArrayW<int> Ionic::Zlib::InfTree::_get_cpdist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_cpdist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InfTree", "cpdist"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cpdist
void Ionic::Zlib::InfTree::_set_cpdist(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_cpdist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "cpdist", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cpdext
::ArrayW<int> Ionic::Zlib::InfTree::_get_cpdext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_cpdext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InfTree", "cpdext"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cpdext
void Ionic::Zlib::InfTree::_set_cpdext(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_cpdext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "cpdext", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 BMAX
int Ionic::Zlib::InfTree::_get_BMAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_get_BMAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InfTree", "BMAX"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 BMAX
void Ionic::Zlib::InfTree::_set_BMAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::_set_BMAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InfTree", "BMAX", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] hn
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InfTree::dyn_hn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::dyn_hn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hn"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] v
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InfTree::dyn_v() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::dyn_v");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] c
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InfTree::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] r
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InfTree::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] u
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InfTree::dyn_u() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::dyn_u");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "u"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] x
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InfTree::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.InfTree.huft_build
int Ionic::Zlib::InfTree::huft_build(::ArrayW<int> b, int bindex, int n, int s, ::ArrayW<int> d, ::ArrayW<int> e, ::ArrayW<int> t, ::ArrayW<int> m, ::ArrayW<int> hp, ::ArrayW<int> hn, ::ArrayW<int> v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::huft_build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "huft_build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(bindex), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(hp), ::il2cpp_utils::ExtractType(hn), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b, bindex, n, s, d, e, t, m, hp, hn, v);
}
// Autogenerated method: Ionic.Zlib.InfTree.inflate_trees_bits
int Ionic::Zlib::InfTree::inflate_trees_bits(::ArrayW<int> c, ::ArrayW<int> bb, ::ArrayW<int> tb, ::ArrayW<int> hp, ::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::inflate_trees_bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inflate_trees_bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(bb), ::il2cpp_utils::ExtractType(tb), ::il2cpp_utils::ExtractType(hp), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c, bb, tb, hp, z);
}
// Autogenerated method: Ionic.Zlib.InfTree.inflate_trees_dynamic
int Ionic::Zlib::InfTree::inflate_trees_dynamic(int nl, int nd, ::ArrayW<int> c, ::ArrayW<int> bl, ::ArrayW<int> bd, ::ArrayW<int> tl, ::ArrayW<int> td, ::ArrayW<int> hp, ::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::inflate_trees_dynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inflate_trees_dynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nl), ::il2cpp_utils::ExtractType(nd), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(hp), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, nl, nd, c, bl, bd, tl, td, hp, z);
}
// Autogenerated method: Ionic.Zlib.InfTree.inflate_trees_fixed
int Ionic::Zlib::InfTree::inflate_trees_fixed(::ArrayW<int> bl, ::ArrayW<int> bd, ::ArrayW<::ArrayW<int>> tl, ::ArrayW<::ArrayW<int>> td, ::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::inflate_trees_fixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "InfTree", "inflate_trees_fixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bl, bd, tl, td, z);
}
// Autogenerated method: Ionic.Zlib.InfTree.initWorkArea
void Ionic::Zlib::InfTree::initWorkArea(int vsize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::initWorkArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "initWorkArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vsize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vsize);
}
// Autogenerated method: Ionic.Zlib.InfTree..cctor
void Ionic::Zlib::InfTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InfTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "InfTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Ionic.Zlib.InflateBlocks
#include "Ionic/Zlib/InflateBlocks.hpp"
// Including type: Ionic.Zlib.InflateCodes
#include "Ionic/Zlib/InflateCodes.hpp"
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
// Including type: Ionic.Zlib.InfTree
#include "Ionic/Zlib/InfTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MANY
int Ionic::Zlib::InflateBlocks::_get_MANY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::_get_MANY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateBlocks", "MANY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MANY
void Ionic::Zlib::InflateBlocks::_set_MANY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::_set_MANY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks", "MANY", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] border
::ArrayW<int> Ionic::Zlib::InflateBlocks::_get_border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::_get_border");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InflateBlocks", "border"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] border
void Ionic::Zlib::InflateBlocks::_set_border(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::_set_border");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks", "border", value));
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Zlib.InflateBlocks/InflateBlockMode mode
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::InflateBlocks::InflateBlockMode& Ionic::Zlib::InflateBlocks::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::InflateBlocks::InflateBlockMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 left
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "left"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 table
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "table"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 index
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] blens
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InflateBlocks::dyn_blens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_blens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blens"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] bb
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InflateBlocks::dyn_bb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_bb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bb"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] tb
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InflateBlocks::dyn_tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tb"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.InflateCodes codes
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::InflateCodes*& Ionic::Zlib::InflateBlocks::dyn_codes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_codes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "codes"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::InflateCodes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZlibCodec _codec
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibCodec*& Ionic::Zlib::InflateBlocks::dyn__codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn__codec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codec"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bitk
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_bitk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_bitk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitk"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bitb
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_bitb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_bitb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] hufts
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InflateBlocks::dyn_hufts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_hufts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hufts"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] window
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::InflateBlocks::dyn_window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 end
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 readAt
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_readAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_readAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 writeAt
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::dyn_writeAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_writeAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object checkfn
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Ionic::Zlib::InflateBlocks::dyn_checkfn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_checkfn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkfn"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 check
[[deprecated("Use field access instead!")]] uint& Ionic::Zlib::InflateBlocks::dyn_check() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_check");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "check"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.InfTree inftree
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::InfTree*& Ionic::Zlib::InflateBlocks::dyn_inftree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::dyn_inftree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inftree"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::InfTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.InflateBlocks.Reset
uint Ionic::Zlib::InflateBlocks::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.InflateBlocks.Process
int Ionic::Zlib::InflateBlocks::Process(int r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r);
}
// Autogenerated method: Ionic.Zlib.InflateBlocks.Free
void Ionic::Zlib::InflateBlocks::Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.InflateBlocks.SetDictionary
void Ionic::Zlib::InflateBlocks::SetDictionary(::ArrayW<uint8_t> d, int start, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::SetDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, start, n);
}
// Autogenerated method: Ionic.Zlib.InflateBlocks.SyncPoint
int Ionic::Zlib::InflateBlocks::SyncPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::SyncPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.InflateBlocks.Flush
int Ionic::Zlib::InflateBlocks::Flush(int r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r);
}
// Autogenerated method: Ionic.Zlib.InflateBlocks..cctor
void Ionic::Zlib::InflateBlocks::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "InflateBlocks", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.InflateBlocks/InflateBlockMode
#include "Ionic/Zlib/InflateBlocks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode TYPE
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TYPE"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode TYPE
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TYPE(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TYPE", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode LENS
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_LENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_LENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "LENS"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode LENS
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_LENS(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_LENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "LENS", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode STORED
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_STORED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_STORED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "STORED"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode STORED
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_STORED(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_STORED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "STORED", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode TABLE
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TABLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TABLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TABLE"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode TABLE
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TABLE(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TABLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TABLE", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode BTREE
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BTREE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BTREE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BTREE"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode BTREE
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BTREE(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BTREE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BTREE", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode DTREE
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DTREE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DTREE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DTREE"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode DTREE
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DTREE(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DTREE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DTREE", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode CODES
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "CODES"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode CODES
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_CODES(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "CODES", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode DRY
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DRY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DRY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DRY"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode DRY
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DRY(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DRY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DRY", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode DONE
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DONE"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode DONE
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DONE(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DONE", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode BAD
::Ionic::Zlib::InflateBlocks::InflateBlockMode Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BAD"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateBlocks/InflateBlockMode BAD
void Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BAD(::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BAD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateBlocks::InflateBlockMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateBlocks::InflateBlockMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.InternalInflateConstants
#include "Ionic/Zlib/InternalInflateConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] InflateMask
::ArrayW<int> Ionic::Zlib::InternalInflateConstants::_get_InflateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalInflateConstants::_get_InflateMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "InternalInflateConstants", "InflateMask"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] InflateMask
void Ionic::Zlib::InternalInflateConstants::_set_InflateMask(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalInflateConstants::_set_InflateMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalInflateConstants", "InflateMask", value));
}
// Autogenerated method: Ionic.Zlib.InternalInflateConstants..cctor
void Ionic::Zlib::InternalInflateConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalInflateConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "InternalInflateConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.InflateCodes
#include "Ionic/Zlib/InflateCodes.hpp"
// Including type: Ionic.Zlib.InflateBlocks
#include "Ionic/Zlib/InflateBlocks.hpp"
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 START
int Ionic::Zlib::InflateCodes::_get_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "START"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 START
void Ionic::Zlib::InflateCodes::_set_START(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "START", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LEN
int Ionic::Zlib::InflateCodes::_get_LEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_LEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "LEN"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LEN
void Ionic::Zlib::InflateCodes::_set_LEN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_LEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "LEN", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LENEXT
int Ionic::Zlib::InflateCodes::_get_LENEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_LENEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "LENEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LENEXT
void Ionic::Zlib::InflateCodes::_set_LENEXT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_LENEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "LENEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DIST
int Ionic::Zlib::InflateCodes::_get_DIST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_DIST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "DIST"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DIST
void Ionic::Zlib::InflateCodes::_set_DIST(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_DIST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "DIST", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DISTEXT
int Ionic::Zlib::InflateCodes::_get_DISTEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_DISTEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "DISTEXT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DISTEXT
void Ionic::Zlib::InflateCodes::_set_DISTEXT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_DISTEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "DISTEXT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 COPY
int Ionic::Zlib::InflateCodes::_get_COPY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_COPY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "COPY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 COPY
void Ionic::Zlib::InflateCodes::_set_COPY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_COPY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "COPY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LIT
int Ionic::Zlib::InflateCodes::_get_LIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_LIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "LIT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LIT
void Ionic::Zlib::InflateCodes::_set_LIT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_LIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "LIT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WASH
int Ionic::Zlib::InflateCodes::_get_WASH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_WASH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "WASH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WASH
void Ionic::Zlib::InflateCodes::_set_WASH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_WASH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "WASH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 END
int Ionic::Zlib::InflateCodes::_get_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "END"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 END
void Ionic::Zlib::InflateCodes::_set_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "END", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BADCODE
int Ionic::Zlib::InflateCodes::_get_BADCODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_get_BADCODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateCodes", "BADCODE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BADCODE
void Ionic::Zlib::InflateCodes::_set_BADCODE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::_set_BADCODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateCodes", "BADCODE", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 mode
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 len
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] tree
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InflateCodes::dyn_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tree"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 tree_index
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_tree_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_tree_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tree_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 need
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_need() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_need");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "need"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lit
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_lit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_lit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bitsToGet
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_bitsToGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_bitsToGet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitsToGet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dist
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_dist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_dist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dist"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte lbits
[[deprecated("Use field access instead!")]] uint8_t& Ionic::Zlib::InflateCodes::dyn_lbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_lbits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lbits"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte dbits
[[deprecated("Use field access instead!")]] uint8_t& Ionic::Zlib::InflateCodes::dyn_dbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_dbits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dbits"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] ltree
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InflateCodes::dyn_ltree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_ltree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ltree"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ltree_index
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_ltree_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_ltree_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ltree_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] dtree
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::InflateCodes::dyn_dtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_dtree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtree"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dtree_index
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateCodes::dyn_dtree_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::dyn_dtree_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtree_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.InflateCodes.Init
void Ionic::Zlib::InflateCodes::Init(int bl, int bd, ::ArrayW<int> tl, int tl_index, ::ArrayW<int> td, int td_index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(tl_index), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(td_index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bl, bd, tl, tl_index, td, td_index);
}
// Autogenerated method: Ionic.Zlib.InflateCodes.Process
int Ionic::Zlib::InflateCodes::Process(::Ionic::Zlib::InflateBlocks* blocks, int r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blocks), ::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, blocks, r);
}
// Autogenerated method: Ionic.Zlib.InflateCodes.InflateFast
int Ionic::Zlib::InflateCodes::InflateFast(int bl, int bd, ::ArrayW<int> tl, int tl_index, ::ArrayW<int> td, int td_index, ::Ionic::Zlib::InflateBlocks* s, ::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateCodes::InflateFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InflateFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(tl_index), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(td_index), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bl, bd, tl, tl_index, td, td_index, s, z);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.InflateManager
#include "Ionic/Zlib/InflateManager.hpp"
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
// Including type: Ionic.Zlib.InflateBlocks
#include "Ionic/Zlib/InflateBlocks.hpp"
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 PRESET_DICT
int Ionic::Zlib::InflateManager::_get_PRESET_DICT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::_get_PRESET_DICT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateManager", "PRESET_DICT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PRESET_DICT
void Ionic::Zlib::InflateManager::_set_PRESET_DICT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::_set_PRESET_DICT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager", "PRESET_DICT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Z_DEFLATED
int Ionic::Zlib::InflateManager::_get_Z_DEFLATED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::_get_Z_DEFLATED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InflateManager", "Z_DEFLATED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Z_DEFLATED
void Ionic::Zlib::InflateManager::_set_Z_DEFLATED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::_set_Z_DEFLATED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager", "Z_DEFLATED", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] mark
::ArrayW<uint8_t> Ionic::Zlib::InflateManager::_get_mark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::_get_mark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Ionic.Zlib", "InflateManager", "mark"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] mark
void Ionic::Zlib::InflateManager::_set_mark(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::_set_mark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager", "mark", value));
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Zlib.InflateManager/InflateManagerMode mode
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::InflateManager::InflateManagerMode& Ionic::Zlib::InflateManager::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::InflateManager::InflateManagerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZlibCodec _codec
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibCodec*& Ionic::Zlib::InflateManager::dyn__codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn__codec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codec"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 method
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateManager::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 computedCheck
[[deprecated("Use field access instead!")]] uint& Ionic::Zlib::InflateManager::dyn_computedCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn_computedCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computedCheck"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 expectedCheck
[[deprecated("Use field access instead!")]] uint& Ionic::Zlib::InflateManager::dyn_expectedCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn_expectedCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedCheck"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 marker
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateManager::dyn_marker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn_marker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "marker"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handleRfc1950HeaderBytes
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::InflateManager::dyn__handleRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn__handleRfc1950HeaderBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handleRfc1950HeaderBytes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 wbits
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateManager::dyn_wbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn_wbits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wbits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.InflateBlocks blocks
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::InflateBlocks*& Ionic::Zlib::InflateManager::dyn_blocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::dyn_blocks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocks"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::InflateBlocks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.InflateManager.get_HandleRfc1950HeaderBytes
bool Ionic::Zlib::InflateManager::get_HandleRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::get_HandleRfc1950HeaderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandleRfc1950HeaderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.InflateManager.set_HandleRfc1950HeaderBytes
void Ionic::Zlib::InflateManager::set_HandleRfc1950HeaderBytes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::set_HandleRfc1950HeaderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HandleRfc1950HeaderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.InflateManager.Reset
int Ionic::Zlib::InflateManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.InflateManager.End
int Ionic::Zlib::InflateManager::End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.InflateManager.Initialize
int Ionic::Zlib::InflateManager::Initialize(::Ionic::Zlib::ZlibCodec* codec, int w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, w);
}
// Autogenerated method: Ionic.Zlib.InflateManager.Inflate
int Ionic::Zlib::InflateManager::Inflate(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::Inflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.InflateManager.SetDictionary
int Ionic::Zlib::InflateManager::SetDictionary(::ArrayW<uint8_t> dictionary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::SetDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dictionary);
}
// Autogenerated method: Ionic.Zlib.InflateManager.Sync
int Ionic::Zlib::InflateManager::Sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::Sync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.InflateManager.SyncPoint
int Ionic::Zlib::InflateManager::SyncPoint(::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::SyncPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, z);
}
// Autogenerated method: Ionic.Zlib.InflateManager..cctor
void Ionic::Zlib::InflateManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "InflateManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.InflateManager/InflateManagerMode
#include "Ionic/Zlib/InflateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode METHOD
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_METHOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_METHOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "METHOD"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode METHOD
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_METHOD(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_METHOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "METHOD", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode FLAG
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_FLAG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_FLAG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "FLAG"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode FLAG
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_FLAG(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_FLAG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "FLAG", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT4
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT4"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT4
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT4(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT4", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT3
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT3"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT3
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT3(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT3", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT2
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT2"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT2
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT2(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT2", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT1
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT1"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT1
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT1(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT1", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT0
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT0"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DICT0
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT0(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT0", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode BLOCKS
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_BLOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_BLOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "BLOCKS"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode BLOCKS
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_BLOCKS(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_BLOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "BLOCKS", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK4
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK4"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK4
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK4(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK4", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK3
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK3"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK3
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK3(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK3", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK2
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK2"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK2
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK2(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK2", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK1
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK1"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode CHECK1
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK1(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK1", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DONE
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_DONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "DONE"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode DONE
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_DONE(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "DONE", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.InflateManager/InflateManagerMode BAD
::Ionic::Zlib::InflateManager::InflateManagerMode Ionic::Zlib::InflateManager::InflateManagerMode::_get_BAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_get_BAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::InflateManager::InflateManagerMode>("Ionic.Zlib", "InflateManager/InflateManagerMode", "BAD"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.InflateManager/InflateManagerMode BAD
void Ionic::Zlib::InflateManager::InflateManagerMode::_set_BAD(::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::_set_BAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InflateManager/InflateManagerMode", "BAD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::InflateManager::InflateManagerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InflateManager::InflateManagerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.WorkItem
#include "Ionic/Zlib/WorkItem.hpp"
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::WorkItem::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] compressed
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::WorkItem::dyn_compressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_compressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressed"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 crc
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::WorkItem::dyn_crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_crc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::WorkItem::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ordinal
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::WorkItem::dyn_ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_ordinal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ordinal"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 inputBytesAvailable
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::WorkItem::dyn_inputBytesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_inputBytesAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputBytesAvailable"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 compressedBytesAvailable
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::WorkItem::dyn_compressedBytesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_compressedBytesAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressedBytesAvailable"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Ionic.Zlib.ZlibCodec compressor
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibCodec*& Ionic::Zlib::WorkItem::dyn_compressor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::WorkItem::dyn_compressor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressor"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Ionic.Zlib.ParallelDeflateOutputStream
#include "Ionic/Zlib/ParallelDeflateOutputStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Ionic.Zlib.WorkItem
#include "Ionic/Zlib/WorkItem.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: Ionic.Crc.CRC32
#include "Ionic/Crc/CRC32.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 IO_BUFFER_SIZE_DEFAULT
int Ionic::Zlib::ParallelDeflateOutputStream::_get_IO_BUFFER_SIZE_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_get_IO_BUFFER_SIZE_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ParallelDeflateOutputStream", "IO_BUFFER_SIZE_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 IO_BUFFER_SIZE_DEFAULT
void Ionic::Zlib::ParallelDeflateOutputStream::_set_IO_BUFFER_SIZE_DEFAULT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_set_IO_BUFFER_SIZE_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream", "IO_BUFFER_SIZE_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 BufferPairsPerCore
int Ionic::Zlib::ParallelDeflateOutputStream::_get_BufferPairsPerCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_get_BufferPairsPerCore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ParallelDeflateOutputStream", "BufferPairsPerCore"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 BufferPairsPerCore
void Ionic::Zlib::ParallelDeflateOutputStream::_set_BufferPairsPerCore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_set_BufferPairsPerCore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream", "BufferPairsPerCore", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Ionic.Zlib.WorkItem> _pool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Ionic::Zlib::WorkItem*>*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Ionic::Zlib::WorkItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ParallelDeflateOutputStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emitting
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ParallelDeflateOutputStream::dyn_emitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn_emitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _outStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__outStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__outStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxBufferPairs
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ParallelDeflateOutputStream::dyn__maxBufferPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__maxBufferPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxBufferPairs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufferSize
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ParallelDeflateOutputStream::dyn__bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AutoResetEvent _newlyCompressedBlob
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__newlyCompressedBlob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__newlyCompressedBlob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newlyCompressedBlob"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _outputLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__outputLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__outputLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isClosed
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ParallelDeflateOutputStream::dyn__isClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__isClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isClosed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstWriteDone
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ParallelDeflateOutputStream::dyn__firstWriteDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__firstWriteDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstWriteDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentlyFilling
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ParallelDeflateOutputStream::dyn__currentlyFilling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__currentlyFilling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyFilling"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFilled
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastFilled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFilled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastWritten
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastWritten"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _latestCompressed
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestCompressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latestCompressed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Crc32
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ParallelDeflateOutputStream::dyn__Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__Crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Crc32"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Crc.CRC32 _runningCrc
[[deprecated("Use field access instead!")]] ::Ionic::Crc::CRC32*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__runningCrc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__runningCrc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runningCrc"))->offset;
  return *reinterpret_cast<::Ionic::Crc::CRC32**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _latestLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latestLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Int32> _toWrite
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int>*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__toWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__toWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toWrite"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Int32> _toFill
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int>*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__toFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__toFill");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toFill"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _totalBytesProcessed
[[deprecated("Use field access instead!")]] int64_t& Ionic::Zlib::ParallelDeflateOutputStream::dyn__totalBytesProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__totalBytesProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalBytesProcessed"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Zlib.CompressionLevel _compressLevel
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionLevel& Ionic::Zlib::ParallelDeflateOutputStream::dyn__compressLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__compressLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressLevel"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception _pendingException
[[deprecated("Use field access instead!")]] ::System::Exception*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__pendingException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__pendingException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handlingException
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ParallelDeflateOutputStream::dyn__handlingException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__handlingException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handlingException"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _eLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Ionic::Zlib::ParallelDeflateOutputStream::dyn__eLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__eLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Zlib.ParallelDeflateOutputStream/TraceBits _DesiredTrace
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits& Ionic::Zlib::ParallelDeflateOutputStream::dyn__DesiredTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn__DesiredTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_DesiredTrace"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Zlib.CompressionStrategy <Strategy>k__BackingField
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionStrategy& Ionic::Zlib::ParallelDeflateOutputStream::dyn_$Strategy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::dyn_$Strategy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Strategy>k__BackingField"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_Strategy
::Ionic::Zlib::CompressionStrategy Ionic::Zlib::ParallelDeflateOutputStream::get_Strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_Strategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Strategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::CompressionStrategy, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.set_Strategy
void Ionic::Zlib::ParallelDeflateOutputStream::set_Strategy(::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::set_Strategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Strategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_MaxBufferPairs
int Ionic::Zlib::ParallelDeflateOutputStream::get_MaxBufferPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_MaxBufferPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxBufferPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.set_MaxBufferPairs
void Ionic::Zlib::ParallelDeflateOutputStream::set_MaxBufferPairs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::set_MaxBufferPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxBufferPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_BufferSize
int Ionic::Zlib::ParallelDeflateOutputStream::get_BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.set_BufferSize
void Ionic::Zlib::ParallelDeflateOutputStream::set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::set_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_Crc32
int Ionic::Zlib::ParallelDeflateOutputStream::get_Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_Crc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_BytesProcessed
int64_t Ionic::Zlib::ParallelDeflateOutputStream::get_BytesProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_BytesProcessed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesProcessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream._InitializePoolOfWorkItems
void Ionic::Zlib::ParallelDeflateOutputStream::_InitializePoolOfWorkItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_InitializePoolOfWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializePoolOfWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream._FlushFinish
void Ionic::Zlib::ParallelDeflateOutputStream::_FlushFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_FlushFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_FlushFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream._Flush
void Ionic::Zlib::ParallelDeflateOutputStream::_Flush(bool lastInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lastInput);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Dispose
void Ionic::Zlib::ParallelDeflateOutputStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Reset
void Ionic::Zlib::ParallelDeflateOutputStream::Reset(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.EmitPendingBuffers
void Ionic::Zlib::ParallelDeflateOutputStream::EmitPendingBuffers(bool doAll, bool mustWait) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::EmitPendingBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmitPendingBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doAll), ::il2cpp_utils::ExtractType(mustWait)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doAll, mustWait);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream._DeflateOne
void Ionic::Zlib::ParallelDeflateOutputStream::_DeflateOne(::Il2CppObject* wi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::_DeflateOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_DeflateOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wi);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.DeflateOneSegment
bool Ionic::Zlib::ParallelDeflateOutputStream::DeflateOneSegment(::Ionic::Zlib::WorkItem* workitem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::DeflateOneSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateOneSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(workitem)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, workitem);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.TraceOutput
void Ionic::Zlib::ParallelDeflateOutputStream::TraceOutput(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits bits, ::StringW format, ::ArrayW<::Il2CppObject*> varParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TraceOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(varParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bits, format, varParams);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream..cctor
void Ionic::Zlib::ParallelDeflateOutputStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ParallelDeflateOutputStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Write
void Ionic::Zlib::ParallelDeflateOutputStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Flush
void Ionic::Zlib::ParallelDeflateOutputStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Close
void Ionic::Zlib::ParallelDeflateOutputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Dispose
void Ionic::Zlib::ParallelDeflateOutputStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_CanSeek
bool Ionic::Zlib::ParallelDeflateOutputStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_CanRead
bool Ionic::Zlib::ParallelDeflateOutputStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_CanWrite
bool Ionic::Zlib::ParallelDeflateOutputStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_Length
int64_t Ionic::Zlib::ParallelDeflateOutputStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.get_Position
int64_t Ionic::Zlib::ParallelDeflateOutputStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.set_Position
void Ionic::Zlib::ParallelDeflateOutputStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Read
int Ionic::Zlib::ParallelDeflateOutputStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.Seek
int64_t Ionic::Zlib::ParallelDeflateOutputStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Ionic.Zlib.ParallelDeflateOutputStream.SetLength
void Ionic::Zlib::ParallelDeflateOutputStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ParallelDeflateOutputStream/TraceBits
#include "Ionic/Zlib/ParallelDeflateOutputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits None
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "None"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits None
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_None(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits NotUsed1
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_NotUsed1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_NotUsed1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "NotUsed1"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits NotUsed1
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_NotUsed1(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_NotUsed1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "NotUsed1", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitLock
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitLock"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitLock
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitLock(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitLock", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitEnter
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitEnter"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitEnter
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitEnter(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitEnter", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitBegin
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitBegin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitBegin"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitBegin
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitBegin(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitBegin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitBegin", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitDone
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitDone"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitDone
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitDone(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitDone", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitSkip
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitSkip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitSkip"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitSkip
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitSkip(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitSkip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitSkip", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitAll
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitAll"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitAll
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitAll(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitAll", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Flush
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Flush
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Flush(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Lifecycle
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Lifecycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Lifecycle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Lifecycle"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Lifecycle
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Lifecycle(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Lifecycle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Lifecycle", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Session
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Session");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Session"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Session
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Session(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Session");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Session", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Synch
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Synch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Synch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Synch"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Synch
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Synch(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Synch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Synch", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Instance
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Instance
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Instance(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Instance", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Compress
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Compress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Compress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Compress"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Compress
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Compress(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Compress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Compress", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Write
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Write
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Write(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteEnter
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteEnter"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteEnter
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteEnter(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteEnter", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteTake
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteTake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteTake");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteTake"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteTake
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteTake(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteTake");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteTake", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits All
::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "All"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ParallelDeflateOutputStream/TraceBits All
void Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_All(::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZTree
#include "Ionic/Zlib/ZTree.hpp"
// Including type: Ionic.Zlib.StaticTree
#include "Ionic/Zlib/StaticTree.hpp"
// Including type: Ionic.Zlib.DeflateManager
#include "Ionic/Zlib/DeflateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 HEAP_SIZE
int Ionic::Zlib::ZTree::_get_HEAP_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_HEAP_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZTree", "HEAP_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 HEAP_SIZE
void Ionic::Zlib::ZTree::_set_HEAP_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_HEAP_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "HEAP_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] ExtraLengthBits
::ArrayW<int> Ionic::Zlib::ZTree::_get_ExtraLengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_ExtraLengthBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "ZTree", "ExtraLengthBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] ExtraLengthBits
void Ionic::Zlib::ZTree::_set_ExtraLengthBits(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_ExtraLengthBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "ExtraLengthBits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] ExtraDistanceBits
::ArrayW<int> Ionic::Zlib::ZTree::_get_ExtraDistanceBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_ExtraDistanceBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "ZTree", "ExtraDistanceBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] ExtraDistanceBits
void Ionic::Zlib::ZTree::_set_ExtraDistanceBits(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_ExtraDistanceBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "ExtraDistanceBits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] extra_blbits
::ArrayW<int> Ionic::Zlib::ZTree::_get_extra_blbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_extra_blbits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "ZTree", "extra_blbits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] extra_blbits
void Ionic::Zlib::ZTree::_set_extra_blbits(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_extra_blbits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "extra_blbits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.SByte[] bl_order
::ArrayW<int8_t> Ionic::Zlib::ZTree::_get_bl_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_bl_order");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("Ionic.Zlib", "ZTree", "bl_order"));
}
// Autogenerated static field setter
// Set static field: static readonly System.SByte[] bl_order
void Ionic::Zlib::ZTree::_set_bl_order(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_bl_order");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "bl_order", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 Buf_size
int Ionic::Zlib::ZTree::_get_Buf_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_Buf_size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZTree", "Buf_size"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 Buf_size
void Ionic::Zlib::ZTree::_set_Buf_size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_Buf_size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "Buf_size", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.SByte[] _dist_code
::ArrayW<int8_t> Ionic::Zlib::ZTree::_get__dist_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get__dist_code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("Ionic.Zlib", "ZTree", "_dist_code"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SByte[] _dist_code
void Ionic::Zlib::ZTree::_set__dist_code(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set__dist_code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "_dist_code", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.SByte[] LengthCode
::ArrayW<int8_t> Ionic::Zlib::ZTree::_get_LengthCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_LengthCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("Ionic.Zlib", "ZTree", "LengthCode"));
}
// Autogenerated static field setter
// Set static field: static readonly System.SByte[] LengthCode
void Ionic::Zlib::ZTree::_set_LengthCode(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_LengthCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "LengthCode", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] LengthBase
::ArrayW<int> Ionic::Zlib::ZTree::_get_LengthBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_LengthBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "ZTree", "LengthBase"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] LengthBase
void Ionic::Zlib::ZTree::_set_LengthBase(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_LengthBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "LengthBase", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DistanceBase
::ArrayW<int> Ionic::Zlib::ZTree::_get_DistanceBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_get_DistanceBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Ionic.Zlib", "ZTree", "DistanceBase"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DistanceBase
void Ionic::Zlib::ZTree::_set_DistanceBase(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::_set_DistanceBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZTree", "DistanceBase", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] dyn_tree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::ZTree::dyn_dyn_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::dyn_dyn_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dyn_tree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 max_code
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZTree::dyn_max_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::dyn_max_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max_code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.StaticTree staticTree
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::StaticTree*& Ionic::Zlib::ZTree::dyn_staticTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::dyn_staticTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticTree"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::StaticTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.ZTree.DistanceCode
int Ionic::Zlib::ZTree::DistanceCode(int dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::DistanceCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZTree", "DistanceCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dist)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dist);
}
// Autogenerated method: Ionic.Zlib.ZTree.gen_bitlen
void Ionic::Zlib::ZTree::gen_bitlen(::Ionic::Zlib::DeflateManager* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::gen_bitlen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gen_bitlen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Ionic.Zlib.ZTree.build_tree
void Ionic::Zlib::ZTree::build_tree(::Ionic::Zlib::DeflateManager* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::build_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "build_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Ionic.Zlib.ZTree.gen_codes
void Ionic::Zlib::ZTree::gen_codes(::ArrayW<int16_t> tree, int max_code, ::ArrayW<int16_t> bl_count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::gen_codes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZTree", "gen_codes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(max_code), ::il2cpp_utils::ExtractType(bl_count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree, max_code, bl_count);
}
// Autogenerated method: Ionic.Zlib.ZTree.bi_reverse
int Ionic::Zlib::ZTree::bi_reverse(int code, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::bi_reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZTree", "bi_reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code, len);
}
// Autogenerated method: Ionic.Zlib.ZTree..cctor
void Ionic::Zlib::ZTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.FlushType None
::Ionic::Zlib::FlushType Ionic::Zlib::FlushType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::FlushType>("Ionic.Zlib", "FlushType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.FlushType None
void Ionic::Zlib::FlushType::_set_None(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "FlushType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.FlushType Partial
::Ionic::Zlib::FlushType Ionic::Zlib::FlushType::_get_Partial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_get_Partial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::FlushType>("Ionic.Zlib", "FlushType", "Partial"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.FlushType Partial
void Ionic::Zlib::FlushType::_set_Partial(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_set_Partial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "FlushType", "Partial", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.FlushType Sync
::Ionic::Zlib::FlushType Ionic::Zlib::FlushType::_get_Sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_get_Sync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::FlushType>("Ionic.Zlib", "FlushType", "Sync"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.FlushType Sync
void Ionic::Zlib::FlushType::_set_Sync(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_set_Sync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "FlushType", "Sync", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.FlushType Full
::Ionic::Zlib::FlushType Ionic::Zlib::FlushType::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::FlushType>("Ionic.Zlib", "FlushType", "Full"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.FlushType Full
void Ionic::Zlib::FlushType::_set_Full(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "FlushType", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.FlushType Finish
::Ionic::Zlib::FlushType Ionic::Zlib::FlushType::_get_Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_get_Finish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::FlushType>("Ionic.Zlib", "FlushType", "Finish"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.FlushType Finish
void Ionic::Zlib::FlushType::_set_Finish(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::_set_Finish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "FlushType", "Finish", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::FlushType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::FlushType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.CompressionLevel
#include "Ionic/Zlib/CompressionLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel None
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel None
void Ionic::Zlib::CompressionLevel::_set_None(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level0
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level0"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level0
void Ionic::Zlib::CompressionLevel::_set_Level0(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level0", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel BestSpeed
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_BestSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_BestSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "BestSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel BestSpeed
void Ionic::Zlib::CompressionLevel::_set_BestSpeed(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_BestSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "BestSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level1
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level1"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level1
void Ionic::Zlib::CompressionLevel::_set_Level1(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level1", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level2
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level2"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level2
void Ionic::Zlib::CompressionLevel::_set_Level2(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level2", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level3
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level3"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level3
void Ionic::Zlib::CompressionLevel::_set_Level3(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level3", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level4
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level4"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level4
void Ionic::Zlib::CompressionLevel::_set_Level4(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level4", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level5
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level5"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level5
void Ionic::Zlib::CompressionLevel::_set_Level5(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level5", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Default
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Default
void Ionic::Zlib::CompressionLevel::_set_Default(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level6
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level6"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level6
void Ionic::Zlib::CompressionLevel::_set_Level6(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level6", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level7
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level7"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level7
void Ionic::Zlib::CompressionLevel::_set_Level7(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level7", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level8
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level8"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level8
void Ionic::Zlib::CompressionLevel::_set_Level8(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level8", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel BestCompression
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_BestCompression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_BestCompression");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "BestCompression"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel BestCompression
void Ionic::Zlib::CompressionLevel::_set_BestCompression(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_BestCompression");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "BestCompression", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionLevel Level9
::Ionic::Zlib::CompressionLevel Ionic::Zlib::CompressionLevel::_get_Level9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_get_Level9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionLevel>("Ionic.Zlib", "CompressionLevel", "Level9"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionLevel Level9
void Ionic::Zlib::CompressionLevel::_set_Level9(::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::_set_Level9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionLevel", "Level9", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::CompressionLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.CompressionStrategy
#include "Ionic/Zlib/CompressionStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionStrategy Default
::Ionic::Zlib::CompressionStrategy Ionic::Zlib::CompressionStrategy::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionStrategy::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionStrategy>("Ionic.Zlib", "CompressionStrategy", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionStrategy Default
void Ionic::Zlib::CompressionStrategy::_set_Default(::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionStrategy::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionStrategy", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionStrategy Filtered
::Ionic::Zlib::CompressionStrategy Ionic::Zlib::CompressionStrategy::_get_Filtered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionStrategy::_get_Filtered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionStrategy>("Ionic.Zlib", "CompressionStrategy", "Filtered"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionStrategy Filtered
void Ionic::Zlib::CompressionStrategy::_set_Filtered(::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionStrategy::_set_Filtered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionStrategy", "Filtered", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionStrategy HuffmanOnly
::Ionic::Zlib::CompressionStrategy Ionic::Zlib::CompressionStrategy::_get_HuffmanOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionStrategy::_get_HuffmanOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionStrategy>("Ionic.Zlib", "CompressionStrategy", "HuffmanOnly"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionStrategy HuffmanOnly
void Ionic::Zlib::CompressionStrategy::_set_HuffmanOnly(::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionStrategy::_set_HuffmanOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionStrategy", "HuffmanOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::CompressionStrategy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionStrategy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.CompressionMode
#include "Ionic/Zlib/CompressionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionMode Compress
::Ionic::Zlib::CompressionMode Ionic::Zlib::CompressionMode::_get_Compress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionMode::_get_Compress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionMode>("Ionic.Zlib", "CompressionMode", "Compress"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionMode Compress
void Ionic::Zlib::CompressionMode::_set_Compress(::Ionic::Zlib::CompressionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionMode::_set_Compress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionMode", "Compress", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.CompressionMode Decompress
::Ionic::Zlib::CompressionMode Ionic::Zlib::CompressionMode::_get_Decompress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionMode::_get_Decompress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::CompressionMode>("Ionic.Zlib", "CompressionMode", "Decompress"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.CompressionMode Decompress
void Ionic::Zlib::CompressionMode::_set_Decompress(::Ionic::Zlib::CompressionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionMode::_set_Decompress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "CompressionMode", "Decompress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::CompressionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::CompressionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZlibException
#include "Ionic/Zlib/ZlibException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.SharedUtils
#include "Ionic/Zlib/SharedUtils.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Ionic.Zlib.SharedUtils.URShift
int Ionic::Zlib::SharedUtils::URShift(int number, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::SharedUtils::URShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "SharedUtils", "URShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, bits);
}
// Autogenerated method: Ionic.Zlib.SharedUtils.ReadInput
int Ionic::Zlib::SharedUtils::ReadInput(::System::IO::TextReader* sourceTextReader, ::ArrayW<uint8_t> target, int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::SharedUtils::ReadInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "SharedUtils", "ReadInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceTextReader), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceTextReader, target, start, count);
}
// Autogenerated method: Ionic.Zlib.SharedUtils.ToByteArray
::ArrayW<uint8_t> Ionic::Zlib::SharedUtils::ToByteArray(::StringW sourceString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::SharedUtils::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "SharedUtils", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceString)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceString);
}
// Autogenerated method: Ionic.Zlib.SharedUtils.ToCharArray
::ArrayW<::Il2CppChar> Ionic::Zlib::SharedUtils::ToCharArray(::ArrayW<uint8_t> byteArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::SharedUtils::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "SharedUtils", "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byteArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.InternalConstants
#include "Ionic/Zlib/InternalConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 MAX_BITS
int Ionic::Zlib::InternalConstants::_get_MAX_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_MAX_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "MAX_BITS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 MAX_BITS
void Ionic::Zlib::InternalConstants::_set_MAX_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_MAX_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "MAX_BITS", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 BL_CODES
int Ionic::Zlib::InternalConstants::_get_BL_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_BL_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "BL_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 BL_CODES
void Ionic::Zlib::InternalConstants::_set_BL_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_BL_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "BL_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 D_CODES
int Ionic::Zlib::InternalConstants::_get_D_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_D_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "D_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 D_CODES
void Ionic::Zlib::InternalConstants::_set_D_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_D_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "D_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 LITERALS
int Ionic::Zlib::InternalConstants::_get_LITERALS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_LITERALS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "LITERALS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 LITERALS
void Ionic::Zlib::InternalConstants::_set_LITERALS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_LITERALS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "LITERALS", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 LENGTH_CODES
int Ionic::Zlib::InternalConstants::_get_LENGTH_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_LENGTH_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "LENGTH_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 LENGTH_CODES
void Ionic::Zlib::InternalConstants::_set_LENGTH_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_LENGTH_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "LENGTH_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 L_CODES
int Ionic::Zlib::InternalConstants::_get_L_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_L_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "L_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 L_CODES
void Ionic::Zlib::InternalConstants::_set_L_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_L_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "L_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 MAX_BL_BITS
int Ionic::Zlib::InternalConstants::_get_MAX_BL_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_MAX_BL_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "MAX_BL_BITS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 MAX_BL_BITS
void Ionic::Zlib::InternalConstants::_set_MAX_BL_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_MAX_BL_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "MAX_BL_BITS", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 REP_3_6
int Ionic::Zlib::InternalConstants::_get_REP_3_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_REP_3_6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "REP_3_6"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 REP_3_6
void Ionic::Zlib::InternalConstants::_set_REP_3_6(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_REP_3_6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "REP_3_6", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 REPZ_3_10
int Ionic::Zlib::InternalConstants::_get_REPZ_3_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_REPZ_3_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "REPZ_3_10"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 REPZ_3_10
void Ionic::Zlib::InternalConstants::_set_REPZ_3_10(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_REPZ_3_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "REPZ_3_10", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 REPZ_11_138
int Ionic::Zlib::InternalConstants::_get_REPZ_11_138() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_get_REPZ_11_138");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "InternalConstants", "REPZ_11_138"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 REPZ_11_138
void Ionic::Zlib::InternalConstants::_set_REPZ_11_138(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::_set_REPZ_11_138");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "InternalConstants", "REPZ_11_138", value));
}
// Autogenerated method: Ionic.Zlib.InternalConstants..cctor
void Ionic::Zlib::InternalConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::InternalConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "InternalConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.StaticTree
#include "Ionic/Zlib/StaticTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int16[] lengthAndLiteralsTreeCodes
::ArrayW<int16_t> Ionic::Zlib::StaticTree::_get_lengthAndLiteralsTreeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_get_lengthAndLiteralsTreeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("Ionic.Zlib", "StaticTree", "lengthAndLiteralsTreeCodes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int16[] lengthAndLiteralsTreeCodes
void Ionic::Zlib::StaticTree::_set_lengthAndLiteralsTreeCodes(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_set_lengthAndLiteralsTreeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "StaticTree", "lengthAndLiteralsTreeCodes", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int16[] distTreeCodes
::ArrayW<int16_t> Ionic::Zlib::StaticTree::_get_distTreeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_get_distTreeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("Ionic.Zlib", "StaticTree", "distTreeCodes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int16[] distTreeCodes
void Ionic::Zlib::StaticTree::_set_distTreeCodes(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_set_distTreeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "StaticTree", "distTreeCodes", value));
}
// Autogenerated static field getter
// Get static field: static readonly Ionic.Zlib.StaticTree Literals
::Ionic::Zlib::StaticTree* Ionic::Zlib::StaticTree::_get_Literals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_get_Literals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::StaticTree*>("Ionic.Zlib", "StaticTree", "Literals"));
}
// Autogenerated static field setter
// Set static field: static readonly Ionic.Zlib.StaticTree Literals
void Ionic::Zlib::StaticTree::_set_Literals(::Ionic::Zlib::StaticTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_set_Literals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "StaticTree", "Literals", value));
}
// Autogenerated static field getter
// Get static field: static readonly Ionic.Zlib.StaticTree Distances
::Ionic::Zlib::StaticTree* Ionic::Zlib::StaticTree::_get_Distances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_get_Distances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::StaticTree*>("Ionic.Zlib", "StaticTree", "Distances"));
}
// Autogenerated static field setter
// Set static field: static readonly Ionic.Zlib.StaticTree Distances
void Ionic::Zlib::StaticTree::_set_Distances(::Ionic::Zlib::StaticTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_set_Distances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "StaticTree", "Distances", value));
}
// Autogenerated static field getter
// Get static field: static readonly Ionic.Zlib.StaticTree BitLengths
::Ionic::Zlib::StaticTree* Ionic::Zlib::StaticTree::_get_BitLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_get_BitLengths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::StaticTree*>("Ionic.Zlib", "StaticTree", "BitLengths"));
}
// Autogenerated static field setter
// Set static field: static readonly Ionic.Zlib.StaticTree BitLengths
void Ionic::Zlib::StaticTree::_set_BitLengths(::Ionic::Zlib::StaticTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::_set_BitLengths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "StaticTree", "BitLengths", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] treeCodes
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Ionic::Zlib::StaticTree::dyn_treeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::dyn_treeCodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeCodes"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] extraBits
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Ionic::Zlib::StaticTree::dyn_extraBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::dyn_extraBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraBits"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 extraBase
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::StaticTree::dyn_extraBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::dyn_extraBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 elems
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::StaticTree::dyn_elems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::dyn_elems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elems"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 maxLength
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::StaticTree::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.StaticTree..cctor
void Ionic::Zlib::StaticTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::StaticTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "StaticTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.Adler
#include "Ionic/Zlib/Adler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 BASE
uint Ionic::Zlib::Adler::_get_BASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::Adler::_get_BASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Ionic.Zlib", "Adler", "BASE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 BASE
void Ionic::Zlib::Adler::_set_BASE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::Adler::_set_BASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "Adler", "BASE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 NMAX
int Ionic::Zlib::Adler::_get_NMAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::Adler::_get_NMAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "Adler", "NMAX"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 NMAX
void Ionic::Zlib::Adler::_set_NMAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::Adler::_set_NMAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "Adler", "NMAX", value));
}
// Autogenerated method: Ionic.Zlib.Adler.Adler32
uint Ionic::Zlib::Adler::Adler32(uint adler, ::ArrayW<uint8_t> buf, int index, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::Adler::Adler32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "Adler", "Adler32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adler), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, adler, buf, index, len);
}
// Autogenerated method: Ionic.Zlib.Adler..cctor
void Ionic::Zlib::Adler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::Adler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "Adler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZlibStreamFlavor
#include "Ionic/Zlib/ZlibStreamFlavor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ZlibStreamFlavor ZLIB
::Ionic::Zlib::ZlibStreamFlavor Ionic::Zlib::ZlibStreamFlavor::_get_ZLIB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStreamFlavor::_get_ZLIB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ZlibStreamFlavor>("Ionic.Zlib", "ZlibStreamFlavor", "ZLIB"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ZlibStreamFlavor ZLIB
void Ionic::Zlib::ZlibStreamFlavor::_set_ZLIB(::Ionic::Zlib::ZlibStreamFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStreamFlavor::_set_ZLIB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibStreamFlavor", "ZLIB", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ZlibStreamFlavor DEFLATE
::Ionic::Zlib::ZlibStreamFlavor Ionic::Zlib::ZlibStreamFlavor::_get_DEFLATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStreamFlavor::_get_DEFLATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ZlibStreamFlavor>("Ionic.Zlib", "ZlibStreamFlavor", "DEFLATE"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ZlibStreamFlavor DEFLATE
void Ionic::Zlib::ZlibStreamFlavor::_set_DEFLATE(::Ionic::Zlib::ZlibStreamFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStreamFlavor::_set_DEFLATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibStreamFlavor", "DEFLATE", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ZlibStreamFlavor GZIP
::Ionic::Zlib::ZlibStreamFlavor Ionic::Zlib::ZlibStreamFlavor::_get_GZIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStreamFlavor::_get_GZIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ZlibStreamFlavor>("Ionic.Zlib", "ZlibStreamFlavor", "GZIP"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ZlibStreamFlavor GZIP
void Ionic::Zlib::ZlibStreamFlavor::_set_GZIP(::Ionic::Zlib::ZlibStreamFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStreamFlavor::_set_GZIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibStreamFlavor", "GZIP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibStreamFlavor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStreamFlavor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZlibBaseStream
#include "Ionic/Zlib/ZlibBaseStream.hpp"
// Including type: Ionic.Crc.CRC32
#include "Ionic/Crc/CRC32.hpp"
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected internal Ionic.Zlib.ZlibCodec _z
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibCodec*& Ionic::Zlib::ZlibBaseStream::dyn__z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_z"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Ionic.Zlib.ZlibBaseStream/StreamMode _streamMode
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibBaseStream::StreamMode& Ionic::Zlib::ZlibBaseStream::dyn__streamMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__streamMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamMode"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibBaseStream::StreamMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Ionic.Zlib.FlushType _flushMode
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::FlushType& Ionic::Zlib::ZlibBaseStream::dyn__flushMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__flushMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flushMode"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::FlushType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Ionic.Zlib.ZlibStreamFlavor _flavor
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibStreamFlavor& Ionic::Zlib::ZlibBaseStream::dyn__flavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__flavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flavor"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibStreamFlavor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Ionic.Zlib.CompressionMode _compressionMode
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionMode& Ionic::Zlib::ZlibBaseStream::dyn__compressionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__compressionMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressionMode"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Ionic.Zlib.CompressionLevel _level
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionLevel& Ionic::Zlib::ZlibBaseStream::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ZlibBaseStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte[] _workingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::ZlibBaseStream::dyn__workingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__workingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_workingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 _bufferSize
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibBaseStream::dyn__bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte[] _buf1
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::ZlibBaseStream::dyn__buf1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__buf1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buf1"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Ionic::Zlib::ZlibBaseStream::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Ionic.Zlib.CompressionStrategy Strategy
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionStrategy& Ionic::Zlib::ZlibBaseStream::dyn_Strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn_Strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Strategy"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Crc.CRC32 crc
[[deprecated("Use field access instead!")]] ::Ionic::Crc::CRC32*& Ionic::Zlib::ZlibBaseStream::dyn_crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn_crc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crc"))->offset;
  return *reinterpret_cast<::Ionic::Crc::CRC32**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String _GzipFileName
[[deprecated("Use field access instead!")]] ::StringW& Ionic::Zlib::ZlibBaseStream::dyn__GzipFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__GzipFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GzipFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String _GzipComment
[[deprecated("Use field access instead!")]] ::StringW& Ionic::Zlib::ZlibBaseStream::dyn__GzipComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__GzipComment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GzipComment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.DateTime _GzipMtime
[[deprecated("Use field access instead!")]] ::System::DateTime& Ionic::Zlib::ZlibBaseStream::dyn__GzipMtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__GzipMtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GzipMtime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 _gzipHeaderByteCount
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibBaseStream::dyn__gzipHeaderByteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn__gzipHeaderByteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gzipHeaderByteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean nomoreinput
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ZlibBaseStream::dyn_nomoreinput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::dyn_nomoreinput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nomoreinput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_Crc32
int Ionic::Zlib::ZlibBaseStream::get_Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_Crc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get__wantCompress
bool Ionic::Zlib::ZlibBaseStream::get__wantCompress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get__wantCompress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__wantCompress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_z
::Ionic::Zlib::ZlibCodec* Ionic::Zlib::ZlibBaseStream::get_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_z");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_z", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::ZlibCodec*, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_workingBuffer
::ArrayW<uint8_t> Ionic::Zlib::ZlibBaseStream::get_workingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_workingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_workingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.finish
void Ionic::Zlib::ZlibBaseStream::finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.end
void Ionic::Zlib::ZlibBaseStream::end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.ReadZeroTerminatedString
::StringW Ionic::Zlib::ZlibBaseStream::ReadZeroTerminatedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::ReadZeroTerminatedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadZeroTerminatedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream._ReadAndValidateGzipHeader
int Ionic::Zlib::ZlibBaseStream::_ReadAndValidateGzipHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::_ReadAndValidateGzipHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_ReadAndValidateGzipHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.CompressString
void Ionic::Zlib::ZlibBaseStream::CompressString(::StringW s, ::System::IO::Stream* compressor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::CompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibBaseStream", "CompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(compressor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, compressor);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.CompressBuffer
void Ionic::Zlib::ZlibBaseStream::CompressBuffer(::ArrayW<uint8_t> b, ::System::IO::Stream* compressor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::CompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibBaseStream", "CompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(compressor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, compressor);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.UncompressString
::StringW Ionic::Zlib::ZlibBaseStream::UncompressString(::ArrayW<uint8_t> compressed, ::System::IO::Stream* decompressor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::UncompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibBaseStream", "UncompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed), ::il2cpp_utils::ExtractType(decompressor)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed, decompressor);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.UncompressBuffer
::ArrayW<uint8_t> Ionic::Zlib::ZlibBaseStream::UncompressBuffer(::ArrayW<uint8_t> compressed, ::System::IO::Stream* decompressor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::UncompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibBaseStream", "UncompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed), ::il2cpp_utils::ExtractType(decompressor)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed, decompressor);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.Write
void Ionic::Zlib::ZlibBaseStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.Close
void Ionic::Zlib::ZlibBaseStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.Flush
void Ionic::Zlib::ZlibBaseStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.Seek
int64_t Ionic::Zlib::ZlibBaseStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.SetLength
void Ionic::Zlib::ZlibBaseStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.Read
int Ionic::Zlib::ZlibBaseStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_CanRead
bool Ionic::Zlib::ZlibBaseStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_CanSeek
bool Ionic::Zlib::ZlibBaseStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_CanWrite
bool Ionic::Zlib::ZlibBaseStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_Length
int64_t Ionic::Zlib::ZlibBaseStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.get_Position
int64_t Ionic::Zlib::ZlibBaseStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibBaseStream.set_Position
void Ionic::Zlib::ZlibBaseStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZlibBaseStream/StreamMode
#include "Ionic/Zlib/ZlibBaseStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ZlibBaseStream/StreamMode Writer
::Ionic::Zlib::ZlibBaseStream::StreamMode Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Writer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ZlibBaseStream::StreamMode>("Ionic.Zlib", "ZlibBaseStream/StreamMode", "Writer"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ZlibBaseStream/StreamMode Writer
void Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Writer(::Ionic::Zlib::ZlibBaseStream::StreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Writer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibBaseStream/StreamMode", "Writer", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ZlibBaseStream/StreamMode Reader
::Ionic::Zlib::ZlibBaseStream::StreamMode Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Reader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ZlibBaseStream::StreamMode>("Ionic.Zlib", "ZlibBaseStream/StreamMode", "Reader"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ZlibBaseStream/StreamMode Reader
void Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Reader(::Ionic::Zlib::ZlibBaseStream::StreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Reader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibBaseStream/StreamMode", "Reader", value));
}
// Autogenerated static field getter
// Get static field: static public Ionic.Zlib.ZlibBaseStream/StreamMode Undefined
::Ionic::Zlib::ZlibBaseStream::StreamMode Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Ionic::Zlib::ZlibBaseStream::StreamMode>("Ionic.Zlib", "ZlibBaseStream/StreamMode", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Ionic.Zlib.ZlibBaseStream/StreamMode Undefined
void Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Undefined(::Ionic::Zlib::ZlibBaseStream::StreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibBaseStream/StreamMode", "Undefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibBaseStream::StreamMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibBaseStream::StreamMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZlibCodec
#include "Ionic/Zlib/ZlibCodec.hpp"
// Including type: Ionic.Zlib.DeflateManager
#include "Ionic/Zlib/DeflateManager.hpp"
// Including type: Ionic.Zlib.InflateManager
#include "Ionic/Zlib/InflateManager.hpp"
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] InputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::ZlibCodec::dyn_InputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_InputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NextIn
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibCodec::dyn_NextIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_NextIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextIn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AvailableBytesIn
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibCodec::dyn_AvailableBytesIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_AvailableBytesIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AvailableBytesIn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 TotalBytesIn
[[deprecated("Use field access instead!")]] int64_t& Ionic::Zlib::ZlibCodec::dyn_TotalBytesIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_TotalBytesIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytesIn"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] OutputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Ionic::Zlib::ZlibCodec::dyn_OutputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_OutputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NextOut
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibCodec::dyn_NextOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_NextOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextOut"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AvailableBytesOut
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibCodec::dyn_AvailableBytesOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_AvailableBytesOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AvailableBytesOut"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 TotalBytesOut
[[deprecated("Use field access instead!")]] int64_t& Ionic::Zlib::ZlibCodec::dyn_TotalBytesOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_TotalBytesOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytesOut"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Message
[[deprecated("Use field access instead!")]] ::StringW& Ionic::Zlib::ZlibCodec::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.DeflateManager dstate
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::DeflateManager*& Ionic::Zlib::ZlibCodec::dyn_dstate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_dstate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dstate"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::DeflateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.InflateManager istate
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::InflateManager*& Ionic::Zlib::ZlibCodec::dyn_istate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_istate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "istate"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::InflateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _Adler32
[[deprecated("Use field access instead!")]] uint& Ionic::Zlib::ZlibCodec::dyn__Adler32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn__Adler32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Adler32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Ionic.Zlib.CompressionLevel CompressLevel
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionLevel& Ionic::Zlib::ZlibCodec::dyn_CompressLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_CompressLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressLevel"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindowBits
[[deprecated("Use field access instead!")]] int& Ionic::Zlib::ZlibCodec::dyn_WindowBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_WindowBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Ionic.Zlib.CompressionStrategy Strategy
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::CompressionStrategy& Ionic::Zlib::ZlibCodec::dyn_Strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::dyn_Strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Strategy"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.get_Adler32
int Ionic::Zlib::ZlibCodec::get_Adler32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::get_Adler32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Adler32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeInflate
int Ionic::Zlib::ZlibCodec::InitializeInflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeInflate
int Ionic::Zlib::ZlibCodec::InitializeInflate(bool expectRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expectRfc1950Header);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeInflate
int Ionic::Zlib::ZlibCodec::InitializeInflate(int windowBits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowBits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, windowBits);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeInflate
int Ionic::Zlib::ZlibCodec::InitializeInflate(int windowBits, bool expectRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowBits), ::il2cpp_utils::ExtractType(expectRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, windowBits, expectRfc1950Header);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.Inflate
int Ionic::Zlib::ZlibCodec::Inflate(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::Inflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.EndInflate
int Ionic::Zlib::ZlibCodec::EndInflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::EndInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.SyncInflate
int Ionic::Zlib::ZlibCodec::SyncInflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::SyncInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeDeflate
int Ionic::Zlib::ZlibCodec::InitializeDeflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeDeflate
int Ionic::Zlib::ZlibCodec::InitializeDeflate(::Ionic::Zlib::CompressionLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, level);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeDeflate
int Ionic::Zlib::ZlibCodec::InitializeDeflate(::Ionic::Zlib::CompressionLevel level, bool wantRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(wantRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, level, wantRfc1950Header);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeDeflate
int Ionic::Zlib::ZlibCodec::InitializeDeflate(::Ionic::Zlib::CompressionLevel level, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, level, bits);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.InitializeDeflate
int Ionic::Zlib::ZlibCodec::InitializeDeflate(::Ionic::Zlib::CompressionLevel level, int bits, bool wantRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::InitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(wantRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, level, bits, wantRfc1950Header);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec._InternalInitializeDeflate
int Ionic::Zlib::ZlibCodec::_InternalInitializeDeflate(bool wantRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::_InternalInitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InternalInitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wantRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, wantRfc1950Header);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.Deflate
int Ionic::Zlib::ZlibCodec::Deflate(::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::Deflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.EndDeflate
int Ionic::Zlib::ZlibCodec::EndDeflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::EndDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.ResetDeflate
void Ionic::Zlib::ZlibCodec::ResetDeflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::ResetDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.SetDeflateParams
int Ionic::Zlib::ZlibCodec::SetDeflateParams(::Ionic::Zlib::CompressionLevel level, ::Ionic::Zlib::CompressionStrategy strategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::SetDeflateParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeflateParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(strategy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, level, strategy);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.SetDictionary
int Ionic::Zlib::ZlibCodec::SetDictionary(::ArrayW<uint8_t> dictionary) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::SetDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionary)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dictionary);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.flush_pending
void Ionic::Zlib::ZlibCodec::flush_pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::flush_pending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "flush_pending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibCodec.read_buf
int Ionic::Zlib::ZlibCodec::read_buf(::ArrayW<uint8_t> buf, int start, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibCodec::read_buf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "read_buf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buf, start, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZlibConstants
#include "Ionic/Zlib/ZlibConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 WindowBitsMax
int Ionic::Zlib::ZlibConstants::_get_WindowBitsMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_WindowBitsMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "WindowBitsMax"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WindowBitsMax
void Ionic::Zlib::ZlibConstants::_set_WindowBitsMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_WindowBitsMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "WindowBitsMax", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 WindowBitsDefault
int Ionic::Zlib::ZlibConstants::_get_WindowBitsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_WindowBitsDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "WindowBitsDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WindowBitsDefault
void Ionic::Zlib::ZlibConstants::_set_WindowBitsDefault(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_WindowBitsDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "WindowBitsDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Z_OK
int Ionic::Zlib::ZlibConstants::_get_Z_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_Z_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "Z_OK"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Z_OK
void Ionic::Zlib::ZlibConstants::_set_Z_OK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_Z_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "Z_OK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Z_STREAM_END
int Ionic::Zlib::ZlibConstants::_get_Z_STREAM_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_Z_STREAM_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "Z_STREAM_END"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Z_STREAM_END
void Ionic::Zlib::ZlibConstants::_set_Z_STREAM_END(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_Z_STREAM_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "Z_STREAM_END", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Z_NEED_DICT
int Ionic::Zlib::ZlibConstants::_get_Z_NEED_DICT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_Z_NEED_DICT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "Z_NEED_DICT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Z_NEED_DICT
void Ionic::Zlib::ZlibConstants::_set_Z_NEED_DICT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_Z_NEED_DICT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "Z_NEED_DICT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Z_STREAM_ERROR
int Ionic::Zlib::ZlibConstants::_get_Z_STREAM_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_Z_STREAM_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "Z_STREAM_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Z_STREAM_ERROR
void Ionic::Zlib::ZlibConstants::_set_Z_STREAM_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_Z_STREAM_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "Z_STREAM_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Z_DATA_ERROR
int Ionic::Zlib::ZlibConstants::_get_Z_DATA_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_Z_DATA_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "Z_DATA_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Z_DATA_ERROR
void Ionic::Zlib::ZlibConstants::_set_Z_DATA_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_Z_DATA_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "Z_DATA_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 Z_BUF_ERROR
int Ionic::Zlib::ZlibConstants::_get_Z_BUF_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_Z_BUF_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "Z_BUF_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Z_BUF_ERROR
void Ionic::Zlib::ZlibConstants::_set_Z_BUF_ERROR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_Z_BUF_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "Z_BUF_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 WorkingBufferSizeDefault
int Ionic::Zlib::ZlibConstants::_get_WorkingBufferSizeDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_WorkingBufferSizeDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "WorkingBufferSizeDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WorkingBufferSizeDefault
void Ionic::Zlib::ZlibConstants::_set_WorkingBufferSizeDefault(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_WorkingBufferSizeDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "WorkingBufferSizeDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 WorkingBufferSizeMin
int Ionic::Zlib::ZlibConstants::_get_WorkingBufferSizeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_get_WorkingBufferSizeMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Zlib", "ZlibConstants", "WorkingBufferSizeMin"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WorkingBufferSizeMin
void Ionic::Zlib::ZlibConstants::_set_WorkingBufferSizeMin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibConstants::_set_WorkingBufferSizeMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Zlib", "ZlibConstants", "WorkingBufferSizeMin", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Zlib.ZlibStream
#include "Ionic/Zlib/ZlibStream.hpp"
// Including type: Ionic.Zlib.ZlibBaseStream
#include "Ionic/Zlib/ZlibBaseStream.hpp"
// Including type: Ionic.Zlib.FlushType
#include "Ionic/Zlib/FlushType.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Ionic.Zlib.ZlibBaseStream _baseStream
[[deprecated("Use field access instead!")]] ::Ionic::Zlib::ZlibBaseStream*& Ionic::Zlib::ZlibStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::Ionic::Zlib::ZlibBaseStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& Ionic::Zlib::ZlibStream::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_FlushMode
::Ionic::Zlib::FlushType Ionic::Zlib::ZlibStream::get_FlushMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_FlushMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::ZlibStream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::Ionic::Zlib::FlushType, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.set_FlushMode
void Ionic::Zlib::ZlibStream::set_FlushMode(::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::set_FlushMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::ZlibStream*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_BufferSize
int Ionic::Zlib::ZlibStream::get_BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.set_BufferSize
void Ionic::Zlib::ZlibStream::set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::set_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_TotalIn
int64_t Ionic::Zlib::ZlibStream::get_TotalIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_TotalIn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::ZlibStream*), 36));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_TotalOut
int64_t Ionic::Zlib::ZlibStream::get_TotalOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_TotalOut");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Zlib::ZlibStream*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.CompressString
::ArrayW<uint8_t> Ionic::Zlib::ZlibStream::CompressString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::CompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibStream", "CompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.CompressBuffer
::ArrayW<uint8_t> Ionic::Zlib::ZlibStream::CompressBuffer(::ArrayW<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::CompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibStream", "CompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.UncompressString
::StringW Ionic::Zlib::ZlibStream::UncompressString(::ArrayW<uint8_t> compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::UncompressString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibStream", "UncompressString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.UncompressBuffer
::ArrayW<uint8_t> Ionic::Zlib::ZlibStream::UncompressBuffer(::ArrayW<uint8_t> compressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::UncompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Zlib", "ZlibStream", "UncompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressed)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressed);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.Dispose
void Ionic::Zlib::ZlibStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_CanRead
bool Ionic::Zlib::ZlibStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_CanSeek
bool Ionic::Zlib::ZlibStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_CanWrite
bool Ionic::Zlib::ZlibStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.Flush
void Ionic::Zlib::ZlibStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_Length
int64_t Ionic::Zlib::ZlibStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.get_Position
int64_t Ionic::Zlib::ZlibStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.set_Position
void Ionic::Zlib::ZlibStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.Read
int Ionic::Zlib::ZlibStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.Seek
int64_t Ionic::Zlib::ZlibStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.SetLength
void Ionic::Zlib::ZlibStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Zlib.ZlibStream.Write
void Ionic::Zlib::ZlibStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Zlib::ZlibStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Crc.CRC32
#include "Ionic/Crc/CRC32.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BUFFER_SIZE
int Ionic::Crc::CRC32::_get_BUFFER_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::_get_BUFFER_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Ionic.Crc", "CRC32", "BUFFER_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BUFFER_SIZE
void Ionic::Crc::CRC32::_set_BUFFER_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::_set_BUFFER_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Crc", "CRC32", "BUFFER_SIZE", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 dwPolynomial
[[deprecated("Use field access instead!")]] uint& Ionic::Crc::CRC32::dyn_dwPolynomial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::dyn_dwPolynomial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dwPolynomial"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _TotalBytesRead
[[deprecated("Use field access instead!")]] int64_t& Ionic::Crc::CRC32::dyn__TotalBytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::dyn__TotalBytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_TotalBytesRead"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reverseBits
[[deprecated("Use field access instead!")]] bool& Ionic::Crc::CRC32::dyn_reverseBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::dyn_reverseBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseBits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] crc32Table
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Ionic::Crc::CRC32::dyn_crc32Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::dyn_crc32Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crc32Table"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _register
[[deprecated("Use field access instead!")]] uint& Ionic::Crc::CRC32::dyn__register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::dyn__register");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_register"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Crc.CRC32.get_TotalBytesRead
int64_t Ionic::Crc::CRC32::get_TotalBytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::get_TotalBytesRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalBytesRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CRC32.get_Crc32Result
int Ionic::Crc::CRC32::get_Crc32Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::get_Crc32Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc32Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CRC32.GetCrc32
int Ionic::Crc::CRC32::GetCrc32(::System::IO::Stream* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::GetCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input);
}
// Autogenerated method: Ionic.Crc.CRC32.GetCrc32AndCopy
int Ionic::Crc::CRC32::GetCrc32AndCopy(::System::IO::Stream* input, ::System::IO::Stream* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::GetCrc32AndCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrc32AndCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Ionic.Crc.CRC32.ComputeCrc32
int Ionic::Crc::CRC32::ComputeCrc32(int W, uint8_t B) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::ComputeCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(W), ::il2cpp_utils::ExtractType(B)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, W, B);
}
// Autogenerated method: Ionic.Crc.CRC32._InternalComputeCrc32
int Ionic::Crc::CRC32::_InternalComputeCrc32(uint W, uint8_t B) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::_InternalComputeCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InternalComputeCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(W), ::il2cpp_utils::ExtractType(B)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, W, B);
}
// Autogenerated method: Ionic.Crc.CRC32.SlurpBlock
void Ionic::Crc::CRC32::SlurpBlock(::ArrayW<uint8_t> block, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::SlurpBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SlurpBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, block, offset, count);
}
// Autogenerated method: Ionic.Crc.CRC32.UpdateCRC
void Ionic::Crc::CRC32::UpdateCRC(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::UpdateCRC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCRC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: Ionic.Crc.CRC32.UpdateCRC
void Ionic::Crc::CRC32::UpdateCRC(uint8_t b, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::UpdateCRC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCRC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b, n);
}
// Autogenerated method: Ionic.Crc.CRC32.ReverseBits
uint Ionic::Crc::CRC32::ReverseBits(uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::ReverseBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Crc", "CRC32", "ReverseBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Ionic.Crc.CRC32.ReverseBits
uint8_t Ionic::Crc::CRC32::ReverseBits(uint8_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::ReverseBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Crc", "CRC32", "ReverseBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Ionic.Crc.CRC32.GenerateLookupTable
void Ionic::Crc::CRC32::GenerateLookupTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::GenerateLookupTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateLookupTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CRC32.gf2_matrix_times
uint Ionic::Crc::CRC32::gf2_matrix_times(::ArrayW<uint> matrix, uint vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::gf2_matrix_times");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gf2_matrix_times", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, matrix, vec);
}
// Autogenerated method: Ionic.Crc.CRC32.gf2_matrix_square
void Ionic::Crc::CRC32::gf2_matrix_square(::ArrayW<uint> square, ::ArrayW<uint> mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::gf2_matrix_square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gf2_matrix_square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(square), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, square, mat);
}
// Autogenerated method: Ionic.Crc.CRC32.Combine
void Ionic::Crc::CRC32::Combine(int crc, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, crc, length);
}
// Autogenerated method: Ionic.Crc.CRC32.Reset
void Ionic::Crc::CRC32::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CRC32::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Ionic.Crc.CrcCalculatorStream
#include "Ionic/Crc/CrcCalculatorStream.hpp"
// Including type: Ionic.Crc.CRC32
#include "Ionic/Crc/CRC32.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 UnsetLengthLimit
int64_t Ionic::Crc::CrcCalculatorStream::_get_UnsetLengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::_get_UnsetLengthLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Ionic.Crc", "CrcCalculatorStream", "UnsetLengthLimit"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 UnsetLengthLimit
void Ionic::Crc::CrcCalculatorStream::_set_UnsetLengthLimit(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::_set_UnsetLengthLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Ionic.Crc", "CrcCalculatorStream", "UnsetLengthLimit", value));
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Ionic::Crc::CrcCalculatorStream::dyn__innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::dyn__innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Ionic.Crc.CRC32 _Crc32
[[deprecated("Use field access instead!")]] ::Ionic::Crc::CRC32*& Ionic::Crc::CrcCalculatorStream::dyn__Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::dyn__Crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Crc32"))->offset;
  return *reinterpret_cast<::Ionic::Crc::CRC32**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lengthLimit
[[deprecated("Use field access instead!")]] int64_t& Ionic::Crc::CrcCalculatorStream::dyn__lengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::dyn__lengthLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthLimit"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& Ionic::Crc::CrcCalculatorStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_TotalBytesSlurped
int64_t Ionic::Crc::CrcCalculatorStream::get_TotalBytesSlurped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_TotalBytesSlurped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalBytesSlurped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_Crc
int Ionic::Crc::CrcCalculatorStream::get_Crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_Crc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_LeaveOpen
bool Ionic::Crc::CrcCalculatorStream::get_LeaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.set_LeaveOpen
void Ionic::Crc::CrcCalculatorStream::set_LeaveOpen(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::set_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.System.IDisposable.Dispose
void Ionic::Crc::CrcCalculatorStream::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Ionic::Crc::CrcCalculatorStream*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream..cctor
void Ionic::Crc::CrcCalculatorStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Ionic.Crc", "CrcCalculatorStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.Read
int Ionic::Crc::CrcCalculatorStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.Write
void Ionic::Crc::CrcCalculatorStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_CanRead
bool Ionic::Crc::CrcCalculatorStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_CanSeek
bool Ionic::Crc::CrcCalculatorStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_CanWrite
bool Ionic::Crc::CrcCalculatorStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.Flush
void Ionic::Crc::CrcCalculatorStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_Length
int64_t Ionic::Crc::CrcCalculatorStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.get_Position
int64_t Ionic::Crc::CrcCalculatorStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.set_Position
void Ionic::Crc::CrcCalculatorStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.Seek
int64_t Ionic::Crc::CrcCalculatorStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.SetLength
void Ionic::Crc::CrcCalculatorStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Ionic.Crc.CrcCalculatorStream.Close
void Ionic::Crc::CrcCalculatorStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Ionic::Crc::CrcCalculatorStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabAuthenticationAPI
#include "PlayFab/PlayFabAuthenticationAPI.hpp"
// Including type: PlayFab.AuthenticationModels.GetEntityTokenRequest
#include "PlayFab/AuthenticationModels/GetEntityTokenRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.AuthenticationModels.GetEntityTokenResponse
#include "PlayFab/AuthenticationModels/GetEntityTokenResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.AuthenticationModels.ValidateEntityTokenRequest
#include "PlayFab/AuthenticationModels/ValidateEntityTokenRequest.hpp"
// Including type: PlayFab.AuthenticationModels.ValidateEntityTokenResponse
#include "PlayFab/AuthenticationModels/ValidateEntityTokenResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabAuthenticationAPI..cctor
void PlayFab::PlayFabAuthenticationAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabAuthenticationAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationAPI.IsEntityLoggedIn
bool PlayFab::PlayFabAuthenticationAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabAuthenticationAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationAPI.ForgetAllCredentials
void PlayFab::PlayFabAuthenticationAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabAuthenticationAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationAPI.GetEntityToken
void PlayFab::PlayFabAuthenticationAPI::GetEntityToken(::PlayFab::AuthenticationModels::GetEntityTokenRequest* request, ::System::Action_1<::PlayFab::AuthenticationModels::GetEntityTokenResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationAPI::GetEntityToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabAuthenticationAPI", "GetEntityToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationAPI.ValidateEntityToken
void PlayFab::PlayFabAuthenticationAPI::ValidateEntityToken(::PlayFab::AuthenticationModels::ValidateEntityTokenRequest* request, ::System::Action_1<::PlayFab::AuthenticationModels::ValidateEntityTokenResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationAPI::ValidateEntityToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabAuthenticationAPI", "ValidateEntityToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabAuthenticationInstanceAPI
#include "PlayFab/PlayFabAuthenticationInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.AuthenticationModels.GetEntityTokenRequest
#include "PlayFab/AuthenticationModels/GetEntityTokenRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.AuthenticationModels.GetEntityTokenResponse
#include "PlayFab/AuthenticationModels/GetEntityTokenResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.AuthenticationModels.ValidateEntityTokenRequest
#include "PlayFab/AuthenticationModels/ValidateEntityTokenRequest.hpp"
// Including type: PlayFab.AuthenticationModels.ValidateEntityTokenResponse
#include "PlayFab/AuthenticationModels/ValidateEntityTokenResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabAuthenticationInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabAuthenticationInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabAuthenticationInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabAuthenticationInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationInstanceAPI.GetEntityToken
void PlayFab::PlayFabAuthenticationInstanceAPI::GetEntityToken(::PlayFab::AuthenticationModels::GetEntityTokenRequest* request, ::System::Action_1<::PlayFab::AuthenticationModels::GetEntityTokenResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationInstanceAPI::GetEntityToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntityToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationInstanceAPI.ValidateEntityToken
void PlayFab::PlayFabAuthenticationInstanceAPI::ValidateEntityToken(::PlayFab::AuthenticationModels::ValidateEntityTokenRequest* request, ::System::Action_1<::PlayFab::AuthenticationModels::ValidateEntityTokenResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationInstanceAPI::ValidateEntityToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEntityToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabClientAPI
#include "PlayFab/PlayFabClientAPI.hpp"
// Including type: PlayFab.PlayFabClientAPI/<>c__DisplayClass19_0`1
#include "PlayFab/PlayFabClientAPI_--c__DisplayClass19_0_1.hpp"
// Including type: PlayFab.ClientModels.AcceptTradeRequest
#include "PlayFab/ClientModels/AcceptTradeRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.ClientModels.AcceptTradeResponse
#include "PlayFab/ClientModels/AcceptTradeResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ClientModels.AddFriendRequest
#include "PlayFab/ClientModels/AddFriendRequest.hpp"
// Including type: PlayFab.ClientModels.AddFriendResult
#include "PlayFab/ClientModels/AddFriendResult.hpp"
// Including type: PlayFab.ClientModels.AddGenericIDRequest
#include "PlayFab/ClientModels/AddGenericIDRequest.hpp"
// Including type: PlayFab.ClientModels.AddGenericIDResult
#include "PlayFab/ClientModels/AddGenericIDResult.hpp"
// Including type: PlayFab.ClientModels.AddOrUpdateContactEmailRequest
#include "PlayFab/ClientModels/AddOrUpdateContactEmailRequest.hpp"
// Including type: PlayFab.ClientModels.AddOrUpdateContactEmailResult
#include "PlayFab/ClientModels/AddOrUpdateContactEmailResult.hpp"
// Including type: PlayFab.ClientModels.AddSharedGroupMembersRequest
#include "PlayFab/ClientModels/AddSharedGroupMembersRequest.hpp"
// Including type: PlayFab.ClientModels.AddSharedGroupMembersResult
#include "PlayFab/ClientModels/AddSharedGroupMembersResult.hpp"
// Including type: PlayFab.ClientModels.AddUsernamePasswordRequest
#include "PlayFab/ClientModels/AddUsernamePasswordRequest.hpp"
// Including type: PlayFab.ClientModels.AddUsernamePasswordResult
#include "PlayFab/ClientModels/AddUsernamePasswordResult.hpp"
// Including type: PlayFab.ClientModels.AddUserVirtualCurrencyRequest
#include "PlayFab/ClientModels/AddUserVirtualCurrencyRequest.hpp"
// Including type: PlayFab.ClientModels.ModifyUserVirtualCurrencyResult
#include "PlayFab/ClientModels/ModifyUserVirtualCurrencyResult.hpp"
// Including type: PlayFab.ClientModels.AndroidDevicePushNotificationRegistrationRequest
#include "PlayFab/ClientModels/AndroidDevicePushNotificationRegistrationRequest.hpp"
// Including type: PlayFab.ClientModels.AndroidDevicePushNotificationRegistrationResult
#include "PlayFab/ClientModels/AndroidDevicePushNotificationRegistrationResult.hpp"
// Including type: PlayFab.ClientModels.AttributeInstallRequest
#include "PlayFab/ClientModels/AttributeInstallRequest.hpp"
// Including type: PlayFab.ClientModels.AttributeInstallResult
#include "PlayFab/ClientModels/AttributeInstallResult.hpp"
// Including type: PlayFab.ClientModels.CancelTradeRequest
#include "PlayFab/ClientModels/CancelTradeRequest.hpp"
// Including type: PlayFab.ClientModels.CancelTradeResponse
#include "PlayFab/ClientModels/CancelTradeResponse.hpp"
// Including type: PlayFab.ClientModels.ConfirmPurchaseRequest
#include "PlayFab/ClientModels/ConfirmPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.ConfirmPurchaseResult
#include "PlayFab/ClientModels/ConfirmPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.ConsumeItemRequest
#include "PlayFab/ClientModels/ConsumeItemRequest.hpp"
// Including type: PlayFab.ClientModels.ConsumeItemResult
#include "PlayFab/ClientModels/ConsumeItemResult.hpp"
// Including type: PlayFab.ClientModels.ConsumePSNEntitlementsRequest
#include "PlayFab/ClientModels/ConsumePSNEntitlementsRequest.hpp"
// Including type: PlayFab.ClientModels.ConsumePSNEntitlementsResult
#include "PlayFab/ClientModels/ConsumePSNEntitlementsResult.hpp"
// Including type: PlayFab.ClientModels.ConsumeXboxEntitlementsRequest
#include "PlayFab/ClientModels/ConsumeXboxEntitlementsRequest.hpp"
// Including type: PlayFab.ClientModels.ConsumeXboxEntitlementsResult
#include "PlayFab/ClientModels/ConsumeXboxEntitlementsResult.hpp"
// Including type: PlayFab.ClientModels.CreateSharedGroupRequest
#include "PlayFab/ClientModels/CreateSharedGroupRequest.hpp"
// Including type: PlayFab.ClientModels.CreateSharedGroupResult
#include "PlayFab/ClientModels/CreateSharedGroupResult.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptRequest
#include "PlayFab/ClientModels/ExecuteCloudScriptRequest.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptResult
#include "PlayFab/ClientModels/ExecuteCloudScriptResult.hpp"
// Including type: PlayFab.ClientModels.GetAccountInfoRequest
#include "PlayFab/ClientModels/GetAccountInfoRequest.hpp"
// Including type: PlayFab.ClientModels.GetAccountInfoResult
#include "PlayFab/ClientModels/GetAccountInfoResult.hpp"
// Including type: PlayFab.ClientModels.GetAdPlacementsRequest
#include "PlayFab/ClientModels/GetAdPlacementsRequest.hpp"
// Including type: PlayFab.ClientModels.GetAdPlacementsResult
#include "PlayFab/ClientModels/GetAdPlacementsResult.hpp"
// Including type: PlayFab.ClientModels.ListUsersCharactersRequest
#include "PlayFab/ClientModels/ListUsersCharactersRequest.hpp"
// Including type: PlayFab.ClientModels.ListUsersCharactersResult
#include "PlayFab/ClientModels/ListUsersCharactersResult.hpp"
// Including type: PlayFab.ClientModels.GetCatalogItemsRequest
#include "PlayFab/ClientModels/GetCatalogItemsRequest.hpp"
// Including type: PlayFab.ClientModels.GetCatalogItemsResult
#include "PlayFab/ClientModels/GetCatalogItemsResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterDataRequest
#include "PlayFab/ClientModels/GetCharacterDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterDataResult
#include "PlayFab/ClientModels/GetCharacterDataResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterInventoryRequest
#include "PlayFab/ClientModels/GetCharacterInventoryRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterInventoryResult
#include "PlayFab/ClientModels/GetCharacterInventoryResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterLeaderboardRequest
#include "PlayFab/ClientModels/GetCharacterLeaderboardRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterLeaderboardResult
#include "PlayFab/ClientModels/GetCharacterLeaderboardResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterStatisticsRequest
#include "PlayFab/ClientModels/GetCharacterStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterStatisticsResult
#include "PlayFab/ClientModels/GetCharacterStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.GetContentDownloadUrlRequest
#include "PlayFab/ClientModels/GetContentDownloadUrlRequest.hpp"
// Including type: PlayFab.ClientModels.GetContentDownloadUrlResult
#include "PlayFab/ClientModels/GetContentDownloadUrlResult.hpp"
// Including type: PlayFab.ClientModels.CurrentGamesRequest
#include "PlayFab/ClientModels/CurrentGamesRequest.hpp"
// Including type: PlayFab.ClientModels.CurrentGamesResult
#include "PlayFab/ClientModels/CurrentGamesResult.hpp"
// Including type: PlayFab.ClientModels.GetFriendLeaderboardRequest
#include "PlayFab/ClientModels/GetFriendLeaderboardRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardResult
#include "PlayFab/ClientModels/GetLeaderboardResult.hpp"
// Including type: PlayFab.ClientModels.GetFriendLeaderboardAroundPlayerRequest
#include "PlayFab/ClientModels/GetFriendLeaderboardAroundPlayerRequest.hpp"
// Including type: PlayFab.ClientModels.GetFriendLeaderboardAroundPlayerResult
#include "PlayFab/ClientModels/GetFriendLeaderboardAroundPlayerResult.hpp"
// Including type: PlayFab.ClientModels.GetFriendsListRequest
#include "PlayFab/ClientModels/GetFriendsListRequest.hpp"
// Including type: PlayFab.ClientModels.GetFriendsListResult
#include "PlayFab/ClientModels/GetFriendsListResult.hpp"
// Including type: PlayFab.ClientModels.GameServerRegionsRequest
#include "PlayFab/ClientModels/GameServerRegionsRequest.hpp"
// Including type: PlayFab.ClientModels.GameServerRegionsResult
#include "PlayFab/ClientModels/GameServerRegionsResult.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardRequest
#include "PlayFab/ClientModels/GetLeaderboardRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundCharacterRequest
#include "PlayFab/ClientModels/GetLeaderboardAroundCharacterRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundCharacterResult
#include "PlayFab/ClientModels/GetLeaderboardAroundCharacterResult.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundPlayerRequest
#include "PlayFab/ClientModels/GetLeaderboardAroundPlayerRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundPlayerResult
#include "PlayFab/ClientModels/GetLeaderboardAroundPlayerResult.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardForUsersCharactersRequest
#include "PlayFab/ClientModels/GetLeaderboardForUsersCharactersRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardForUsersCharactersResult
#include "PlayFab/ClientModels/GetLeaderboardForUsersCharactersResult.hpp"
// Including type: PlayFab.ClientModels.GetPaymentTokenRequest
#include "PlayFab/ClientModels/GetPaymentTokenRequest.hpp"
// Including type: PlayFab.ClientModels.GetPaymentTokenResult
#include "PlayFab/ClientModels/GetPaymentTokenResult.hpp"
// Including type: PlayFab.ClientModels.GetPhotonAuthenticationTokenRequest
#include "PlayFab/ClientModels/GetPhotonAuthenticationTokenRequest.hpp"
// Including type: PlayFab.ClientModels.GetPhotonAuthenticationTokenResult
#include "PlayFab/ClientModels/GetPhotonAuthenticationTokenResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerCombinedInfoRequest
#include "PlayFab/ClientModels/GetPlayerCombinedInfoRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerCombinedInfoResult
#include "PlayFab/ClientModels/GetPlayerCombinedInfoResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerProfileRequest
#include "PlayFab/ClientModels/GetPlayerProfileRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerProfileResult
#include "PlayFab/ClientModels/GetPlayerProfileResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerSegmentsRequest
#include "PlayFab/ClientModels/GetPlayerSegmentsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerSegmentsResult
#include "PlayFab/ClientModels/GetPlayerSegmentsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticsRequest
#include "PlayFab/ClientModels/GetPlayerStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticsResult
#include "PlayFab/ClientModels/GetPlayerStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticVersionsRequest
#include "PlayFab/ClientModels/GetPlayerStatisticVersionsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticVersionsResult
#include "PlayFab/ClientModels/GetPlayerStatisticVersionsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTagsRequest
#include "PlayFab/ClientModels/GetPlayerTagsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTagsResult
#include "PlayFab/ClientModels/GetPlayerTagsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTradesRequest
#include "PlayFab/ClientModels/GetPlayerTradesRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTradesResponse
#include "PlayFab/ClientModels/GetPlayerTradesResponse.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookInstantGamesIdsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookInstantGamesIdsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookInstantGamesIdsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookInstantGamesIdsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGameCenterIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromGameCenterIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGameCenterIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromGameCenterIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGenericIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromGenericIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGenericIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromGenericIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGoogleIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromGoogleIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGoogleIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromGoogleIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromKongregateIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromKongregateIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromKongregateIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromKongregateIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromNintendoSwitchDeviceIdsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromNintendoSwitchDeviceIdsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromPSNAccountIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromPSNAccountIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromPSNAccountIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromPSNAccountIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromSteamIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromSteamIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromSteamIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromSteamIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromTwitchIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromTwitchIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromTwitchIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromTwitchIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromXboxLiveIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromXboxLiveIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromXboxLiveIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromXboxLiveIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPublisherDataRequest
#include "PlayFab/ClientModels/GetPublisherDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetPublisherDataResult
#include "PlayFab/ClientModels/GetPublisherDataResult.hpp"
// Including type: PlayFab.ClientModels.GetPurchaseRequest
#include "PlayFab/ClientModels/GetPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.GetPurchaseResult
#include "PlayFab/ClientModels/GetPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataRequest
#include "PlayFab/ClientModels/GetSharedGroupDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataResult
#include "PlayFab/ClientModels/GetSharedGroupDataResult.hpp"
// Including type: PlayFab.ClientModels.GetStoreItemsRequest
#include "PlayFab/ClientModels/GetStoreItemsRequest.hpp"
// Including type: PlayFab.ClientModels.GetStoreItemsResult
#include "PlayFab/ClientModels/GetStoreItemsResult.hpp"
// Including type: PlayFab.ClientModels.GetTimeRequest
#include "PlayFab/ClientModels/GetTimeRequest.hpp"
// Including type: PlayFab.ClientModels.GetTimeResult
#include "PlayFab/ClientModels/GetTimeResult.hpp"
// Including type: PlayFab.ClientModels.GetTitleDataRequest
#include "PlayFab/ClientModels/GetTitleDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetTitleDataResult
#include "PlayFab/ClientModels/GetTitleDataResult.hpp"
// Including type: PlayFab.ClientModels.GetTitleNewsRequest
#include "PlayFab/ClientModels/GetTitleNewsRequest.hpp"
// Including type: PlayFab.ClientModels.GetTitleNewsResult
#include "PlayFab/ClientModels/GetTitleNewsResult.hpp"
// Including type: PlayFab.ClientModels.GetTitlePublicKeyRequest
#include "PlayFab/ClientModels/GetTitlePublicKeyRequest.hpp"
// Including type: PlayFab.ClientModels.GetTitlePublicKeyResult
#include "PlayFab/ClientModels/GetTitlePublicKeyResult.hpp"
// Including type: PlayFab.ClientModels.GetTradeStatusRequest
#include "PlayFab/ClientModels/GetTradeStatusRequest.hpp"
// Including type: PlayFab.ClientModels.GetTradeStatusResponse
#include "PlayFab/ClientModels/GetTradeStatusResponse.hpp"
// Including type: PlayFab.ClientModels.GetUserDataRequest
#include "PlayFab/ClientModels/GetUserDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetUserDataResult
#include "PlayFab/ClientModels/GetUserDataResult.hpp"
// Including type: PlayFab.ClientModels.GetUserInventoryRequest
#include "PlayFab/ClientModels/GetUserInventoryRequest.hpp"
// Including type: PlayFab.ClientModels.GetUserInventoryResult
#include "PlayFab/ClientModels/GetUserInventoryResult.hpp"
// Including type: PlayFab.ClientModels.GetWindowsHelloChallengeRequest
#include "PlayFab/ClientModels/GetWindowsHelloChallengeRequest.hpp"
// Including type: PlayFab.ClientModels.GetWindowsHelloChallengeResponse
#include "PlayFab/ClientModels/GetWindowsHelloChallengeResponse.hpp"
// Including type: PlayFab.ClientModels.GrantCharacterToUserRequest
#include "PlayFab/ClientModels/GrantCharacterToUserRequest.hpp"
// Including type: PlayFab.ClientModels.GrantCharacterToUserResult
#include "PlayFab/ClientModels/GrantCharacterToUserResult.hpp"
// Including type: PlayFab.ClientModels.LinkAndroidDeviceIDRequest
#include "PlayFab/ClientModels/LinkAndroidDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LinkAndroidDeviceIDResult
#include "PlayFab/ClientModels/LinkAndroidDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.LinkAppleRequest
#include "PlayFab/ClientModels/LinkAppleRequest.hpp"
// Including type: PlayFab.ClientModels.EmptyResult
#include "PlayFab/ClientModels/EmptyResult.hpp"
// Including type: PlayFab.ClientModels.LinkCustomIDRequest
#include "PlayFab/ClientModels/LinkCustomIDRequest.hpp"
// Including type: PlayFab.ClientModels.LinkCustomIDResult
#include "PlayFab/ClientModels/LinkCustomIDResult.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookAccountRequest
#include "PlayFab/ClientModels/LinkFacebookAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookAccountResult
#include "PlayFab/ClientModels/LinkFacebookAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookInstantGamesIdRequest
#include "PlayFab/ClientModels/LinkFacebookInstantGamesIdRequest.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookInstantGamesIdResult
#include "PlayFab/ClientModels/LinkFacebookInstantGamesIdResult.hpp"
// Including type: PlayFab.ClientModels.LinkGameCenterAccountRequest
#include "PlayFab/ClientModels/LinkGameCenterAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkGameCenterAccountResult
#include "PlayFab/ClientModels/LinkGameCenterAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkGoogleAccountRequest
#include "PlayFab/ClientModels/LinkGoogleAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkGoogleAccountResult
#include "PlayFab/ClientModels/LinkGoogleAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkIOSDeviceIDRequest
#include "PlayFab/ClientModels/LinkIOSDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LinkIOSDeviceIDResult
#include "PlayFab/ClientModels/LinkIOSDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.LinkKongregateAccountRequest
#include "PlayFab/ClientModels/LinkKongregateAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkKongregateAccountResult
#include "PlayFab/ClientModels/LinkKongregateAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkNintendoAccountRequest
#include "PlayFab/ClientModels/LinkNintendoAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkNintendoSwitchDeviceIdRequest
#include "PlayFab/ClientModels/LinkNintendoSwitchDeviceIdRequest.hpp"
// Including type: PlayFab.ClientModels.LinkNintendoSwitchDeviceIdResult
#include "PlayFab/ClientModels/LinkNintendoSwitchDeviceIdResult.hpp"
// Including type: PlayFab.ClientModels.LinkOpenIdConnectRequest
#include "PlayFab/ClientModels/LinkOpenIdConnectRequest.hpp"
// Including type: PlayFab.ClientModels.LinkPSNAccountRequest
#include "PlayFab/ClientModels/LinkPSNAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkPSNAccountResult
#include "PlayFab/ClientModels/LinkPSNAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkSteamAccountRequest
#include "PlayFab/ClientModels/LinkSteamAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkSteamAccountResult
#include "PlayFab/ClientModels/LinkSteamAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkTwitchAccountRequest
#include "PlayFab/ClientModels/LinkTwitchAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkTwitchAccountResult
#include "PlayFab/ClientModels/LinkTwitchAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkWindowsHelloAccountRequest
#include "PlayFab/ClientModels/LinkWindowsHelloAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkWindowsHelloAccountResponse
#include "PlayFab/ClientModels/LinkWindowsHelloAccountResponse.hpp"
// Including type: PlayFab.ClientModels.LinkXboxAccountRequest
#include "PlayFab/ClientModels/LinkXboxAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkXboxAccountResult
#include "PlayFab/ClientModels/LinkXboxAccountResult.hpp"
// Including type: PlayFab.ClientModels.LoginWithAndroidDeviceIDRequest
#include "PlayFab/ClientModels/LoginWithAndroidDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LoginResult
#include "PlayFab/ClientModels/LoginResult.hpp"
// Including type: PlayFab.ClientModels.LoginWithAppleRequest
#include "PlayFab/ClientModels/LoginWithAppleRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithCustomIDRequest
#include "PlayFab/ClientModels/LoginWithCustomIDRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithEmailAddressRequest
#include "PlayFab/ClientModels/LoginWithEmailAddressRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithFacebookRequest
#include "PlayFab/ClientModels/LoginWithFacebookRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithFacebookInstantGamesIdRequest
#include "PlayFab/ClientModels/LoginWithFacebookInstantGamesIdRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithGameCenterRequest
#include "PlayFab/ClientModels/LoginWithGameCenterRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithGoogleAccountRequest
#include "PlayFab/ClientModels/LoginWithGoogleAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithIOSDeviceIDRequest
#include "PlayFab/ClientModels/LoginWithIOSDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithKongregateRequest
#include "PlayFab/ClientModels/LoginWithKongregateRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithNintendoAccountRequest
#include "PlayFab/ClientModels/LoginWithNintendoAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithNintendoSwitchDeviceIdRequest
#include "PlayFab/ClientModels/LoginWithNintendoSwitchDeviceIdRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithOpenIdConnectRequest
#include "PlayFab/ClientModels/LoginWithOpenIdConnectRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithPlayFabRequest
#include "PlayFab/ClientModels/LoginWithPlayFabRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithPSNRequest
#include "PlayFab/ClientModels/LoginWithPSNRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithSteamRequest
#include "PlayFab/ClientModels/LoginWithSteamRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithTwitchRequest
#include "PlayFab/ClientModels/LoginWithTwitchRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithWindowsHelloRequest
#include "PlayFab/ClientModels/LoginWithWindowsHelloRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithXboxRequest
#include "PlayFab/ClientModels/LoginWithXboxRequest.hpp"
// Including type: PlayFab.ClientModels.MatchmakeRequest
#include "PlayFab/ClientModels/MatchmakeRequest.hpp"
// Including type: PlayFab.ClientModels.MatchmakeResult
#include "PlayFab/ClientModels/MatchmakeResult.hpp"
// Including type: PlayFab.ClientModels.OpenTradeRequest
#include "PlayFab/ClientModels/OpenTradeRequest.hpp"
// Including type: PlayFab.ClientModels.OpenTradeResponse
#include "PlayFab/ClientModels/OpenTradeResponse.hpp"
// Including type: PlayFab.ClientModels.PayForPurchaseRequest
#include "PlayFab/ClientModels/PayForPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.PayForPurchaseResult
#include "PlayFab/ClientModels/PayForPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.PurchaseItemRequest
#include "PlayFab/ClientModels/PurchaseItemRequest.hpp"
// Including type: PlayFab.ClientModels.PurchaseItemResult
#include "PlayFab/ClientModels/PurchaseItemResult.hpp"
// Including type: PlayFab.ClientModels.RedeemCouponRequest
#include "PlayFab/ClientModels/RedeemCouponRequest.hpp"
// Including type: PlayFab.ClientModels.RedeemCouponResult
#include "PlayFab/ClientModels/RedeemCouponResult.hpp"
// Including type: PlayFab.ClientModels.RefreshPSNAuthTokenRequest
#include "PlayFab/ClientModels/RefreshPSNAuthTokenRequest.hpp"
// Including type: PlayFab.ClientModels.EmptyResponse
#include "PlayFab/ClientModels/EmptyResponse.hpp"
// Including type: PlayFab.ClientModels.RegisterForIOSPushNotificationRequest
#include "PlayFab/ClientModels/RegisterForIOSPushNotificationRequest.hpp"
// Including type: PlayFab.ClientModels.RegisterForIOSPushNotificationResult
#include "PlayFab/ClientModels/RegisterForIOSPushNotificationResult.hpp"
// Including type: PlayFab.ClientModels.RegisterPlayFabUserRequest
#include "PlayFab/ClientModels/RegisterPlayFabUserRequest.hpp"
// Including type: PlayFab.ClientModels.RegisterPlayFabUserResult
#include "PlayFab/ClientModels/RegisterPlayFabUserResult.hpp"
// Including type: PlayFab.ClientModels.RegisterWithWindowsHelloRequest
#include "PlayFab/ClientModels/RegisterWithWindowsHelloRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveContactEmailRequest
#include "PlayFab/ClientModels/RemoveContactEmailRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveContactEmailResult
#include "PlayFab/ClientModels/RemoveContactEmailResult.hpp"
// Including type: PlayFab.ClientModels.RemoveFriendRequest
#include "PlayFab/ClientModels/RemoveFriendRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveFriendResult
#include "PlayFab/ClientModels/RemoveFriendResult.hpp"
// Including type: PlayFab.ClientModels.RemoveGenericIDRequest
#include "PlayFab/ClientModels/RemoveGenericIDRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveGenericIDResult
#include "PlayFab/ClientModels/RemoveGenericIDResult.hpp"
// Including type: PlayFab.ClientModels.RemoveSharedGroupMembersRequest
#include "PlayFab/ClientModels/RemoveSharedGroupMembersRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveSharedGroupMembersResult
#include "PlayFab/ClientModels/RemoveSharedGroupMembersResult.hpp"
// Including type: PlayFab.ClientModels.ReportAdActivityRequest
#include "PlayFab/ClientModels/ReportAdActivityRequest.hpp"
// Including type: PlayFab.ClientModels.ReportAdActivityResult
#include "PlayFab/ClientModels/ReportAdActivityResult.hpp"
// Including type: PlayFab.ClientModels.DeviceInfoRequest
#include "PlayFab/ClientModels/DeviceInfoRequest.hpp"
// Including type: PlayFab.ClientModels.ReportPlayerClientRequest
#include "PlayFab/ClientModels/ReportPlayerClientRequest.hpp"
// Including type: PlayFab.ClientModels.ReportPlayerClientResult
#include "PlayFab/ClientModels/ReportPlayerClientResult.hpp"
// Including type: PlayFab.ClientModels.RestoreIOSPurchasesRequest
#include "PlayFab/ClientModels/RestoreIOSPurchasesRequest.hpp"
// Including type: PlayFab.ClientModels.RestoreIOSPurchasesResult
#include "PlayFab/ClientModels/RestoreIOSPurchasesResult.hpp"
// Including type: PlayFab.ClientModels.RewardAdActivityRequest
#include "PlayFab/ClientModels/RewardAdActivityRequest.hpp"
// Including type: PlayFab.ClientModels.RewardAdActivityResult
#include "PlayFab/ClientModels/RewardAdActivityResult.hpp"
// Including type: PlayFab.ClientModels.SendAccountRecoveryEmailRequest
#include "PlayFab/ClientModels/SendAccountRecoveryEmailRequest.hpp"
// Including type: PlayFab.ClientModels.SendAccountRecoveryEmailResult
#include "PlayFab/ClientModels/SendAccountRecoveryEmailResult.hpp"
// Including type: PlayFab.ClientModels.SetFriendTagsRequest
#include "PlayFab/ClientModels/SetFriendTagsRequest.hpp"
// Including type: PlayFab.ClientModels.SetFriendTagsResult
#include "PlayFab/ClientModels/SetFriendTagsResult.hpp"
// Including type: PlayFab.ClientModels.SetPlayerSecretRequest
#include "PlayFab/ClientModels/SetPlayerSecretRequest.hpp"
// Including type: PlayFab.ClientModels.SetPlayerSecretResult
#include "PlayFab/ClientModels/SetPlayerSecretResult.hpp"
// Including type: PlayFab.ClientModels.StartGameRequest
#include "PlayFab/ClientModels/StartGameRequest.hpp"
// Including type: PlayFab.ClientModels.StartGameResult
#include "PlayFab/ClientModels/StartGameResult.hpp"
// Including type: PlayFab.ClientModels.StartPurchaseRequest
#include "PlayFab/ClientModels/StartPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.StartPurchaseResult
#include "PlayFab/ClientModels/StartPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.SubtractUserVirtualCurrencyRequest
#include "PlayFab/ClientModels/SubtractUserVirtualCurrencyRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkAndroidDeviceIDRequest
#include "PlayFab/ClientModels/UnlinkAndroidDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkAndroidDeviceIDResult
#include "PlayFab/ClientModels/UnlinkAndroidDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkAppleRequest
#include "PlayFab/ClientModels/UnlinkAppleRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkCustomIDRequest
#include "PlayFab/ClientModels/UnlinkCustomIDRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkCustomIDResult
#include "PlayFab/ClientModels/UnlinkCustomIDResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookAccountRequest
#include "PlayFab/ClientModels/UnlinkFacebookAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookAccountResult
#include "PlayFab/ClientModels/UnlinkFacebookAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookInstantGamesIdRequest
#include "PlayFab/ClientModels/UnlinkFacebookInstantGamesIdRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookInstantGamesIdResult
#include "PlayFab/ClientModels/UnlinkFacebookInstantGamesIdResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkGameCenterAccountRequest
#include "PlayFab/ClientModels/UnlinkGameCenterAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkGameCenterAccountResult
#include "PlayFab/ClientModels/UnlinkGameCenterAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkGoogleAccountRequest
#include "PlayFab/ClientModels/UnlinkGoogleAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkGoogleAccountResult
#include "PlayFab/ClientModels/UnlinkGoogleAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkIOSDeviceIDRequest
#include "PlayFab/ClientModels/UnlinkIOSDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkIOSDeviceIDResult
#include "PlayFab/ClientModels/UnlinkIOSDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkKongregateAccountRequest
#include "PlayFab/ClientModels/UnlinkKongregateAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkKongregateAccountResult
#include "PlayFab/ClientModels/UnlinkKongregateAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkNintendoAccountRequest
#include "PlayFab/ClientModels/UnlinkNintendoAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkNintendoSwitchDeviceIdRequest
#include "PlayFab/ClientModels/UnlinkNintendoSwitchDeviceIdRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkNintendoSwitchDeviceIdResult
#include "PlayFab/ClientModels/UnlinkNintendoSwitchDeviceIdResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkOpenIdConnectRequest
#include "PlayFab/ClientModels/UnlinkOpenIdConnectRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkPSNAccountRequest
#include "PlayFab/ClientModels/UnlinkPSNAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkPSNAccountResult
#include "PlayFab/ClientModels/UnlinkPSNAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkSteamAccountRequest
#include "PlayFab/ClientModels/UnlinkSteamAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkSteamAccountResult
#include "PlayFab/ClientModels/UnlinkSteamAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkTwitchAccountRequest
#include "PlayFab/ClientModels/UnlinkTwitchAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkTwitchAccountResult
#include "PlayFab/ClientModels/UnlinkTwitchAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkWindowsHelloAccountRequest
#include "PlayFab/ClientModels/UnlinkWindowsHelloAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkWindowsHelloAccountResponse
#include "PlayFab/ClientModels/UnlinkWindowsHelloAccountResponse.hpp"
// Including type: PlayFab.ClientModels.UnlinkXboxAccountRequest
#include "PlayFab/ClientModels/UnlinkXboxAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkXboxAccountResult
#include "PlayFab/ClientModels/UnlinkXboxAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlockContainerInstanceRequest
#include "PlayFab/ClientModels/UnlockContainerInstanceRequest.hpp"
// Including type: PlayFab.ClientModels.UnlockContainerItemResult
#include "PlayFab/ClientModels/UnlockContainerItemResult.hpp"
// Including type: PlayFab.ClientModels.UnlockContainerItemRequest
#include "PlayFab/ClientModels/UnlockContainerItemRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateAvatarUrlRequest
#include "PlayFab/ClientModels/UpdateAvatarUrlRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterDataRequest
#include "PlayFab/ClientModels/UpdateCharacterDataRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterDataResult
#include "PlayFab/ClientModels/UpdateCharacterDataResult.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterStatisticsRequest
#include "PlayFab/ClientModels/UpdateCharacterStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterStatisticsResult
#include "PlayFab/ClientModels/UpdateCharacterStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.UpdatePlayerStatisticsRequest
#include "PlayFab/ClientModels/UpdatePlayerStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.UpdatePlayerStatisticsResult
#include "PlayFab/ClientModels/UpdatePlayerStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.UpdateSharedGroupDataRequest
#include "PlayFab/ClientModels/UpdateSharedGroupDataRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateSharedGroupDataResult
#include "PlayFab/ClientModels/UpdateSharedGroupDataResult.hpp"
// Including type: PlayFab.ClientModels.UpdateUserDataRequest
#include "PlayFab/ClientModels/UpdateUserDataRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateUserDataResult
#include "PlayFab/ClientModels/UpdateUserDataResult.hpp"
// Including type: PlayFab.ClientModels.UpdateUserTitleDisplayNameRequest
#include "PlayFab/ClientModels/UpdateUserTitleDisplayNameRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateUserTitleDisplayNameResult
#include "PlayFab/ClientModels/UpdateUserTitleDisplayNameResult.hpp"
// Including type: PlayFab.ClientModels.ValidateAmazonReceiptRequest
#include "PlayFab/ClientModels/ValidateAmazonReceiptRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateAmazonReceiptResult
#include "PlayFab/ClientModels/ValidateAmazonReceiptResult.hpp"
// Including type: PlayFab.ClientModels.ValidateGooglePlayPurchaseRequest
#include "PlayFab/ClientModels/ValidateGooglePlayPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateGooglePlayPurchaseResult
#include "PlayFab/ClientModels/ValidateGooglePlayPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.ValidateIOSReceiptRequest
#include "PlayFab/ClientModels/ValidateIOSReceiptRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateIOSReceiptResult
#include "PlayFab/ClientModels/ValidateIOSReceiptResult.hpp"
// Including type: PlayFab.ClientModels.ValidateWindowsReceiptRequest
#include "PlayFab/ClientModels/ValidateWindowsReceiptRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateWindowsReceiptResult
#include "PlayFab/ClientModels/ValidateWindowsReceiptResult.hpp"
// Including type: PlayFab.ClientModels.WriteClientCharacterEventRequest
#include "PlayFab/ClientModels/WriteClientCharacterEventRequest.hpp"
// Including type: PlayFab.ClientModels.WriteEventResponse
#include "PlayFab/ClientModels/WriteEventResponse.hpp"
// Including type: PlayFab.ClientModels.WriteClientPlayerEventRequest
#include "PlayFab/ClientModels/WriteClientPlayerEventRequest.hpp"
// Including type: PlayFab.ClientModels.WriteTitleEventRequest
#include "PlayFab/ClientModels/WriteTitleEventRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabClientAPI..cctor
void PlayFab::PlayFabClientAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.IsClientLoggedIn
bool PlayFab::PlayFabClientAPI::IsClientLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::IsClientLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "IsClientLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ForgetAllCredentials
void PlayFab::PlayFabClientAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AcceptTrade
void PlayFab::PlayFabClientAPI::AcceptTrade(::PlayFab::ClientModels::AcceptTradeRequest* request, ::System::Action_1<::PlayFab::ClientModels::AcceptTradeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AcceptTrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AcceptTrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AddFriend
void PlayFab::PlayFabClientAPI::AddFriend(::PlayFab::ClientModels::AddFriendRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddFriendResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AddFriend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AddFriend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AddGenericID
void PlayFab::PlayFabClientAPI::AddGenericID(::PlayFab::ClientModels::AddGenericIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddGenericIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AddGenericID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AddGenericID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AddOrUpdateContactEmail
void PlayFab::PlayFabClientAPI::AddOrUpdateContactEmail(::PlayFab::ClientModels::AddOrUpdateContactEmailRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddOrUpdateContactEmailResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AddOrUpdateContactEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AddOrUpdateContactEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AddSharedGroupMembers
void PlayFab::PlayFabClientAPI::AddSharedGroupMembers(::PlayFab::ClientModels::AddSharedGroupMembersRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddSharedGroupMembersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AddSharedGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AddSharedGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AddUsernamePassword
void PlayFab::PlayFabClientAPI::AddUsernamePassword(::PlayFab::ClientModels::AddUsernamePasswordRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddUsernamePasswordResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AddUsernamePassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AddUsernamePassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AddUserVirtualCurrency
void PlayFab::PlayFabClientAPI::AddUserVirtualCurrency(::PlayFab::ClientModels::AddUserVirtualCurrencyRequest* request, ::System::Action_1<::PlayFab::ClientModels::ModifyUserVirtualCurrencyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AddUserVirtualCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AddUserVirtualCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AndroidDevicePushNotificationRegistration
void PlayFab::PlayFabClientAPI::AndroidDevicePushNotificationRegistration(::PlayFab::ClientModels::AndroidDevicePushNotificationRegistrationRequest* request, ::System::Action_1<::PlayFab::ClientModels::AndroidDevicePushNotificationRegistrationResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AndroidDevicePushNotificationRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AndroidDevicePushNotificationRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.AttributeInstall
void PlayFab::PlayFabClientAPI::AttributeInstall(::PlayFab::ClientModels::AttributeInstallRequest* request, ::System::Action_1<::PlayFab::ClientModels::AttributeInstallResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::AttributeInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "AttributeInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.CancelTrade
void PlayFab::PlayFabClientAPI::CancelTrade(::PlayFab::ClientModels::CancelTradeRequest* request, ::System::Action_1<::PlayFab::ClientModels::CancelTradeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::CancelTrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "CancelTrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ConfirmPurchase
void PlayFab::PlayFabClientAPI::ConfirmPurchase(::PlayFab::ClientModels::ConfirmPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConfirmPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ConfirmPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ConfirmPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ConsumeItem
void PlayFab::PlayFabClientAPI::ConsumeItem(::PlayFab::ClientModels::ConsumeItemRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConsumeItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ConsumeItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ConsumeItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ConsumePSNEntitlements
void PlayFab::PlayFabClientAPI::ConsumePSNEntitlements(::PlayFab::ClientModels::ConsumePSNEntitlementsRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConsumePSNEntitlementsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ConsumePSNEntitlements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ConsumePSNEntitlements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ConsumeXboxEntitlements
void PlayFab::PlayFabClientAPI::ConsumeXboxEntitlements(::PlayFab::ClientModels::ConsumeXboxEntitlementsRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConsumeXboxEntitlementsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ConsumeXboxEntitlements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ConsumeXboxEntitlements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.CreateSharedGroup
void PlayFab::PlayFabClientAPI::CreateSharedGroup(::PlayFab::ClientModels::CreateSharedGroupRequest* request, ::System::Action_1<::PlayFab::ClientModels::CreateSharedGroupResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::CreateSharedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "CreateSharedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ExecuteCloudScript
void PlayFab::PlayFabClientAPI::ExecuteCloudScript(::PlayFab::ClientModels::ExecuteCloudScriptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ExecuteCloudScriptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ExecuteCloudScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ExecuteCloudScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetAccountInfo
void PlayFab::PlayFabClientAPI::GetAccountInfo(::PlayFab::ClientModels::GetAccountInfoRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetAccountInfoResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetAccountInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetAccountInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetAdPlacements
void PlayFab::PlayFabClientAPI::GetAdPlacements(::PlayFab::ClientModels::GetAdPlacementsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetAdPlacementsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetAdPlacements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetAdPlacements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetAllUsersCharacters
void PlayFab::PlayFabClientAPI::GetAllUsersCharacters(::PlayFab::ClientModels::ListUsersCharactersRequest* request, ::System::Action_1<::PlayFab::ClientModels::ListUsersCharactersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetAllUsersCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetAllUsersCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetCatalogItems
void PlayFab::PlayFabClientAPI::GetCatalogItems(::PlayFab::ClientModels::GetCatalogItemsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCatalogItemsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetCatalogItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetCatalogItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetCharacterData
void PlayFab::PlayFabClientAPI::GetCharacterData(::PlayFab::ClientModels::GetCharacterDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetCharacterData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetCharacterData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetCharacterInventory
void PlayFab::PlayFabClientAPI::GetCharacterInventory(::PlayFab::ClientModels::GetCharacterInventoryRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterInventoryResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetCharacterInventory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetCharacterInventory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetCharacterLeaderboard
void PlayFab::PlayFabClientAPI::GetCharacterLeaderboard(::PlayFab::ClientModels::GetCharacterLeaderboardRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterLeaderboardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetCharacterLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetCharacterLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetCharacterReadOnlyData
void PlayFab::PlayFabClientAPI::GetCharacterReadOnlyData(::PlayFab::ClientModels::GetCharacterDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetCharacterReadOnlyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetCharacterReadOnlyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetCharacterStatistics
void PlayFab::PlayFabClientAPI::GetCharacterStatistics(::PlayFab::ClientModels::GetCharacterStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetCharacterStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetCharacterStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetContentDownloadUrl
void PlayFab::PlayFabClientAPI::GetContentDownloadUrl(::PlayFab::ClientModels::GetContentDownloadUrlRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetContentDownloadUrlResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetContentDownloadUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetContentDownloadUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetCurrentGames
void PlayFab::PlayFabClientAPI::GetCurrentGames(::PlayFab::ClientModels::CurrentGamesRequest* request, ::System::Action_1<::PlayFab::ClientModels::CurrentGamesResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetCurrentGames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetCurrentGames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetFriendLeaderboard
void PlayFab::PlayFabClientAPI::GetFriendLeaderboard(::PlayFab::ClientModels::GetFriendLeaderboardRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetFriendLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetFriendLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetFriendLeaderboardAroundPlayer
void PlayFab::PlayFabClientAPI::GetFriendLeaderboardAroundPlayer(::PlayFab::ClientModels::GetFriendLeaderboardAroundPlayerRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetFriendLeaderboardAroundPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetFriendLeaderboardAroundPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetFriendLeaderboardAroundPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetFriendsList
void PlayFab::PlayFabClientAPI::GetFriendsList(::PlayFab::ClientModels::GetFriendsListRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetFriendsListResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetFriendsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetFriendsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetGameServerRegions
void PlayFab::PlayFabClientAPI::GetGameServerRegions(::PlayFab::ClientModels::GameServerRegionsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GameServerRegionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetGameServerRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetGameServerRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetLeaderboard
void PlayFab::PlayFabClientAPI::GetLeaderboard(::PlayFab::ClientModels::GetLeaderboardRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetLeaderboardAroundCharacter
void PlayFab::PlayFabClientAPI::GetLeaderboardAroundCharacter(::PlayFab::ClientModels::GetLeaderboardAroundCharacterRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardAroundCharacterResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetLeaderboardAroundCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetLeaderboardAroundCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetLeaderboardAroundPlayer
void PlayFab::PlayFabClientAPI::GetLeaderboardAroundPlayer(::PlayFab::ClientModels::GetLeaderboardAroundPlayerRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardAroundPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetLeaderboardAroundPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetLeaderboardAroundPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetLeaderboardForUserCharacters
void PlayFab::PlayFabClientAPI::GetLeaderboardForUserCharacters(::PlayFab::ClientModels::GetLeaderboardForUsersCharactersRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardForUsersCharactersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetLeaderboardForUserCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetLeaderboardForUserCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPaymentToken
void PlayFab::PlayFabClientAPI::GetPaymentToken(::PlayFab::ClientModels::GetPaymentTokenRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPaymentTokenResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPaymentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPaymentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPhotonAuthenticationToken
void PlayFab::PlayFabClientAPI::GetPhotonAuthenticationToken(::PlayFab::ClientModels::GetPhotonAuthenticationTokenRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPhotonAuthenticationTokenResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPhotonAuthenticationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPhotonAuthenticationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayerCombinedInfo
void PlayFab::PlayFabClientAPI::GetPlayerCombinedInfo(::PlayFab::ClientModels::GetPlayerCombinedInfoRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerCombinedInfoResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayerCombinedInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayerCombinedInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayerProfile
void PlayFab::PlayFabClientAPI::GetPlayerProfile(::PlayFab::ClientModels::GetPlayerProfileRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerProfileResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayerProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayerProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayerSegments
void PlayFab::PlayFabClientAPI::GetPlayerSegments(::PlayFab::ClientModels::GetPlayerSegmentsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerSegmentsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayerSegments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayerSegments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayerStatistics
void PlayFab::PlayFabClientAPI::GetPlayerStatistics(::PlayFab::ClientModels::GetPlayerStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayerStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayerStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayerStatisticVersions
void PlayFab::PlayFabClientAPI::GetPlayerStatisticVersions(::PlayFab::ClientModels::GetPlayerStatisticVersionsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerStatisticVersionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayerStatisticVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayerStatisticVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayerTags
void PlayFab::PlayFabClientAPI::GetPlayerTags(::PlayFab::ClientModels::GetPlayerTagsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerTagsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayerTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayerTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayerTrades
void PlayFab::PlayFabClientAPI::GetPlayerTrades(::PlayFab::ClientModels::GetPlayerTradesRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerTradesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayerTrades");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayerTrades", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromFacebookIDs(::PlayFab::ClientModels::GetPlayFabIDsFromFacebookIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromFacebookIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromFacebookIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromFacebookIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookInstantGamesIds
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromFacebookInstantGamesIds(::PlayFab::ClientModels::GetPlayFabIDsFromFacebookInstantGamesIdsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromFacebookInstantGamesIdsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromFacebookInstantGamesIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromFacebookInstantGamesIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGameCenterIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromGameCenterIDs(::PlayFab::ClientModels::GetPlayFabIDsFromGameCenterIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromGameCenterIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromGameCenterIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromGameCenterIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGenericIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromGenericIDs(::PlayFab::ClientModels::GetPlayFabIDsFromGenericIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromGenericIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromGenericIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromGenericIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGoogleIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromGoogleIDs(::PlayFab::ClientModels::GetPlayFabIDsFromGoogleIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromGoogleIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromGoogleIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromGoogleIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromKongregateIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromKongregateIDs(::PlayFab::ClientModels::GetPlayFabIDsFromKongregateIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromKongregateIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromKongregateIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromKongregateIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromNintendoSwitchDeviceIds(::PlayFab::ClientModels::GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromNintendoSwitchDeviceIdsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromNintendoSwitchDeviceIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromNintendoSwitchDeviceIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromPSNAccountIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromPSNAccountIDs(::PlayFab::ClientModels::GetPlayFabIDsFromPSNAccountIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromPSNAccountIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromPSNAccountIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromPSNAccountIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromSteamIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromSteamIDs(::PlayFab::ClientModels::GetPlayFabIDsFromSteamIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromSteamIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromSteamIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromSteamIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromTwitchIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromTwitchIDs(::PlayFab::ClientModels::GetPlayFabIDsFromTwitchIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromTwitchIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromTwitchIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromTwitchIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPlayFabIDsFromXboxLiveIDs
void PlayFab::PlayFabClientAPI::GetPlayFabIDsFromXboxLiveIDs(::PlayFab::ClientModels::GetPlayFabIDsFromXboxLiveIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromXboxLiveIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPlayFabIDsFromXboxLiveIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPlayFabIDsFromXboxLiveIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPublisherData
void PlayFab::PlayFabClientAPI::GetPublisherData(::PlayFab::ClientModels::GetPublisherDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPublisherDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPublisherData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPublisherData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetPurchase
void PlayFab::PlayFabClientAPI::GetPurchase(::PlayFab::ClientModels::GetPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetSharedGroupData
void PlayFab::PlayFabClientAPI::GetSharedGroupData(::PlayFab::ClientModels::GetSharedGroupDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetSharedGroupDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetSharedGroupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetSharedGroupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetStoreItems
void PlayFab::PlayFabClientAPI::GetStoreItems(::PlayFab::ClientModels::GetStoreItemsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetStoreItemsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetStoreItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetStoreItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetTime
void PlayFab::PlayFabClientAPI::GetTime(::PlayFab::ClientModels::GetTimeRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTimeResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetTitleData
void PlayFab::PlayFabClientAPI::GetTitleData(::PlayFab::ClientModels::GetTitleDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTitleDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetTitleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetTitleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetTitleNews
void PlayFab::PlayFabClientAPI::GetTitleNews(::PlayFab::ClientModels::GetTitleNewsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTitleNewsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetTitleNews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetTitleNews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetTitlePublicKey
void PlayFab::PlayFabClientAPI::GetTitlePublicKey(::PlayFab::ClientModels::GetTitlePublicKeyRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTitlePublicKeyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetTitlePublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetTitlePublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetTradeStatus
void PlayFab::PlayFabClientAPI::GetTradeStatus(::PlayFab::ClientModels::GetTradeStatusRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTradeStatusResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetTradeStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetTradeStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetUserData
void PlayFab::PlayFabClientAPI::GetUserData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetUserInventory
void PlayFab::PlayFabClientAPI::GetUserInventory(::PlayFab::ClientModels::GetUserInventoryRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserInventoryResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetUserInventory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetUserInventory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetUserPublisherData
void PlayFab::PlayFabClientAPI::GetUserPublisherData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetUserPublisherData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetUserPublisherData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetUserPublisherReadOnlyData
void PlayFab::PlayFabClientAPI::GetUserPublisherReadOnlyData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetUserPublisherReadOnlyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetUserPublisherReadOnlyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetUserReadOnlyData
void PlayFab::PlayFabClientAPI::GetUserReadOnlyData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetUserReadOnlyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetUserReadOnlyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GetWindowsHelloChallenge
void PlayFab::PlayFabClientAPI::GetWindowsHelloChallenge(::PlayFab::ClientModels::GetWindowsHelloChallengeRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetWindowsHelloChallengeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GetWindowsHelloChallenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GetWindowsHelloChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.GrantCharacterToUser
void PlayFab::PlayFabClientAPI::GrantCharacterToUser(::PlayFab::ClientModels::GrantCharacterToUserRequest* request, ::System::Action_1<::PlayFab::ClientModels::GrantCharacterToUserResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::GrantCharacterToUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "GrantCharacterToUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkAndroidDeviceID
void PlayFab::PlayFabClientAPI::LinkAndroidDeviceID(::PlayFab::ClientModels::LinkAndroidDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkAndroidDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkAndroidDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkAndroidDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkApple
void PlayFab::PlayFabClientAPI::LinkApple(::PlayFab::ClientModels::LinkAppleRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkApple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkApple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkCustomID
void PlayFab::PlayFabClientAPI::LinkCustomID(::PlayFab::ClientModels::LinkCustomIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkCustomIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkCustomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkCustomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkFacebookAccount
void PlayFab::PlayFabClientAPI::LinkFacebookAccount(::PlayFab::ClientModels::LinkFacebookAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkFacebookAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkFacebookAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkFacebookAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkFacebookInstantGamesId
void PlayFab::PlayFabClientAPI::LinkFacebookInstantGamesId(::PlayFab::ClientModels::LinkFacebookInstantGamesIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkFacebookInstantGamesIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkFacebookInstantGamesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkFacebookInstantGamesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkGameCenterAccount
void PlayFab::PlayFabClientAPI::LinkGameCenterAccount(::PlayFab::ClientModels::LinkGameCenterAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkGameCenterAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkGameCenterAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkGameCenterAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkGoogleAccount
void PlayFab::PlayFabClientAPI::LinkGoogleAccount(::PlayFab::ClientModels::LinkGoogleAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkGoogleAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkGoogleAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkGoogleAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkIOSDeviceID
void PlayFab::PlayFabClientAPI::LinkIOSDeviceID(::PlayFab::ClientModels::LinkIOSDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkIOSDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkIOSDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkIOSDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkKongregate
void PlayFab::PlayFabClientAPI::LinkKongregate(::PlayFab::ClientModels::LinkKongregateAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkKongregateAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkKongregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkKongregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkNintendoAccount
void PlayFab::PlayFabClientAPI::LinkNintendoAccount(::PlayFab::ClientModels::LinkNintendoAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkNintendoAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkNintendoAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkNintendoSwitchDeviceId
void PlayFab::PlayFabClientAPI::LinkNintendoSwitchDeviceId(::PlayFab::ClientModels::LinkNintendoSwitchDeviceIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkNintendoSwitchDeviceIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkNintendoSwitchDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkNintendoSwitchDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkOpenIdConnect
void PlayFab::PlayFabClientAPI::LinkOpenIdConnect(::PlayFab::ClientModels::LinkOpenIdConnectRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkOpenIdConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkOpenIdConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkPSNAccount
void PlayFab::PlayFabClientAPI::LinkPSNAccount(::PlayFab::ClientModels::LinkPSNAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkPSNAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkPSNAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkPSNAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkSteamAccount
void PlayFab::PlayFabClientAPI::LinkSteamAccount(::PlayFab::ClientModels::LinkSteamAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkSteamAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkSteamAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkSteamAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkTwitch
void PlayFab::PlayFabClientAPI::LinkTwitch(::PlayFab::ClientModels::LinkTwitchAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkTwitchAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkTwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkTwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkWindowsHello
void PlayFab::PlayFabClientAPI::LinkWindowsHello(::PlayFab::ClientModels::LinkWindowsHelloAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkWindowsHelloAccountResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LinkXboxAccount
void PlayFab::PlayFabClientAPI::LinkXboxAccount(::PlayFab::ClientModels::LinkXboxAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkXboxAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LinkXboxAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LinkXboxAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithAndroidDeviceID
void PlayFab::PlayFabClientAPI::LoginWithAndroidDeviceID(::PlayFab::ClientModels::LoginWithAndroidDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithAndroidDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithAndroidDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithApple
void PlayFab::PlayFabClientAPI::LoginWithApple(::PlayFab::ClientModels::LoginWithAppleRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithApple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithApple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithCustomID
void PlayFab::PlayFabClientAPI::LoginWithCustomID(::PlayFab::ClientModels::LoginWithCustomIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithCustomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithCustomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithEmailAddress
void PlayFab::PlayFabClientAPI::LoginWithEmailAddress(::PlayFab::ClientModels::LoginWithEmailAddressRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithEmailAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithEmailAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithFacebook
void PlayFab::PlayFabClientAPI::LoginWithFacebook(::PlayFab::ClientModels::LoginWithFacebookRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithFacebookInstantGamesId
void PlayFab::PlayFabClientAPI::LoginWithFacebookInstantGamesId(::PlayFab::ClientModels::LoginWithFacebookInstantGamesIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithFacebookInstantGamesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithFacebookInstantGamesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithGameCenter
void PlayFab::PlayFabClientAPI::LoginWithGameCenter(::PlayFab::ClientModels::LoginWithGameCenterRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithGameCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithGameCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithGoogleAccount
void PlayFab::PlayFabClientAPI::LoginWithGoogleAccount(::PlayFab::ClientModels::LoginWithGoogleAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithGoogleAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithGoogleAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithIOSDeviceID
void PlayFab::PlayFabClientAPI::LoginWithIOSDeviceID(::PlayFab::ClientModels::LoginWithIOSDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithIOSDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithIOSDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithKongregate
void PlayFab::PlayFabClientAPI::LoginWithKongregate(::PlayFab::ClientModels::LoginWithKongregateRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithKongregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithKongregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithNintendoAccount
void PlayFab::PlayFabClientAPI::LoginWithNintendoAccount(::PlayFab::ClientModels::LoginWithNintendoAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithNintendoAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithNintendoAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithNintendoSwitchDeviceId
void PlayFab::PlayFabClientAPI::LoginWithNintendoSwitchDeviceId(::PlayFab::ClientModels::LoginWithNintendoSwitchDeviceIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithNintendoSwitchDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithNintendoSwitchDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithOpenIdConnect
void PlayFab::PlayFabClientAPI::LoginWithOpenIdConnect(::PlayFab::ClientModels::LoginWithOpenIdConnectRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithOpenIdConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithOpenIdConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithPlayFab
void PlayFab::PlayFabClientAPI::LoginWithPlayFab(::PlayFab::ClientModels::LoginWithPlayFabRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithPlayFab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithPlayFab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithPSN
void PlayFab::PlayFabClientAPI::LoginWithPSN(::PlayFab::ClientModels::LoginWithPSNRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithPSN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithPSN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithSteam
void PlayFab::PlayFabClientAPI::LoginWithSteam(::PlayFab::ClientModels::LoginWithSteamRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithSteam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithSteam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithTwitch
void PlayFab::PlayFabClientAPI::LoginWithTwitch(::PlayFab::ClientModels::LoginWithTwitchRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithTwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithTwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithWindowsHello
void PlayFab::PlayFabClientAPI::LoginWithWindowsHello(::PlayFab::ClientModels::LoginWithWindowsHelloRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.LoginWithXbox
void PlayFab::PlayFabClientAPI::LoginWithXbox(::PlayFab::ClientModels::LoginWithXboxRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::LoginWithXbox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "LoginWithXbox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.Matchmake
void PlayFab::PlayFabClientAPI::Matchmake(::PlayFab::ClientModels::MatchmakeRequest* request, ::System::Action_1<::PlayFab::ClientModels::MatchmakeResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::Matchmake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "Matchmake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.OpenTrade
void PlayFab::PlayFabClientAPI::OpenTrade(::PlayFab::ClientModels::OpenTradeRequest* request, ::System::Action_1<::PlayFab::ClientModels::OpenTradeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::OpenTrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "OpenTrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.PayForPurchase
void PlayFab::PlayFabClientAPI::PayForPurchase(::PlayFab::ClientModels::PayForPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::PayForPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::PayForPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "PayForPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.PurchaseItem
void PlayFab::PlayFabClientAPI::PurchaseItem(::PlayFab::ClientModels::PurchaseItemRequest* request, ::System::Action_1<::PlayFab::ClientModels::PurchaseItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::PurchaseItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "PurchaseItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RedeemCoupon
void PlayFab::PlayFabClientAPI::RedeemCoupon(::PlayFab::ClientModels::RedeemCouponRequest* request, ::System::Action_1<::PlayFab::ClientModels::RedeemCouponResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RedeemCoupon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RedeemCoupon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RefreshPSNAuthToken
void PlayFab::PlayFabClientAPI::RefreshPSNAuthToken(::PlayFab::ClientModels::RefreshPSNAuthTokenRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RefreshPSNAuthToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RefreshPSNAuthToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RegisterForIOSPushNotification
void PlayFab::PlayFabClientAPI::RegisterForIOSPushNotification(::PlayFab::ClientModels::RegisterForIOSPushNotificationRequest* request, ::System::Action_1<::PlayFab::ClientModels::RegisterForIOSPushNotificationResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RegisterForIOSPushNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RegisterForIOSPushNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RegisterPlayFabUser
void PlayFab::PlayFabClientAPI::RegisterPlayFabUser(::PlayFab::ClientModels::RegisterPlayFabUserRequest* request, ::System::Action_1<::PlayFab::ClientModels::RegisterPlayFabUserResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RegisterPlayFabUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RegisterPlayFabUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RegisterWithWindowsHello
void PlayFab::PlayFabClientAPI::RegisterWithWindowsHello(::PlayFab::ClientModels::RegisterWithWindowsHelloRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RegisterWithWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RegisterWithWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RemoveContactEmail
void PlayFab::PlayFabClientAPI::RemoveContactEmail(::PlayFab::ClientModels::RemoveContactEmailRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveContactEmailResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RemoveContactEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RemoveContactEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RemoveFriend
void PlayFab::PlayFabClientAPI::RemoveFriend(::PlayFab::ClientModels::RemoveFriendRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveFriendResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RemoveFriend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RemoveFriend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RemoveGenericID
void PlayFab::PlayFabClientAPI::RemoveGenericID(::PlayFab::ClientModels::RemoveGenericIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveGenericIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RemoveGenericID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RemoveGenericID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RemoveSharedGroupMembers
void PlayFab::PlayFabClientAPI::RemoveSharedGroupMembers(::PlayFab::ClientModels::RemoveSharedGroupMembersRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveSharedGroupMembersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RemoveSharedGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RemoveSharedGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ReportAdActivity
void PlayFab::PlayFabClientAPI::ReportAdActivity(::PlayFab::ClientModels::ReportAdActivityRequest* request, ::System::Action_1<::PlayFab::ClientModels::ReportAdActivityResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ReportAdActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ReportAdActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ReportDeviceInfo
void PlayFab::PlayFabClientAPI::ReportDeviceInfo(::PlayFab::ClientModels::DeviceInfoRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ReportDeviceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ReportDeviceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ReportPlayer
void PlayFab::PlayFabClientAPI::ReportPlayer(::PlayFab::ClientModels::ReportPlayerClientRequest* request, ::System::Action_1<::PlayFab::ClientModels::ReportPlayerClientResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ReportPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ReportPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RestoreIOSPurchases
void PlayFab::PlayFabClientAPI::RestoreIOSPurchases(::PlayFab::ClientModels::RestoreIOSPurchasesRequest* request, ::System::Action_1<::PlayFab::ClientModels::RestoreIOSPurchasesResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RestoreIOSPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RestoreIOSPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.RewardAdActivity
void PlayFab::PlayFabClientAPI::RewardAdActivity(::PlayFab::ClientModels::RewardAdActivityRequest* request, ::System::Action_1<::PlayFab::ClientModels::RewardAdActivityResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::RewardAdActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "RewardAdActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.SendAccountRecoveryEmail
void PlayFab::PlayFabClientAPI::SendAccountRecoveryEmail(::PlayFab::ClientModels::SendAccountRecoveryEmailRequest* request, ::System::Action_1<::PlayFab::ClientModels::SendAccountRecoveryEmailResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::SendAccountRecoveryEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "SendAccountRecoveryEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.SetFriendTags
void PlayFab::PlayFabClientAPI::SetFriendTags(::PlayFab::ClientModels::SetFriendTagsRequest* request, ::System::Action_1<::PlayFab::ClientModels::SetFriendTagsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::SetFriendTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "SetFriendTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.SetPlayerSecret
void PlayFab::PlayFabClientAPI::SetPlayerSecret(::PlayFab::ClientModels::SetPlayerSecretRequest* request, ::System::Action_1<::PlayFab::ClientModels::SetPlayerSecretResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::SetPlayerSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "SetPlayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.StartGame
void PlayFab::PlayFabClientAPI::StartGame(::PlayFab::ClientModels::StartGameRequest* request, ::System::Action_1<::PlayFab::ClientModels::StartGameResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::StartGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "StartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.StartPurchase
void PlayFab::PlayFabClientAPI::StartPurchase(::PlayFab::ClientModels::StartPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::StartPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::StartPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "StartPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.SubtractUserVirtualCurrency
void PlayFab::PlayFabClientAPI::SubtractUserVirtualCurrency(::PlayFab::ClientModels::SubtractUserVirtualCurrencyRequest* request, ::System::Action_1<::PlayFab::ClientModels::ModifyUserVirtualCurrencyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::SubtractUserVirtualCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "SubtractUserVirtualCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkAndroidDeviceID
void PlayFab::PlayFabClientAPI::UnlinkAndroidDeviceID(::PlayFab::ClientModels::UnlinkAndroidDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkAndroidDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkAndroidDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkAndroidDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkApple
void PlayFab::PlayFabClientAPI::UnlinkApple(::PlayFab::ClientModels::UnlinkAppleRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkApple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkApple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkCustomID
void PlayFab::PlayFabClientAPI::UnlinkCustomID(::PlayFab::ClientModels::UnlinkCustomIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkCustomIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkCustomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkCustomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkFacebookAccount
void PlayFab::PlayFabClientAPI::UnlinkFacebookAccount(::PlayFab::ClientModels::UnlinkFacebookAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkFacebookAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkFacebookAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkFacebookAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkFacebookInstantGamesId
void PlayFab::PlayFabClientAPI::UnlinkFacebookInstantGamesId(::PlayFab::ClientModels::UnlinkFacebookInstantGamesIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkFacebookInstantGamesIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkFacebookInstantGamesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkFacebookInstantGamesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkGameCenterAccount
void PlayFab::PlayFabClientAPI::UnlinkGameCenterAccount(::PlayFab::ClientModels::UnlinkGameCenterAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkGameCenterAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkGameCenterAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkGameCenterAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkGoogleAccount
void PlayFab::PlayFabClientAPI::UnlinkGoogleAccount(::PlayFab::ClientModels::UnlinkGoogleAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkGoogleAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkGoogleAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkGoogleAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkIOSDeviceID
void PlayFab::PlayFabClientAPI::UnlinkIOSDeviceID(::PlayFab::ClientModels::UnlinkIOSDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkIOSDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkIOSDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkIOSDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkKongregate
void PlayFab::PlayFabClientAPI::UnlinkKongregate(::PlayFab::ClientModels::UnlinkKongregateAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkKongregateAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkKongregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkKongregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkNintendoAccount
void PlayFab::PlayFabClientAPI::UnlinkNintendoAccount(::PlayFab::ClientModels::UnlinkNintendoAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkNintendoAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkNintendoAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkNintendoSwitchDeviceId
void PlayFab::PlayFabClientAPI::UnlinkNintendoSwitchDeviceId(::PlayFab::ClientModels::UnlinkNintendoSwitchDeviceIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkNintendoSwitchDeviceIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkNintendoSwitchDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkNintendoSwitchDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkOpenIdConnect
void PlayFab::PlayFabClientAPI::UnlinkOpenIdConnect(::PlayFab::ClientModels::UnlinkOpenIdConnectRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkOpenIdConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkOpenIdConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkPSNAccount
void PlayFab::PlayFabClientAPI::UnlinkPSNAccount(::PlayFab::ClientModels::UnlinkPSNAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkPSNAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkPSNAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkPSNAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkSteamAccount
void PlayFab::PlayFabClientAPI::UnlinkSteamAccount(::PlayFab::ClientModels::UnlinkSteamAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkSteamAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkSteamAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkSteamAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkTwitch
void PlayFab::PlayFabClientAPI::UnlinkTwitch(::PlayFab::ClientModels::UnlinkTwitchAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkTwitchAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkTwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkTwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkWindowsHello
void PlayFab::PlayFabClientAPI::UnlinkWindowsHello(::PlayFab::ClientModels::UnlinkWindowsHelloAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkWindowsHelloAccountResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlinkXboxAccount
void PlayFab::PlayFabClientAPI::UnlinkXboxAccount(::PlayFab::ClientModels::UnlinkXboxAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkXboxAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlinkXboxAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlinkXboxAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlockContainerInstance
void PlayFab::PlayFabClientAPI::UnlockContainerInstance(::PlayFab::ClientModels::UnlockContainerInstanceRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlockContainerItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlockContainerInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlockContainerInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UnlockContainerItem
void PlayFab::PlayFabClientAPI::UnlockContainerItem(::PlayFab::ClientModels::UnlockContainerItemRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlockContainerItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UnlockContainerItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UnlockContainerItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdateAvatarUrl
void PlayFab::PlayFabClientAPI::UpdateAvatarUrl(::PlayFab::ClientModels::UpdateAvatarUrlRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdateAvatarUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdateAvatarUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdateCharacterData
void PlayFab::PlayFabClientAPI::UpdateCharacterData(::PlayFab::ClientModels::UpdateCharacterDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateCharacterDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdateCharacterData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdateCharacterData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdateCharacterStatistics
void PlayFab::PlayFabClientAPI::UpdateCharacterStatistics(::PlayFab::ClientModels::UpdateCharacterStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateCharacterStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdateCharacterStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdateCharacterStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdatePlayerStatistics
void PlayFab::PlayFabClientAPI::UpdatePlayerStatistics(::PlayFab::ClientModels::UpdatePlayerStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdatePlayerStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdatePlayerStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdatePlayerStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdateSharedGroupData
void PlayFab::PlayFabClientAPI::UpdateSharedGroupData(::PlayFab::ClientModels::UpdateSharedGroupDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateSharedGroupDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdateSharedGroupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdateSharedGroupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdateUserData
void PlayFab::PlayFabClientAPI::UpdateUserData(::PlayFab::ClientModels::UpdateUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdateUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdateUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdateUserPublisherData
void PlayFab::PlayFabClientAPI::UpdateUserPublisherData(::PlayFab::ClientModels::UpdateUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdateUserPublisherData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdateUserPublisherData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.UpdateUserTitleDisplayName
void PlayFab::PlayFabClientAPI::UpdateUserTitleDisplayName(::PlayFab::ClientModels::UpdateUserTitleDisplayNameRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateUserTitleDisplayNameResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::UpdateUserTitleDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "UpdateUserTitleDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ValidateAmazonIAPReceipt
void PlayFab::PlayFabClientAPI::ValidateAmazonIAPReceipt(::PlayFab::ClientModels::ValidateAmazonReceiptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateAmazonReceiptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ValidateAmazonIAPReceipt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ValidateAmazonIAPReceipt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ValidateGooglePlayPurchase
void PlayFab::PlayFabClientAPI::ValidateGooglePlayPurchase(::PlayFab::ClientModels::ValidateGooglePlayPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateGooglePlayPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ValidateGooglePlayPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ValidateGooglePlayPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ValidateIOSReceipt
void PlayFab::PlayFabClientAPI::ValidateIOSReceipt(::PlayFab::ClientModels::ValidateIOSReceiptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateIOSReceiptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ValidateIOSReceipt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ValidateIOSReceipt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.ValidateWindowsStoreReceipt
void PlayFab::PlayFabClientAPI::ValidateWindowsStoreReceipt(::PlayFab::ClientModels::ValidateWindowsReceiptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateWindowsReceiptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::ValidateWindowsStoreReceipt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "ValidateWindowsStoreReceipt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.WriteCharacterEvent
void PlayFab::PlayFabClientAPI::WriteCharacterEvent(::PlayFab::ClientModels::WriteClientCharacterEventRequest* request, ::System::Action_1<::PlayFab::ClientModels::WriteEventResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::WriteCharacterEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "WriteCharacterEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.WritePlayerEvent
void PlayFab::PlayFabClientAPI::WritePlayerEvent(::PlayFab::ClientModels::WriteClientPlayerEventRequest* request, ::System::Action_1<::PlayFab::ClientModels::WriteEventResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::WritePlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "WritePlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientAPI.WriteTitleEvent
void PlayFab::PlayFabClientAPI::WriteTitleEvent(::PlayFab::ClientModels::WriteTitleEventRequest* request, ::System::Action_1<::PlayFab::ClientModels::WriteEventResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientAPI::WriteTitleEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabClientAPI", "WriteTitleEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabClientInstanceAPI
#include "PlayFab/PlayFabClientInstanceAPI.hpp"
// Including type: PlayFab.PlayFabClientInstanceAPI/<>c__DisplayClass24_0`1
#include "PlayFab/PlayFabClientInstanceAPI_--c__DisplayClass24_0_1.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.ClientModels.AcceptTradeRequest
#include "PlayFab/ClientModels/AcceptTradeRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.ClientModels.AcceptTradeResponse
#include "PlayFab/ClientModels/AcceptTradeResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ClientModels.AddFriendRequest
#include "PlayFab/ClientModels/AddFriendRequest.hpp"
// Including type: PlayFab.ClientModels.AddFriendResult
#include "PlayFab/ClientModels/AddFriendResult.hpp"
// Including type: PlayFab.ClientModels.AddGenericIDRequest
#include "PlayFab/ClientModels/AddGenericIDRequest.hpp"
// Including type: PlayFab.ClientModels.AddGenericIDResult
#include "PlayFab/ClientModels/AddGenericIDResult.hpp"
// Including type: PlayFab.ClientModels.AddOrUpdateContactEmailRequest
#include "PlayFab/ClientModels/AddOrUpdateContactEmailRequest.hpp"
// Including type: PlayFab.ClientModels.AddOrUpdateContactEmailResult
#include "PlayFab/ClientModels/AddOrUpdateContactEmailResult.hpp"
// Including type: PlayFab.ClientModels.AddSharedGroupMembersRequest
#include "PlayFab/ClientModels/AddSharedGroupMembersRequest.hpp"
// Including type: PlayFab.ClientModels.AddSharedGroupMembersResult
#include "PlayFab/ClientModels/AddSharedGroupMembersResult.hpp"
// Including type: PlayFab.ClientModels.AddUsernamePasswordRequest
#include "PlayFab/ClientModels/AddUsernamePasswordRequest.hpp"
// Including type: PlayFab.ClientModels.AddUsernamePasswordResult
#include "PlayFab/ClientModels/AddUsernamePasswordResult.hpp"
// Including type: PlayFab.ClientModels.AddUserVirtualCurrencyRequest
#include "PlayFab/ClientModels/AddUserVirtualCurrencyRequest.hpp"
// Including type: PlayFab.ClientModels.ModifyUserVirtualCurrencyResult
#include "PlayFab/ClientModels/ModifyUserVirtualCurrencyResult.hpp"
// Including type: PlayFab.ClientModels.AndroidDevicePushNotificationRegistrationRequest
#include "PlayFab/ClientModels/AndroidDevicePushNotificationRegistrationRequest.hpp"
// Including type: PlayFab.ClientModels.AndroidDevicePushNotificationRegistrationResult
#include "PlayFab/ClientModels/AndroidDevicePushNotificationRegistrationResult.hpp"
// Including type: PlayFab.ClientModels.AttributeInstallRequest
#include "PlayFab/ClientModels/AttributeInstallRequest.hpp"
// Including type: PlayFab.ClientModels.AttributeInstallResult
#include "PlayFab/ClientModels/AttributeInstallResult.hpp"
// Including type: PlayFab.ClientModels.CancelTradeRequest
#include "PlayFab/ClientModels/CancelTradeRequest.hpp"
// Including type: PlayFab.ClientModels.CancelTradeResponse
#include "PlayFab/ClientModels/CancelTradeResponse.hpp"
// Including type: PlayFab.ClientModels.ConfirmPurchaseRequest
#include "PlayFab/ClientModels/ConfirmPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.ConfirmPurchaseResult
#include "PlayFab/ClientModels/ConfirmPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.ConsumeItemRequest
#include "PlayFab/ClientModels/ConsumeItemRequest.hpp"
// Including type: PlayFab.ClientModels.ConsumeItemResult
#include "PlayFab/ClientModels/ConsumeItemResult.hpp"
// Including type: PlayFab.ClientModels.ConsumePSNEntitlementsRequest
#include "PlayFab/ClientModels/ConsumePSNEntitlementsRequest.hpp"
// Including type: PlayFab.ClientModels.ConsumePSNEntitlementsResult
#include "PlayFab/ClientModels/ConsumePSNEntitlementsResult.hpp"
// Including type: PlayFab.ClientModels.ConsumeXboxEntitlementsRequest
#include "PlayFab/ClientModels/ConsumeXboxEntitlementsRequest.hpp"
// Including type: PlayFab.ClientModels.ConsumeXboxEntitlementsResult
#include "PlayFab/ClientModels/ConsumeXboxEntitlementsResult.hpp"
// Including type: PlayFab.ClientModels.CreateSharedGroupRequest
#include "PlayFab/ClientModels/CreateSharedGroupRequest.hpp"
// Including type: PlayFab.ClientModels.CreateSharedGroupResult
#include "PlayFab/ClientModels/CreateSharedGroupResult.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptRequest
#include "PlayFab/ClientModels/ExecuteCloudScriptRequest.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptResult
#include "PlayFab/ClientModels/ExecuteCloudScriptResult.hpp"
// Including type: PlayFab.ClientModels.GetAccountInfoRequest
#include "PlayFab/ClientModels/GetAccountInfoRequest.hpp"
// Including type: PlayFab.ClientModels.GetAccountInfoResult
#include "PlayFab/ClientModels/GetAccountInfoResult.hpp"
// Including type: PlayFab.ClientModels.GetAdPlacementsRequest
#include "PlayFab/ClientModels/GetAdPlacementsRequest.hpp"
// Including type: PlayFab.ClientModels.GetAdPlacementsResult
#include "PlayFab/ClientModels/GetAdPlacementsResult.hpp"
// Including type: PlayFab.ClientModels.ListUsersCharactersRequest
#include "PlayFab/ClientModels/ListUsersCharactersRequest.hpp"
// Including type: PlayFab.ClientModels.ListUsersCharactersResult
#include "PlayFab/ClientModels/ListUsersCharactersResult.hpp"
// Including type: PlayFab.ClientModels.GetCatalogItemsRequest
#include "PlayFab/ClientModels/GetCatalogItemsRequest.hpp"
// Including type: PlayFab.ClientModels.GetCatalogItemsResult
#include "PlayFab/ClientModels/GetCatalogItemsResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterDataRequest
#include "PlayFab/ClientModels/GetCharacterDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterDataResult
#include "PlayFab/ClientModels/GetCharacterDataResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterInventoryRequest
#include "PlayFab/ClientModels/GetCharacterInventoryRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterInventoryResult
#include "PlayFab/ClientModels/GetCharacterInventoryResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterLeaderboardRequest
#include "PlayFab/ClientModels/GetCharacterLeaderboardRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterLeaderboardResult
#include "PlayFab/ClientModels/GetCharacterLeaderboardResult.hpp"
// Including type: PlayFab.ClientModels.GetCharacterStatisticsRequest
#include "PlayFab/ClientModels/GetCharacterStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.GetCharacterStatisticsResult
#include "PlayFab/ClientModels/GetCharacterStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.GetContentDownloadUrlRequest
#include "PlayFab/ClientModels/GetContentDownloadUrlRequest.hpp"
// Including type: PlayFab.ClientModels.GetContentDownloadUrlResult
#include "PlayFab/ClientModels/GetContentDownloadUrlResult.hpp"
// Including type: PlayFab.ClientModels.CurrentGamesRequest
#include "PlayFab/ClientModels/CurrentGamesRequest.hpp"
// Including type: PlayFab.ClientModels.CurrentGamesResult
#include "PlayFab/ClientModels/CurrentGamesResult.hpp"
// Including type: PlayFab.ClientModels.GetFriendLeaderboardRequest
#include "PlayFab/ClientModels/GetFriendLeaderboardRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardResult
#include "PlayFab/ClientModels/GetLeaderboardResult.hpp"
// Including type: PlayFab.ClientModels.GetFriendLeaderboardAroundPlayerRequest
#include "PlayFab/ClientModels/GetFriendLeaderboardAroundPlayerRequest.hpp"
// Including type: PlayFab.ClientModels.GetFriendLeaderboardAroundPlayerResult
#include "PlayFab/ClientModels/GetFriendLeaderboardAroundPlayerResult.hpp"
// Including type: PlayFab.ClientModels.GetFriendsListRequest
#include "PlayFab/ClientModels/GetFriendsListRequest.hpp"
// Including type: PlayFab.ClientModels.GetFriendsListResult
#include "PlayFab/ClientModels/GetFriendsListResult.hpp"
// Including type: PlayFab.ClientModels.GameServerRegionsRequest
#include "PlayFab/ClientModels/GameServerRegionsRequest.hpp"
// Including type: PlayFab.ClientModels.GameServerRegionsResult
#include "PlayFab/ClientModels/GameServerRegionsResult.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardRequest
#include "PlayFab/ClientModels/GetLeaderboardRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundCharacterRequest
#include "PlayFab/ClientModels/GetLeaderboardAroundCharacterRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundCharacterResult
#include "PlayFab/ClientModels/GetLeaderboardAroundCharacterResult.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundPlayerRequest
#include "PlayFab/ClientModels/GetLeaderboardAroundPlayerRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardAroundPlayerResult
#include "PlayFab/ClientModels/GetLeaderboardAroundPlayerResult.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardForUsersCharactersRequest
#include "PlayFab/ClientModels/GetLeaderboardForUsersCharactersRequest.hpp"
// Including type: PlayFab.ClientModels.GetLeaderboardForUsersCharactersResult
#include "PlayFab/ClientModels/GetLeaderboardForUsersCharactersResult.hpp"
// Including type: PlayFab.ClientModels.GetPaymentTokenRequest
#include "PlayFab/ClientModels/GetPaymentTokenRequest.hpp"
// Including type: PlayFab.ClientModels.GetPaymentTokenResult
#include "PlayFab/ClientModels/GetPaymentTokenResult.hpp"
// Including type: PlayFab.ClientModels.GetPhotonAuthenticationTokenRequest
#include "PlayFab/ClientModels/GetPhotonAuthenticationTokenRequest.hpp"
// Including type: PlayFab.ClientModels.GetPhotonAuthenticationTokenResult
#include "PlayFab/ClientModels/GetPhotonAuthenticationTokenResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerCombinedInfoRequest
#include "PlayFab/ClientModels/GetPlayerCombinedInfoRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerCombinedInfoResult
#include "PlayFab/ClientModels/GetPlayerCombinedInfoResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerProfileRequest
#include "PlayFab/ClientModels/GetPlayerProfileRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerProfileResult
#include "PlayFab/ClientModels/GetPlayerProfileResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerSegmentsRequest
#include "PlayFab/ClientModels/GetPlayerSegmentsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerSegmentsResult
#include "PlayFab/ClientModels/GetPlayerSegmentsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticsRequest
#include "PlayFab/ClientModels/GetPlayerStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticsResult
#include "PlayFab/ClientModels/GetPlayerStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticVersionsRequest
#include "PlayFab/ClientModels/GetPlayerStatisticVersionsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerStatisticVersionsResult
#include "PlayFab/ClientModels/GetPlayerStatisticVersionsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTagsRequest
#include "PlayFab/ClientModels/GetPlayerTagsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTagsResult
#include "PlayFab/ClientModels/GetPlayerTagsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTradesRequest
#include "PlayFab/ClientModels/GetPlayerTradesRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayerTradesResponse
#include "PlayFab/ClientModels/GetPlayerTradesResponse.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookInstantGamesIdsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookInstantGamesIdsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromFacebookInstantGamesIdsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromFacebookInstantGamesIdsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGameCenterIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromGameCenterIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGameCenterIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromGameCenterIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGenericIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromGenericIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGenericIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromGenericIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGoogleIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromGoogleIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromGoogleIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromGoogleIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromKongregateIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromKongregateIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromKongregateIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromKongregateIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromNintendoSwitchDeviceIdsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromNintendoSwitchDeviceIdsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromPSNAccountIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromPSNAccountIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromPSNAccountIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromPSNAccountIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromSteamIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromSteamIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromSteamIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromSteamIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromTwitchIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromTwitchIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromTwitchIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromTwitchIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromXboxLiveIDsRequest
#include "PlayFab/ClientModels/GetPlayFabIDsFromXboxLiveIDsRequest.hpp"
// Including type: PlayFab.ClientModels.GetPlayFabIDsFromXboxLiveIDsResult
#include "PlayFab/ClientModels/GetPlayFabIDsFromXboxLiveIDsResult.hpp"
// Including type: PlayFab.ClientModels.GetPublisherDataRequest
#include "PlayFab/ClientModels/GetPublisherDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetPublisherDataResult
#include "PlayFab/ClientModels/GetPublisherDataResult.hpp"
// Including type: PlayFab.ClientModels.GetPurchaseRequest
#include "PlayFab/ClientModels/GetPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.GetPurchaseResult
#include "PlayFab/ClientModels/GetPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataRequest
#include "PlayFab/ClientModels/GetSharedGroupDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataResult
#include "PlayFab/ClientModels/GetSharedGroupDataResult.hpp"
// Including type: PlayFab.ClientModels.GetStoreItemsRequest
#include "PlayFab/ClientModels/GetStoreItemsRequest.hpp"
// Including type: PlayFab.ClientModels.GetStoreItemsResult
#include "PlayFab/ClientModels/GetStoreItemsResult.hpp"
// Including type: PlayFab.ClientModels.GetTimeRequest
#include "PlayFab/ClientModels/GetTimeRequest.hpp"
// Including type: PlayFab.ClientModels.GetTimeResult
#include "PlayFab/ClientModels/GetTimeResult.hpp"
// Including type: PlayFab.ClientModels.GetTitleDataRequest
#include "PlayFab/ClientModels/GetTitleDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetTitleDataResult
#include "PlayFab/ClientModels/GetTitleDataResult.hpp"
// Including type: PlayFab.ClientModels.GetTitleNewsRequest
#include "PlayFab/ClientModels/GetTitleNewsRequest.hpp"
// Including type: PlayFab.ClientModels.GetTitleNewsResult
#include "PlayFab/ClientModels/GetTitleNewsResult.hpp"
// Including type: PlayFab.ClientModels.GetTitlePublicKeyRequest
#include "PlayFab/ClientModels/GetTitlePublicKeyRequest.hpp"
// Including type: PlayFab.ClientModels.GetTitlePublicKeyResult
#include "PlayFab/ClientModels/GetTitlePublicKeyResult.hpp"
// Including type: PlayFab.ClientModels.GetTradeStatusRequest
#include "PlayFab/ClientModels/GetTradeStatusRequest.hpp"
// Including type: PlayFab.ClientModels.GetTradeStatusResponse
#include "PlayFab/ClientModels/GetTradeStatusResponse.hpp"
// Including type: PlayFab.ClientModels.GetUserDataRequest
#include "PlayFab/ClientModels/GetUserDataRequest.hpp"
// Including type: PlayFab.ClientModels.GetUserDataResult
#include "PlayFab/ClientModels/GetUserDataResult.hpp"
// Including type: PlayFab.ClientModels.GetUserInventoryRequest
#include "PlayFab/ClientModels/GetUserInventoryRequest.hpp"
// Including type: PlayFab.ClientModels.GetUserInventoryResult
#include "PlayFab/ClientModels/GetUserInventoryResult.hpp"
// Including type: PlayFab.ClientModels.GetWindowsHelloChallengeRequest
#include "PlayFab/ClientModels/GetWindowsHelloChallengeRequest.hpp"
// Including type: PlayFab.ClientModels.GetWindowsHelloChallengeResponse
#include "PlayFab/ClientModels/GetWindowsHelloChallengeResponse.hpp"
// Including type: PlayFab.ClientModels.GrantCharacterToUserRequest
#include "PlayFab/ClientModels/GrantCharacterToUserRequest.hpp"
// Including type: PlayFab.ClientModels.GrantCharacterToUserResult
#include "PlayFab/ClientModels/GrantCharacterToUserResult.hpp"
// Including type: PlayFab.ClientModels.LinkAndroidDeviceIDRequest
#include "PlayFab/ClientModels/LinkAndroidDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LinkAndroidDeviceIDResult
#include "PlayFab/ClientModels/LinkAndroidDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.LinkAppleRequest
#include "PlayFab/ClientModels/LinkAppleRequest.hpp"
// Including type: PlayFab.ClientModels.EmptyResult
#include "PlayFab/ClientModels/EmptyResult.hpp"
// Including type: PlayFab.ClientModels.LinkCustomIDRequest
#include "PlayFab/ClientModels/LinkCustomIDRequest.hpp"
// Including type: PlayFab.ClientModels.LinkCustomIDResult
#include "PlayFab/ClientModels/LinkCustomIDResult.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookAccountRequest
#include "PlayFab/ClientModels/LinkFacebookAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookAccountResult
#include "PlayFab/ClientModels/LinkFacebookAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookInstantGamesIdRequest
#include "PlayFab/ClientModels/LinkFacebookInstantGamesIdRequest.hpp"
// Including type: PlayFab.ClientModels.LinkFacebookInstantGamesIdResult
#include "PlayFab/ClientModels/LinkFacebookInstantGamesIdResult.hpp"
// Including type: PlayFab.ClientModels.LinkGameCenterAccountRequest
#include "PlayFab/ClientModels/LinkGameCenterAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkGameCenterAccountResult
#include "PlayFab/ClientModels/LinkGameCenterAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkGoogleAccountRequest
#include "PlayFab/ClientModels/LinkGoogleAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkGoogleAccountResult
#include "PlayFab/ClientModels/LinkGoogleAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkIOSDeviceIDRequest
#include "PlayFab/ClientModels/LinkIOSDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LinkIOSDeviceIDResult
#include "PlayFab/ClientModels/LinkIOSDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.LinkKongregateAccountRequest
#include "PlayFab/ClientModels/LinkKongregateAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkKongregateAccountResult
#include "PlayFab/ClientModels/LinkKongregateAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkNintendoAccountRequest
#include "PlayFab/ClientModels/LinkNintendoAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkNintendoSwitchDeviceIdRequest
#include "PlayFab/ClientModels/LinkNintendoSwitchDeviceIdRequest.hpp"
// Including type: PlayFab.ClientModels.LinkNintendoSwitchDeviceIdResult
#include "PlayFab/ClientModels/LinkNintendoSwitchDeviceIdResult.hpp"
// Including type: PlayFab.ClientModels.LinkOpenIdConnectRequest
#include "PlayFab/ClientModels/LinkOpenIdConnectRequest.hpp"
// Including type: PlayFab.ClientModels.LinkPSNAccountRequest
#include "PlayFab/ClientModels/LinkPSNAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkPSNAccountResult
#include "PlayFab/ClientModels/LinkPSNAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkSteamAccountRequest
#include "PlayFab/ClientModels/LinkSteamAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkSteamAccountResult
#include "PlayFab/ClientModels/LinkSteamAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkTwitchAccountRequest
#include "PlayFab/ClientModels/LinkTwitchAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkTwitchAccountResult
#include "PlayFab/ClientModels/LinkTwitchAccountResult.hpp"
// Including type: PlayFab.ClientModels.LinkWindowsHelloAccountRequest
#include "PlayFab/ClientModels/LinkWindowsHelloAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkWindowsHelloAccountResponse
#include "PlayFab/ClientModels/LinkWindowsHelloAccountResponse.hpp"
// Including type: PlayFab.ClientModels.LinkXboxAccountRequest
#include "PlayFab/ClientModels/LinkXboxAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LinkXboxAccountResult
#include "PlayFab/ClientModels/LinkXboxAccountResult.hpp"
// Including type: PlayFab.ClientModels.LoginWithAndroidDeviceIDRequest
#include "PlayFab/ClientModels/LoginWithAndroidDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LoginResult
#include "PlayFab/ClientModels/LoginResult.hpp"
// Including type: PlayFab.ClientModels.LoginWithAppleRequest
#include "PlayFab/ClientModels/LoginWithAppleRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithCustomIDRequest
#include "PlayFab/ClientModels/LoginWithCustomIDRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithEmailAddressRequest
#include "PlayFab/ClientModels/LoginWithEmailAddressRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithFacebookRequest
#include "PlayFab/ClientModels/LoginWithFacebookRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithFacebookInstantGamesIdRequest
#include "PlayFab/ClientModels/LoginWithFacebookInstantGamesIdRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithGameCenterRequest
#include "PlayFab/ClientModels/LoginWithGameCenterRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithGoogleAccountRequest
#include "PlayFab/ClientModels/LoginWithGoogleAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithIOSDeviceIDRequest
#include "PlayFab/ClientModels/LoginWithIOSDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithKongregateRequest
#include "PlayFab/ClientModels/LoginWithKongregateRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithNintendoAccountRequest
#include "PlayFab/ClientModels/LoginWithNintendoAccountRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithNintendoSwitchDeviceIdRequest
#include "PlayFab/ClientModels/LoginWithNintendoSwitchDeviceIdRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithOpenIdConnectRequest
#include "PlayFab/ClientModels/LoginWithOpenIdConnectRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithPlayFabRequest
#include "PlayFab/ClientModels/LoginWithPlayFabRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithPSNRequest
#include "PlayFab/ClientModels/LoginWithPSNRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithSteamRequest
#include "PlayFab/ClientModels/LoginWithSteamRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithTwitchRequest
#include "PlayFab/ClientModels/LoginWithTwitchRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithWindowsHelloRequest
#include "PlayFab/ClientModels/LoginWithWindowsHelloRequest.hpp"
// Including type: PlayFab.ClientModels.LoginWithXboxRequest
#include "PlayFab/ClientModels/LoginWithXboxRequest.hpp"
// Including type: PlayFab.ClientModels.MatchmakeRequest
#include "PlayFab/ClientModels/MatchmakeRequest.hpp"
// Including type: PlayFab.ClientModels.MatchmakeResult
#include "PlayFab/ClientModels/MatchmakeResult.hpp"
// Including type: PlayFab.ClientModels.OpenTradeRequest
#include "PlayFab/ClientModels/OpenTradeRequest.hpp"
// Including type: PlayFab.ClientModels.OpenTradeResponse
#include "PlayFab/ClientModels/OpenTradeResponse.hpp"
// Including type: PlayFab.ClientModels.PayForPurchaseRequest
#include "PlayFab/ClientModels/PayForPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.PayForPurchaseResult
#include "PlayFab/ClientModels/PayForPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.PurchaseItemRequest
#include "PlayFab/ClientModels/PurchaseItemRequest.hpp"
// Including type: PlayFab.ClientModels.PurchaseItemResult
#include "PlayFab/ClientModels/PurchaseItemResult.hpp"
// Including type: PlayFab.ClientModels.RedeemCouponRequest
#include "PlayFab/ClientModels/RedeemCouponRequest.hpp"
// Including type: PlayFab.ClientModels.RedeemCouponResult
#include "PlayFab/ClientModels/RedeemCouponResult.hpp"
// Including type: PlayFab.ClientModels.RefreshPSNAuthTokenRequest
#include "PlayFab/ClientModels/RefreshPSNAuthTokenRequest.hpp"
// Including type: PlayFab.ClientModels.EmptyResponse
#include "PlayFab/ClientModels/EmptyResponse.hpp"
// Including type: PlayFab.ClientModels.RegisterForIOSPushNotificationRequest
#include "PlayFab/ClientModels/RegisterForIOSPushNotificationRequest.hpp"
// Including type: PlayFab.ClientModels.RegisterForIOSPushNotificationResult
#include "PlayFab/ClientModels/RegisterForIOSPushNotificationResult.hpp"
// Including type: PlayFab.ClientModels.RegisterPlayFabUserRequest
#include "PlayFab/ClientModels/RegisterPlayFabUserRequest.hpp"
// Including type: PlayFab.ClientModels.RegisterPlayFabUserResult
#include "PlayFab/ClientModels/RegisterPlayFabUserResult.hpp"
// Including type: PlayFab.ClientModels.RegisterWithWindowsHelloRequest
#include "PlayFab/ClientModels/RegisterWithWindowsHelloRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveContactEmailRequest
#include "PlayFab/ClientModels/RemoveContactEmailRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveContactEmailResult
#include "PlayFab/ClientModels/RemoveContactEmailResult.hpp"
// Including type: PlayFab.ClientModels.RemoveFriendRequest
#include "PlayFab/ClientModels/RemoveFriendRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveFriendResult
#include "PlayFab/ClientModels/RemoveFriendResult.hpp"
// Including type: PlayFab.ClientModels.RemoveGenericIDRequest
#include "PlayFab/ClientModels/RemoveGenericIDRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveGenericIDResult
#include "PlayFab/ClientModels/RemoveGenericIDResult.hpp"
// Including type: PlayFab.ClientModels.RemoveSharedGroupMembersRequest
#include "PlayFab/ClientModels/RemoveSharedGroupMembersRequest.hpp"
// Including type: PlayFab.ClientModels.RemoveSharedGroupMembersResult
#include "PlayFab/ClientModels/RemoveSharedGroupMembersResult.hpp"
// Including type: PlayFab.ClientModels.ReportAdActivityRequest
#include "PlayFab/ClientModels/ReportAdActivityRequest.hpp"
// Including type: PlayFab.ClientModels.ReportAdActivityResult
#include "PlayFab/ClientModels/ReportAdActivityResult.hpp"
// Including type: PlayFab.ClientModels.DeviceInfoRequest
#include "PlayFab/ClientModels/DeviceInfoRequest.hpp"
// Including type: PlayFab.ClientModels.ReportPlayerClientRequest
#include "PlayFab/ClientModels/ReportPlayerClientRequest.hpp"
// Including type: PlayFab.ClientModels.ReportPlayerClientResult
#include "PlayFab/ClientModels/ReportPlayerClientResult.hpp"
// Including type: PlayFab.ClientModels.RestoreIOSPurchasesRequest
#include "PlayFab/ClientModels/RestoreIOSPurchasesRequest.hpp"
// Including type: PlayFab.ClientModels.RestoreIOSPurchasesResult
#include "PlayFab/ClientModels/RestoreIOSPurchasesResult.hpp"
// Including type: PlayFab.ClientModels.RewardAdActivityRequest
#include "PlayFab/ClientModels/RewardAdActivityRequest.hpp"
// Including type: PlayFab.ClientModels.RewardAdActivityResult
#include "PlayFab/ClientModels/RewardAdActivityResult.hpp"
// Including type: PlayFab.ClientModels.SendAccountRecoveryEmailRequest
#include "PlayFab/ClientModels/SendAccountRecoveryEmailRequest.hpp"
// Including type: PlayFab.ClientModels.SendAccountRecoveryEmailResult
#include "PlayFab/ClientModels/SendAccountRecoveryEmailResult.hpp"
// Including type: PlayFab.ClientModels.SetFriendTagsRequest
#include "PlayFab/ClientModels/SetFriendTagsRequest.hpp"
// Including type: PlayFab.ClientModels.SetFriendTagsResult
#include "PlayFab/ClientModels/SetFriendTagsResult.hpp"
// Including type: PlayFab.ClientModels.SetPlayerSecretRequest
#include "PlayFab/ClientModels/SetPlayerSecretRequest.hpp"
// Including type: PlayFab.ClientModels.SetPlayerSecretResult
#include "PlayFab/ClientModels/SetPlayerSecretResult.hpp"
// Including type: PlayFab.ClientModels.StartGameRequest
#include "PlayFab/ClientModels/StartGameRequest.hpp"
// Including type: PlayFab.ClientModels.StartGameResult
#include "PlayFab/ClientModels/StartGameResult.hpp"
// Including type: PlayFab.ClientModels.StartPurchaseRequest
#include "PlayFab/ClientModels/StartPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.StartPurchaseResult
#include "PlayFab/ClientModels/StartPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.SubtractUserVirtualCurrencyRequest
#include "PlayFab/ClientModels/SubtractUserVirtualCurrencyRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkAndroidDeviceIDRequest
#include "PlayFab/ClientModels/UnlinkAndroidDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkAndroidDeviceIDResult
#include "PlayFab/ClientModels/UnlinkAndroidDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkAppleRequest
#include "PlayFab/ClientModels/UnlinkAppleRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkCustomIDRequest
#include "PlayFab/ClientModels/UnlinkCustomIDRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkCustomIDResult
#include "PlayFab/ClientModels/UnlinkCustomIDResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookAccountRequest
#include "PlayFab/ClientModels/UnlinkFacebookAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookAccountResult
#include "PlayFab/ClientModels/UnlinkFacebookAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookInstantGamesIdRequest
#include "PlayFab/ClientModels/UnlinkFacebookInstantGamesIdRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkFacebookInstantGamesIdResult
#include "PlayFab/ClientModels/UnlinkFacebookInstantGamesIdResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkGameCenterAccountRequest
#include "PlayFab/ClientModels/UnlinkGameCenterAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkGameCenterAccountResult
#include "PlayFab/ClientModels/UnlinkGameCenterAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkGoogleAccountRequest
#include "PlayFab/ClientModels/UnlinkGoogleAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkGoogleAccountResult
#include "PlayFab/ClientModels/UnlinkGoogleAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkIOSDeviceIDRequest
#include "PlayFab/ClientModels/UnlinkIOSDeviceIDRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkIOSDeviceIDResult
#include "PlayFab/ClientModels/UnlinkIOSDeviceIDResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkKongregateAccountRequest
#include "PlayFab/ClientModels/UnlinkKongregateAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkKongregateAccountResult
#include "PlayFab/ClientModels/UnlinkKongregateAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkNintendoAccountRequest
#include "PlayFab/ClientModels/UnlinkNintendoAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkNintendoSwitchDeviceIdRequest
#include "PlayFab/ClientModels/UnlinkNintendoSwitchDeviceIdRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkNintendoSwitchDeviceIdResult
#include "PlayFab/ClientModels/UnlinkNintendoSwitchDeviceIdResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkOpenIdConnectRequest
#include "PlayFab/ClientModels/UnlinkOpenIdConnectRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkPSNAccountRequest
#include "PlayFab/ClientModels/UnlinkPSNAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkPSNAccountResult
#include "PlayFab/ClientModels/UnlinkPSNAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkSteamAccountRequest
#include "PlayFab/ClientModels/UnlinkSteamAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkSteamAccountResult
#include "PlayFab/ClientModels/UnlinkSteamAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkTwitchAccountRequest
#include "PlayFab/ClientModels/UnlinkTwitchAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkTwitchAccountResult
#include "PlayFab/ClientModels/UnlinkTwitchAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlinkWindowsHelloAccountRequest
#include "PlayFab/ClientModels/UnlinkWindowsHelloAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkWindowsHelloAccountResponse
#include "PlayFab/ClientModels/UnlinkWindowsHelloAccountResponse.hpp"
// Including type: PlayFab.ClientModels.UnlinkXboxAccountRequest
#include "PlayFab/ClientModels/UnlinkXboxAccountRequest.hpp"
// Including type: PlayFab.ClientModels.UnlinkXboxAccountResult
#include "PlayFab/ClientModels/UnlinkXboxAccountResult.hpp"
// Including type: PlayFab.ClientModels.UnlockContainerInstanceRequest
#include "PlayFab/ClientModels/UnlockContainerInstanceRequest.hpp"
// Including type: PlayFab.ClientModels.UnlockContainerItemResult
#include "PlayFab/ClientModels/UnlockContainerItemResult.hpp"
// Including type: PlayFab.ClientModels.UnlockContainerItemRequest
#include "PlayFab/ClientModels/UnlockContainerItemRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateAvatarUrlRequest
#include "PlayFab/ClientModels/UpdateAvatarUrlRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterDataRequest
#include "PlayFab/ClientModels/UpdateCharacterDataRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterDataResult
#include "PlayFab/ClientModels/UpdateCharacterDataResult.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterStatisticsRequest
#include "PlayFab/ClientModels/UpdateCharacterStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateCharacterStatisticsResult
#include "PlayFab/ClientModels/UpdateCharacterStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.UpdatePlayerStatisticsRequest
#include "PlayFab/ClientModels/UpdatePlayerStatisticsRequest.hpp"
// Including type: PlayFab.ClientModels.UpdatePlayerStatisticsResult
#include "PlayFab/ClientModels/UpdatePlayerStatisticsResult.hpp"
// Including type: PlayFab.ClientModels.UpdateSharedGroupDataRequest
#include "PlayFab/ClientModels/UpdateSharedGroupDataRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateSharedGroupDataResult
#include "PlayFab/ClientModels/UpdateSharedGroupDataResult.hpp"
// Including type: PlayFab.ClientModels.UpdateUserDataRequest
#include "PlayFab/ClientModels/UpdateUserDataRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateUserDataResult
#include "PlayFab/ClientModels/UpdateUserDataResult.hpp"
// Including type: PlayFab.ClientModels.UpdateUserTitleDisplayNameRequest
#include "PlayFab/ClientModels/UpdateUserTitleDisplayNameRequest.hpp"
// Including type: PlayFab.ClientModels.UpdateUserTitleDisplayNameResult
#include "PlayFab/ClientModels/UpdateUserTitleDisplayNameResult.hpp"
// Including type: PlayFab.ClientModels.ValidateAmazonReceiptRequest
#include "PlayFab/ClientModels/ValidateAmazonReceiptRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateAmazonReceiptResult
#include "PlayFab/ClientModels/ValidateAmazonReceiptResult.hpp"
// Including type: PlayFab.ClientModels.ValidateGooglePlayPurchaseRequest
#include "PlayFab/ClientModels/ValidateGooglePlayPurchaseRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateGooglePlayPurchaseResult
#include "PlayFab/ClientModels/ValidateGooglePlayPurchaseResult.hpp"
// Including type: PlayFab.ClientModels.ValidateIOSReceiptRequest
#include "PlayFab/ClientModels/ValidateIOSReceiptRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateIOSReceiptResult
#include "PlayFab/ClientModels/ValidateIOSReceiptResult.hpp"
// Including type: PlayFab.ClientModels.ValidateWindowsReceiptRequest
#include "PlayFab/ClientModels/ValidateWindowsReceiptRequest.hpp"
// Including type: PlayFab.ClientModels.ValidateWindowsReceiptResult
#include "PlayFab/ClientModels/ValidateWindowsReceiptResult.hpp"
// Including type: PlayFab.ClientModels.WriteClientCharacterEventRequest
#include "PlayFab/ClientModels/WriteClientCharacterEventRequest.hpp"
// Including type: PlayFab.ClientModels.WriteEventResponse
#include "PlayFab/ClientModels/WriteEventResponse.hpp"
// Including type: PlayFab.ClientModels.WriteClientPlayerEventRequest
#include "PlayFab/ClientModels/WriteClientPlayerEventRequest.hpp"
// Including type: PlayFab.ClientModels.WriteTitleEventRequest
#include "PlayFab/ClientModels/WriteTitleEventRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabClientInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabClientInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.IsClientLoggedIn
bool PlayFab::PlayFabClientInstanceAPI::IsClientLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::IsClientLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsClientLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabClientInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AcceptTrade
void PlayFab::PlayFabClientInstanceAPI::AcceptTrade(::PlayFab::ClientModels::AcceptTradeRequest* request, ::System::Action_1<::PlayFab::ClientModels::AcceptTradeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AcceptTrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptTrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AddFriend
void PlayFab::PlayFabClientInstanceAPI::AddFriend(::PlayFab::ClientModels::AddFriendRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddFriendResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AddFriend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFriend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AddGenericID
void PlayFab::PlayFabClientInstanceAPI::AddGenericID(::PlayFab::ClientModels::AddGenericIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddGenericIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AddGenericID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGenericID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AddOrUpdateContactEmail
void PlayFab::PlayFabClientInstanceAPI::AddOrUpdateContactEmail(::PlayFab::ClientModels::AddOrUpdateContactEmailRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddOrUpdateContactEmailResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AddOrUpdateContactEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOrUpdateContactEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AddSharedGroupMembers
void PlayFab::PlayFabClientInstanceAPI::AddSharedGroupMembers(::PlayFab::ClientModels::AddSharedGroupMembersRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddSharedGroupMembersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AddSharedGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSharedGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AddUsernamePassword
void PlayFab::PlayFabClientInstanceAPI::AddUsernamePassword(::PlayFab::ClientModels::AddUsernamePasswordRequest* request, ::System::Action_1<::PlayFab::ClientModels::AddUsernamePasswordResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AddUsernamePassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUsernamePassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AddUserVirtualCurrency
void PlayFab::PlayFabClientInstanceAPI::AddUserVirtualCurrency(::PlayFab::ClientModels::AddUserVirtualCurrencyRequest* request, ::System::Action_1<::PlayFab::ClientModels::ModifyUserVirtualCurrencyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AddUserVirtualCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUserVirtualCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AndroidDevicePushNotificationRegistration
void PlayFab::PlayFabClientInstanceAPI::AndroidDevicePushNotificationRegistration(::PlayFab::ClientModels::AndroidDevicePushNotificationRegistrationRequest* request, ::System::Action_1<::PlayFab::ClientModels::AndroidDevicePushNotificationRegistrationResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AndroidDevicePushNotificationRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AndroidDevicePushNotificationRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.AttributeInstall
void PlayFab::PlayFabClientInstanceAPI::AttributeInstall(::PlayFab::ClientModels::AttributeInstallRequest* request, ::System::Action_1<::PlayFab::ClientModels::AttributeInstallResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::AttributeInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttributeInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.CancelTrade
void PlayFab::PlayFabClientInstanceAPI::CancelTrade(::PlayFab::ClientModels::CancelTradeRequest* request, ::System::Action_1<::PlayFab::ClientModels::CancelTradeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::CancelTrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelTrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ConfirmPurchase
void PlayFab::PlayFabClientInstanceAPI::ConfirmPurchase(::PlayFab::ClientModels::ConfirmPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConfirmPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ConfirmPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfirmPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ConsumeItem
void PlayFab::PlayFabClientInstanceAPI::ConsumeItem(::PlayFab::ClientModels::ConsumeItemRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConsumeItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ConsumeItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsumeItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ConsumePSNEntitlements
void PlayFab::PlayFabClientInstanceAPI::ConsumePSNEntitlements(::PlayFab::ClientModels::ConsumePSNEntitlementsRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConsumePSNEntitlementsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ConsumePSNEntitlements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsumePSNEntitlements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ConsumeXboxEntitlements
void PlayFab::PlayFabClientInstanceAPI::ConsumeXboxEntitlements(::PlayFab::ClientModels::ConsumeXboxEntitlementsRequest* request, ::System::Action_1<::PlayFab::ClientModels::ConsumeXboxEntitlementsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ConsumeXboxEntitlements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsumeXboxEntitlements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.CreateSharedGroup
void PlayFab::PlayFabClientInstanceAPI::CreateSharedGroup(::PlayFab::ClientModels::CreateSharedGroupRequest* request, ::System::Action_1<::PlayFab::ClientModels::CreateSharedGroupResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::CreateSharedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSharedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ExecuteCloudScript
void PlayFab::PlayFabClientInstanceAPI::ExecuteCloudScript(::PlayFab::ClientModels::ExecuteCloudScriptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ExecuteCloudScriptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ExecuteCloudScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteCloudScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetAccountInfo
void PlayFab::PlayFabClientInstanceAPI::GetAccountInfo(::PlayFab::ClientModels::GetAccountInfoRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetAccountInfoResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetAccountInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccountInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetAdPlacements
void PlayFab::PlayFabClientInstanceAPI::GetAdPlacements(::PlayFab::ClientModels::GetAdPlacementsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetAdPlacementsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetAdPlacements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdPlacements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetAllUsersCharacters
void PlayFab::PlayFabClientInstanceAPI::GetAllUsersCharacters(::PlayFab::ClientModels::ListUsersCharactersRequest* request, ::System::Action_1<::PlayFab::ClientModels::ListUsersCharactersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetAllUsersCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllUsersCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetCatalogItems
void PlayFab::PlayFabClientInstanceAPI::GetCatalogItems(::PlayFab::ClientModels::GetCatalogItemsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCatalogItemsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetCatalogItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCatalogItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetCharacterData
void PlayFab::PlayFabClientInstanceAPI::GetCharacterData(::PlayFab::ClientModels::GetCharacterDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetCharacterData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetCharacterInventory
void PlayFab::PlayFabClientInstanceAPI::GetCharacterInventory(::PlayFab::ClientModels::GetCharacterInventoryRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterInventoryResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetCharacterInventory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterInventory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetCharacterLeaderboard
void PlayFab::PlayFabClientInstanceAPI::GetCharacterLeaderboard(::PlayFab::ClientModels::GetCharacterLeaderboardRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterLeaderboardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetCharacterLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetCharacterReadOnlyData
void PlayFab::PlayFabClientInstanceAPI::GetCharacterReadOnlyData(::PlayFab::ClientModels::GetCharacterDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetCharacterReadOnlyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterReadOnlyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetCharacterStatistics
void PlayFab::PlayFabClientInstanceAPI::GetCharacterStatistics(::PlayFab::ClientModels::GetCharacterStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetCharacterStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetCharacterStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetContentDownloadUrl
void PlayFab::PlayFabClientInstanceAPI::GetContentDownloadUrl(::PlayFab::ClientModels::GetContentDownloadUrlRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetContentDownloadUrlResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetContentDownloadUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContentDownloadUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetCurrentGames
void PlayFab::PlayFabClientInstanceAPI::GetCurrentGames(::PlayFab::ClientModels::CurrentGamesRequest* request, ::System::Action_1<::PlayFab::ClientModels::CurrentGamesResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetCurrentGames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentGames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetFriendLeaderboard
void PlayFab::PlayFabClientInstanceAPI::GetFriendLeaderboard(::PlayFab::ClientModels::GetFriendLeaderboardRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetFriendLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetFriendLeaderboardAroundPlayer
void PlayFab::PlayFabClientInstanceAPI::GetFriendLeaderboardAroundPlayer(::PlayFab::ClientModels::GetFriendLeaderboardAroundPlayerRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetFriendLeaderboardAroundPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetFriendLeaderboardAroundPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendLeaderboardAroundPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetFriendsList
void PlayFab::PlayFabClientInstanceAPI::GetFriendsList(::PlayFab::ClientModels::GetFriendsListRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetFriendsListResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetFriendsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetGameServerRegions
void PlayFab::PlayFabClientInstanceAPI::GetGameServerRegions(::PlayFab::ClientModels::GameServerRegionsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GameServerRegionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetGameServerRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameServerRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetLeaderboard
void PlayFab::PlayFabClientInstanceAPI::GetLeaderboard(::PlayFab::ClientModels::GetLeaderboardRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetLeaderboardAroundCharacter
void PlayFab::PlayFabClientInstanceAPI::GetLeaderboardAroundCharacter(::PlayFab::ClientModels::GetLeaderboardAroundCharacterRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardAroundCharacterResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetLeaderboardAroundCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardAroundCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetLeaderboardAroundPlayer
void PlayFab::PlayFabClientInstanceAPI::GetLeaderboardAroundPlayer(::PlayFab::ClientModels::GetLeaderboardAroundPlayerRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardAroundPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetLeaderboardAroundPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardAroundPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetLeaderboardForUserCharacters
void PlayFab::PlayFabClientInstanceAPI::GetLeaderboardForUserCharacters(::PlayFab::ClientModels::GetLeaderboardForUsersCharactersRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetLeaderboardForUsersCharactersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetLeaderboardForUserCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardForUserCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPaymentToken
void PlayFab::PlayFabClientInstanceAPI::GetPaymentToken(::PlayFab::ClientModels::GetPaymentTokenRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPaymentTokenResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPaymentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaymentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPhotonAuthenticationToken
void PlayFab::PlayFabClientInstanceAPI::GetPhotonAuthenticationToken(::PlayFab::ClientModels::GetPhotonAuthenticationTokenRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPhotonAuthenticationTokenResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPhotonAuthenticationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPhotonAuthenticationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayerCombinedInfo
void PlayFab::PlayFabClientInstanceAPI::GetPlayerCombinedInfo(::PlayFab::ClientModels::GetPlayerCombinedInfoRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerCombinedInfoResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayerCombinedInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerCombinedInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayerProfile
void PlayFab::PlayFabClientInstanceAPI::GetPlayerProfile(::PlayFab::ClientModels::GetPlayerProfileRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerProfileResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayerProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayerSegments
void PlayFab::PlayFabClientInstanceAPI::GetPlayerSegments(::PlayFab::ClientModels::GetPlayerSegmentsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerSegmentsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayerSegments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerSegments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayerStatistics
void PlayFab::PlayFabClientInstanceAPI::GetPlayerStatistics(::PlayFab::ClientModels::GetPlayerStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayerStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayerStatisticVersions
void PlayFab::PlayFabClientInstanceAPI::GetPlayerStatisticVersions(::PlayFab::ClientModels::GetPlayerStatisticVersionsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerStatisticVersionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayerStatisticVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerStatisticVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayerTags
void PlayFab::PlayFabClientInstanceAPI::GetPlayerTags(::PlayFab::ClientModels::GetPlayerTagsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerTagsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayerTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayerTrades
void PlayFab::PlayFabClientInstanceAPI::GetPlayerTrades(::PlayFab::ClientModels::GetPlayerTradesRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayerTradesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayerTrades");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerTrades", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromFacebookIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromFacebookIDs(::PlayFab::ClientModels::GetPlayFabIDsFromFacebookIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromFacebookIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromFacebookIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromFacebookIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromFacebookInstantGamesIds
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromFacebookInstantGamesIds(::PlayFab::ClientModels::GetPlayFabIDsFromFacebookInstantGamesIdsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromFacebookInstantGamesIdsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromFacebookInstantGamesIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromFacebookInstantGamesIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromGameCenterIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromGameCenterIDs(::PlayFab::ClientModels::GetPlayFabIDsFromGameCenterIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromGameCenterIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromGameCenterIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromGameCenterIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromGenericIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromGenericIDs(::PlayFab::ClientModels::GetPlayFabIDsFromGenericIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromGenericIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromGenericIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromGenericIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromGoogleIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromGoogleIDs(::PlayFab::ClientModels::GetPlayFabIDsFromGoogleIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromGoogleIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromGoogleIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromGoogleIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromKongregateIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromKongregateIDs(::PlayFab::ClientModels::GetPlayFabIDsFromKongregateIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromKongregateIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromKongregateIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromKongregateIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromNintendoSwitchDeviceIds(::PlayFab::ClientModels::GetPlayFabIDsFromNintendoSwitchDeviceIdsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromNintendoSwitchDeviceIdsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromNintendoSwitchDeviceIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromNintendoSwitchDeviceIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromPSNAccountIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromPSNAccountIDs(::PlayFab::ClientModels::GetPlayFabIDsFromPSNAccountIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromPSNAccountIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromPSNAccountIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromPSNAccountIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromSteamIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromSteamIDs(::PlayFab::ClientModels::GetPlayFabIDsFromSteamIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromSteamIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromSteamIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromSteamIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromTwitchIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromTwitchIDs(::PlayFab::ClientModels::GetPlayFabIDsFromTwitchIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromTwitchIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromTwitchIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromTwitchIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPlayFabIDsFromXboxLiveIDs
void PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromXboxLiveIDs(::PlayFab::ClientModels::GetPlayFabIDsFromXboxLiveIDsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPlayFabIDsFromXboxLiveIDsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPlayFabIDsFromXboxLiveIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayFabIDsFromXboxLiveIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPublisherData
void PlayFab::PlayFabClientInstanceAPI::GetPublisherData(::PlayFab::ClientModels::GetPublisherDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPublisherDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPublisherData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublisherData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetPurchase
void PlayFab::PlayFabClientInstanceAPI::GetPurchase(::PlayFab::ClientModels::GetPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetSharedGroupData
void PlayFab::PlayFabClientInstanceAPI::GetSharedGroupData(::PlayFab::ClientModels::GetSharedGroupDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetSharedGroupDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetSharedGroupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedGroupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetStoreItems
void PlayFab::PlayFabClientInstanceAPI::GetStoreItems(::PlayFab::ClientModels::GetStoreItemsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetStoreItemsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetStoreItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStoreItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetTime
void PlayFab::PlayFabClientInstanceAPI::GetTime(::PlayFab::ClientModels::GetTimeRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTimeResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetTitleData
void PlayFab::PlayFabClientInstanceAPI::GetTitleData(::PlayFab::ClientModels::GetTitleDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTitleDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetTitleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTitleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetTitleNews
void PlayFab::PlayFabClientInstanceAPI::GetTitleNews(::PlayFab::ClientModels::GetTitleNewsRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTitleNewsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetTitleNews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTitleNews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetTitlePublicKey
void PlayFab::PlayFabClientInstanceAPI::GetTitlePublicKey(::PlayFab::ClientModels::GetTitlePublicKeyRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTitlePublicKeyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetTitlePublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTitlePublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetTradeStatus
void PlayFab::PlayFabClientInstanceAPI::GetTradeStatus(::PlayFab::ClientModels::GetTradeStatusRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetTradeStatusResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetTradeStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTradeStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetUserData
void PlayFab::PlayFabClientInstanceAPI::GetUserData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetUserInventory
void PlayFab::PlayFabClientInstanceAPI::GetUserInventory(::PlayFab::ClientModels::GetUserInventoryRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserInventoryResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetUserInventory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserInventory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetUserPublisherData
void PlayFab::PlayFabClientInstanceAPI::GetUserPublisherData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetUserPublisherData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserPublisherData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetUserPublisherReadOnlyData
void PlayFab::PlayFabClientInstanceAPI::GetUserPublisherReadOnlyData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetUserPublisherReadOnlyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserPublisherReadOnlyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetUserReadOnlyData
void PlayFab::PlayFabClientInstanceAPI::GetUserReadOnlyData(::PlayFab::ClientModels::GetUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetUserReadOnlyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserReadOnlyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GetWindowsHelloChallenge
void PlayFab::PlayFabClientInstanceAPI::GetWindowsHelloChallenge(::PlayFab::ClientModels::GetWindowsHelloChallengeRequest* request, ::System::Action_1<::PlayFab::ClientModels::GetWindowsHelloChallengeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GetWindowsHelloChallenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWindowsHelloChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.GrantCharacterToUser
void PlayFab::PlayFabClientInstanceAPI::GrantCharacterToUser(::PlayFab::ClientModels::GrantCharacterToUserRequest* request, ::System::Action_1<::PlayFab::ClientModels::GrantCharacterToUserResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::GrantCharacterToUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrantCharacterToUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkAndroidDeviceID
void PlayFab::PlayFabClientInstanceAPI::LinkAndroidDeviceID(::PlayFab::ClientModels::LinkAndroidDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkAndroidDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkAndroidDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkAndroidDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkApple
void PlayFab::PlayFabClientInstanceAPI::LinkApple(::PlayFab::ClientModels::LinkAppleRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkApple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkApple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkCustomID
void PlayFab::PlayFabClientInstanceAPI::LinkCustomID(::PlayFab::ClientModels::LinkCustomIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkCustomIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkCustomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkCustomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkFacebookAccount
void PlayFab::PlayFabClientInstanceAPI::LinkFacebookAccount(::PlayFab::ClientModels::LinkFacebookAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkFacebookAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkFacebookAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkFacebookAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkFacebookInstantGamesId
void PlayFab::PlayFabClientInstanceAPI::LinkFacebookInstantGamesId(::PlayFab::ClientModels::LinkFacebookInstantGamesIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkFacebookInstantGamesIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkFacebookInstantGamesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkFacebookInstantGamesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkGameCenterAccount
void PlayFab::PlayFabClientInstanceAPI::LinkGameCenterAccount(::PlayFab::ClientModels::LinkGameCenterAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkGameCenterAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkGameCenterAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkGameCenterAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkGoogleAccount
void PlayFab::PlayFabClientInstanceAPI::LinkGoogleAccount(::PlayFab::ClientModels::LinkGoogleAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkGoogleAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkGoogleAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkGoogleAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkIOSDeviceID
void PlayFab::PlayFabClientInstanceAPI::LinkIOSDeviceID(::PlayFab::ClientModels::LinkIOSDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkIOSDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkIOSDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkIOSDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkKongregate
void PlayFab::PlayFabClientInstanceAPI::LinkKongregate(::PlayFab::ClientModels::LinkKongregateAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkKongregateAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkKongregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkKongregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkNintendoAccount
void PlayFab::PlayFabClientInstanceAPI::LinkNintendoAccount(::PlayFab::ClientModels::LinkNintendoAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkNintendoAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkNintendoAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkNintendoSwitchDeviceId
void PlayFab::PlayFabClientInstanceAPI::LinkNintendoSwitchDeviceId(::PlayFab::ClientModels::LinkNintendoSwitchDeviceIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkNintendoSwitchDeviceIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkNintendoSwitchDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkNintendoSwitchDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkOpenIdConnect
void PlayFab::PlayFabClientInstanceAPI::LinkOpenIdConnect(::PlayFab::ClientModels::LinkOpenIdConnectRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkOpenIdConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkOpenIdConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkPSNAccount
void PlayFab::PlayFabClientInstanceAPI::LinkPSNAccount(::PlayFab::ClientModels::LinkPSNAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkPSNAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkPSNAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkPSNAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkSteamAccount
void PlayFab::PlayFabClientInstanceAPI::LinkSteamAccount(::PlayFab::ClientModels::LinkSteamAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkSteamAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkSteamAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkSteamAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkTwitch
void PlayFab::PlayFabClientInstanceAPI::LinkTwitch(::PlayFab::ClientModels::LinkTwitchAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkTwitchAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkTwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkTwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkWindowsHello
void PlayFab::PlayFabClientInstanceAPI::LinkWindowsHello(::PlayFab::ClientModels::LinkWindowsHelloAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkWindowsHelloAccountResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LinkXboxAccount
void PlayFab::PlayFabClientInstanceAPI::LinkXboxAccount(::PlayFab::ClientModels::LinkXboxAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LinkXboxAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LinkXboxAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkXboxAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithAndroidDeviceID
void PlayFab::PlayFabClientInstanceAPI::LoginWithAndroidDeviceID(::PlayFab::ClientModels::LoginWithAndroidDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithAndroidDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithAndroidDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithApple
void PlayFab::PlayFabClientInstanceAPI::LoginWithApple(::PlayFab::ClientModels::LoginWithAppleRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithApple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithApple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithCustomID
void PlayFab::PlayFabClientInstanceAPI::LoginWithCustomID(::PlayFab::ClientModels::LoginWithCustomIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithCustomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithCustomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithEmailAddress
void PlayFab::PlayFabClientInstanceAPI::LoginWithEmailAddress(::PlayFab::ClientModels::LoginWithEmailAddressRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithEmailAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithEmailAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithFacebook
void PlayFab::PlayFabClientInstanceAPI::LoginWithFacebook(::PlayFab::ClientModels::LoginWithFacebookRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithFacebookInstantGamesId
void PlayFab::PlayFabClientInstanceAPI::LoginWithFacebookInstantGamesId(::PlayFab::ClientModels::LoginWithFacebookInstantGamesIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithFacebookInstantGamesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithFacebookInstantGamesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithGameCenter
void PlayFab::PlayFabClientInstanceAPI::LoginWithGameCenter(::PlayFab::ClientModels::LoginWithGameCenterRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithGameCenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithGameCenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithGoogleAccount
void PlayFab::PlayFabClientInstanceAPI::LoginWithGoogleAccount(::PlayFab::ClientModels::LoginWithGoogleAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithGoogleAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithGoogleAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithIOSDeviceID
void PlayFab::PlayFabClientInstanceAPI::LoginWithIOSDeviceID(::PlayFab::ClientModels::LoginWithIOSDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithIOSDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithIOSDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithKongregate
void PlayFab::PlayFabClientInstanceAPI::LoginWithKongregate(::PlayFab::ClientModels::LoginWithKongregateRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithKongregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithKongregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithNintendoAccount
void PlayFab::PlayFabClientInstanceAPI::LoginWithNintendoAccount(::PlayFab::ClientModels::LoginWithNintendoAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithNintendoAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithNintendoAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithNintendoSwitchDeviceId
void PlayFab::PlayFabClientInstanceAPI::LoginWithNintendoSwitchDeviceId(::PlayFab::ClientModels::LoginWithNintendoSwitchDeviceIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithNintendoSwitchDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithNintendoSwitchDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithOpenIdConnect
void PlayFab::PlayFabClientInstanceAPI::LoginWithOpenIdConnect(::PlayFab::ClientModels::LoginWithOpenIdConnectRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithOpenIdConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithOpenIdConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithPlayFab
void PlayFab::PlayFabClientInstanceAPI::LoginWithPlayFab(::PlayFab::ClientModels::LoginWithPlayFabRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithPlayFab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithPlayFab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithPSN
void PlayFab::PlayFabClientInstanceAPI::LoginWithPSN(::PlayFab::ClientModels::LoginWithPSNRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithPSN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithPSN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithSteam
void PlayFab::PlayFabClientInstanceAPI::LoginWithSteam(::PlayFab::ClientModels::LoginWithSteamRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithSteam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithSteam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithTwitch
void PlayFab::PlayFabClientInstanceAPI::LoginWithTwitch(::PlayFab::ClientModels::LoginWithTwitchRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithTwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithTwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithWindowsHello
void PlayFab::PlayFabClientInstanceAPI::LoginWithWindowsHello(::PlayFab::ClientModels::LoginWithWindowsHelloRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.LoginWithXbox
void PlayFab::PlayFabClientInstanceAPI::LoginWithXbox(::PlayFab::ClientModels::LoginWithXboxRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::LoginWithXbox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithXbox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.Matchmake
void PlayFab::PlayFabClientInstanceAPI::Matchmake(::PlayFab::ClientModels::MatchmakeRequest* request, ::System::Action_1<::PlayFab::ClientModels::MatchmakeResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::Matchmake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matchmake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.OpenTrade
void PlayFab::PlayFabClientInstanceAPI::OpenTrade(::PlayFab::ClientModels::OpenTradeRequest* request, ::System::Action_1<::PlayFab::ClientModels::OpenTradeResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::OpenTrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenTrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.PayForPurchase
void PlayFab::PlayFabClientInstanceAPI::PayForPurchase(::PlayFab::ClientModels::PayForPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::PayForPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::PayForPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PayForPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.PurchaseItem
void PlayFab::PlayFabClientInstanceAPI::PurchaseItem(::PlayFab::ClientModels::PurchaseItemRequest* request, ::System::Action_1<::PlayFab::ClientModels::PurchaseItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::PurchaseItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PurchaseItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RedeemCoupon
void PlayFab::PlayFabClientInstanceAPI::RedeemCoupon(::PlayFab::ClientModels::RedeemCouponRequest* request, ::System::Action_1<::PlayFab::ClientModels::RedeemCouponResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RedeemCoupon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RedeemCoupon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RefreshPSNAuthToken
void PlayFab::PlayFabClientInstanceAPI::RefreshPSNAuthToken(::PlayFab::ClientModels::RefreshPSNAuthTokenRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RefreshPSNAuthToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshPSNAuthToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RegisterForIOSPushNotification
void PlayFab::PlayFabClientInstanceAPI::RegisterForIOSPushNotification(::PlayFab::ClientModels::RegisterForIOSPushNotificationRequest* request, ::System::Action_1<::PlayFab::ClientModels::RegisterForIOSPushNotificationResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RegisterForIOSPushNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForIOSPushNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RegisterPlayFabUser
void PlayFab::PlayFabClientInstanceAPI::RegisterPlayFabUser(::PlayFab::ClientModels::RegisterPlayFabUserRequest* request, ::System::Action_1<::PlayFab::ClientModels::RegisterPlayFabUserResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RegisterPlayFabUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterPlayFabUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RegisterWithWindowsHello
void PlayFab::PlayFabClientInstanceAPI::RegisterWithWindowsHello(::PlayFab::ClientModels::RegisterWithWindowsHelloRequest* request, ::System::Action_1<::PlayFab::ClientModels::LoginResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RegisterWithWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RemoveContactEmail
void PlayFab::PlayFabClientInstanceAPI::RemoveContactEmail(::PlayFab::ClientModels::RemoveContactEmailRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveContactEmailResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RemoveContactEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveContactEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RemoveFriend
void PlayFab::PlayFabClientInstanceAPI::RemoveFriend(::PlayFab::ClientModels::RemoveFriendRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveFriendResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RemoveFriend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFriend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RemoveGenericID
void PlayFab::PlayFabClientInstanceAPI::RemoveGenericID(::PlayFab::ClientModels::RemoveGenericIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveGenericIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RemoveGenericID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGenericID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RemoveSharedGroupMembers
void PlayFab::PlayFabClientInstanceAPI::RemoveSharedGroupMembers(::PlayFab::ClientModels::RemoveSharedGroupMembersRequest* request, ::System::Action_1<::PlayFab::ClientModels::RemoveSharedGroupMembersResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RemoveSharedGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSharedGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ReportAdActivity
void PlayFab::PlayFabClientInstanceAPI::ReportAdActivity(::PlayFab::ClientModels::ReportAdActivityRequest* request, ::System::Action_1<::PlayFab::ClientModels::ReportAdActivityResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ReportAdActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportAdActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ReportDeviceInfo
void PlayFab::PlayFabClientInstanceAPI::ReportDeviceInfo(::PlayFab::ClientModels::DeviceInfoRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ReportDeviceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportDeviceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ReportPlayer
void PlayFab::PlayFabClientInstanceAPI::ReportPlayer(::PlayFab::ClientModels::ReportPlayerClientRequest* request, ::System::Action_1<::PlayFab::ClientModels::ReportPlayerClientResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ReportPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RestoreIOSPurchases
void PlayFab::PlayFabClientInstanceAPI::RestoreIOSPurchases(::PlayFab::ClientModels::RestoreIOSPurchasesRequest* request, ::System::Action_1<::PlayFab::ClientModels::RestoreIOSPurchasesResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RestoreIOSPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreIOSPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.RewardAdActivity
void PlayFab::PlayFabClientInstanceAPI::RewardAdActivity(::PlayFab::ClientModels::RewardAdActivityRequest* request, ::System::Action_1<::PlayFab::ClientModels::RewardAdActivityResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::RewardAdActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RewardAdActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.SendAccountRecoveryEmail
void PlayFab::PlayFabClientInstanceAPI::SendAccountRecoveryEmail(::PlayFab::ClientModels::SendAccountRecoveryEmailRequest* request, ::System::Action_1<::PlayFab::ClientModels::SendAccountRecoveryEmailResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::SendAccountRecoveryEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAccountRecoveryEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.SetFriendTags
void PlayFab::PlayFabClientInstanceAPI::SetFriendTags(::PlayFab::ClientModels::SetFriendTagsRequest* request, ::System::Action_1<::PlayFab::ClientModels::SetFriendTagsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::SetFriendTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFriendTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.SetPlayerSecret
void PlayFab::PlayFabClientInstanceAPI::SetPlayerSecret(::PlayFab::ClientModels::SetPlayerSecretRequest* request, ::System::Action_1<::PlayFab::ClientModels::SetPlayerSecretResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::SetPlayerSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.StartGame
void PlayFab::PlayFabClientInstanceAPI::StartGame(::PlayFab::ClientModels::StartGameRequest* request, ::System::Action_1<::PlayFab::ClientModels::StartGameResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::StartGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.StartPurchase
void PlayFab::PlayFabClientInstanceAPI::StartPurchase(::PlayFab::ClientModels::StartPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::StartPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::StartPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.SubtractUserVirtualCurrency
void PlayFab::PlayFabClientInstanceAPI::SubtractUserVirtualCurrency(::PlayFab::ClientModels::SubtractUserVirtualCurrencyRequest* request, ::System::Action_1<::PlayFab::ClientModels::ModifyUserVirtualCurrencyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::SubtractUserVirtualCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubtractUserVirtualCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkAndroidDeviceID
void PlayFab::PlayFabClientInstanceAPI::UnlinkAndroidDeviceID(::PlayFab::ClientModels::UnlinkAndroidDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkAndroidDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkAndroidDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkAndroidDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkApple
void PlayFab::PlayFabClientInstanceAPI::UnlinkApple(::PlayFab::ClientModels::UnlinkAppleRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkApple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkApple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkCustomID
void PlayFab::PlayFabClientInstanceAPI::UnlinkCustomID(::PlayFab::ClientModels::UnlinkCustomIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkCustomIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkCustomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkCustomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkFacebookAccount
void PlayFab::PlayFabClientInstanceAPI::UnlinkFacebookAccount(::PlayFab::ClientModels::UnlinkFacebookAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkFacebookAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkFacebookAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkFacebookAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkFacebookInstantGamesId
void PlayFab::PlayFabClientInstanceAPI::UnlinkFacebookInstantGamesId(::PlayFab::ClientModels::UnlinkFacebookInstantGamesIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkFacebookInstantGamesIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkFacebookInstantGamesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkFacebookInstantGamesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkGameCenterAccount
void PlayFab::PlayFabClientInstanceAPI::UnlinkGameCenterAccount(::PlayFab::ClientModels::UnlinkGameCenterAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkGameCenterAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkGameCenterAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkGameCenterAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkGoogleAccount
void PlayFab::PlayFabClientInstanceAPI::UnlinkGoogleAccount(::PlayFab::ClientModels::UnlinkGoogleAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkGoogleAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkGoogleAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkGoogleAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkIOSDeviceID
void PlayFab::PlayFabClientInstanceAPI::UnlinkIOSDeviceID(::PlayFab::ClientModels::UnlinkIOSDeviceIDRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkIOSDeviceIDResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkIOSDeviceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkIOSDeviceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkKongregate
void PlayFab::PlayFabClientInstanceAPI::UnlinkKongregate(::PlayFab::ClientModels::UnlinkKongregateAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkKongregateAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkKongregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkKongregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkNintendoAccount
void PlayFab::PlayFabClientInstanceAPI::UnlinkNintendoAccount(::PlayFab::ClientModels::UnlinkNintendoAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkNintendoAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkNintendoAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkNintendoSwitchDeviceId
void PlayFab::PlayFabClientInstanceAPI::UnlinkNintendoSwitchDeviceId(::PlayFab::ClientModels::UnlinkNintendoSwitchDeviceIdRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkNintendoSwitchDeviceIdResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkNintendoSwitchDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkNintendoSwitchDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkOpenIdConnect
void PlayFab::PlayFabClientInstanceAPI::UnlinkOpenIdConnect(::PlayFab::ClientModels::UnlinkOpenIdConnectRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkOpenIdConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkOpenIdConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkPSNAccount
void PlayFab::PlayFabClientInstanceAPI::UnlinkPSNAccount(::PlayFab::ClientModels::UnlinkPSNAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkPSNAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkPSNAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkPSNAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkSteamAccount
void PlayFab::PlayFabClientInstanceAPI::UnlinkSteamAccount(::PlayFab::ClientModels::UnlinkSteamAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkSteamAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkSteamAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkSteamAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkTwitch
void PlayFab::PlayFabClientInstanceAPI::UnlinkTwitch(::PlayFab::ClientModels::UnlinkTwitchAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkTwitchAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkTwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkTwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkWindowsHello
void PlayFab::PlayFabClientInstanceAPI::UnlinkWindowsHello(::PlayFab::ClientModels::UnlinkWindowsHelloAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkWindowsHelloAccountResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkWindowsHello");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkWindowsHello", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlinkXboxAccount
void PlayFab::PlayFabClientInstanceAPI::UnlinkXboxAccount(::PlayFab::ClientModels::UnlinkXboxAccountRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlinkXboxAccountResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlinkXboxAccount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlinkXboxAccount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlockContainerInstance
void PlayFab::PlayFabClientInstanceAPI::UnlockContainerInstance(::PlayFab::ClientModels::UnlockContainerInstanceRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlockContainerItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlockContainerInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockContainerInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UnlockContainerItem
void PlayFab::PlayFabClientInstanceAPI::UnlockContainerItem(::PlayFab::ClientModels::UnlockContainerItemRequest* request, ::System::Action_1<::PlayFab::ClientModels::UnlockContainerItemResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UnlockContainerItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockContainerItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdateAvatarUrl
void PlayFab::PlayFabClientInstanceAPI::UpdateAvatarUrl(::PlayFab::ClientModels::UpdateAvatarUrlRequest* request, ::System::Action_1<::PlayFab::ClientModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdateAvatarUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdateCharacterData
void PlayFab::PlayFabClientInstanceAPI::UpdateCharacterData(::PlayFab::ClientModels::UpdateCharacterDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateCharacterDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdateCharacterData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCharacterData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdateCharacterStatistics
void PlayFab::PlayFabClientInstanceAPI::UpdateCharacterStatistics(::PlayFab::ClientModels::UpdateCharacterStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateCharacterStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdateCharacterStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCharacterStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdatePlayerStatistics
void PlayFab::PlayFabClientInstanceAPI::UpdatePlayerStatistics(::PlayFab::ClientModels::UpdatePlayerStatisticsRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdatePlayerStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdatePlayerStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdateSharedGroupData
void PlayFab::PlayFabClientInstanceAPI::UpdateSharedGroupData(::PlayFab::ClientModels::UpdateSharedGroupDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateSharedGroupDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdateSharedGroupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSharedGroupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdateUserData
void PlayFab::PlayFabClientInstanceAPI::UpdateUserData(::PlayFab::ClientModels::UpdateUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdateUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdateUserPublisherData
void PlayFab::PlayFabClientInstanceAPI::UpdateUserPublisherData(::PlayFab::ClientModels::UpdateUserDataRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateUserDataResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdateUserPublisherData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUserPublisherData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.UpdateUserTitleDisplayName
void PlayFab::PlayFabClientInstanceAPI::UpdateUserTitleDisplayName(::PlayFab::ClientModels::UpdateUserTitleDisplayNameRequest* request, ::System::Action_1<::PlayFab::ClientModels::UpdateUserTitleDisplayNameResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::UpdateUserTitleDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUserTitleDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ValidateAmazonIAPReceipt
void PlayFab::PlayFabClientInstanceAPI::ValidateAmazonIAPReceipt(::PlayFab::ClientModels::ValidateAmazonReceiptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateAmazonReceiptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ValidateAmazonIAPReceipt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAmazonIAPReceipt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ValidateGooglePlayPurchase
void PlayFab::PlayFabClientInstanceAPI::ValidateGooglePlayPurchase(::PlayFab::ClientModels::ValidateGooglePlayPurchaseRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateGooglePlayPurchaseResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ValidateGooglePlayPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateGooglePlayPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ValidateIOSReceipt
void PlayFab::PlayFabClientInstanceAPI::ValidateIOSReceipt(::PlayFab::ClientModels::ValidateIOSReceiptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateIOSReceiptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ValidateIOSReceipt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateIOSReceipt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.ValidateWindowsStoreReceipt
void PlayFab::PlayFabClientInstanceAPI::ValidateWindowsStoreReceipt(::PlayFab::ClientModels::ValidateWindowsReceiptRequest* request, ::System::Action_1<::PlayFab::ClientModels::ValidateWindowsReceiptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::ValidateWindowsStoreReceipt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateWindowsStoreReceipt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.WriteCharacterEvent
void PlayFab::PlayFabClientInstanceAPI::WriteCharacterEvent(::PlayFab::ClientModels::WriteClientCharacterEventRequest* request, ::System::Action_1<::PlayFab::ClientModels::WriteEventResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::WriteCharacterEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharacterEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.WritePlayerEvent
void PlayFab::PlayFabClientInstanceAPI::WritePlayerEvent(::PlayFab::ClientModels::WriteClientPlayerEventRequest* request, ::System::Action_1<::PlayFab::ClientModels::WriteEventResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::WritePlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabClientInstanceAPI.WriteTitleEvent
void PlayFab::PlayFabClientInstanceAPI::WriteTitleEvent(::PlayFab::ClientModels::WriteTitleEventRequest* request, ::System::Action_1<::PlayFab::ClientModels::WriteEventResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabClientInstanceAPI::WriteTitleEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTitleEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabCloudScriptAPI
#include "PlayFab/PlayFabCloudScriptAPI.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteEntityCloudScriptRequest
#include "PlayFab/CloudScriptModels/ExecuteEntityCloudScriptRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteCloudScriptResult
#include "PlayFab/CloudScriptModels/ExecuteCloudScriptResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteFunctionRequest
#include "PlayFab/CloudScriptModels/ExecuteFunctionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteFunctionResult
#include "PlayFab/CloudScriptModels/ExecuteFunctionResult.hpp"
// Including type: PlayFab.CloudScriptModels.ListFunctionsRequest
#include "PlayFab/CloudScriptModels/ListFunctionsRequest.hpp"
// Including type: PlayFab.CloudScriptModels.ListFunctionsResult
#include "PlayFab/CloudScriptModels/ListFunctionsResult.hpp"
// Including type: PlayFab.CloudScriptModels.ListHttpFunctionsResult
#include "PlayFab/CloudScriptModels/ListHttpFunctionsResult.hpp"
// Including type: PlayFab.CloudScriptModels.ListQueuedFunctionsResult
#include "PlayFab/CloudScriptModels/ListQueuedFunctionsResult.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForEntityTriggeredActionRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForEntityTriggeredActionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.EmptyResult
#include "PlayFab/CloudScriptModels/EmptyResult.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForFunctionExecutionRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForFunctionExecutionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForPlayerTriggeredActionRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForPlayerTriggeredActionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForScheduledTaskRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForScheduledTaskRequest.hpp"
// Including type: PlayFab.CloudScriptModels.RegisterHttpFunctionRequest
#include "PlayFab/CloudScriptModels/RegisterHttpFunctionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.RegisterQueuedFunctionRequest
#include "PlayFab/CloudScriptModels/RegisterQueuedFunctionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.UnregisterFunctionRequest
#include "PlayFab/CloudScriptModels/UnregisterFunctionRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI..cctor
void PlayFab::PlayFabCloudScriptAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.IsEntityLoggedIn
bool PlayFab::PlayFabCloudScriptAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.ForgetAllCredentials
void PlayFab::PlayFabCloudScriptAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.ExecuteEntityCloudScript
void PlayFab::PlayFabCloudScriptAPI::ExecuteEntityCloudScript(::PlayFab::CloudScriptModels::ExecuteEntityCloudScriptRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ExecuteCloudScriptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::ExecuteEntityCloudScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "ExecuteEntityCloudScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.ExecuteFunction
void PlayFab::PlayFabCloudScriptAPI::ExecuteFunction(::PlayFab::CloudScriptModels::ExecuteFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::ExecuteFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "ExecuteFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.ListFunctions
void PlayFab::PlayFabCloudScriptAPI::ListFunctions(::PlayFab::CloudScriptModels::ListFunctionsRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ListFunctionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::ListFunctions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "ListFunctions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.ListHttpFunctions
void PlayFab::PlayFabCloudScriptAPI::ListHttpFunctions(::PlayFab::CloudScriptModels::ListFunctionsRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ListHttpFunctionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::ListHttpFunctions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "ListHttpFunctions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.ListQueuedFunctions
void PlayFab::PlayFabCloudScriptAPI::ListQueuedFunctions(::PlayFab::CloudScriptModels::ListFunctionsRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ListQueuedFunctionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::ListQueuedFunctions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "ListQueuedFunctions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForEntityTriggeredAction
void PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForEntityTriggeredAction(::PlayFab::CloudScriptModels::PostFunctionResultForEntityTriggeredActionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForEntityTriggeredAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "PostFunctionResultForEntityTriggeredAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForFunctionExecution
void PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForFunctionExecution(::PlayFab::CloudScriptModels::PostFunctionResultForFunctionExecutionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForFunctionExecution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "PostFunctionResultForFunctionExecution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForPlayerTriggeredAction
void PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForPlayerTriggeredAction(::PlayFab::CloudScriptModels::PostFunctionResultForPlayerTriggeredActionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForPlayerTriggeredAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "PostFunctionResultForPlayerTriggeredAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForScheduledTask
void PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForScheduledTask(::PlayFab::CloudScriptModels::PostFunctionResultForScheduledTaskRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::PostFunctionResultForScheduledTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "PostFunctionResultForScheduledTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.RegisterHttpFunction
void PlayFab::PlayFabCloudScriptAPI::RegisterHttpFunction(::PlayFab::CloudScriptModels::RegisterHttpFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::RegisterHttpFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "RegisterHttpFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.RegisterQueuedFunction
void PlayFab::PlayFabCloudScriptAPI::RegisterQueuedFunction(::PlayFab::CloudScriptModels::RegisterQueuedFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::RegisterQueuedFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "RegisterQueuedFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptAPI.UnregisterFunction
void PlayFab::PlayFabCloudScriptAPI::UnregisterFunction(::PlayFab::CloudScriptModels::UnregisterFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptAPI::UnregisterFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabCloudScriptAPI", "UnregisterFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabCloudScriptInstanceAPI
#include "PlayFab/PlayFabCloudScriptInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteEntityCloudScriptRequest
#include "PlayFab/CloudScriptModels/ExecuteEntityCloudScriptRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteCloudScriptResult
#include "PlayFab/CloudScriptModels/ExecuteCloudScriptResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteFunctionRequest
#include "PlayFab/CloudScriptModels/ExecuteFunctionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.ExecuteFunctionResult
#include "PlayFab/CloudScriptModels/ExecuteFunctionResult.hpp"
// Including type: PlayFab.CloudScriptModels.ListFunctionsRequest
#include "PlayFab/CloudScriptModels/ListFunctionsRequest.hpp"
// Including type: PlayFab.CloudScriptModels.ListFunctionsResult
#include "PlayFab/CloudScriptModels/ListFunctionsResult.hpp"
// Including type: PlayFab.CloudScriptModels.ListHttpFunctionsResult
#include "PlayFab/CloudScriptModels/ListHttpFunctionsResult.hpp"
// Including type: PlayFab.CloudScriptModels.ListQueuedFunctionsResult
#include "PlayFab/CloudScriptModels/ListQueuedFunctionsResult.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForEntityTriggeredActionRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForEntityTriggeredActionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.EmptyResult
#include "PlayFab/CloudScriptModels/EmptyResult.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForFunctionExecutionRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForFunctionExecutionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForPlayerTriggeredActionRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForPlayerTriggeredActionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.PostFunctionResultForScheduledTaskRequest
#include "PlayFab/CloudScriptModels/PostFunctionResultForScheduledTaskRequest.hpp"
// Including type: PlayFab.CloudScriptModels.RegisterHttpFunctionRequest
#include "PlayFab/CloudScriptModels/RegisterHttpFunctionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.RegisterQueuedFunctionRequest
#include "PlayFab/CloudScriptModels/RegisterQueuedFunctionRequest.hpp"
// Including type: PlayFab.CloudScriptModels.UnregisterFunctionRequest
#include "PlayFab/CloudScriptModels/UnregisterFunctionRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabCloudScriptInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabCloudScriptInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabCloudScriptInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabCloudScriptInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.ExecuteEntityCloudScript
void PlayFab::PlayFabCloudScriptInstanceAPI::ExecuteEntityCloudScript(::PlayFab::CloudScriptModels::ExecuteEntityCloudScriptRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ExecuteCloudScriptResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::ExecuteEntityCloudScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEntityCloudScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.ExecuteFunction
void PlayFab::PlayFabCloudScriptInstanceAPI::ExecuteFunction(::PlayFab::CloudScriptModels::ExecuteFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ExecuteFunctionResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::ExecuteFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.ListFunctions
void PlayFab::PlayFabCloudScriptInstanceAPI::ListFunctions(::PlayFab::CloudScriptModels::ListFunctionsRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ListFunctionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::ListFunctions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListFunctions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.ListHttpFunctions
void PlayFab::PlayFabCloudScriptInstanceAPI::ListHttpFunctions(::PlayFab::CloudScriptModels::ListFunctionsRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ListHttpFunctionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::ListHttpFunctions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListHttpFunctions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.ListQueuedFunctions
void PlayFab::PlayFabCloudScriptInstanceAPI::ListQueuedFunctions(::PlayFab::CloudScriptModels::ListFunctionsRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::ListQueuedFunctionsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::ListQueuedFunctions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListQueuedFunctions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.PostFunctionResultForEntityTriggeredAction
void PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForEntityTriggeredAction(::PlayFab::CloudScriptModels::PostFunctionResultForEntityTriggeredActionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForEntityTriggeredAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostFunctionResultForEntityTriggeredAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.PostFunctionResultForFunctionExecution
void PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForFunctionExecution(::PlayFab::CloudScriptModels::PostFunctionResultForFunctionExecutionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForFunctionExecution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostFunctionResultForFunctionExecution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.PostFunctionResultForPlayerTriggeredAction
void PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForPlayerTriggeredAction(::PlayFab::CloudScriptModels::PostFunctionResultForPlayerTriggeredActionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForPlayerTriggeredAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostFunctionResultForPlayerTriggeredAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.PostFunctionResultForScheduledTask
void PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForScheduledTask(::PlayFab::CloudScriptModels::PostFunctionResultForScheduledTaskRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::PostFunctionResultForScheduledTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostFunctionResultForScheduledTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.RegisterHttpFunction
void PlayFab::PlayFabCloudScriptInstanceAPI::RegisterHttpFunction(::PlayFab::CloudScriptModels::RegisterHttpFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::RegisterHttpFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterHttpFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.RegisterQueuedFunction
void PlayFab::PlayFabCloudScriptInstanceAPI::RegisterQueuedFunction(::PlayFab::CloudScriptModels::RegisterQueuedFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::RegisterQueuedFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterQueuedFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabCloudScriptInstanceAPI.UnregisterFunction
void PlayFab::PlayFabCloudScriptInstanceAPI::UnregisterFunction(::PlayFab::CloudScriptModels::UnregisterFunctionRequest* request, ::System::Action_1<::PlayFab::CloudScriptModels::EmptyResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabCloudScriptInstanceAPI::UnregisterFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabDataAPI
#include "PlayFab/PlayFabDataAPI.hpp"
// Including type: PlayFab.DataModels.AbortFileUploadsRequest
#include "PlayFab/DataModels/AbortFileUploadsRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.DataModels.AbortFileUploadsResponse
#include "PlayFab/DataModels/AbortFileUploadsResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.DataModels.DeleteFilesRequest
#include "PlayFab/DataModels/DeleteFilesRequest.hpp"
// Including type: PlayFab.DataModels.DeleteFilesResponse
#include "PlayFab/DataModels/DeleteFilesResponse.hpp"
// Including type: PlayFab.DataModels.FinalizeFileUploadsRequest
#include "PlayFab/DataModels/FinalizeFileUploadsRequest.hpp"
// Including type: PlayFab.DataModels.FinalizeFileUploadsResponse
#include "PlayFab/DataModels/FinalizeFileUploadsResponse.hpp"
// Including type: PlayFab.DataModels.GetFilesRequest
#include "PlayFab/DataModels/GetFilesRequest.hpp"
// Including type: PlayFab.DataModels.GetFilesResponse
#include "PlayFab/DataModels/GetFilesResponse.hpp"
// Including type: PlayFab.DataModels.GetObjectsRequest
#include "PlayFab/DataModels/GetObjectsRequest.hpp"
// Including type: PlayFab.DataModels.GetObjectsResponse
#include "PlayFab/DataModels/GetObjectsResponse.hpp"
// Including type: PlayFab.DataModels.InitiateFileUploadsRequest
#include "PlayFab/DataModels/InitiateFileUploadsRequest.hpp"
// Including type: PlayFab.DataModels.InitiateFileUploadsResponse
#include "PlayFab/DataModels/InitiateFileUploadsResponse.hpp"
// Including type: PlayFab.DataModels.SetObjectsRequest
#include "PlayFab/DataModels/SetObjectsRequest.hpp"
// Including type: PlayFab.DataModels.SetObjectsResponse
#include "PlayFab/DataModels/SetObjectsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabDataAPI..cctor
void PlayFab::PlayFabDataAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.IsEntityLoggedIn
bool PlayFab::PlayFabDataAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.ForgetAllCredentials
void PlayFab::PlayFabDataAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.AbortFileUploads
void PlayFab::PlayFabDataAPI::AbortFileUploads(::PlayFab::DataModels::AbortFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::AbortFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::AbortFileUploads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "AbortFileUploads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.DeleteFiles
void PlayFab::PlayFabDataAPI::DeleteFiles(::PlayFab::DataModels::DeleteFilesRequest* request, ::System::Action_1<::PlayFab::DataModels::DeleteFilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::DeleteFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "DeleteFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.FinalizeFileUploads
void PlayFab::PlayFabDataAPI::FinalizeFileUploads(::PlayFab::DataModels::FinalizeFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::FinalizeFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::FinalizeFileUploads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "FinalizeFileUploads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.GetFiles
void PlayFab::PlayFabDataAPI::GetFiles(::PlayFab::DataModels::GetFilesRequest* request, ::System::Action_1<::PlayFab::DataModels::GetFilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.GetObjects
void PlayFab::PlayFabDataAPI::GetObjects(::PlayFab::DataModels::GetObjectsRequest* request, ::System::Action_1<::PlayFab::DataModels::GetObjectsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::GetObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "GetObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.InitiateFileUploads
void PlayFab::PlayFabDataAPI::InitiateFileUploads(::PlayFab::DataModels::InitiateFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::InitiateFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::InitiateFileUploads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "InitiateFileUploads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataAPI.SetObjects
void PlayFab::PlayFabDataAPI::SetObjects(::PlayFab::DataModels::SetObjectsRequest* request, ::System::Action_1<::PlayFab::DataModels::SetObjectsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataAPI::SetObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabDataAPI", "SetObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabDataInstanceAPI
#include "PlayFab/PlayFabDataInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.DataModels.AbortFileUploadsRequest
#include "PlayFab/DataModels/AbortFileUploadsRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.DataModels.AbortFileUploadsResponse
#include "PlayFab/DataModels/AbortFileUploadsResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.DataModels.DeleteFilesRequest
#include "PlayFab/DataModels/DeleteFilesRequest.hpp"
// Including type: PlayFab.DataModels.DeleteFilesResponse
#include "PlayFab/DataModels/DeleteFilesResponse.hpp"
// Including type: PlayFab.DataModels.FinalizeFileUploadsRequest
#include "PlayFab/DataModels/FinalizeFileUploadsRequest.hpp"
// Including type: PlayFab.DataModels.FinalizeFileUploadsResponse
#include "PlayFab/DataModels/FinalizeFileUploadsResponse.hpp"
// Including type: PlayFab.DataModels.GetFilesRequest
#include "PlayFab/DataModels/GetFilesRequest.hpp"
// Including type: PlayFab.DataModels.GetFilesResponse
#include "PlayFab/DataModels/GetFilesResponse.hpp"
// Including type: PlayFab.DataModels.GetObjectsRequest
#include "PlayFab/DataModels/GetObjectsRequest.hpp"
// Including type: PlayFab.DataModels.GetObjectsResponse
#include "PlayFab/DataModels/GetObjectsResponse.hpp"
// Including type: PlayFab.DataModels.InitiateFileUploadsRequest
#include "PlayFab/DataModels/InitiateFileUploadsRequest.hpp"
// Including type: PlayFab.DataModels.InitiateFileUploadsResponse
#include "PlayFab/DataModels/InitiateFileUploadsResponse.hpp"
// Including type: PlayFab.DataModels.SetObjectsRequest
#include "PlayFab/DataModels/SetObjectsRequest.hpp"
// Including type: PlayFab.DataModels.SetObjectsResponse
#include "PlayFab/DataModels/SetObjectsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabDataInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabDataInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabDataInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabDataInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.AbortFileUploads
void PlayFab::PlayFabDataInstanceAPI::AbortFileUploads(::PlayFab::DataModels::AbortFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::AbortFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::AbortFileUploads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbortFileUploads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.DeleteFiles
void PlayFab::PlayFabDataInstanceAPI::DeleteFiles(::PlayFab::DataModels::DeleteFilesRequest* request, ::System::Action_1<::PlayFab::DataModels::DeleteFilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::DeleteFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.FinalizeFileUploads
void PlayFab::PlayFabDataInstanceAPI::FinalizeFileUploads(::PlayFab::DataModels::FinalizeFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::FinalizeFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::FinalizeFileUploads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeFileUploads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.GetFiles
void PlayFab::PlayFabDataInstanceAPI::GetFiles(::PlayFab::DataModels::GetFilesRequest* request, ::System::Action_1<::PlayFab::DataModels::GetFilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.GetObjects
void PlayFab::PlayFabDataInstanceAPI::GetObjects(::PlayFab::DataModels::GetObjectsRequest* request, ::System::Action_1<::PlayFab::DataModels::GetObjectsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::GetObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.InitiateFileUploads
void PlayFab::PlayFabDataInstanceAPI::InitiateFileUploads(::PlayFab::DataModels::InitiateFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::InitiateFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::InitiateFileUploads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateFileUploads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabDataInstanceAPI.SetObjects
void PlayFab::PlayFabDataInstanceAPI::SetObjects(::PlayFab::DataModels::SetObjectsRequest* request, ::System::Action_1<::PlayFab::DataModels::SetObjectsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::SetObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabEventsAPI
#include "PlayFab/PlayFabEventsAPI.hpp"
// Including type: PlayFab.EventsModels.WriteEventsRequest
#include "PlayFab/EventsModels/WriteEventsRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.EventsModels.WriteEventsResponse
#include "PlayFab/EventsModels/WriteEventsResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabEventsAPI..cctor
void PlayFab::PlayFabEventsAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabEventsAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabEventsAPI.IsEntityLoggedIn
bool PlayFab::PlayFabEventsAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabEventsAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabEventsAPI.ForgetAllCredentials
void PlayFab::PlayFabEventsAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabEventsAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabEventsAPI.WriteEvents
void PlayFab::PlayFabEventsAPI::WriteEvents(::PlayFab::EventsModels::WriteEventsRequest* request, ::System::Action_1<::PlayFab::EventsModels::WriteEventsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsAPI::WriteEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabEventsAPI", "WriteEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabEventsAPI.WriteTelemetryEvents
void PlayFab::PlayFabEventsAPI::WriteTelemetryEvents(::PlayFab::EventsModels::WriteEventsRequest* request, ::System::Action_1<::PlayFab::EventsModels::WriteEventsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsAPI::WriteTelemetryEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabEventsAPI", "WriteTelemetryEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabEventsInstanceAPI
#include "PlayFab/PlayFabEventsInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.EventsModels.WriteEventsRequest
#include "PlayFab/EventsModels/WriteEventsRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.EventsModels.WriteEventsResponse
#include "PlayFab/EventsModels/WriteEventsResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabEventsInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabEventsInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabEventsInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabEventsInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabEventsInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabEventsInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabEventsInstanceAPI.WriteEvents
void PlayFab::PlayFabEventsInstanceAPI::WriteEvents(::PlayFab::EventsModels::WriteEventsRequest* request, ::System::Action_1<::PlayFab::EventsModels::WriteEventsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsInstanceAPI::WriteEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabEventsInstanceAPI.WriteTelemetryEvents
void PlayFab::PlayFabEventsInstanceAPI::WriteTelemetryEvents(::PlayFab::EventsModels::WriteEventsRequest* request, ::System::Action_1<::PlayFab::EventsModels::WriteEventsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabEventsInstanceAPI::WriteTelemetryEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTelemetryEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabExperimentationAPI
#include "PlayFab/PlayFabExperimentationAPI.hpp"
// Including type: PlayFab.ExperimentationModels.CreateExperimentRequest
#include "PlayFab/ExperimentationModels/CreateExperimentRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.ExperimentationModels.CreateExperimentResult
#include "PlayFab/ExperimentationModels/CreateExperimentResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ExperimentationModels.DeleteExperimentRequest
#include "PlayFab/ExperimentationModels/DeleteExperimentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.EmptyResponse
#include "PlayFab/ExperimentationModels/EmptyResponse.hpp"
// Including type: PlayFab.ExperimentationModels.GetExperimentsRequest
#include "PlayFab/ExperimentationModels/GetExperimentsRequest.hpp"
// Including type: PlayFab.ExperimentationModels.GetExperimentsResult
#include "PlayFab/ExperimentationModels/GetExperimentsResult.hpp"
// Including type: PlayFab.ExperimentationModels.GetLatestScorecardRequest
#include "PlayFab/ExperimentationModels/GetLatestScorecardRequest.hpp"
// Including type: PlayFab.ExperimentationModels.GetLatestScorecardResult
#include "PlayFab/ExperimentationModels/GetLatestScorecardResult.hpp"
// Including type: PlayFab.ExperimentationModels.GetTreatmentAssignmentRequest
#include "PlayFab/ExperimentationModels/GetTreatmentAssignmentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.GetTreatmentAssignmentResult
#include "PlayFab/ExperimentationModels/GetTreatmentAssignmentResult.hpp"
// Including type: PlayFab.ExperimentationModels.StartExperimentRequest
#include "PlayFab/ExperimentationModels/StartExperimentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.StopExperimentRequest
#include "PlayFab/ExperimentationModels/StopExperimentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.UpdateExperimentRequest
#include "PlayFab/ExperimentationModels/UpdateExperimentRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabExperimentationAPI..cctor
void PlayFab::PlayFabExperimentationAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.IsEntityLoggedIn
bool PlayFab::PlayFabExperimentationAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.ForgetAllCredentials
void PlayFab::PlayFabExperimentationAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.CreateExperiment
void PlayFab::PlayFabExperimentationAPI::CreateExperiment(::PlayFab::ExperimentationModels::CreateExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::CreateExperimentResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::CreateExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "CreateExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.DeleteExperiment
void PlayFab::PlayFabExperimentationAPI::DeleteExperiment(::PlayFab::ExperimentationModels::DeleteExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::DeleteExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "DeleteExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.GetExperiments
void PlayFab::PlayFabExperimentationAPI::GetExperiments(::PlayFab::ExperimentationModels::GetExperimentsRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetExperimentsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::GetExperiments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "GetExperiments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.GetLatestScorecard
void PlayFab::PlayFabExperimentationAPI::GetLatestScorecard(::PlayFab::ExperimentationModels::GetLatestScorecardRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetLatestScorecardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::GetLatestScorecard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "GetLatestScorecard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.GetTreatmentAssignment
void PlayFab::PlayFabExperimentationAPI::GetTreatmentAssignment(::PlayFab::ExperimentationModels::GetTreatmentAssignmentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetTreatmentAssignmentResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::GetTreatmentAssignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "GetTreatmentAssignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.StartExperiment
void PlayFab::PlayFabExperimentationAPI::StartExperiment(::PlayFab::ExperimentationModels::StartExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::StartExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "StartExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.StopExperiment
void PlayFab::PlayFabExperimentationAPI::StopExperiment(::PlayFab::ExperimentationModels::StopExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::StopExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "StopExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationAPI.UpdateExperiment
void PlayFab::PlayFabExperimentationAPI::UpdateExperiment(::PlayFab::ExperimentationModels::UpdateExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationAPI::UpdateExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabExperimentationAPI", "UpdateExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabExperimentationInstanceAPI
#include "PlayFab/PlayFabExperimentationInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.ExperimentationModels.CreateExperimentRequest
#include "PlayFab/ExperimentationModels/CreateExperimentRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.ExperimentationModels.CreateExperimentResult
#include "PlayFab/ExperimentationModels/CreateExperimentResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ExperimentationModels.DeleteExperimentRequest
#include "PlayFab/ExperimentationModels/DeleteExperimentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.EmptyResponse
#include "PlayFab/ExperimentationModels/EmptyResponse.hpp"
// Including type: PlayFab.ExperimentationModels.GetExperimentsRequest
#include "PlayFab/ExperimentationModels/GetExperimentsRequest.hpp"
// Including type: PlayFab.ExperimentationModels.GetExperimentsResult
#include "PlayFab/ExperimentationModels/GetExperimentsResult.hpp"
// Including type: PlayFab.ExperimentationModels.GetLatestScorecardRequest
#include "PlayFab/ExperimentationModels/GetLatestScorecardRequest.hpp"
// Including type: PlayFab.ExperimentationModels.GetLatestScorecardResult
#include "PlayFab/ExperimentationModels/GetLatestScorecardResult.hpp"
// Including type: PlayFab.ExperimentationModels.GetTreatmentAssignmentRequest
#include "PlayFab/ExperimentationModels/GetTreatmentAssignmentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.GetTreatmentAssignmentResult
#include "PlayFab/ExperimentationModels/GetTreatmentAssignmentResult.hpp"
// Including type: PlayFab.ExperimentationModels.StartExperimentRequest
#include "PlayFab/ExperimentationModels/StartExperimentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.StopExperimentRequest
#include "PlayFab/ExperimentationModels/StopExperimentRequest.hpp"
// Including type: PlayFab.ExperimentationModels.UpdateExperimentRequest
#include "PlayFab/ExperimentationModels/UpdateExperimentRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabExperimentationInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabExperimentationInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabExperimentationInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabExperimentationInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.CreateExperiment
void PlayFab::PlayFabExperimentationInstanceAPI::CreateExperiment(::PlayFab::ExperimentationModels::CreateExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::CreateExperimentResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::CreateExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.DeleteExperiment
void PlayFab::PlayFabExperimentationInstanceAPI::DeleteExperiment(::PlayFab::ExperimentationModels::DeleteExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::DeleteExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.GetExperiments
void PlayFab::PlayFabExperimentationInstanceAPI::GetExperiments(::PlayFab::ExperimentationModels::GetExperimentsRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetExperimentsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::GetExperiments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExperiments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.GetLatestScorecard
void PlayFab::PlayFabExperimentationInstanceAPI::GetLatestScorecard(::PlayFab::ExperimentationModels::GetLatestScorecardRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetLatestScorecardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::GetLatestScorecard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLatestScorecard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.GetTreatmentAssignment
void PlayFab::PlayFabExperimentationInstanceAPI::GetTreatmentAssignment(::PlayFab::ExperimentationModels::GetTreatmentAssignmentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetTreatmentAssignmentResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::GetTreatmentAssignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTreatmentAssignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.StartExperiment
void PlayFab::PlayFabExperimentationInstanceAPI::StartExperiment(::PlayFab::ExperimentationModels::StartExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::StartExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.StopExperiment
void PlayFab::PlayFabExperimentationInstanceAPI::StopExperiment(::PlayFab::ExperimentationModels::StopExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::StopExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabExperimentationInstanceAPI.UpdateExperiment
void PlayFab::PlayFabExperimentationInstanceAPI::UpdateExperiment(::PlayFab::ExperimentationModels::UpdateExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExperimentationInstanceAPI::UpdateExperiment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateExperiment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabGroupsAPI
#include "PlayFab/PlayFabGroupsAPI.hpp"
// Including type: PlayFab.GroupsModels.AcceptGroupApplicationRequest
#include "PlayFab/GroupsModels/AcceptGroupApplicationRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.GroupsModels.EmptyResponse
#include "PlayFab/GroupsModels/EmptyResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.GroupsModels.AcceptGroupInvitationRequest
#include "PlayFab/GroupsModels/AcceptGroupInvitationRequest.hpp"
// Including type: PlayFab.GroupsModels.AddMembersRequest
#include "PlayFab/GroupsModels/AddMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.ApplyToGroupRequest
#include "PlayFab/GroupsModels/ApplyToGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.ApplyToGroupResponse
#include "PlayFab/GroupsModels/ApplyToGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.BlockEntityRequest
#include "PlayFab/GroupsModels/BlockEntityRequest.hpp"
// Including type: PlayFab.GroupsModels.ChangeMemberRoleRequest
#include "PlayFab/GroupsModels/ChangeMemberRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupRequest
#include "PlayFab/GroupsModels/CreateGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupResponse
#include "PlayFab/GroupsModels/CreateGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupRoleRequest
#include "PlayFab/GroupsModels/CreateGroupRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupRoleResponse
#include "PlayFab/GroupsModels/CreateGroupRoleResponse.hpp"
// Including type: PlayFab.GroupsModels.DeleteGroupRequest
#include "PlayFab/GroupsModels/DeleteGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.DeleteRoleRequest
#include "PlayFab/GroupsModels/DeleteRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.GetGroupRequest
#include "PlayFab/GroupsModels/GetGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.GetGroupResponse
#include "PlayFab/GroupsModels/GetGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.InviteToGroupRequest
#include "PlayFab/GroupsModels/InviteToGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.InviteToGroupResponse
#include "PlayFab/GroupsModels/InviteToGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.IsMemberRequest
#include "PlayFab/GroupsModels/IsMemberRequest.hpp"
// Including type: PlayFab.GroupsModels.IsMemberResponse
#include "PlayFab/GroupsModels/IsMemberResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupApplicationsRequest
#include "PlayFab/GroupsModels/ListGroupApplicationsRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupApplicationsResponse
#include "PlayFab/GroupsModels/ListGroupApplicationsResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupBlocksRequest
#include "PlayFab/GroupsModels/ListGroupBlocksRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupBlocksResponse
#include "PlayFab/GroupsModels/ListGroupBlocksResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupInvitationsRequest
#include "PlayFab/GroupsModels/ListGroupInvitationsRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupInvitationsResponse
#include "PlayFab/GroupsModels/ListGroupInvitationsResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupMembersRequest
#include "PlayFab/GroupsModels/ListGroupMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupMembersResponse
#include "PlayFab/GroupsModels/ListGroupMembersResponse.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipRequest
#include "PlayFab/GroupsModels/ListMembershipRequest.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipResponse
#include "PlayFab/GroupsModels/ListMembershipResponse.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipOpportunitiesRequest
#include "PlayFab/GroupsModels/ListMembershipOpportunitiesRequest.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipOpportunitiesResponse
#include "PlayFab/GroupsModels/ListMembershipOpportunitiesResponse.hpp"
// Including type: PlayFab.GroupsModels.RemoveGroupApplicationRequest
#include "PlayFab/GroupsModels/RemoveGroupApplicationRequest.hpp"
// Including type: PlayFab.GroupsModels.RemoveGroupInvitationRequest
#include "PlayFab/GroupsModels/RemoveGroupInvitationRequest.hpp"
// Including type: PlayFab.GroupsModels.RemoveMembersRequest
#include "PlayFab/GroupsModels/RemoveMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.UnblockEntityRequest
#include "PlayFab/GroupsModels/UnblockEntityRequest.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupRequest
#include "PlayFab/GroupsModels/UpdateGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupResponse
#include "PlayFab/GroupsModels/UpdateGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupRoleRequest
#include "PlayFab/GroupsModels/UpdateGroupRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupRoleResponse
#include "PlayFab/GroupsModels/UpdateGroupRoleResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabGroupsAPI..cctor
void PlayFab::PlayFabGroupsAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.IsEntityLoggedIn
bool PlayFab::PlayFabGroupsAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ForgetAllCredentials
void PlayFab::PlayFabGroupsAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.AcceptGroupApplication
void PlayFab::PlayFabGroupsAPI::AcceptGroupApplication(::PlayFab::GroupsModels::AcceptGroupApplicationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::AcceptGroupApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "AcceptGroupApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.AcceptGroupInvitation
void PlayFab::PlayFabGroupsAPI::AcceptGroupInvitation(::PlayFab::GroupsModels::AcceptGroupInvitationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::AcceptGroupInvitation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "AcceptGroupInvitation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.AddMembers
void PlayFab::PlayFabGroupsAPI::AddMembers(::PlayFab::GroupsModels::AddMembersRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::AddMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "AddMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ApplyToGroup
void PlayFab::PlayFabGroupsAPI::ApplyToGroup(::PlayFab::GroupsModels::ApplyToGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ApplyToGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ApplyToGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ApplyToGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.BlockEntity
void PlayFab::PlayFabGroupsAPI::BlockEntity(::PlayFab::GroupsModels::BlockEntityRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::BlockEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "BlockEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ChangeMemberRole
void PlayFab::PlayFabGroupsAPI::ChangeMemberRole(::PlayFab::GroupsModels::ChangeMemberRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ChangeMemberRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ChangeMemberRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.CreateGroup
void PlayFab::PlayFabGroupsAPI::CreateGroup(::PlayFab::GroupsModels::CreateGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::CreateGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::CreateGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "CreateGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.CreateRole
void PlayFab::PlayFabGroupsAPI::CreateRole(::PlayFab::GroupsModels::CreateGroupRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::CreateGroupRoleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::CreateRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "CreateRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.DeleteGroup
void PlayFab::PlayFabGroupsAPI::DeleteGroup(::PlayFab::GroupsModels::DeleteGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::DeleteGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "DeleteGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.DeleteRole
void PlayFab::PlayFabGroupsAPI::DeleteRole(::PlayFab::GroupsModels::DeleteRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::DeleteRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "DeleteRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.GetGroup
void PlayFab::PlayFabGroupsAPI::GetGroup(::PlayFab::GroupsModels::GetGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::GetGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.InviteToGroup
void PlayFab::PlayFabGroupsAPI::InviteToGroup(::PlayFab::GroupsModels::InviteToGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::InviteToGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::InviteToGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "InviteToGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.IsMember
void PlayFab::PlayFabGroupsAPI::IsMember(::PlayFab::GroupsModels::IsMemberRequest* request, ::System::Action_1<::PlayFab::GroupsModels::IsMemberResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::IsMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "IsMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ListGroupApplications
void PlayFab::PlayFabGroupsAPI::ListGroupApplications(::PlayFab::GroupsModels::ListGroupApplicationsRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupApplicationsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ListGroupApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ListGroupApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ListGroupBlocks
void PlayFab::PlayFabGroupsAPI::ListGroupBlocks(::PlayFab::GroupsModels::ListGroupBlocksRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupBlocksResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ListGroupBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ListGroupBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ListGroupInvitations
void PlayFab::PlayFabGroupsAPI::ListGroupInvitations(::PlayFab::GroupsModels::ListGroupInvitationsRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupInvitationsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ListGroupInvitations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ListGroupInvitations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ListGroupMembers
void PlayFab::PlayFabGroupsAPI::ListGroupMembers(::PlayFab::GroupsModels::ListGroupMembersRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupMembersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ListGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ListGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ListMembership
void PlayFab::PlayFabGroupsAPI::ListMembership(::PlayFab::GroupsModels::ListMembershipRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListMembershipResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ListMembership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ListMembership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.ListMembershipOpportunities
void PlayFab::PlayFabGroupsAPI::ListMembershipOpportunities(::PlayFab::GroupsModels::ListMembershipOpportunitiesRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListMembershipOpportunitiesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::ListMembershipOpportunities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "ListMembershipOpportunities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.RemoveGroupApplication
void PlayFab::PlayFabGroupsAPI::RemoveGroupApplication(::PlayFab::GroupsModels::RemoveGroupApplicationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::RemoveGroupApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "RemoveGroupApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.RemoveGroupInvitation
void PlayFab::PlayFabGroupsAPI::RemoveGroupInvitation(::PlayFab::GroupsModels::RemoveGroupInvitationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::RemoveGroupInvitation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "RemoveGroupInvitation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.RemoveMembers
void PlayFab::PlayFabGroupsAPI::RemoveMembers(::PlayFab::GroupsModels::RemoveMembersRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::RemoveMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "RemoveMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.UnblockEntity
void PlayFab::PlayFabGroupsAPI::UnblockEntity(::PlayFab::GroupsModels::UnblockEntityRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::UnblockEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "UnblockEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.UpdateGroup
void PlayFab::PlayFabGroupsAPI::UpdateGroup(::PlayFab::GroupsModels::UpdateGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::UpdateGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::UpdateGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "UpdateGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsAPI.UpdateRole
void PlayFab::PlayFabGroupsAPI::UpdateRole(::PlayFab::GroupsModels::UpdateGroupRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::UpdateGroupRoleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsAPI::UpdateRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabGroupsAPI", "UpdateRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabGroupsInstanceAPI
#include "PlayFab/PlayFabGroupsInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.GroupsModels.AcceptGroupApplicationRequest
#include "PlayFab/GroupsModels/AcceptGroupApplicationRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.GroupsModels.EmptyResponse
#include "PlayFab/GroupsModels/EmptyResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.GroupsModels.AcceptGroupInvitationRequest
#include "PlayFab/GroupsModels/AcceptGroupInvitationRequest.hpp"
// Including type: PlayFab.GroupsModels.AddMembersRequest
#include "PlayFab/GroupsModels/AddMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.ApplyToGroupRequest
#include "PlayFab/GroupsModels/ApplyToGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.ApplyToGroupResponse
#include "PlayFab/GroupsModels/ApplyToGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.BlockEntityRequest
#include "PlayFab/GroupsModels/BlockEntityRequest.hpp"
// Including type: PlayFab.GroupsModels.ChangeMemberRoleRequest
#include "PlayFab/GroupsModels/ChangeMemberRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupRequest
#include "PlayFab/GroupsModels/CreateGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupResponse
#include "PlayFab/GroupsModels/CreateGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupRoleRequest
#include "PlayFab/GroupsModels/CreateGroupRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.CreateGroupRoleResponse
#include "PlayFab/GroupsModels/CreateGroupRoleResponse.hpp"
// Including type: PlayFab.GroupsModels.DeleteGroupRequest
#include "PlayFab/GroupsModels/DeleteGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.DeleteRoleRequest
#include "PlayFab/GroupsModels/DeleteRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.GetGroupRequest
#include "PlayFab/GroupsModels/GetGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.GetGroupResponse
#include "PlayFab/GroupsModels/GetGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.InviteToGroupRequest
#include "PlayFab/GroupsModels/InviteToGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.InviteToGroupResponse
#include "PlayFab/GroupsModels/InviteToGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.IsMemberRequest
#include "PlayFab/GroupsModels/IsMemberRequest.hpp"
// Including type: PlayFab.GroupsModels.IsMemberResponse
#include "PlayFab/GroupsModels/IsMemberResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupApplicationsRequest
#include "PlayFab/GroupsModels/ListGroupApplicationsRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupApplicationsResponse
#include "PlayFab/GroupsModels/ListGroupApplicationsResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupBlocksRequest
#include "PlayFab/GroupsModels/ListGroupBlocksRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupBlocksResponse
#include "PlayFab/GroupsModels/ListGroupBlocksResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupInvitationsRequest
#include "PlayFab/GroupsModels/ListGroupInvitationsRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupInvitationsResponse
#include "PlayFab/GroupsModels/ListGroupInvitationsResponse.hpp"
// Including type: PlayFab.GroupsModels.ListGroupMembersRequest
#include "PlayFab/GroupsModels/ListGroupMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.ListGroupMembersResponse
#include "PlayFab/GroupsModels/ListGroupMembersResponse.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipRequest
#include "PlayFab/GroupsModels/ListMembershipRequest.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipResponse
#include "PlayFab/GroupsModels/ListMembershipResponse.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipOpportunitiesRequest
#include "PlayFab/GroupsModels/ListMembershipOpportunitiesRequest.hpp"
// Including type: PlayFab.GroupsModels.ListMembershipOpportunitiesResponse
#include "PlayFab/GroupsModels/ListMembershipOpportunitiesResponse.hpp"
// Including type: PlayFab.GroupsModels.RemoveGroupApplicationRequest
#include "PlayFab/GroupsModels/RemoveGroupApplicationRequest.hpp"
// Including type: PlayFab.GroupsModels.RemoveGroupInvitationRequest
#include "PlayFab/GroupsModels/RemoveGroupInvitationRequest.hpp"
// Including type: PlayFab.GroupsModels.RemoveMembersRequest
#include "PlayFab/GroupsModels/RemoveMembersRequest.hpp"
// Including type: PlayFab.GroupsModels.UnblockEntityRequest
#include "PlayFab/GroupsModels/UnblockEntityRequest.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupRequest
#include "PlayFab/GroupsModels/UpdateGroupRequest.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupResponse
#include "PlayFab/GroupsModels/UpdateGroupResponse.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupRoleRequest
#include "PlayFab/GroupsModels/UpdateGroupRoleRequest.hpp"
// Including type: PlayFab.GroupsModels.UpdateGroupRoleResponse
#include "PlayFab/GroupsModels/UpdateGroupRoleResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabGroupsInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabGroupsInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabGroupsInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabGroupsInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.AcceptGroupApplication
void PlayFab::PlayFabGroupsInstanceAPI::AcceptGroupApplication(::PlayFab::GroupsModels::AcceptGroupApplicationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::AcceptGroupApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptGroupApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.AcceptGroupInvitation
void PlayFab::PlayFabGroupsInstanceAPI::AcceptGroupInvitation(::PlayFab::GroupsModels::AcceptGroupInvitationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::AcceptGroupInvitation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptGroupInvitation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.AddMembers
void PlayFab::PlayFabGroupsInstanceAPI::AddMembers(::PlayFab::GroupsModels::AddMembersRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::AddMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ApplyToGroup
void PlayFab::PlayFabGroupsInstanceAPI::ApplyToGroup(::PlayFab::GroupsModels::ApplyToGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ApplyToGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ApplyToGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyToGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.BlockEntity
void PlayFab::PlayFabGroupsInstanceAPI::BlockEntity(::PlayFab::GroupsModels::BlockEntityRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::BlockEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ChangeMemberRole
void PlayFab::PlayFabGroupsInstanceAPI::ChangeMemberRole(::PlayFab::GroupsModels::ChangeMemberRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ChangeMemberRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeMemberRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.CreateGroup
void PlayFab::PlayFabGroupsInstanceAPI::CreateGroup(::PlayFab::GroupsModels::CreateGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::CreateGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::CreateGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.CreateRole
void PlayFab::PlayFabGroupsInstanceAPI::CreateRole(::PlayFab::GroupsModels::CreateGroupRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::CreateGroupRoleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::CreateRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.DeleteGroup
void PlayFab::PlayFabGroupsInstanceAPI::DeleteGroup(::PlayFab::GroupsModels::DeleteGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::DeleteGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.DeleteRole
void PlayFab::PlayFabGroupsInstanceAPI::DeleteRole(::PlayFab::GroupsModels::DeleteRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::DeleteRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.GetGroup
void PlayFab::PlayFabGroupsInstanceAPI::GetGroup(::PlayFab::GroupsModels::GetGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::GetGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.InviteToGroup
void PlayFab::PlayFabGroupsInstanceAPI::InviteToGroup(::PlayFab::GroupsModels::InviteToGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::InviteToGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::InviteToGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InviteToGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.IsMember
void PlayFab::PlayFabGroupsInstanceAPI::IsMember(::PlayFab::GroupsModels::IsMemberRequest* request, ::System::Action_1<::PlayFab::GroupsModels::IsMemberResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::IsMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ListGroupApplications
void PlayFab::PlayFabGroupsInstanceAPI::ListGroupApplications(::PlayFab::GroupsModels::ListGroupApplicationsRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupApplicationsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ListGroupApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListGroupApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ListGroupBlocks
void PlayFab::PlayFabGroupsInstanceAPI::ListGroupBlocks(::PlayFab::GroupsModels::ListGroupBlocksRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupBlocksResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ListGroupBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListGroupBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ListGroupInvitations
void PlayFab::PlayFabGroupsInstanceAPI::ListGroupInvitations(::PlayFab::GroupsModels::ListGroupInvitationsRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupInvitationsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ListGroupInvitations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListGroupInvitations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ListGroupMembers
void PlayFab::PlayFabGroupsInstanceAPI::ListGroupMembers(::PlayFab::GroupsModels::ListGroupMembersRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListGroupMembersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ListGroupMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListGroupMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ListMembership
void PlayFab::PlayFabGroupsInstanceAPI::ListMembership(::PlayFab::GroupsModels::ListMembershipRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListMembershipResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ListMembership");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListMembership", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.ListMembershipOpportunities
void PlayFab::PlayFabGroupsInstanceAPI::ListMembershipOpportunities(::PlayFab::GroupsModels::ListMembershipOpportunitiesRequest* request, ::System::Action_1<::PlayFab::GroupsModels::ListMembershipOpportunitiesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::ListMembershipOpportunities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListMembershipOpportunities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.RemoveGroupApplication
void PlayFab::PlayFabGroupsInstanceAPI::RemoveGroupApplication(::PlayFab::GroupsModels::RemoveGroupApplicationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::RemoveGroupApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGroupApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.RemoveGroupInvitation
void PlayFab::PlayFabGroupsInstanceAPI::RemoveGroupInvitation(::PlayFab::GroupsModels::RemoveGroupInvitationRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::RemoveGroupInvitation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGroupInvitation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.RemoveMembers
void PlayFab::PlayFabGroupsInstanceAPI::RemoveMembers(::PlayFab::GroupsModels::RemoveMembersRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::RemoveMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.UnblockEntity
void PlayFab::PlayFabGroupsInstanceAPI::UnblockEntity(::PlayFab::GroupsModels::UnblockEntityRequest* request, ::System::Action_1<::PlayFab::GroupsModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::UnblockEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnblockEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.UpdateGroup
void PlayFab::PlayFabGroupsInstanceAPI::UpdateGroup(::PlayFab::GroupsModels::UpdateGroupRequest* request, ::System::Action_1<::PlayFab::GroupsModels::UpdateGroupResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::UpdateGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabGroupsInstanceAPI.UpdateRole
void PlayFab::PlayFabGroupsInstanceAPI::UpdateRole(::PlayFab::GroupsModels::UpdateGroupRoleRequest* request, ::System::Action_1<::PlayFab::GroupsModels::UpdateGroupRoleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabGroupsInstanceAPI::UpdateRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabInsightsAPI
#include "PlayFab/PlayFabInsightsAPI.hpp"
// Including type: PlayFab.InsightsModels.InsightsEmptyRequest
#include "PlayFab/InsightsModels/InsightsEmptyRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetDetailsResponse
#include "PlayFab/InsightsModels/InsightsGetDetailsResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetLimitsResponse
#include "PlayFab/InsightsModels/InsightsGetLimitsResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusRequest
#include "PlayFab/InsightsModels/InsightsGetOperationStatusRequest.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusResponse
#include "PlayFab/InsightsModels/InsightsGetOperationStatusResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetPendingOperationsRequest
#include "PlayFab/InsightsModels/InsightsGetPendingOperationsRequest.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetPendingOperationsResponse
#include "PlayFab/InsightsModels/InsightsGetPendingOperationsResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsSetPerformanceRequest
#include "PlayFab/InsightsModels/InsightsSetPerformanceRequest.hpp"
// Including type: PlayFab.InsightsModels.InsightsOperationResponse
#include "PlayFab/InsightsModels/InsightsOperationResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsSetStorageRetentionRequest
#include "PlayFab/InsightsModels/InsightsSetStorageRetentionRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabInsightsAPI..cctor
void PlayFab::PlayFabInsightsAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.IsEntityLoggedIn
bool PlayFab::PlayFabInsightsAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.ForgetAllCredentials
void PlayFab::PlayFabInsightsAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.GetDetails
void PlayFab::PlayFabInsightsAPI::GetDetails(::PlayFab::InsightsModels::InsightsEmptyRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::GetDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "GetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.GetLimits
void PlayFab::PlayFabInsightsAPI::GetLimits(::PlayFab::InsightsModels::InsightsEmptyRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetLimitsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::GetLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "GetLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.GetOperationStatus
void PlayFab::PlayFabInsightsAPI::GetOperationStatus(::PlayFab::InsightsModels::InsightsGetOperationStatusRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetOperationStatusResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::GetOperationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "GetOperationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.GetPendingOperations
void PlayFab::PlayFabInsightsAPI::GetPendingOperations(::PlayFab::InsightsModels::InsightsGetPendingOperationsRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetPendingOperationsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::GetPendingOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "GetPendingOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.SetPerformance
void PlayFab::PlayFabInsightsAPI::SetPerformance(::PlayFab::InsightsModels::InsightsSetPerformanceRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsOperationResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::SetPerformance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "SetPerformance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsAPI.SetStorageRetention
void PlayFab::PlayFabInsightsAPI::SetStorageRetention(::PlayFab::InsightsModels::InsightsSetStorageRetentionRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsOperationResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsAPI::SetStorageRetention");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabInsightsAPI", "SetStorageRetention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabInsightsInstanceAPI
#include "PlayFab/PlayFabInsightsInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.InsightsModels.InsightsEmptyRequest
#include "PlayFab/InsightsModels/InsightsEmptyRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetDetailsResponse
#include "PlayFab/InsightsModels/InsightsGetDetailsResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetLimitsResponse
#include "PlayFab/InsightsModels/InsightsGetLimitsResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusRequest
#include "PlayFab/InsightsModels/InsightsGetOperationStatusRequest.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetOperationStatusResponse
#include "PlayFab/InsightsModels/InsightsGetOperationStatusResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetPendingOperationsRequest
#include "PlayFab/InsightsModels/InsightsGetPendingOperationsRequest.hpp"
// Including type: PlayFab.InsightsModels.InsightsGetPendingOperationsResponse
#include "PlayFab/InsightsModels/InsightsGetPendingOperationsResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsSetPerformanceRequest
#include "PlayFab/InsightsModels/InsightsSetPerformanceRequest.hpp"
// Including type: PlayFab.InsightsModels.InsightsOperationResponse
#include "PlayFab/InsightsModels/InsightsOperationResponse.hpp"
// Including type: PlayFab.InsightsModels.InsightsSetStorageRetentionRequest
#include "PlayFab/InsightsModels/InsightsSetStorageRetentionRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabInsightsInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabInsightsInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabInsightsInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabInsightsInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.GetDetails
void PlayFab::PlayFabInsightsInstanceAPI::GetDetails(::PlayFab::InsightsModels::InsightsEmptyRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::GetDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.GetLimits
void PlayFab::PlayFabInsightsInstanceAPI::GetLimits(::PlayFab::InsightsModels::InsightsEmptyRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetLimitsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::GetLimits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLimits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.GetOperationStatus
void PlayFab::PlayFabInsightsInstanceAPI::GetOperationStatus(::PlayFab::InsightsModels::InsightsGetOperationStatusRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetOperationStatusResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::GetOperationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOperationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.GetPendingOperations
void PlayFab::PlayFabInsightsInstanceAPI::GetPendingOperations(::PlayFab::InsightsModels::InsightsGetPendingOperationsRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsGetPendingOperationsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::GetPendingOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPendingOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.SetPerformance
void PlayFab::PlayFabInsightsInstanceAPI::SetPerformance(::PlayFab::InsightsModels::InsightsSetPerformanceRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsOperationResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::SetPerformance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerformance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabInsightsInstanceAPI.SetStorageRetention
void PlayFab::PlayFabInsightsInstanceAPI::SetStorageRetention(::PlayFab::InsightsModels::InsightsSetStorageRetentionRequest* request, ::System::Action_1<::PlayFab::InsightsModels::InsightsOperationResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabInsightsInstanceAPI::SetStorageRetention");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStorageRetention", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabLocalizationAPI
#include "PlayFab/PlayFabLocalizationAPI.hpp"
// Including type: PlayFab.LocalizationModels.GetLanguageListRequest
#include "PlayFab/LocalizationModels/GetLanguageListRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.LocalizationModels.GetLanguageListResponse
#include "PlayFab/LocalizationModels/GetLanguageListResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabLocalizationAPI..cctor
void PlayFab::PlayFabLocalizationAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabLocalizationAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabLocalizationAPI.IsEntityLoggedIn
bool PlayFab::PlayFabLocalizationAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabLocalizationAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabLocalizationAPI.ForgetAllCredentials
void PlayFab::PlayFabLocalizationAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabLocalizationAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabLocalizationAPI.GetLanguageList
void PlayFab::PlayFabLocalizationAPI::GetLanguageList(::PlayFab::LocalizationModels::GetLanguageListRequest* request, ::System::Action_1<::PlayFab::LocalizationModels::GetLanguageListResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationAPI::GetLanguageList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabLocalizationAPI", "GetLanguageList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabLocalizationInstanceAPI
#include "PlayFab/PlayFabLocalizationInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.LocalizationModels.GetLanguageListRequest
#include "PlayFab/LocalizationModels/GetLanguageListRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.LocalizationModels.GetLanguageListResponse
#include "PlayFab/LocalizationModels/GetLanguageListResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabLocalizationInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabLocalizationInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabLocalizationInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabLocalizationInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabLocalizationInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabLocalizationInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabLocalizationInstanceAPI.GetLanguageList
void PlayFab::PlayFabLocalizationInstanceAPI::GetLanguageList(::PlayFab::LocalizationModels::GetLanguageListRequest* request, ::System::Action_1<::PlayFab::LocalizationModels::GetLanguageListResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLocalizationInstanceAPI::GetLanguageList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLanguageList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabMultiplayerAPI
#include "PlayFab/PlayFabMultiplayerAPI.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllMatchmakingTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/CancelAllMatchmakingTicketsForPlayerRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllMatchmakingTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/CancelAllMatchmakingTicketsForPlayerResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllServerBackfillTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/CancelAllServerBackfillTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllServerBackfillTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/CancelAllServerBackfillTicketsForPlayerResult.hpp"
// Including type: PlayFab.MultiplayerModels.CancelMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CancelMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CancelMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/CancelMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CancelServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/CancelServerBackfillTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CancelServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/CancelServerBackfillTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildAliasRequest
#include "PlayFab/MultiplayerModels/CreateBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.BuildAliasDetailsResponse
#include "PlayFab/MultiplayerModels/BuildAliasDetailsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithCustomContainerRequest
#include "PlayFab/MultiplayerModels/CreateBuildWithCustomContainerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithCustomContainerResponse
#include "PlayFab/MultiplayerModels/CreateBuildWithCustomContainerResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithManagedContainerRequest
#include "PlayFab/MultiplayerModels/CreateBuildWithManagedContainerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithManagedContainerResponse
#include "PlayFab/MultiplayerModels/CreateBuildWithManagedContainerResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CreateMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/CreateMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CreateRemoteUserRequest
#include "PlayFab/MultiplayerModels/CreateRemoteUserRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateRemoteUserResponse
#include "PlayFab/MultiplayerModels/CreateRemoteUserResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/CreateServerBackfillTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/CreateServerBackfillTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CreateServerMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CreateServerMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteAssetRequest
#include "PlayFab/MultiplayerModels/DeleteAssetRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EmptyResponse
#include "PlayFab/MultiplayerModels/EmptyResponse.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteBuildRequest
#include "PlayFab/MultiplayerModels/DeleteBuildRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteBuildAliasRequest
#include "PlayFab/MultiplayerModels/DeleteBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteBuildRegionRequest
#include "PlayFab/MultiplayerModels/DeleteBuildRegionRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteCertificateRequest
#include "PlayFab/MultiplayerModels/DeleteCertificateRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteContainerImageRequest
#include "PlayFab/MultiplayerModels/DeleteContainerImageRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteRemoteUserRequest
#include "PlayFab/MultiplayerModels/DeleteRemoteUserRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EnableMultiplayerServersForTitleRequest
#include "PlayFab/MultiplayerModels/EnableMultiplayerServersForTitleRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EnableMultiplayerServersForTitleResponse
#include "PlayFab/MultiplayerModels/EnableMultiplayerServersForTitleResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetAssetUploadUrlRequest
#include "PlayFab/MultiplayerModels/GetAssetUploadUrlRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetAssetUploadUrlResponse
#include "PlayFab/MultiplayerModels/GetAssetUploadUrlResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetBuildRequest
#include "PlayFab/MultiplayerModels/GetBuildRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetBuildResponse
#include "PlayFab/MultiplayerModels/GetBuildResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetBuildAliasRequest
#include "PlayFab/MultiplayerModels/GetBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetContainerRegistryCredentialsRequest
#include "PlayFab/MultiplayerModels/GetContainerRegistryCredentialsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetContainerRegistryCredentialsResponse
#include "PlayFab/MultiplayerModels/GetContainerRegistryCredentialsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchRequest
#include "PlayFab/MultiplayerModels/GetMatchRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchResult
#include "PlayFab/MultiplayerModels/GetMatchResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/GetMatchmakingQueueRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/GetMatchmakingQueueResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/GetMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/GetMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerDetailsRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerServerDetailsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerDetailsResponse
#include "PlayFab/MultiplayerModels/GetMultiplayerServerDetailsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerLogsRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerServerLogsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerLogsResponse
#include "PlayFab/MultiplayerModels/GetMultiplayerServerLogsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerSessionLogsBySessionIdRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerSessionLogsBySessionIdRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetQueueStatisticsRequest
#include "PlayFab/MultiplayerModels/GetQueueStatisticsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetQueueStatisticsResult
#include "PlayFab/MultiplayerModels/GetQueueStatisticsResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetRemoteLoginEndpointRequest
#include "PlayFab/MultiplayerModels/GetRemoteLoginEndpointRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetRemoteLoginEndpointResponse
#include "PlayFab/MultiplayerModels/GetRemoteLoginEndpointResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/GetServerBackfillTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/GetServerBackfillTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleEnabledForMultiplayerServersStatusRequest
#include "PlayFab/MultiplayerModels/GetTitleEnabledForMultiplayerServersStatusRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleEnabledForMultiplayerServersStatusResponse
#include "PlayFab/MultiplayerModels/GetTitleEnabledForMultiplayerServersStatusResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleMultiplayerServersQuotasRequest
#include "PlayFab/MultiplayerModels/GetTitleMultiplayerServersQuotasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleMultiplayerServersQuotasResponse
#include "PlayFab/MultiplayerModels/GetTitleMultiplayerServersQuotasResponse.hpp"
// Including type: PlayFab.MultiplayerModels.JoinMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/JoinMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.JoinMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/JoinMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListMultiplayerServersRequest
#include "PlayFab/MultiplayerModels/ListMultiplayerServersRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListMultiplayerServersResponse
#include "PlayFab/MultiplayerModels/ListMultiplayerServersResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListAssetSummariesRequest
#include "PlayFab/MultiplayerModels/ListAssetSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListAssetSummariesResponse
#include "PlayFab/MultiplayerModels/ListAssetSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.MultiplayerEmptyRequest
#include "PlayFab/MultiplayerModels/MultiplayerEmptyRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListBuildAliasesForTitleResponse
#include "PlayFab/MultiplayerModels/ListBuildAliasesForTitleResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListBuildSummariesRequest
#include "PlayFab/MultiplayerModels/ListBuildSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListBuildSummariesResponse
#include "PlayFab/MultiplayerModels/ListBuildSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListCertificateSummariesRequest
#include "PlayFab/MultiplayerModels/ListCertificateSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListCertificateSummariesResponse
#include "PlayFab/MultiplayerModels/ListCertificateSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImagesRequest
#include "PlayFab/MultiplayerModels/ListContainerImagesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImagesResponse
#include "PlayFab/MultiplayerModels/ListContainerImagesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImageTagsRequest
#include "PlayFab/MultiplayerModels/ListContainerImageTagsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImageTagsResponse
#include "PlayFab/MultiplayerModels/ListContainerImageTagsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingQueuesRequest
#include "PlayFab/MultiplayerModels/ListMatchmakingQueuesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingQueuesResult
#include "PlayFab/MultiplayerModels/ListMatchmakingQueuesResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/ListMatchmakingTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/ListMatchmakingTicketsForPlayerResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListPartyQosServersRequest
#include "PlayFab/MultiplayerModels/ListPartyQosServersRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListPartyQosServersResponse
#include "PlayFab/MultiplayerModels/ListPartyQosServersResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersRequest
#include "PlayFab/MultiplayerModels/ListQosServersRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersResponse
#include "PlayFab/MultiplayerModels/ListQosServersResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersForTitleRequest
#include "PlayFab/MultiplayerModels/ListQosServersForTitleRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersForTitleResponse
#include "PlayFab/MultiplayerModels/ListQosServersForTitleResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListServerBackfillTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/ListServerBackfillTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListServerBackfillTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/ListServerBackfillTicketsForPlayerResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListVirtualMachineSummariesRequest
#include "PlayFab/MultiplayerModels/ListVirtualMachineSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListVirtualMachineSummariesResponse
#include "PlayFab/MultiplayerModels/ListVirtualMachineSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.RemoveMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/RemoveMatchmakingQueueRequest.hpp"
// Including type: PlayFab.MultiplayerModels.RemoveMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/RemoveMatchmakingQueueResult.hpp"
// Including type: PlayFab.MultiplayerModels.RequestMultiplayerServerRequest
#include "PlayFab/MultiplayerModels/RequestMultiplayerServerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.RequestMultiplayerServerResponse
#include "PlayFab/MultiplayerModels/RequestMultiplayerServerResponse.hpp"
// Including type: PlayFab.MultiplayerModels.RolloverContainerRegistryCredentialsRequest
#include "PlayFab/MultiplayerModels/RolloverContainerRegistryCredentialsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.RolloverContainerRegistryCredentialsResponse
#include "PlayFab/MultiplayerModels/RolloverContainerRegistryCredentialsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.SetMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/SetMatchmakingQueueRequest.hpp"
// Including type: PlayFab.MultiplayerModels.SetMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/SetMatchmakingQueueResult.hpp"
// Including type: PlayFab.MultiplayerModels.ShutdownMultiplayerServerRequest
#include "PlayFab/MultiplayerModels/ShutdownMultiplayerServerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UntagContainerImageRequest
#include "PlayFab/MultiplayerModels/UntagContainerImageRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UpdateBuildAliasRequest
#include "PlayFab/MultiplayerModels/UpdateBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UpdateBuildRegionRequest
#include "PlayFab/MultiplayerModels/UpdateBuildRegionRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UpdateBuildRegionsRequest
#include "PlayFab/MultiplayerModels/UpdateBuildRegionsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UploadCertificateRequest
#include "PlayFab/MultiplayerModels/UploadCertificateRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI..cctor
void PlayFab::PlayFabMultiplayerAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.IsEntityLoggedIn
bool PlayFab::PlayFabMultiplayerAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ForgetAllCredentials
void PlayFab::PlayFabMultiplayerAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CancelAllMatchmakingTicketsForPlayer
void PlayFab::PlayFabMultiplayerAPI::CancelAllMatchmakingTicketsForPlayer(::PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CancelAllMatchmakingTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CancelAllMatchmakingTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CancelAllServerBackfillTicketsForPlayer
void PlayFab::PlayFabMultiplayerAPI::CancelAllServerBackfillTicketsForPlayer(::PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CancelAllServerBackfillTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CancelAllServerBackfillTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CancelMatchmakingTicket
void PlayFab::PlayFabMultiplayerAPI::CancelMatchmakingTicket(::PlayFab::MultiplayerModels::CancelMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CancelMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CancelMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CancelServerBackfillTicket
void PlayFab::PlayFabMultiplayerAPI::CancelServerBackfillTicket(::PlayFab::MultiplayerModels::CancelServerBackfillTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelServerBackfillTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CancelServerBackfillTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CancelServerBackfillTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CreateBuildAlias
void PlayFab::PlayFabMultiplayerAPI::CreateBuildAlias(::PlayFab::MultiplayerModels::CreateBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CreateBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CreateBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CreateBuildWithCustomContainer
void PlayFab::PlayFabMultiplayerAPI::CreateBuildWithCustomContainer(::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CreateBuildWithCustomContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CreateBuildWithCustomContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CreateBuildWithManagedContainer
void PlayFab::PlayFabMultiplayerAPI::CreateBuildWithManagedContainer(::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CreateBuildWithManagedContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CreateBuildWithManagedContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CreateMatchmakingTicket
void PlayFab::PlayFabMultiplayerAPI::CreateMatchmakingTicket(::PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CreateMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CreateMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CreateRemoteUser
void PlayFab::PlayFabMultiplayerAPI::CreateRemoteUser(::PlayFab::MultiplayerModels::CreateRemoteUserRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateRemoteUserResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CreateRemoteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CreateRemoteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CreateServerBackfillTicket
void PlayFab::PlayFabMultiplayerAPI::CreateServerBackfillTicket(::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateServerBackfillTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CreateServerBackfillTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CreateServerBackfillTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.CreateServerMatchmakingTicket
void PlayFab::PlayFabMultiplayerAPI::CreateServerMatchmakingTicket(::PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::CreateServerMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "CreateServerMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.DeleteAsset
void PlayFab::PlayFabMultiplayerAPI::DeleteAsset(::PlayFab::MultiplayerModels::DeleteAssetRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::DeleteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "DeleteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.DeleteBuild
void PlayFab::PlayFabMultiplayerAPI::DeleteBuild(::PlayFab::MultiplayerModels::DeleteBuildRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::DeleteBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "DeleteBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.DeleteBuildAlias
void PlayFab::PlayFabMultiplayerAPI::DeleteBuildAlias(::PlayFab::MultiplayerModels::DeleteBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::DeleteBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "DeleteBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.DeleteBuildRegion
void PlayFab::PlayFabMultiplayerAPI::DeleteBuildRegion(::PlayFab::MultiplayerModels::DeleteBuildRegionRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::DeleteBuildRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "DeleteBuildRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.DeleteCertificate
void PlayFab::PlayFabMultiplayerAPI::DeleteCertificate(::PlayFab::MultiplayerModels::DeleteCertificateRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::DeleteCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "DeleteCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.DeleteContainerImageRepository
void PlayFab::PlayFabMultiplayerAPI::DeleteContainerImageRepository(::PlayFab::MultiplayerModels::DeleteContainerImageRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::DeleteContainerImageRepository");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "DeleteContainerImageRepository", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.DeleteRemoteUser
void PlayFab::PlayFabMultiplayerAPI::DeleteRemoteUser(::PlayFab::MultiplayerModels::DeleteRemoteUserRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::DeleteRemoteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "DeleteRemoteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.EnableMultiplayerServersForTitle
void PlayFab::PlayFabMultiplayerAPI::EnableMultiplayerServersForTitle(::PlayFab::MultiplayerModels::EnableMultiplayerServersForTitleRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EnableMultiplayerServersForTitleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::EnableMultiplayerServersForTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "EnableMultiplayerServersForTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetAssetUploadUrl
void PlayFab::PlayFabMultiplayerAPI::GetAssetUploadUrl(::PlayFab::MultiplayerModels::GetAssetUploadUrlRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetAssetUploadUrlResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetAssetUploadUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetAssetUploadUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetBuild
void PlayFab::PlayFabMultiplayerAPI::GetBuild(::PlayFab::MultiplayerModels::GetBuildRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetBuildResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetBuildAlias
void PlayFab::PlayFabMultiplayerAPI::GetBuildAlias(::PlayFab::MultiplayerModels::GetBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetContainerRegistryCredentials
void PlayFab::PlayFabMultiplayerAPI::GetContainerRegistryCredentials(::PlayFab::MultiplayerModels::GetContainerRegistryCredentialsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetContainerRegistryCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetContainerRegistryCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetMatch
void PlayFab::PlayFabMultiplayerAPI::GetMatch(::PlayFab::MultiplayerModels::GetMatchRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMatchResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetMatchmakingQueue
void PlayFab::PlayFabMultiplayerAPI::GetMatchmakingQueue(::PlayFab::MultiplayerModels::GetMatchmakingQueueRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMatchmakingQueueResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetMatchmakingQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetMatchmakingQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetMatchmakingTicket
void PlayFab::PlayFabMultiplayerAPI::GetMatchmakingTicket(::PlayFab::MultiplayerModels::GetMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerDetails
void PlayFab::PlayFabMultiplayerAPI::GetMultiplayerServerDetails(::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetMultiplayerServerDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetMultiplayerServerDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerLogs
void PlayFab::PlayFabMultiplayerAPI::GetMultiplayerServerLogs(::PlayFab::MultiplayerModels::GetMultiplayerServerLogsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMultiplayerServerLogsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetMultiplayerServerLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetMultiplayerServerLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetMultiplayerSessionLogsBySessionId
void PlayFab::PlayFabMultiplayerAPI::GetMultiplayerSessionLogsBySessionId(::PlayFab::MultiplayerModels::GetMultiplayerSessionLogsBySessionIdRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMultiplayerServerLogsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetMultiplayerSessionLogsBySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetMultiplayerSessionLogsBySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetQueueStatistics
void PlayFab::PlayFabMultiplayerAPI::GetQueueStatistics(::PlayFab::MultiplayerModels::GetQueueStatisticsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetQueueStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetQueueStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetQueueStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetRemoteLoginEndpoint
void PlayFab::PlayFabMultiplayerAPI::GetRemoteLoginEndpoint(::PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetRemoteLoginEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetRemoteLoginEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetServerBackfillTicket
void PlayFab::PlayFabMultiplayerAPI::GetServerBackfillTicket(::PlayFab::MultiplayerModels::GetServerBackfillTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetServerBackfillTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetServerBackfillTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetServerBackfillTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetTitleEnabledForMultiplayerServersStatus
void PlayFab::PlayFabMultiplayerAPI::GetTitleEnabledForMultiplayerServersStatus(::PlayFab::MultiplayerModels::GetTitleEnabledForMultiplayerServersStatusRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetTitleEnabledForMultiplayerServersStatusResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetTitleEnabledForMultiplayerServersStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetTitleEnabledForMultiplayerServersStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotas
void PlayFab::PlayFabMultiplayerAPI::GetTitleMultiplayerServersQuotas(::PlayFab::MultiplayerModels::GetTitleMultiplayerServersQuotasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetTitleMultiplayerServersQuotasResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::GetTitleMultiplayerServersQuotas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "GetTitleMultiplayerServersQuotas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.JoinMatchmakingTicket
void PlayFab::PlayFabMultiplayerAPI::JoinMatchmakingTicket(::PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::JoinMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::JoinMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "JoinMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListArchivedMultiplayerServers
void PlayFab::PlayFabMultiplayerAPI::ListArchivedMultiplayerServers(::PlayFab::MultiplayerModels::ListMultiplayerServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMultiplayerServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListArchivedMultiplayerServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListArchivedMultiplayerServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListAssetSummaries
void PlayFab::PlayFabMultiplayerAPI::ListAssetSummaries(::PlayFab::MultiplayerModels::ListAssetSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListAssetSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListAssetSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListAssetSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListBuildAliases
void PlayFab::PlayFabMultiplayerAPI::ListBuildAliases(::PlayFab::MultiplayerModels::MultiplayerEmptyRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListBuildAliasesForTitleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListBuildAliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListBuildAliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListBuildSummaries
void PlayFab::PlayFabMultiplayerAPI::ListBuildSummaries(::PlayFab::MultiplayerModels::ListBuildSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListBuildSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListBuildSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListBuildSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListCertificateSummaries
void PlayFab::PlayFabMultiplayerAPI::ListCertificateSummaries(::PlayFab::MultiplayerModels::ListCertificateSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListCertificateSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListCertificateSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListCertificateSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListContainerImages
void PlayFab::PlayFabMultiplayerAPI::ListContainerImages(::PlayFab::MultiplayerModels::ListContainerImagesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListContainerImagesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListContainerImages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListContainerImages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListContainerImageTags
void PlayFab::PlayFabMultiplayerAPI::ListContainerImageTags(::PlayFab::MultiplayerModels::ListContainerImageTagsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListContainerImageTagsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListContainerImageTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListContainerImageTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListMatchmakingQueues
void PlayFab::PlayFabMultiplayerAPI::ListMatchmakingQueues(::PlayFab::MultiplayerModels::ListMatchmakingQueuesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMatchmakingQueuesResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListMatchmakingQueues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListMatchmakingQueues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListMatchmakingTicketsForPlayer
void PlayFab::PlayFabMultiplayerAPI::ListMatchmakingTicketsForPlayer(::PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListMatchmakingTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListMatchmakingTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListMultiplayerServers
void PlayFab::PlayFabMultiplayerAPI::ListMultiplayerServers(::PlayFab::MultiplayerModels::ListMultiplayerServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMultiplayerServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListMultiplayerServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListMultiplayerServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListPartyQosServers
void PlayFab::PlayFabMultiplayerAPI::ListPartyQosServers(::PlayFab::MultiplayerModels::ListPartyQosServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListPartyQosServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListPartyQosServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListPartyQosServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListQosServers
void PlayFab::PlayFabMultiplayerAPI::ListQosServers(::PlayFab::MultiplayerModels::ListQosServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListQosServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListQosServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListQosServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListQosServersForTitle
void PlayFab::PlayFabMultiplayerAPI::ListQosServersForTitle(::PlayFab::MultiplayerModels::ListQosServersForTitleRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListQosServersForTitleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListQosServersForTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListQosServersForTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListServerBackfillTicketsForPlayer
void PlayFab::PlayFabMultiplayerAPI::ListServerBackfillTicketsForPlayer(::PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListServerBackfillTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListServerBackfillTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ListVirtualMachineSummaries
void PlayFab::PlayFabMultiplayerAPI::ListVirtualMachineSummaries(::PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ListVirtualMachineSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ListVirtualMachineSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.RemoveMatchmakingQueue
void PlayFab::PlayFabMultiplayerAPI::RemoveMatchmakingQueue(::PlayFab::MultiplayerModels::RemoveMatchmakingQueueRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::RemoveMatchmakingQueueResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::RemoveMatchmakingQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "RemoveMatchmakingQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.RequestMultiplayerServer
void PlayFab::PlayFabMultiplayerAPI::RequestMultiplayerServer(::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::RequestMultiplayerServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "RequestMultiplayerServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.RolloverContainerRegistryCredentials
void PlayFab::PlayFabMultiplayerAPI::RolloverContainerRegistryCredentials(::PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::RolloverContainerRegistryCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "RolloverContainerRegistryCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.SetMatchmakingQueue
void PlayFab::PlayFabMultiplayerAPI::SetMatchmakingQueue(::PlayFab::MultiplayerModels::SetMatchmakingQueueRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::SetMatchmakingQueueResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::SetMatchmakingQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "SetMatchmakingQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.ShutdownMultiplayerServer
void PlayFab::PlayFabMultiplayerAPI::ShutdownMultiplayerServer(::PlayFab::MultiplayerModels::ShutdownMultiplayerServerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::ShutdownMultiplayerServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "ShutdownMultiplayerServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.UntagContainerImage
void PlayFab::PlayFabMultiplayerAPI::UntagContainerImage(::PlayFab::MultiplayerModels::UntagContainerImageRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::UntagContainerImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "UntagContainerImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.UpdateBuildAlias
void PlayFab::PlayFabMultiplayerAPI::UpdateBuildAlias(::PlayFab::MultiplayerModels::UpdateBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::UpdateBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "UpdateBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegion
void PlayFab::PlayFabMultiplayerAPI::UpdateBuildRegion(::PlayFab::MultiplayerModels::UpdateBuildRegionRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::UpdateBuildRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "UpdateBuildRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegions
void PlayFab::PlayFabMultiplayerAPI::UpdateBuildRegions(::PlayFab::MultiplayerModels::UpdateBuildRegionsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::UpdateBuildRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "UpdateBuildRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerAPI.UploadCertificate
void PlayFab::PlayFabMultiplayerAPI::UploadCertificate(::PlayFab::MultiplayerModels::UploadCertificateRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerAPI::UploadCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabMultiplayerAPI", "UploadCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabMultiplayerInstanceAPI
#include "PlayFab/PlayFabMultiplayerInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllMatchmakingTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/CancelAllMatchmakingTicketsForPlayerRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllMatchmakingTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/CancelAllMatchmakingTicketsForPlayerResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllServerBackfillTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/CancelAllServerBackfillTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CancelAllServerBackfillTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/CancelAllServerBackfillTicketsForPlayerResult.hpp"
// Including type: PlayFab.MultiplayerModels.CancelMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CancelMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CancelMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/CancelMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CancelServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/CancelServerBackfillTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CancelServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/CancelServerBackfillTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildAliasRequest
#include "PlayFab/MultiplayerModels/CreateBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.BuildAliasDetailsResponse
#include "PlayFab/MultiplayerModels/BuildAliasDetailsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithCustomContainerRequest
#include "PlayFab/MultiplayerModels/CreateBuildWithCustomContainerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithCustomContainerResponse
#include "PlayFab/MultiplayerModels/CreateBuildWithCustomContainerResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithManagedContainerRequest
#include "PlayFab/MultiplayerModels/CreateBuildWithManagedContainerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateBuildWithManagedContainerResponse
#include "PlayFab/MultiplayerModels/CreateBuildWithManagedContainerResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CreateMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/CreateMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CreateRemoteUserRequest
#include "PlayFab/MultiplayerModels/CreateRemoteUserRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateRemoteUserResponse
#include "PlayFab/MultiplayerModels/CreateRemoteUserResponse.hpp"
// Including type: PlayFab.MultiplayerModels.CreateServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/CreateServerBackfillTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.CreateServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/CreateServerBackfillTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.CreateServerMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/CreateServerMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteAssetRequest
#include "PlayFab/MultiplayerModels/DeleteAssetRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EmptyResponse
#include "PlayFab/MultiplayerModels/EmptyResponse.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteBuildRequest
#include "PlayFab/MultiplayerModels/DeleteBuildRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteBuildAliasRequest
#include "PlayFab/MultiplayerModels/DeleteBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteBuildRegionRequest
#include "PlayFab/MultiplayerModels/DeleteBuildRegionRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteCertificateRequest
#include "PlayFab/MultiplayerModels/DeleteCertificateRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteContainerImageRequest
#include "PlayFab/MultiplayerModels/DeleteContainerImageRequest.hpp"
// Including type: PlayFab.MultiplayerModels.DeleteRemoteUserRequest
#include "PlayFab/MultiplayerModels/DeleteRemoteUserRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EnableMultiplayerServersForTitleRequest
#include "PlayFab/MultiplayerModels/EnableMultiplayerServersForTitleRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EnableMultiplayerServersForTitleResponse
#include "PlayFab/MultiplayerModels/EnableMultiplayerServersForTitleResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetAssetUploadUrlRequest
#include "PlayFab/MultiplayerModels/GetAssetUploadUrlRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetAssetUploadUrlResponse
#include "PlayFab/MultiplayerModels/GetAssetUploadUrlResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetBuildRequest
#include "PlayFab/MultiplayerModels/GetBuildRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetBuildResponse
#include "PlayFab/MultiplayerModels/GetBuildResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetBuildAliasRequest
#include "PlayFab/MultiplayerModels/GetBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetContainerRegistryCredentialsRequest
#include "PlayFab/MultiplayerModels/GetContainerRegistryCredentialsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetContainerRegistryCredentialsResponse
#include "PlayFab/MultiplayerModels/GetContainerRegistryCredentialsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchRequest
#include "PlayFab/MultiplayerModels/GetMatchRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchResult
#include "PlayFab/MultiplayerModels/GetMatchResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/GetMatchmakingQueueRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/GetMatchmakingQueueResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/GetMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/GetMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerDetailsRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerServerDetailsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerDetailsResponse
#include "PlayFab/MultiplayerModels/GetMultiplayerServerDetailsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerLogsRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerServerLogsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerLogsResponse
#include "PlayFab/MultiplayerModels/GetMultiplayerServerLogsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetMultiplayerSessionLogsBySessionIdRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerSessionLogsBySessionIdRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetQueueStatisticsRequest
#include "PlayFab/MultiplayerModels/GetQueueStatisticsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetQueueStatisticsResult
#include "PlayFab/MultiplayerModels/GetQueueStatisticsResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetRemoteLoginEndpointRequest
#include "PlayFab/MultiplayerModels/GetRemoteLoginEndpointRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetRemoteLoginEndpointResponse
#include "PlayFab/MultiplayerModels/GetRemoteLoginEndpointResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/GetServerBackfillTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/GetServerBackfillTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleEnabledForMultiplayerServersStatusRequest
#include "PlayFab/MultiplayerModels/GetTitleEnabledForMultiplayerServersStatusRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleEnabledForMultiplayerServersStatusResponse
#include "PlayFab/MultiplayerModels/GetTitleEnabledForMultiplayerServersStatusResponse.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleMultiplayerServersQuotasRequest
#include "PlayFab/MultiplayerModels/GetTitleMultiplayerServersQuotasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.GetTitleMultiplayerServersQuotasResponse
#include "PlayFab/MultiplayerModels/GetTitleMultiplayerServersQuotasResponse.hpp"
// Including type: PlayFab.MultiplayerModels.JoinMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/JoinMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.JoinMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/JoinMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListMultiplayerServersRequest
#include "PlayFab/MultiplayerModels/ListMultiplayerServersRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListMultiplayerServersResponse
#include "PlayFab/MultiplayerModels/ListMultiplayerServersResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListAssetSummariesRequest
#include "PlayFab/MultiplayerModels/ListAssetSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListAssetSummariesResponse
#include "PlayFab/MultiplayerModels/ListAssetSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.MultiplayerEmptyRequest
#include "PlayFab/MultiplayerModels/MultiplayerEmptyRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListBuildAliasesForTitleResponse
#include "PlayFab/MultiplayerModels/ListBuildAliasesForTitleResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListBuildSummariesRequest
#include "PlayFab/MultiplayerModels/ListBuildSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListBuildSummariesResponse
#include "PlayFab/MultiplayerModels/ListBuildSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListCertificateSummariesRequest
#include "PlayFab/MultiplayerModels/ListCertificateSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListCertificateSummariesResponse
#include "PlayFab/MultiplayerModels/ListCertificateSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImagesRequest
#include "PlayFab/MultiplayerModels/ListContainerImagesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImagesResponse
#include "PlayFab/MultiplayerModels/ListContainerImagesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImageTagsRequest
#include "PlayFab/MultiplayerModels/ListContainerImageTagsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListContainerImageTagsResponse
#include "PlayFab/MultiplayerModels/ListContainerImageTagsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingQueuesRequest
#include "PlayFab/MultiplayerModels/ListMatchmakingQueuesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingQueuesResult
#include "PlayFab/MultiplayerModels/ListMatchmakingQueuesResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/ListMatchmakingTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListMatchmakingTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/ListMatchmakingTicketsForPlayerResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListPartyQosServersRequest
#include "PlayFab/MultiplayerModels/ListPartyQosServersRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListPartyQosServersResponse
#include "PlayFab/MultiplayerModels/ListPartyQosServersResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersRequest
#include "PlayFab/MultiplayerModels/ListQosServersRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersResponse
#include "PlayFab/MultiplayerModels/ListQosServersResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersForTitleRequest
#include "PlayFab/MultiplayerModels/ListQosServersForTitleRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListQosServersForTitleResponse
#include "PlayFab/MultiplayerModels/ListQosServersForTitleResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ListServerBackfillTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/ListServerBackfillTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListServerBackfillTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/ListServerBackfillTicketsForPlayerResult.hpp"
// Including type: PlayFab.MultiplayerModels.ListVirtualMachineSummariesRequest
#include "PlayFab/MultiplayerModels/ListVirtualMachineSummariesRequest.hpp"
// Including type: PlayFab.MultiplayerModels.ListVirtualMachineSummariesResponse
#include "PlayFab/MultiplayerModels/ListVirtualMachineSummariesResponse.hpp"
// Including type: PlayFab.MultiplayerModels.RemoveMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/RemoveMatchmakingQueueRequest.hpp"
// Including type: PlayFab.MultiplayerModels.RemoveMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/RemoveMatchmakingQueueResult.hpp"
// Including type: PlayFab.MultiplayerModels.RequestMultiplayerServerRequest
#include "PlayFab/MultiplayerModels/RequestMultiplayerServerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.RequestMultiplayerServerResponse
#include "PlayFab/MultiplayerModels/RequestMultiplayerServerResponse.hpp"
// Including type: PlayFab.MultiplayerModels.RolloverContainerRegistryCredentialsRequest
#include "PlayFab/MultiplayerModels/RolloverContainerRegistryCredentialsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.RolloverContainerRegistryCredentialsResponse
#include "PlayFab/MultiplayerModels/RolloverContainerRegistryCredentialsResponse.hpp"
// Including type: PlayFab.MultiplayerModels.SetMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/SetMatchmakingQueueRequest.hpp"
// Including type: PlayFab.MultiplayerModels.SetMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/SetMatchmakingQueueResult.hpp"
// Including type: PlayFab.MultiplayerModels.ShutdownMultiplayerServerRequest
#include "PlayFab/MultiplayerModels/ShutdownMultiplayerServerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UntagContainerImageRequest
#include "PlayFab/MultiplayerModels/UntagContainerImageRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UpdateBuildAliasRequest
#include "PlayFab/MultiplayerModels/UpdateBuildAliasRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UpdateBuildRegionRequest
#include "PlayFab/MultiplayerModels/UpdateBuildRegionRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UpdateBuildRegionsRequest
#include "PlayFab/MultiplayerModels/UpdateBuildRegionsRequest.hpp"
// Including type: PlayFab.MultiplayerModels.UploadCertificateRequest
#include "PlayFab/MultiplayerModels/UploadCertificateRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabMultiplayerInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabMultiplayerInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabMultiplayerInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabMultiplayerInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CancelAllMatchmakingTicketsForPlayer
void PlayFab::PlayFabMultiplayerInstanceAPI::CancelAllMatchmakingTicketsForPlayer(::PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelAllMatchmakingTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CancelAllMatchmakingTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAllMatchmakingTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CancelAllServerBackfillTicketsForPlayer
void PlayFab::PlayFabMultiplayerInstanceAPI::CancelAllServerBackfillTicketsForPlayer(::PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelAllServerBackfillTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CancelAllServerBackfillTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAllServerBackfillTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CancelMatchmakingTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::CancelMatchmakingTicket(::PlayFab::MultiplayerModels::CancelMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CancelMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CancelServerBackfillTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::CancelServerBackfillTicket(::PlayFab::MultiplayerModels::CancelServerBackfillTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CancelServerBackfillTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CancelServerBackfillTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelServerBackfillTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CreateBuildAlias
void PlayFab::PlayFabMultiplayerInstanceAPI::CreateBuildAlias(::PlayFab::MultiplayerModels::CreateBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CreateBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CreateBuildWithCustomContainer
void PlayFab::PlayFabMultiplayerInstanceAPI::CreateBuildWithCustomContainer(::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateBuildWithCustomContainerResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CreateBuildWithCustomContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBuildWithCustomContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CreateBuildWithManagedContainer
void PlayFab::PlayFabMultiplayerInstanceAPI::CreateBuildWithManagedContainer(::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateBuildWithManagedContainerResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CreateBuildWithManagedContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBuildWithManagedContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CreateMatchmakingTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::CreateMatchmakingTicket(::PlayFab::MultiplayerModels::CreateMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CreateMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CreateRemoteUser
void PlayFab::PlayFabMultiplayerInstanceAPI::CreateRemoteUser(::PlayFab::MultiplayerModels::CreateRemoteUserRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateRemoteUserResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CreateRemoteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRemoteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CreateServerBackfillTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::CreateServerBackfillTicket(::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateServerBackfillTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CreateServerBackfillTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateServerBackfillTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.CreateServerMatchmakingTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::CreateServerMatchmakingTicket(::PlayFab::MultiplayerModels::CreateServerMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::CreateMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::CreateServerMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateServerMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.DeleteAsset
void PlayFab::PlayFabMultiplayerInstanceAPI::DeleteAsset(::PlayFab::MultiplayerModels::DeleteAssetRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::DeleteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.DeleteBuild
void PlayFab::PlayFabMultiplayerInstanceAPI::DeleteBuild(::PlayFab::MultiplayerModels::DeleteBuildRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::DeleteBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.DeleteBuildAlias
void PlayFab::PlayFabMultiplayerInstanceAPI::DeleteBuildAlias(::PlayFab::MultiplayerModels::DeleteBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::DeleteBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.DeleteBuildRegion
void PlayFab::PlayFabMultiplayerInstanceAPI::DeleteBuildRegion(::PlayFab::MultiplayerModels::DeleteBuildRegionRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::DeleteBuildRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteBuildRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.DeleteCertificate
void PlayFab::PlayFabMultiplayerInstanceAPI::DeleteCertificate(::PlayFab::MultiplayerModels::DeleteCertificateRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::DeleteCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.DeleteContainerImageRepository
void PlayFab::PlayFabMultiplayerInstanceAPI::DeleteContainerImageRepository(::PlayFab::MultiplayerModels::DeleteContainerImageRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::DeleteContainerImageRepository");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteContainerImageRepository", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.DeleteRemoteUser
void PlayFab::PlayFabMultiplayerInstanceAPI::DeleteRemoteUser(::PlayFab::MultiplayerModels::DeleteRemoteUserRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::DeleteRemoteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRemoteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.EnableMultiplayerServersForTitle
void PlayFab::PlayFabMultiplayerInstanceAPI::EnableMultiplayerServersForTitle(::PlayFab::MultiplayerModels::EnableMultiplayerServersForTitleRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EnableMultiplayerServersForTitleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::EnableMultiplayerServersForTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMultiplayerServersForTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetAssetUploadUrl
void PlayFab::PlayFabMultiplayerInstanceAPI::GetAssetUploadUrl(::PlayFab::MultiplayerModels::GetAssetUploadUrlRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetAssetUploadUrlResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetAssetUploadUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetUploadUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetBuild
void PlayFab::PlayFabMultiplayerInstanceAPI::GetBuild(::PlayFab::MultiplayerModels::GetBuildRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetBuildResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetBuildAlias
void PlayFab::PlayFabMultiplayerInstanceAPI::GetBuildAlias(::PlayFab::MultiplayerModels::GetBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetContainerRegistryCredentials
void PlayFab::PlayFabMultiplayerInstanceAPI::GetContainerRegistryCredentials(::PlayFab::MultiplayerModels::GetContainerRegistryCredentialsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetContainerRegistryCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContainerRegistryCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetMatch
void PlayFab::PlayFabMultiplayerInstanceAPI::GetMatch(::PlayFab::MultiplayerModels::GetMatchRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMatchResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetMatchmakingQueue
void PlayFab::PlayFabMultiplayerInstanceAPI::GetMatchmakingQueue(::PlayFab::MultiplayerModels::GetMatchmakingQueueRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMatchmakingQueueResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetMatchmakingQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetMatchmakingTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::GetMatchmakingTicket(::PlayFab::MultiplayerModels::GetMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetMultiplayerServerDetails
void PlayFab::PlayFabMultiplayerInstanceAPI::GetMultiplayerServerDetails(::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetMultiplayerServerDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerServerDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetMultiplayerServerLogs
void PlayFab::PlayFabMultiplayerInstanceAPI::GetMultiplayerServerLogs(::PlayFab::MultiplayerModels::GetMultiplayerServerLogsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMultiplayerServerLogsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetMultiplayerServerLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerServerLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetMultiplayerSessionLogsBySessionId
void PlayFab::PlayFabMultiplayerInstanceAPI::GetMultiplayerSessionLogsBySessionId(::PlayFab::MultiplayerModels::GetMultiplayerSessionLogsBySessionIdRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetMultiplayerServerLogsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetMultiplayerSessionLogsBySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerSessionLogsBySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetQueueStatistics
void PlayFab::PlayFabMultiplayerInstanceAPI::GetQueueStatistics(::PlayFab::MultiplayerModels::GetQueueStatisticsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetQueueStatisticsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetQueueStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQueueStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetRemoteLoginEndpoint
void PlayFab::PlayFabMultiplayerInstanceAPI::GetRemoteLoginEndpoint(::PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetRemoteLoginEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemoteLoginEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetServerBackfillTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::GetServerBackfillTicket(::PlayFab::MultiplayerModels::GetServerBackfillTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetServerBackfillTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetServerBackfillTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerBackfillTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetTitleEnabledForMultiplayerServersStatus
void PlayFab::PlayFabMultiplayerInstanceAPI::GetTitleEnabledForMultiplayerServersStatus(::PlayFab::MultiplayerModels::GetTitleEnabledForMultiplayerServersStatusRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetTitleEnabledForMultiplayerServersStatusResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetTitleEnabledForMultiplayerServersStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTitleEnabledForMultiplayerServersStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.GetTitleMultiplayerServersQuotas
void PlayFab::PlayFabMultiplayerInstanceAPI::GetTitleMultiplayerServersQuotas(::PlayFab::MultiplayerModels::GetTitleMultiplayerServersQuotasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::GetTitleMultiplayerServersQuotasResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::GetTitleMultiplayerServersQuotas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTitleMultiplayerServersQuotas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.JoinMatchmakingTicket
void PlayFab::PlayFabMultiplayerInstanceAPI::JoinMatchmakingTicket(::PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::JoinMatchmakingTicketResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::JoinMatchmakingTicket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinMatchmakingTicket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListArchivedMultiplayerServers
void PlayFab::PlayFabMultiplayerInstanceAPI::ListArchivedMultiplayerServers(::PlayFab::MultiplayerModels::ListMultiplayerServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMultiplayerServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListArchivedMultiplayerServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListArchivedMultiplayerServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListAssetSummaries
void PlayFab::PlayFabMultiplayerInstanceAPI::ListAssetSummaries(::PlayFab::MultiplayerModels::ListAssetSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListAssetSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListAssetSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListAssetSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListBuildAliases
void PlayFab::PlayFabMultiplayerInstanceAPI::ListBuildAliases(::PlayFab::MultiplayerModels::MultiplayerEmptyRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListBuildAliasesForTitleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListBuildAliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListBuildAliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListBuildSummaries
void PlayFab::PlayFabMultiplayerInstanceAPI::ListBuildSummaries(::PlayFab::MultiplayerModels::ListBuildSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListBuildSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListBuildSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListBuildSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListCertificateSummaries
void PlayFab::PlayFabMultiplayerInstanceAPI::ListCertificateSummaries(::PlayFab::MultiplayerModels::ListCertificateSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListCertificateSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListCertificateSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListCertificateSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListContainerImages
void PlayFab::PlayFabMultiplayerInstanceAPI::ListContainerImages(::PlayFab::MultiplayerModels::ListContainerImagesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListContainerImagesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListContainerImages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListContainerImages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListContainerImageTags
void PlayFab::PlayFabMultiplayerInstanceAPI::ListContainerImageTags(::PlayFab::MultiplayerModels::ListContainerImageTagsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListContainerImageTagsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListContainerImageTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListContainerImageTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListMatchmakingQueues
void PlayFab::PlayFabMultiplayerInstanceAPI::ListMatchmakingQueues(::PlayFab::MultiplayerModels::ListMatchmakingQueuesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMatchmakingQueuesResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListMatchmakingQueues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListMatchmakingQueues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListMatchmakingTicketsForPlayer
void PlayFab::PlayFabMultiplayerInstanceAPI::ListMatchmakingTicketsForPlayer(::PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListMatchmakingTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListMatchmakingTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListMultiplayerServers
void PlayFab::PlayFabMultiplayerInstanceAPI::ListMultiplayerServers(::PlayFab::MultiplayerModels::ListMultiplayerServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListMultiplayerServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListMultiplayerServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListMultiplayerServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListPartyQosServers
void PlayFab::PlayFabMultiplayerInstanceAPI::ListPartyQosServers(::PlayFab::MultiplayerModels::ListPartyQosServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListPartyQosServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListPartyQosServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListPartyQosServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListQosServers
void PlayFab::PlayFabMultiplayerInstanceAPI::ListQosServers(::PlayFab::MultiplayerModels::ListQosServersRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListQosServersResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListQosServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListQosServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListQosServersForTitle
void PlayFab::PlayFabMultiplayerInstanceAPI::ListQosServersForTitle(::PlayFab::MultiplayerModels::ListQosServersForTitleRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListQosServersForTitleResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListQosServersForTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListQosServersForTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListServerBackfillTicketsForPlayer
void PlayFab::PlayFabMultiplayerInstanceAPI::ListServerBackfillTicketsForPlayer(::PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListServerBackfillTicketsForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListServerBackfillTicketsForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ListVirtualMachineSummaries
void PlayFab::PlayFabMultiplayerInstanceAPI::ListVirtualMachineSummaries(::PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ListVirtualMachineSummaries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListVirtualMachineSummaries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.RemoveMatchmakingQueue
void PlayFab::PlayFabMultiplayerInstanceAPI::RemoveMatchmakingQueue(::PlayFab::MultiplayerModels::RemoveMatchmakingQueueRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::RemoveMatchmakingQueueResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::RemoveMatchmakingQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMatchmakingQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.RequestMultiplayerServer
void PlayFab::PlayFabMultiplayerInstanceAPI::RequestMultiplayerServer(::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::RequestMultiplayerServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestMultiplayerServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.RolloverContainerRegistryCredentials
void PlayFab::PlayFabMultiplayerInstanceAPI::RolloverContainerRegistryCredentials(::PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::RolloverContainerRegistryCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RolloverContainerRegistryCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.SetMatchmakingQueue
void PlayFab::PlayFabMultiplayerInstanceAPI::SetMatchmakingQueue(::PlayFab::MultiplayerModels::SetMatchmakingQueueRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::SetMatchmakingQueueResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::SetMatchmakingQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatchmakingQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.ShutdownMultiplayerServer
void PlayFab::PlayFabMultiplayerInstanceAPI::ShutdownMultiplayerServer(::PlayFab::MultiplayerModels::ShutdownMultiplayerServerRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::ShutdownMultiplayerServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShutdownMultiplayerServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.UntagContainerImage
void PlayFab::PlayFabMultiplayerInstanceAPI::UntagContainerImage(::PlayFab::MultiplayerModels::UntagContainerImageRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::UntagContainerImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UntagContainerImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.UpdateBuildAlias
void PlayFab::PlayFabMultiplayerInstanceAPI::UpdateBuildAlias(::PlayFab::MultiplayerModels::UpdateBuildAliasRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::UpdateBuildAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBuildAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.UpdateBuildRegion
void PlayFab::PlayFabMultiplayerInstanceAPI::UpdateBuildRegion(::PlayFab::MultiplayerModels::UpdateBuildRegionRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::UpdateBuildRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBuildRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.UpdateBuildRegions
void PlayFab::PlayFabMultiplayerInstanceAPI::UpdateBuildRegions(::PlayFab::MultiplayerModels::UpdateBuildRegionsRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::UpdateBuildRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBuildRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabMultiplayerInstanceAPI.UploadCertificate
void PlayFab::PlayFabMultiplayerInstanceAPI::UploadCertificate(::PlayFab::MultiplayerModels::UploadCertificateRequest* request, ::System::Action_1<::PlayFab::MultiplayerModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabMultiplayerInstanceAPI::UploadCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabProfilesAPI
#include "PlayFab/PlayFabProfilesAPI.hpp"
// Including type: PlayFab.ProfilesModels.GetGlobalPolicyRequest
#include "PlayFab/ProfilesModels/GetGlobalPolicyRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.ProfilesModels.GetGlobalPolicyResponse
#include "PlayFab/ProfilesModels/GetGlobalPolicyResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfileRequest
#include "PlayFab/ProfilesModels/GetEntityProfileRequest.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfileResponse
#include "PlayFab/ProfilesModels/GetEntityProfileResponse.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfilesRequest
#include "PlayFab/ProfilesModels/GetEntityProfilesRequest.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfilesResponse
#include "PlayFab/ProfilesModels/GetEntityProfilesResponse.hpp"
// Including type: PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsRequest
#include "PlayFab/ProfilesModels/GetTitlePlayersFromMasterPlayerAccountIdsRequest.hpp"
// Including type: PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsResponse
#include "PlayFab/ProfilesModels/GetTitlePlayersFromMasterPlayerAccountIdsResponse.hpp"
// Including type: PlayFab.ProfilesModels.SetGlobalPolicyRequest
#include "PlayFab/ProfilesModels/SetGlobalPolicyRequest.hpp"
// Including type: PlayFab.ProfilesModels.SetGlobalPolicyResponse
#include "PlayFab/ProfilesModels/SetGlobalPolicyResponse.hpp"
// Including type: PlayFab.ProfilesModels.SetProfileLanguageRequest
#include "PlayFab/ProfilesModels/SetProfileLanguageRequest.hpp"
// Including type: PlayFab.ProfilesModels.SetProfileLanguageResponse
#include "PlayFab/ProfilesModels/SetProfileLanguageResponse.hpp"
// Including type: PlayFab.ProfilesModels.SetEntityProfilePolicyRequest
#include "PlayFab/ProfilesModels/SetEntityProfilePolicyRequest.hpp"
// Including type: PlayFab.ProfilesModels.SetEntityProfilePolicyResponse
#include "PlayFab/ProfilesModels/SetEntityProfilePolicyResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PlayFabProfilesAPI..cctor
void PlayFab::PlayFabProfilesAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.IsEntityLoggedIn
bool PlayFab::PlayFabProfilesAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.ForgetAllCredentials
void PlayFab::PlayFabProfilesAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.GetGlobalPolicy
void PlayFab::PlayFabProfilesAPI::GetGlobalPolicy(::PlayFab::ProfilesModels::GetGlobalPolicyRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetGlobalPolicyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::GetGlobalPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "GetGlobalPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.GetProfile
void PlayFab::PlayFabProfilesAPI::GetProfile(::PlayFab::ProfilesModels::GetEntityProfileRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetEntityProfileResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::GetProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "GetProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.GetProfiles
void PlayFab::PlayFabProfilesAPI::GetProfiles(::PlayFab::ProfilesModels::GetEntityProfilesRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetEntityProfilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::GetProfiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "GetProfiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.GetTitlePlayersFromMasterPlayerAccountIds
void PlayFab::PlayFabProfilesAPI::GetTitlePlayersFromMasterPlayerAccountIds(::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::GetTitlePlayersFromMasterPlayerAccountIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "GetTitlePlayersFromMasterPlayerAccountIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.SetGlobalPolicy
void PlayFab::PlayFabProfilesAPI::SetGlobalPolicy(::PlayFab::ProfilesModels::SetGlobalPolicyRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::SetGlobalPolicyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::SetGlobalPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "SetGlobalPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.SetProfileLanguage
void PlayFab::PlayFabProfilesAPI::SetProfileLanguage(::PlayFab::ProfilesModels::SetProfileLanguageRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::SetProfileLanguageResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::SetProfileLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "SetProfileLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesAPI.SetProfilePolicy
void PlayFab::PlayFabProfilesAPI::SetProfilePolicy(::PlayFab::ProfilesModels::SetEntityProfilePolicyRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::SetEntityProfilePolicyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesAPI::SetProfilePolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabProfilesAPI", "SetProfilePolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabProfilesInstanceAPI
#include "PlayFab/PlayFabProfilesInstanceAPI.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: PlayFab.ProfilesModels.GetGlobalPolicyRequest
#include "PlayFab/ProfilesModels/GetGlobalPolicyRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.ProfilesModels.GetGlobalPolicyResponse
#include "PlayFab/ProfilesModels/GetGlobalPolicyResponse.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfileRequest
#include "PlayFab/ProfilesModels/GetEntityProfileRequest.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfileResponse
#include "PlayFab/ProfilesModels/GetEntityProfileResponse.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfilesRequest
#include "PlayFab/ProfilesModels/GetEntityProfilesRequest.hpp"
// Including type: PlayFab.ProfilesModels.GetEntityProfilesResponse
#include "PlayFab/ProfilesModels/GetEntityProfilesResponse.hpp"
// Including type: PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsRequest
#include "PlayFab/ProfilesModels/GetTitlePlayersFromMasterPlayerAccountIdsRequest.hpp"
// Including type: PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsResponse
#include "PlayFab/ProfilesModels/GetTitlePlayersFromMasterPlayerAccountIdsResponse.hpp"
// Including type: PlayFab.ProfilesModels.SetGlobalPolicyRequest
#include "PlayFab/ProfilesModels/SetGlobalPolicyRequest.hpp"
// Including type: PlayFab.ProfilesModels.SetGlobalPolicyResponse
#include "PlayFab/ProfilesModels/SetGlobalPolicyResponse.hpp"
// Including type: PlayFab.ProfilesModels.SetProfileLanguageRequest
#include "PlayFab/ProfilesModels/SetProfileLanguageRequest.hpp"
// Including type: PlayFab.ProfilesModels.SetProfileLanguageResponse
#include "PlayFab/ProfilesModels/SetProfileLanguageResponse.hpp"
// Including type: PlayFab.ProfilesModels.SetEntityProfilePolicyRequest
#include "PlayFab/ProfilesModels/SetEntityProfilePolicyRequest.hpp"
// Including type: PlayFab.ProfilesModels.SetEntityProfilePolicyResponse
#include "PlayFab/ProfilesModels/SetEntityProfilePolicyResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabApiSettings apiSettings
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& PlayFab::PlayFabProfilesInstanceAPI::dyn_apiSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::dyn_apiSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apiSettings"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabApiSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::PlayFabProfilesInstanceAPI::dyn_authenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::dyn_authenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.IsEntityLoggedIn
bool PlayFab::PlayFabProfilesInstanceAPI::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.ForgetAllCredentials
void PlayFab::PlayFabProfilesInstanceAPI::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.GetGlobalPolicy
void PlayFab::PlayFabProfilesInstanceAPI::GetGlobalPolicy(::PlayFab::ProfilesModels::GetGlobalPolicyRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetGlobalPolicyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::GetGlobalPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGlobalPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.GetProfile
void PlayFab::PlayFabProfilesInstanceAPI::GetProfile(::PlayFab::ProfilesModels::GetEntityProfileRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetEntityProfileResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::GetProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.GetProfiles
void PlayFab::PlayFabProfilesInstanceAPI::GetProfiles(::PlayFab::ProfilesModels::GetEntityProfilesRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetEntityProfilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::GetProfiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProfiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.GetTitlePlayersFromMasterPlayerAccountIds
void PlayFab::PlayFabProfilesInstanceAPI::GetTitlePlayersFromMasterPlayerAccountIds(::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::GetTitlePlayersFromMasterPlayerAccountIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTitlePlayersFromMasterPlayerAccountIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.SetGlobalPolicy
void PlayFab::PlayFabProfilesInstanceAPI::SetGlobalPolicy(::PlayFab::ProfilesModels::SetGlobalPolicyRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::SetGlobalPolicyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::SetGlobalPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.SetProfileLanguage
void PlayFab::PlayFabProfilesInstanceAPI::SetProfileLanguage(::PlayFab::ProfilesModels::SetProfileLanguageRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::SetProfileLanguageResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::SetProfileLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProfileLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated method: PlayFab.PlayFabProfilesInstanceAPI.SetProfilePolicy
void PlayFab::PlayFabProfilesInstanceAPI::SetProfilePolicy(::PlayFab::ProfilesModels::SetEntityProfilePolicyRequest* request, ::System::Action_1<::PlayFab::ProfilesModels::SetEntityProfilePolicyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabProfilesInstanceAPI::SetProfilePolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProfilePolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(resultCallback), ::il2cpp_utils::ExtractType(errorCallback), ::il2cpp_utils::ExtractType(customData), ::il2cpp_utils::ExtractType(extraHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, resultCallback, errorCallback, customData, extraHeaders);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabErrorCode
#include "PlayFab/PlayFabErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode Unknown
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode Unknown
void PlayFab::PlayFabErrorCode::_set_Unknown(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ConnectionError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ConnectionError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ConnectionError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ConnectionError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ConnectionError
void PlayFab::PlayFabErrorCode::_set_ConnectionError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ConnectionError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ConnectionError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode JsonParseError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_JsonParseError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_JsonParseError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "JsonParseError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode JsonParseError
void PlayFab::PlayFabErrorCode::_set_JsonParseError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_JsonParseError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "JsonParseError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode Success
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "Success"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode Success
void PlayFab::PlayFabErrorCode::_set_Success(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UnkownError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UnkownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UnkownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UnkownError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UnkownError
void PlayFab::PlayFabErrorCode::_set_UnkownError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UnkownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UnkownError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidParams
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidParams"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidParams
void PlayFab::PlayFabErrorCode::_set_InvalidParams(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidParams", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AccountNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AccountNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AccountNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AccountNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AccountNotFound
void PlayFab::PlayFabErrorCode::_set_AccountNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AccountNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AccountNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AccountBanned
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AccountBanned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AccountBanned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AccountBanned"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AccountBanned
void PlayFab::PlayFabErrorCode::_set_AccountBanned(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AccountBanned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AccountBanned", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidUsernameOrPassword
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidUsernameOrPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidUsernameOrPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidUsernameOrPassword"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidUsernameOrPassword
void PlayFab::PlayFabErrorCode::_set_InvalidUsernameOrPassword(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidUsernameOrPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidUsernameOrPassword", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidTitleId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidTitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidTitleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidTitleId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidTitleId
void PlayFab::PlayFabErrorCode::_set_InvalidTitleId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidTitleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidTitleId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidEmailAddress
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidEmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidEmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidEmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidEmailAddress
void PlayFab::PlayFabErrorCode::_set_InvalidEmailAddress(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidEmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidEmailAddress", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailAddressNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailAddressNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailAddressNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailAddressNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailAddressNotAvailable
void PlayFab::PlayFabErrorCode::_set_EmailAddressNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailAddressNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailAddressNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidUsername
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidUsername() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidUsername");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidUsername"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidUsername
void PlayFab::PlayFabErrorCode::_set_InvalidUsername(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidUsername");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidUsername", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPassword
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPassword
void PlayFab::PlayFabErrorCode::_set_InvalidPassword(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPassword", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UsernameNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UsernameNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UsernameNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UsernameNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UsernameNotAvailable
void PlayFab::PlayFabErrorCode::_set_UsernameNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UsernameNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UsernameNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSteamTicket
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSteamTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSteamTicket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSteamTicket"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSteamTicket
void PlayFab::PlayFabErrorCode::_set_InvalidSteamTicket(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSteamTicket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSteamTicket", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AccountAlreadyLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AccountAlreadyLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AccountAlreadyLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AccountAlreadyLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AccountAlreadyLinked
void PlayFab::PlayFabErrorCode::_set_AccountAlreadyLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AccountAlreadyLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AccountAlreadyLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LinkedAccountAlreadyClaimed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LinkedAccountAlreadyClaimed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LinkedAccountAlreadyClaimed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LinkedAccountAlreadyClaimed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LinkedAccountAlreadyClaimed
void PlayFab::PlayFabErrorCode::_set_LinkedAccountAlreadyClaimed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LinkedAccountAlreadyClaimed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LinkedAccountAlreadyClaimed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidFacebookToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidFacebookToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidFacebookToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidFacebookToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidFacebookToken
void PlayFab::PlayFabErrorCode::_set_InvalidFacebookToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidFacebookToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidFacebookToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AccountNotLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AccountNotLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AccountNotLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AccountNotLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AccountNotLinked
void PlayFab::PlayFabErrorCode::_set_AccountNotLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AccountNotLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AccountNotLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FailedByPaymentProvider
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FailedByPaymentProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FailedByPaymentProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FailedByPaymentProvider"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FailedByPaymentProvider
void PlayFab::PlayFabErrorCode::_set_FailedByPaymentProvider(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FailedByPaymentProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FailedByPaymentProvider", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CouponCodeNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CouponCodeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CouponCodeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CouponCodeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CouponCodeNotFound
void PlayFab::PlayFabErrorCode::_set_CouponCodeNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CouponCodeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CouponCodeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidContainerItem
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidContainerItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidContainerItem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidContainerItem"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidContainerItem
void PlayFab::PlayFabErrorCode::_set_InvalidContainerItem(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidContainerItem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidContainerItem", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ContainerNotOwned
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ContainerNotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ContainerNotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ContainerNotOwned"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ContainerNotOwned
void PlayFab::PlayFabErrorCode::_set_ContainerNotOwned(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ContainerNotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ContainerNotOwned", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode KeyNotOwned
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_KeyNotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_KeyNotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "KeyNotOwned"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode KeyNotOwned
void PlayFab::PlayFabErrorCode::_set_KeyNotOwned(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_KeyNotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "KeyNotOwned", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidItemIdInTable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidItemIdInTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidItemIdInTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidItemIdInTable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidItemIdInTable
void PlayFab::PlayFabErrorCode::_set_InvalidItemIdInTable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidItemIdInTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidItemIdInTable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidReceipt
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidReceipt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidReceipt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidReceipt"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidReceipt
void PlayFab::PlayFabErrorCode::_set_InvalidReceipt(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidReceipt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidReceipt", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ReceiptAlreadyUsed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ReceiptAlreadyUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ReceiptAlreadyUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ReceiptAlreadyUsed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ReceiptAlreadyUsed
void PlayFab::PlayFabErrorCode::_set_ReceiptAlreadyUsed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ReceiptAlreadyUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ReceiptAlreadyUsed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ReceiptCancelled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ReceiptCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ReceiptCancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ReceiptCancelled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ReceiptCancelled
void PlayFab::PlayFabErrorCode::_set_ReceiptCancelled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ReceiptCancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ReceiptCancelled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GameNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GameNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GameNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GameNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GameNotFound
void PlayFab::PlayFabErrorCode::_set_GameNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GameNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GameNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GameModeNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GameModeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GameModeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GameModeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GameModeNotFound
void PlayFab::PlayFabErrorCode::_set_GameModeNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GameModeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GameModeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidGoogleToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidGoogleToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidGoogleToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidGoogleToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidGoogleToken
void PlayFab::PlayFabErrorCode::_set_InvalidGoogleToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidGoogleToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidGoogleToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UserIsNotPartOfDeveloper
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UserIsNotPartOfDeveloper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UserIsNotPartOfDeveloper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UserIsNotPartOfDeveloper"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UserIsNotPartOfDeveloper
void PlayFab::PlayFabErrorCode::_set_UserIsNotPartOfDeveloper(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UserIsNotPartOfDeveloper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UserIsNotPartOfDeveloper", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidTitleForDeveloper
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidTitleForDeveloper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidTitleForDeveloper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidTitleForDeveloper"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidTitleForDeveloper
void PlayFab::PlayFabErrorCode::_set_InvalidTitleForDeveloper(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidTitleForDeveloper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidTitleForDeveloper", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNameConflicts
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNameConflicts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNameConflicts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNameConflicts"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNameConflicts
void PlayFab::PlayFabErrorCode::_set_TitleNameConflicts(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNameConflicts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNameConflicts", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UserisNotValid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UserisNotValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UserisNotValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UserisNotValid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UserisNotValid
void PlayFab::PlayFabErrorCode::_set_UserisNotValid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UserisNotValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UserisNotValid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ValueAlreadyExists
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ValueAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ValueAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ValueAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ValueAlreadyExists
void PlayFab::PlayFabErrorCode::_set_ValueAlreadyExists(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ValueAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ValueAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode BuildNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_BuildNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_BuildNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "BuildNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode BuildNotFound
void PlayFab::PlayFabErrorCode::_set_BuildNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_BuildNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "BuildNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PlayerNotInGame
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PlayerNotInGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PlayerNotInGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PlayerNotInGame"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PlayerNotInGame
void PlayFab::PlayFabErrorCode::_set_PlayerNotInGame(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PlayerNotInGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PlayerNotInGame", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidTicket
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidTicket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidTicket"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidTicket
void PlayFab::PlayFabErrorCode::_set_InvalidTicket(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidTicket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidTicket", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidDeveloper
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidDeveloper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidDeveloper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidDeveloper"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidDeveloper
void PlayFab::PlayFabErrorCode::_set_InvalidDeveloper(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidDeveloper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidDeveloper", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidOrderInfo
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidOrderInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidOrderInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidOrderInfo"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidOrderInfo
void PlayFab::PlayFabErrorCode::_set_InvalidOrderInfo(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidOrderInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidOrderInfo", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RegistrationIncomplete
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RegistrationIncomplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RegistrationIncomplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RegistrationIncomplete"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RegistrationIncomplete
void PlayFab::PlayFabErrorCode::_set_RegistrationIncomplete(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RegistrationIncomplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RegistrationIncomplete", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPlatform
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPlatform"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPlatform
void PlayFab::PlayFabErrorCode::_set_InvalidPlatform(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPlatform", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UnknownError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UnknownError
void PlayFab::PlayFabErrorCode::_set_UnknownError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UnknownError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SteamApplicationNotOwned
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SteamApplicationNotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SteamApplicationNotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SteamApplicationNotOwned"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SteamApplicationNotOwned
void PlayFab::PlayFabErrorCode::_set_SteamApplicationNotOwned(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SteamApplicationNotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SteamApplicationNotOwned", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode WrongSteamAccount
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_WrongSteamAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_WrongSteamAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "WrongSteamAccount"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode WrongSteamAccount
void PlayFab::PlayFabErrorCode::_set_WrongSteamAccount(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_WrongSteamAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "WrongSteamAccount", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNotActivated
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNotActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNotActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNotActivated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNotActivated
void PlayFab::PlayFabErrorCode::_set_TitleNotActivated(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNotActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNotActivated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RegistrationSessionNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RegistrationSessionNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RegistrationSessionNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RegistrationSessionNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RegistrationSessionNotFound
void PlayFab::PlayFabErrorCode::_set_RegistrationSessionNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RegistrationSessionNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RegistrationSessionNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoSuchMod
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoSuchMod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoSuchMod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoSuchMod"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoSuchMod
void PlayFab::PlayFabErrorCode::_set_NoSuchMod(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoSuchMod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoSuchMod", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FileNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FileNotFound
void PlayFab::PlayFabErrorCode::_set_FileNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateEmail
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateEmail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateEmail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateEmail"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateEmail
void PlayFab::PlayFabErrorCode::_set_DuplicateEmail(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateEmail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateEmail", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ItemNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ItemNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ItemNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ItemNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ItemNotFound
void PlayFab::PlayFabErrorCode::_set_ItemNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ItemNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ItemNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ItemNotOwned
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ItemNotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ItemNotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ItemNotOwned"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ItemNotOwned
void PlayFab::PlayFabErrorCode::_set_ItemNotOwned(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ItemNotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ItemNotOwned", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ItemNotRecycleable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ItemNotRecycleable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ItemNotRecycleable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ItemNotRecycleable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ItemNotRecycleable
void PlayFab::PlayFabErrorCode::_set_ItemNotRecycleable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ItemNotRecycleable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ItemNotRecycleable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ItemNotAffordable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ItemNotAffordable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ItemNotAffordable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ItemNotAffordable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ItemNotAffordable
void PlayFab::PlayFabErrorCode::_set_ItemNotAffordable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ItemNotAffordable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ItemNotAffordable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidVirtualCurrency
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidVirtualCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidVirtualCurrency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidVirtualCurrency"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidVirtualCurrency
void PlayFab::PlayFabErrorCode::_set_InvalidVirtualCurrency(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidVirtualCurrency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidVirtualCurrency", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode WrongVirtualCurrency
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_WrongVirtualCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_WrongVirtualCurrency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "WrongVirtualCurrency"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode WrongVirtualCurrency
void PlayFab::PlayFabErrorCode::_set_WrongVirtualCurrency(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_WrongVirtualCurrency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "WrongVirtualCurrency", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode WrongPrice
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_WrongPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_WrongPrice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "WrongPrice"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode WrongPrice
void PlayFab::PlayFabErrorCode::_set_WrongPrice(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_WrongPrice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "WrongPrice", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NonPositiveValue
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NonPositiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NonPositiveValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NonPositiveValue"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NonPositiveValue
void PlayFab::PlayFabErrorCode::_set_NonPositiveValue(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NonPositiveValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NonPositiveValue", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidRegion
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidRegion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidRegion"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidRegion
void PlayFab::PlayFabErrorCode::_set_InvalidRegion(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidRegion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidRegion", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RegionAtCapacity
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RegionAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RegionAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RegionAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RegionAtCapacity
void PlayFab::PlayFabErrorCode::_set_RegionAtCapacity(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RegionAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RegionAtCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ServerFailedToStart
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ServerFailedToStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ServerFailedToStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ServerFailedToStart"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ServerFailedToStart
void PlayFab::PlayFabErrorCode::_set_ServerFailedToStart(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ServerFailedToStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ServerFailedToStart", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NameNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NameNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NameNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NameNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NameNotAvailable
void PlayFab::PlayFabErrorCode::_set_NameNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NameNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NameNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsufficientFunds
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsufficientFunds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsufficientFunds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsufficientFunds"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsufficientFunds
void PlayFab::PlayFabErrorCode::_set_InsufficientFunds(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsufficientFunds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsufficientFunds", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidDeviceID
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidDeviceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidDeviceID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidDeviceID"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidDeviceID
void PlayFab::PlayFabErrorCode::_set_InvalidDeviceID(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidDeviceID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidDeviceID", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPushNotificationToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPushNotificationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPushNotificationToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPushNotificationToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPushNotificationToken
void PlayFab::PlayFabErrorCode::_set_InvalidPushNotificationToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPushNotificationToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPushNotificationToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoRemainingUses
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoRemainingUses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoRemainingUses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoRemainingUses"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoRemainingUses
void PlayFab::PlayFabErrorCode::_set_NoRemainingUses(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoRemainingUses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoRemainingUses", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPaymentProvider
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPaymentProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPaymentProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPaymentProvider"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPaymentProvider
void PlayFab::PlayFabErrorCode::_set_InvalidPaymentProvider(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPaymentProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPaymentProvider", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PurchaseInitializationFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PurchaseInitializationFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PurchaseInitializationFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PurchaseInitializationFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PurchaseInitializationFailure
void PlayFab::PlayFabErrorCode::_set_PurchaseInitializationFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PurchaseInitializationFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PurchaseInitializationFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateUsername
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateUsername() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateUsername");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateUsername"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateUsername
void PlayFab::PlayFabErrorCode::_set_DuplicateUsername(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateUsername");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateUsername", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidBuyerInfo
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidBuyerInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidBuyerInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidBuyerInfo"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidBuyerInfo
void PlayFab::PlayFabErrorCode::_set_InvalidBuyerInfo(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidBuyerInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidBuyerInfo", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoGameModeParamsSet
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoGameModeParamsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoGameModeParamsSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoGameModeParamsSet"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoGameModeParamsSet
void PlayFab::PlayFabErrorCode::_set_NoGameModeParamsSet(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoGameModeParamsSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoGameModeParamsSet", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode BodyTooLarge
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_BodyTooLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_BodyTooLarge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "BodyTooLarge"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode BodyTooLarge
void PlayFab::PlayFabErrorCode::_set_BodyTooLarge(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_BodyTooLarge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "BodyTooLarge", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ReservedWordInBody
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ReservedWordInBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ReservedWordInBody");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ReservedWordInBody"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ReservedWordInBody
void PlayFab::PlayFabErrorCode::_set_ReservedWordInBody(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ReservedWordInBody");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ReservedWordInBody", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidTypeInBody
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidTypeInBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidTypeInBody");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidTypeInBody"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidTypeInBody
void PlayFab::PlayFabErrorCode::_set_InvalidTypeInBody(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidTypeInBody");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidTypeInBody", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidRequest
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidRequest
void PlayFab::PlayFabErrorCode::_set_InvalidRequest(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ReservedEventName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ReservedEventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ReservedEventName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ReservedEventName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ReservedEventName
void PlayFab::PlayFabErrorCode::_set_ReservedEventName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ReservedEventName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ReservedEventName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidUserStatistics
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidUserStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidUserStatistics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidUserStatistics"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidUserStatistics
void PlayFab::PlayFabErrorCode::_set_InvalidUserStatistics(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidUserStatistics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidUserStatistics", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NotAuthenticated
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NotAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NotAuthenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NotAuthenticated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NotAuthenticated
void PlayFab::PlayFabErrorCode::_set_NotAuthenticated(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NotAuthenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NotAuthenticated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StreamAlreadyExists
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StreamAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StreamAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StreamAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StreamAlreadyExists
void PlayFab::PlayFabErrorCode::_set_StreamAlreadyExists(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StreamAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StreamAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ErrorCreatingStream
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ErrorCreatingStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ErrorCreatingStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ErrorCreatingStream"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ErrorCreatingStream
void PlayFab::PlayFabErrorCode::_set_ErrorCreatingStream(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ErrorCreatingStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ErrorCreatingStream", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StreamNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StreamNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StreamNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StreamNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StreamNotFound
void PlayFab::PlayFabErrorCode::_set_StreamNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StreamNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StreamNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidAccount
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidAccount"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidAccount
void PlayFab::PlayFabErrorCode::_set_InvalidAccount(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidAccount", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PurchaseDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PurchaseDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PurchaseDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PurchaseDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PurchaseDoesNotExist
void PlayFab::PlayFabErrorCode::_set_PurchaseDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PurchaseDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PurchaseDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPurchaseTransactionStatus
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPurchaseTransactionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPurchaseTransactionStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPurchaseTransactionStatus"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPurchaseTransactionStatus
void PlayFab::PlayFabErrorCode::_set_InvalidPurchaseTransactionStatus(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPurchaseTransactionStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPurchaseTransactionStatus", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode APINotEnabledForGameClientAccess
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_APINotEnabledForGameClientAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_APINotEnabledForGameClientAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "APINotEnabledForGameClientAccess"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode APINotEnabledForGameClientAccess
void PlayFab::PlayFabErrorCode::_set_APINotEnabledForGameClientAccess(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_APINotEnabledForGameClientAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "APINotEnabledForGameClientAccess", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoPushNotificationARNForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoPushNotificationARNForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoPushNotificationARNForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoPushNotificationARNForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoPushNotificationARNForTitle
void PlayFab::PlayFabErrorCode::_set_NoPushNotificationARNForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoPushNotificationARNForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoPushNotificationARNForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode BuildAlreadyExists
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_BuildAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_BuildAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "BuildAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode BuildAlreadyExists
void PlayFab::PlayFabErrorCode::_set_BuildAlreadyExists(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_BuildAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "BuildAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode BuildPackageDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_BuildPackageDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_BuildPackageDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "BuildPackageDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode BuildPackageDoesNotExist
void PlayFab::PlayFabErrorCode::_set_BuildPackageDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_BuildPackageDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "BuildPackageDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CustomAnalyticsEventsNotEnabledForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CustomAnalyticsEventsNotEnabledForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CustomAnalyticsEventsNotEnabledForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CustomAnalyticsEventsNotEnabledForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CustomAnalyticsEventsNotEnabledForTitle
void PlayFab::PlayFabErrorCode::_set_CustomAnalyticsEventsNotEnabledForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CustomAnalyticsEventsNotEnabledForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CustomAnalyticsEventsNotEnabledForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSharedGroupId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSharedGroupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSharedGroupId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSharedGroupId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSharedGroupId
void PlayFab::PlayFabErrorCode::_set_InvalidSharedGroupId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSharedGroupId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSharedGroupId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NotAuthorized
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NotAuthorized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NotAuthorized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NotAuthorized"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NotAuthorized
void PlayFab::PlayFabErrorCode::_set_NotAuthorized(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NotAuthorized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NotAuthorized", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MissingTitleGoogleProperties
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MissingTitleGoogleProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MissingTitleGoogleProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MissingTitleGoogleProperties"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MissingTitleGoogleProperties
void PlayFab::PlayFabErrorCode::_set_MissingTitleGoogleProperties(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MissingTitleGoogleProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MissingTitleGoogleProperties", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidItemProperties
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidItemProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidItemProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidItemProperties"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidItemProperties
void PlayFab::PlayFabErrorCode::_set_InvalidItemProperties(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidItemProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidItemProperties", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPSNAuthCode
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPSNAuthCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPSNAuthCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPSNAuthCode"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPSNAuthCode
void PlayFab::PlayFabErrorCode::_set_InvalidPSNAuthCode(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPSNAuthCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPSNAuthCode", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidItemId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidItemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidItemId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidItemId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidItemId
void PlayFab::PlayFabErrorCode::_set_InvalidItemId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidItemId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidItemId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotEnabledForAccount
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotEnabledForAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotEnabledForAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotEnabledForAccount"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotEnabledForAccount
void PlayFab::PlayFabErrorCode::_set_PushNotEnabledForAccount(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotEnabledForAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotEnabledForAccount", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushServiceError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushServiceError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushServiceError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushServiceError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushServiceError
void PlayFab::PlayFabErrorCode::_set_PushServiceError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushServiceError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushServiceError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ReceiptDoesNotContainInAppItems
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ReceiptDoesNotContainInAppItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ReceiptDoesNotContainInAppItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ReceiptDoesNotContainInAppItems"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ReceiptDoesNotContainInAppItems
void PlayFab::PlayFabErrorCode::_set_ReceiptDoesNotContainInAppItems(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ReceiptDoesNotContainInAppItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ReceiptDoesNotContainInAppItems", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ReceiptContainsMultipleInAppItems
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ReceiptContainsMultipleInAppItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ReceiptContainsMultipleInAppItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ReceiptContainsMultipleInAppItems"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ReceiptContainsMultipleInAppItems
void PlayFab::PlayFabErrorCode::_set_ReceiptContainsMultipleInAppItems(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ReceiptContainsMultipleInAppItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ReceiptContainsMultipleInAppItems", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidBundleID
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidBundleID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidBundleID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidBundleID"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidBundleID
void PlayFab::PlayFabErrorCode::_set_InvalidBundleID(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidBundleID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidBundleID", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode JavascriptException
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_JavascriptException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_JavascriptException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "JavascriptException"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode JavascriptException
void PlayFab::PlayFabErrorCode::_set_JavascriptException(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_JavascriptException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "JavascriptException", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSessionTicket
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSessionTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSessionTicket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSessionTicket"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSessionTicket
void PlayFab::PlayFabErrorCode::_set_InvalidSessionTicket(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSessionTicket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSessionTicket", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UnableToConnectToDatabase
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UnableToConnectToDatabase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UnableToConnectToDatabase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UnableToConnectToDatabase"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UnableToConnectToDatabase
void PlayFab::PlayFabErrorCode::_set_UnableToConnectToDatabase(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UnableToConnectToDatabase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UnableToConnectToDatabase", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InternalServerError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InternalServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InternalServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InternalServerError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InternalServerError
void PlayFab::PlayFabErrorCode::_set_InternalServerError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InternalServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InternalServerError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidReportDate
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidReportDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidReportDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidReportDate"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidReportDate
void PlayFab::PlayFabErrorCode::_set_InvalidReportDate(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidReportDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidReportDate", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ReportNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ReportNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ReportNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ReportNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ReportNotAvailable
void PlayFab::PlayFabErrorCode::_set_ReportNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ReportNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ReportNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DatabaseThroughputExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DatabaseThroughputExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DatabaseThroughputExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DatabaseThroughputExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DatabaseThroughputExceeded
void PlayFab::PlayFabErrorCode::_set_DatabaseThroughputExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DatabaseThroughputExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DatabaseThroughputExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidGameTicket
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidGameTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidGameTicket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidGameTicket"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidGameTicket
void PlayFab::PlayFabErrorCode::_set_InvalidGameTicket(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidGameTicket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidGameTicket", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExpiredGameTicket
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExpiredGameTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExpiredGameTicket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExpiredGameTicket"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExpiredGameTicket
void PlayFab::PlayFabErrorCode::_set_ExpiredGameTicket(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExpiredGameTicket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExpiredGameTicket", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GameTicketDoesNotMatchLobby
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GameTicketDoesNotMatchLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GameTicketDoesNotMatchLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GameTicketDoesNotMatchLobby"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GameTicketDoesNotMatchLobby
void PlayFab::PlayFabErrorCode::_set_GameTicketDoesNotMatchLobby(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GameTicketDoesNotMatchLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GameTicketDoesNotMatchLobby", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LinkedDeviceAlreadyClaimed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LinkedDeviceAlreadyClaimed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LinkedDeviceAlreadyClaimed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LinkedDeviceAlreadyClaimed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LinkedDeviceAlreadyClaimed
void PlayFab::PlayFabErrorCode::_set_LinkedDeviceAlreadyClaimed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LinkedDeviceAlreadyClaimed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LinkedDeviceAlreadyClaimed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DeviceAlreadyLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DeviceAlreadyLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DeviceAlreadyLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DeviceAlreadyLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DeviceAlreadyLinked
void PlayFab::PlayFabErrorCode::_set_DeviceAlreadyLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DeviceAlreadyLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DeviceAlreadyLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DeviceNotLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DeviceNotLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DeviceNotLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DeviceNotLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DeviceNotLinked
void PlayFab::PlayFabErrorCode::_set_DeviceNotLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DeviceNotLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DeviceNotLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartialFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartialFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartialFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartialFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartialFailure
void PlayFab::PlayFabErrorCode::_set_PartialFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartialFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartialFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PublisherNotSet
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PublisherNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PublisherNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PublisherNotSet"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PublisherNotSet
void PlayFab::PlayFabErrorCode::_set_PublisherNotSet(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PublisherNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PublisherNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ServiceUnavailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ServiceUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ServiceUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ServiceUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ServiceUnavailable
void PlayFab::PlayFabErrorCode::_set_ServiceUnavailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ServiceUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ServiceUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VersionNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VersionNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VersionNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VersionNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VersionNotFound
void PlayFab::PlayFabErrorCode::_set_VersionNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VersionNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VersionNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RevisionNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RevisionNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RevisionNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RevisionNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RevisionNotFound
void PlayFab::PlayFabErrorCode::_set_RevisionNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RevisionNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RevisionNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPublisherId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPublisherId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPublisherId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPublisherId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPublisherId
void PlayFab::PlayFabErrorCode::_set_InvalidPublisherId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPublisherId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPublisherId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DownstreamServiceUnavailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DownstreamServiceUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DownstreamServiceUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DownstreamServiceUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DownstreamServiceUnavailable
void PlayFab::PlayFabErrorCode::_set_DownstreamServiceUnavailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DownstreamServiceUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DownstreamServiceUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode APINotIncludedInTitleUsageTier
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_APINotIncludedInTitleUsageTier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_APINotIncludedInTitleUsageTier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "APINotIncludedInTitleUsageTier"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode APINotIncludedInTitleUsageTier
void PlayFab::PlayFabErrorCode::_set_APINotIncludedInTitleUsageTier(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_APINotIncludedInTitleUsageTier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "APINotIncludedInTitleUsageTier", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DAULimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DAULimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DAULimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DAULimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DAULimitExceeded
void PlayFab::PlayFabErrorCode::_set_DAULimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DAULimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DAULimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode APIRequestLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_APIRequestLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_APIRequestLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "APIRequestLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode APIRequestLimitExceeded
void PlayFab::PlayFabErrorCode::_set_APIRequestLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_APIRequestLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "APIRequestLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidAPIEndpoint
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidAPIEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidAPIEndpoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidAPIEndpoint"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidAPIEndpoint
void PlayFab::PlayFabErrorCode::_set_InvalidAPIEndpoint(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidAPIEndpoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidAPIEndpoint", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode BuildNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_BuildNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_BuildNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "BuildNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode BuildNotAvailable
void PlayFab::PlayFabErrorCode::_set_BuildNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_BuildNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "BuildNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ConcurrentEditError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ConcurrentEditError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ConcurrentEditError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ConcurrentEditError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ConcurrentEditError
void PlayFab::PlayFabErrorCode::_set_ConcurrentEditError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ConcurrentEditError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ConcurrentEditError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ContentNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ContentNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ContentNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ContentNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ContentNotFound
void PlayFab::PlayFabErrorCode::_set_ContentNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ContentNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ContentNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CharacterNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CharacterNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CharacterNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CharacterNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CharacterNotFound
void PlayFab::PlayFabErrorCode::_set_CharacterNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CharacterNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CharacterNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptNotFound
void PlayFab::PlayFabErrorCode::_set_CloudScriptNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ContentQuotaExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ContentQuotaExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ContentQuotaExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ContentQuotaExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ContentQuotaExceeded
void PlayFab::PlayFabErrorCode::_set_ContentQuotaExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ContentQuotaExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ContentQuotaExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidCharacterStatistics
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidCharacterStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidCharacterStatistics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidCharacterStatistics"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidCharacterStatistics
void PlayFab::PlayFabErrorCode::_set_InvalidCharacterStatistics(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidCharacterStatistics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidCharacterStatistics", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PhotonNotEnabledForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PhotonNotEnabledForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PhotonNotEnabledForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PhotonNotEnabledForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PhotonNotEnabledForTitle
void PlayFab::PlayFabErrorCode::_set_PhotonNotEnabledForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PhotonNotEnabledForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PhotonNotEnabledForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PhotonApplicationNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PhotonApplicationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PhotonApplicationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PhotonApplicationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PhotonApplicationNotFound
void PlayFab::PlayFabErrorCode::_set_PhotonApplicationNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PhotonApplicationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PhotonApplicationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PhotonApplicationNotAssociatedWithTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PhotonApplicationNotAssociatedWithTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PhotonApplicationNotAssociatedWithTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PhotonApplicationNotAssociatedWithTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PhotonApplicationNotAssociatedWithTitle
void PlayFab::PlayFabErrorCode::_set_PhotonApplicationNotAssociatedWithTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PhotonApplicationNotAssociatedWithTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PhotonApplicationNotAssociatedWithTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidEmailOrPassword
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidEmailOrPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidEmailOrPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidEmailOrPassword"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidEmailOrPassword
void PlayFab::PlayFabErrorCode::_set_InvalidEmailOrPassword(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidEmailOrPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidEmailOrPassword", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FacebookAPIError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FacebookAPIError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FacebookAPIError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FacebookAPIError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FacebookAPIError
void PlayFab::PlayFabErrorCode::_set_FacebookAPIError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FacebookAPIError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FacebookAPIError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidContentType
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidContentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidContentType"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidContentType
void PlayFab::PlayFabErrorCode::_set_InvalidContentType(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidContentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidContentType", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode KeyLengthExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_KeyLengthExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_KeyLengthExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "KeyLengthExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode KeyLengthExceeded
void PlayFab::PlayFabErrorCode::_set_KeyLengthExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_KeyLengthExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "KeyLengthExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DataLengthExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DataLengthExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DataLengthExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DataLengthExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DataLengthExceeded
void PlayFab::PlayFabErrorCode::_set_DataLengthExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DataLengthExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DataLengthExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TooManyKeys
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TooManyKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TooManyKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TooManyKeys"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TooManyKeys
void PlayFab::PlayFabErrorCode::_set_TooManyKeys(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TooManyKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TooManyKeys", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FreeTierCannotHaveVirtualCurrency
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FreeTierCannotHaveVirtualCurrency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FreeTierCannotHaveVirtualCurrency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FreeTierCannotHaveVirtualCurrency"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FreeTierCannotHaveVirtualCurrency
void PlayFab::PlayFabErrorCode::_set_FreeTierCannotHaveVirtualCurrency(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FreeTierCannotHaveVirtualCurrency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FreeTierCannotHaveVirtualCurrency", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MissingAmazonSharedKey
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MissingAmazonSharedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MissingAmazonSharedKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MissingAmazonSharedKey"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MissingAmazonSharedKey
void PlayFab::PlayFabErrorCode::_set_MissingAmazonSharedKey(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MissingAmazonSharedKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MissingAmazonSharedKey", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AmazonValidationError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AmazonValidationError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AmazonValidationError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AmazonValidationError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AmazonValidationError
void PlayFab::PlayFabErrorCode::_set_AmazonValidationError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AmazonValidationError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AmazonValidationError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPSNIssuerId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPSNIssuerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPSNIssuerId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPSNIssuerId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPSNIssuerId
void PlayFab::PlayFabErrorCode::_set_InvalidPSNIssuerId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPSNIssuerId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPSNIssuerId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PSNInaccessible
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PSNInaccessible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PSNInaccessible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PSNInaccessible"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PSNInaccessible
void PlayFab::PlayFabErrorCode::_set_PSNInaccessible(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PSNInaccessible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PSNInaccessible", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExpiredAuthToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExpiredAuthToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExpiredAuthToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExpiredAuthToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExpiredAuthToken
void PlayFab::PlayFabErrorCode::_set_ExpiredAuthToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExpiredAuthToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExpiredAuthToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FailedToGetEntitlements
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FailedToGetEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FailedToGetEntitlements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FailedToGetEntitlements"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FailedToGetEntitlements
void PlayFab::PlayFabErrorCode::_set_FailedToGetEntitlements(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FailedToGetEntitlements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FailedToGetEntitlements", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FailedToConsumeEntitlement
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FailedToConsumeEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FailedToConsumeEntitlement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FailedToConsumeEntitlement"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FailedToConsumeEntitlement
void PlayFab::PlayFabErrorCode::_set_FailedToConsumeEntitlement(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FailedToConsumeEntitlement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FailedToConsumeEntitlement", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAcceptingUserNotAllowed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAcceptingUserNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAcceptingUserNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAcceptingUserNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAcceptingUserNotAllowed
void PlayFab::PlayFabErrorCode::_set_TradeAcceptingUserNotAllowed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAcceptingUserNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAcceptingUserNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsAssignedToCharacter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsAssignedToCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsAssignedToCharacter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsAssignedToCharacter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsAssignedToCharacter
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsAssignedToCharacter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsAssignedToCharacter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsAssignedToCharacter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsBundle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsBundle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsBundle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsBundle
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsBundle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsBundle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsBundle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeStatusNotValidForCancelling
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeStatusNotValidForCancelling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeStatusNotValidForCancelling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeStatusNotValidForCancelling"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeStatusNotValidForCancelling
void PlayFab::PlayFabErrorCode::_set_TradeStatusNotValidForCancelling(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeStatusNotValidForCancelling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeStatusNotValidForCancelling", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeStatusNotValidForAccepting
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeStatusNotValidForAccepting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeStatusNotValidForAccepting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeStatusNotValidForAccepting"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeStatusNotValidForAccepting
void PlayFab::PlayFabErrorCode::_set_TradeStatusNotValidForAccepting(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeStatusNotValidForAccepting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeStatusNotValidForAccepting", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeDoesNotExist
void PlayFab::PlayFabErrorCode::_set_TradeDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeCancelled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeCancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeCancelled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeCancelled
void PlayFab::PlayFabErrorCode::_set_TradeCancelled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeCancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeCancelled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAlreadyFilled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAlreadyFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAlreadyFilled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAlreadyFilled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAlreadyFilled
void PlayFab::PlayFabErrorCode::_set_TradeAlreadyFilled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAlreadyFilled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAlreadyFilled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeWaitForStatusTimeout
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeWaitForStatusTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeWaitForStatusTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeWaitForStatusTimeout"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeWaitForStatusTimeout
void PlayFab::PlayFabErrorCode::_set_TradeWaitForStatusTimeout(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeWaitForStatusTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeWaitForStatusTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemExpired
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemExpired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemExpired
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemExpired(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemExpired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeMissingOfferedAndAcceptedItems
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeMissingOfferedAndAcceptedItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeMissingOfferedAndAcceptedItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeMissingOfferedAndAcceptedItems"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeMissingOfferedAndAcceptedItems
void PlayFab::PlayFabErrorCode::_set_TradeMissingOfferedAndAcceptedItems(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeMissingOfferedAndAcceptedItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeMissingOfferedAndAcceptedItems", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAcceptedItemIsBundle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAcceptedItemIsBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAcceptedItemIsBundle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAcceptedItemIsBundle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAcceptedItemIsBundle
void PlayFab::PlayFabErrorCode::_set_TradeAcceptedItemIsBundle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAcceptedItemIsBundle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAcceptedItemIsBundle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAcceptedItemIsStackable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAcceptedItemIsStackable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAcceptedItemIsStackable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAcceptedItemIsStackable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAcceptedItemIsStackable
void PlayFab::PlayFabErrorCode::_set_TradeAcceptedItemIsStackable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAcceptedItemIsStackable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAcceptedItemIsStackable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemInvalidStatus
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemInvalidStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemInvalidStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemInvalidStatus"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemInvalidStatus
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemInvalidStatus(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemInvalidStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemInvalidStatus", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAcceptedCatalogItemInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAcceptedCatalogItemInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAcceptedCatalogItemInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAcceptedCatalogItemInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAcceptedCatalogItemInvalid
void PlayFab::PlayFabErrorCode::_set_TradeAcceptedCatalogItemInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAcceptedCatalogItemInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAcceptedCatalogItemInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAllowedUsersInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAllowedUsersInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAllowedUsersInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAllowedUsersInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAllowedUsersInvalid
void PlayFab::PlayFabErrorCode::_set_TradeAllowedUsersInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAllowedUsersInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAllowedUsersInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemDoesNotExist
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsConsumed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsConsumed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsConsumed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsConsumed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsConsumed
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsConsumed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsConsumed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsConsumed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsStackable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsStackable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsStackable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsStackable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsStackable
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsStackable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsStackable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsStackable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAcceptedItemsMismatch
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAcceptedItemsMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAcceptedItemsMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAcceptedItemsMismatch"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAcceptedItemsMismatch
void PlayFab::PlayFabErrorCode::_set_TradeAcceptedItemsMismatch(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAcceptedItemsMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAcceptedItemsMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidKongregateToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidKongregateToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidKongregateToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidKongregateToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidKongregateToken
void PlayFab::PlayFabErrorCode::_set_InvalidKongregateToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidKongregateToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidKongregateToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FeatureNotConfiguredForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FeatureNotConfiguredForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FeatureNotConfiguredForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FeatureNotConfiguredForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FeatureNotConfiguredForTitle
void PlayFab::PlayFabErrorCode::_set_FeatureNotConfiguredForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FeatureNotConfiguredForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FeatureNotConfiguredForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoMatchingCatalogItemForReceipt
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoMatchingCatalogItemForReceipt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoMatchingCatalogItemForReceipt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoMatchingCatalogItemForReceipt"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoMatchingCatalogItemForReceipt
void PlayFab::PlayFabErrorCode::_set_NoMatchingCatalogItemForReceipt(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoMatchingCatalogItemForReceipt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoMatchingCatalogItemForReceipt", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidCurrencyCode
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidCurrencyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidCurrencyCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidCurrencyCode"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidCurrencyCode
void PlayFab::PlayFabErrorCode::_set_InvalidCurrencyCode(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidCurrencyCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidCurrencyCode", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoRealMoneyPriceForCatalogItem
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoRealMoneyPriceForCatalogItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoRealMoneyPriceForCatalogItem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoRealMoneyPriceForCatalogItem"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoRealMoneyPriceForCatalogItem
void PlayFab::PlayFabErrorCode::_set_NoRealMoneyPriceForCatalogItem(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoRealMoneyPriceForCatalogItem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoRealMoneyPriceForCatalogItem", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsNotTradable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsNotTradable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeInventoryItemIsNotTradable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsNotTradable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeInventoryItemIsNotTradable
void PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsNotTradable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeInventoryItemIsNotTradable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeInventoryItemIsNotTradable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TradeAcceptedCatalogItemIsNotTradable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TradeAcceptedCatalogItemIsNotTradable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TradeAcceptedCatalogItemIsNotTradable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TradeAcceptedCatalogItemIsNotTradable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TradeAcceptedCatalogItemIsNotTradable
void PlayFab::PlayFabErrorCode::_set_TradeAcceptedCatalogItemIsNotTradable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TradeAcceptedCatalogItemIsNotTradable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TradeAcceptedCatalogItemIsNotTradable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UsersAlreadyFriends
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UsersAlreadyFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UsersAlreadyFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UsersAlreadyFriends"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UsersAlreadyFriends
void PlayFab::PlayFabErrorCode::_set_UsersAlreadyFriends(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UsersAlreadyFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UsersAlreadyFriends", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LinkedIdentifierAlreadyClaimed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LinkedIdentifierAlreadyClaimed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LinkedIdentifierAlreadyClaimed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LinkedIdentifierAlreadyClaimed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LinkedIdentifierAlreadyClaimed
void PlayFab::PlayFabErrorCode::_set_LinkedIdentifierAlreadyClaimed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LinkedIdentifierAlreadyClaimed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LinkedIdentifierAlreadyClaimed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CustomIdNotLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CustomIdNotLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CustomIdNotLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CustomIdNotLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CustomIdNotLinked
void PlayFab::PlayFabErrorCode::_set_CustomIdNotLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CustomIdNotLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CustomIdNotLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TotalDataSizeExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TotalDataSizeExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TotalDataSizeExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TotalDataSizeExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TotalDataSizeExceeded
void PlayFab::PlayFabErrorCode::_set_TotalDataSizeExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TotalDataSizeExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TotalDataSizeExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DeleteKeyConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DeleteKeyConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DeleteKeyConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DeleteKeyConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DeleteKeyConflict
void PlayFab::PlayFabErrorCode::_set_DeleteKeyConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DeleteKeyConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DeleteKeyConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidXboxLiveToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidXboxLiveToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidXboxLiveToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidXboxLiveToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidXboxLiveToken
void PlayFab::PlayFabErrorCode::_set_InvalidXboxLiveToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidXboxLiveToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidXboxLiveToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExpiredXboxLiveToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExpiredXboxLiveToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExpiredXboxLiveToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExpiredXboxLiveToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExpiredXboxLiveToken
void PlayFab::PlayFabErrorCode::_set_ExpiredXboxLiveToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExpiredXboxLiveToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExpiredXboxLiveToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ResettableStatisticVersionRequired
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ResettableStatisticVersionRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ResettableStatisticVersionRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ResettableStatisticVersionRequired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ResettableStatisticVersionRequired
void PlayFab::PlayFabErrorCode::_set_ResettableStatisticVersionRequired(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ResettableStatisticVersionRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ResettableStatisticVersionRequired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NotAuthorizedByTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NotAuthorizedByTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NotAuthorizedByTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NotAuthorizedByTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NotAuthorizedByTitle
void PlayFab::PlayFabErrorCode::_set_NotAuthorizedByTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NotAuthorizedByTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NotAuthorizedByTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoPartnerEnabled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoPartnerEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoPartnerEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoPartnerEnabled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoPartnerEnabled
void PlayFab::PlayFabErrorCode::_set_NoPartnerEnabled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoPartnerEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoPartnerEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPartnerResponse
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPartnerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPartnerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPartnerResponse"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPartnerResponse
void PlayFab::PlayFabErrorCode::_set_InvalidPartnerResponse(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPartnerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPartnerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode APINotEnabledForGameServerAccess
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_APINotEnabledForGameServerAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_APINotEnabledForGameServerAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "APINotEnabledForGameServerAccess"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode APINotEnabledForGameServerAccess
void PlayFab::PlayFabErrorCode::_set_APINotEnabledForGameServerAccess(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_APINotEnabledForGameServerAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "APINotEnabledForGameServerAccess", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticNotFound
void PlayFab::PlayFabErrorCode::_set_StatisticNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticNameConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticNameConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticNameConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticNameConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticNameConflict
void PlayFab::PlayFabErrorCode::_set_StatisticNameConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticNameConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticNameConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticVersionClosedForWrites
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticVersionClosedForWrites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticVersionClosedForWrites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticVersionClosedForWrites"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticVersionClosedForWrites
void PlayFab::PlayFabErrorCode::_set_StatisticVersionClosedForWrites(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticVersionClosedForWrites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticVersionClosedForWrites", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticVersionInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticVersionInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticVersionInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticVersionInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticVersionInvalid
void PlayFab::PlayFabErrorCode::_set_StatisticVersionInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticVersionInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticVersionInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode APIClientRequestRateLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_APIClientRequestRateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_APIClientRequestRateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "APIClientRequestRateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode APIClientRequestRateLimitExceeded
void PlayFab::PlayFabErrorCode::_set_APIClientRequestRateLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_APIClientRequestRateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "APIClientRequestRateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidJSONContent
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidJSONContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidJSONContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidJSONContent"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidJSONContent
void PlayFab::PlayFabErrorCode::_set_InvalidJSONContent(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidJSONContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidJSONContent", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidDropTable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidDropTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidDropTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidDropTable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidDropTable
void PlayFab::PlayFabErrorCode::_set_InvalidDropTable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidDropTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidDropTable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticVersionAlreadyIncrementedForScheduledInterval
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticVersionAlreadyIncrementedForScheduledInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticVersionAlreadyIncrementedForScheduledInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticVersionAlreadyIncrementedForScheduledInterval"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticVersionAlreadyIncrementedForScheduledInterval
void PlayFab::PlayFabErrorCode::_set_StatisticVersionAlreadyIncrementedForScheduledInterval(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticVersionAlreadyIncrementedForScheduledInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticVersionAlreadyIncrementedForScheduledInterval", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticCountLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticCountLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticCountLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticCountLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticCountLimitExceeded
void PlayFab::PlayFabErrorCode::_set_StatisticCountLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticCountLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticCountLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticVersionIncrementRateExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticVersionIncrementRateExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticVersionIncrementRateExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticVersionIncrementRateExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticVersionIncrementRateExceeded
void PlayFab::PlayFabErrorCode::_set_StatisticVersionIncrementRateExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticVersionIncrementRateExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticVersionIncrementRateExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ContainerKeyInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ContainerKeyInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ContainerKeyInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ContainerKeyInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ContainerKeyInvalid
void PlayFab::PlayFabErrorCode::_set_ContainerKeyInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ContainerKeyInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ContainerKeyInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptExecutionTimeLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptExecutionTimeLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptExecutionTimeLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptExecutionTimeLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptExecutionTimeLimitExceeded
void PlayFab::PlayFabErrorCode::_set_CloudScriptExecutionTimeLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptExecutionTimeLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptExecutionTimeLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoWritePermissionsForEvent
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoWritePermissionsForEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoWritePermissionsForEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoWritePermissionsForEvent"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoWritePermissionsForEvent
void PlayFab::PlayFabErrorCode::_set_NoWritePermissionsForEvent(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoWritePermissionsForEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoWritePermissionsForEvent", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptFunctionArgumentSizeExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptFunctionArgumentSizeExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptFunctionArgumentSizeExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptFunctionArgumentSizeExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptFunctionArgumentSizeExceeded
void PlayFab::PlayFabErrorCode::_set_CloudScriptFunctionArgumentSizeExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptFunctionArgumentSizeExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptFunctionArgumentSizeExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptAPIRequestCountExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptAPIRequestCountExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptAPIRequestCountExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptAPIRequestCountExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptAPIRequestCountExceeded
void PlayFab::PlayFabErrorCode::_set_CloudScriptAPIRequestCountExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptAPIRequestCountExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptAPIRequestCountExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptAPIRequestError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptAPIRequestError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptAPIRequestError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptAPIRequestError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptAPIRequestError
void PlayFab::PlayFabErrorCode::_set_CloudScriptAPIRequestError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptAPIRequestError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptAPIRequestError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptHTTPRequestError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptHTTPRequestError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptHTTPRequestError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptHTTPRequestError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptHTTPRequestError
void PlayFab::PlayFabErrorCode::_set_CloudScriptHTTPRequestError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptHTTPRequestError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptHTTPRequestError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsufficientGuildRole
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsufficientGuildRole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsufficientGuildRole");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsufficientGuildRole"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsufficientGuildRole
void PlayFab::PlayFabErrorCode::_set_InsufficientGuildRole(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsufficientGuildRole");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsufficientGuildRole", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GuildNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GuildNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GuildNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GuildNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GuildNotFound
void PlayFab::PlayFabErrorCode::_set_GuildNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GuildNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GuildNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode OverLimit
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_OverLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_OverLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "OverLimit"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode OverLimit
void PlayFab::PlayFabErrorCode::_set_OverLimit(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_OverLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "OverLimit", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EventNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EventNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EventNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EventNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EventNotFound
void PlayFab::PlayFabErrorCode::_set_EventNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EventNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EventNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidEventField
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidEventField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidEventField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidEventField"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidEventField
void PlayFab::PlayFabErrorCode::_set_InvalidEventField(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidEventField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidEventField", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidEventName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidEventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidEventName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidEventName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidEventName
void PlayFab::PlayFabErrorCode::_set_InvalidEventName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidEventName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidEventName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogNotConfigured
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogNotConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogNotConfigured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogNotConfigured"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogNotConfigured
void PlayFab::PlayFabErrorCode::_set_CatalogNotConfigured(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogNotConfigured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogNotConfigured", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode OperationNotSupportedForPlatform
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_OperationNotSupportedForPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_OperationNotSupportedForPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "OperationNotSupportedForPlatform"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode OperationNotSupportedForPlatform
void PlayFab::PlayFabErrorCode::_set_OperationNotSupportedForPlatform(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_OperationNotSupportedForPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "OperationNotSupportedForPlatform", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SegmentNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SegmentNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SegmentNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SegmentNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SegmentNotFound
void PlayFab::PlayFabErrorCode::_set_SegmentNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SegmentNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SegmentNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StoreNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StoreNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StoreNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StoreNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StoreNotFound
void PlayFab::PlayFabErrorCode::_set_StoreNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StoreNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StoreNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidStatisticName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidStatisticName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidStatisticName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidStatisticName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidStatisticName
void PlayFab::PlayFabErrorCode::_set_InvalidStatisticName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidStatisticName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidStatisticName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNotQualifiedForLimit
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNotQualifiedForLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNotQualifiedForLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNotQualifiedForLimit"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNotQualifiedForLimit
void PlayFab::PlayFabErrorCode::_set_TitleNotQualifiedForLimit(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNotQualifiedForLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNotQualifiedForLimit", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidServiceLimitLevel
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidServiceLimitLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidServiceLimitLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidServiceLimitLevel"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidServiceLimitLevel
void PlayFab::PlayFabErrorCode::_set_InvalidServiceLimitLevel(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidServiceLimitLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidServiceLimitLevel", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ServiceLimitLevelInTransition
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ServiceLimitLevelInTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ServiceLimitLevelInTransition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ServiceLimitLevelInTransition"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ServiceLimitLevelInTransition
void PlayFab::PlayFabErrorCode::_set_ServiceLimitLevelInTransition(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ServiceLimitLevelInTransition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ServiceLimitLevelInTransition", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CouponAlreadyRedeemed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CouponAlreadyRedeemed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CouponAlreadyRedeemed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CouponAlreadyRedeemed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CouponAlreadyRedeemed
void PlayFab::PlayFabErrorCode::_set_CouponAlreadyRedeemed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CouponAlreadyRedeemed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CouponAlreadyRedeemed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GameServerBuildSizeLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GameServerBuildSizeLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GameServerBuildSizeLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GameServerBuildSizeLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GameServerBuildSizeLimitExceeded
void PlayFab::PlayFabErrorCode::_set_GameServerBuildSizeLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GameServerBuildSizeLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GameServerBuildSizeLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GameServerBuildCountLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GameServerBuildCountLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GameServerBuildCountLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GameServerBuildCountLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GameServerBuildCountLimitExceeded
void PlayFab::PlayFabErrorCode::_set_GameServerBuildCountLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GameServerBuildCountLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GameServerBuildCountLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCountLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCountLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCountLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCountLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCountLimitExceeded
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCountLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCountLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCountLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCodeExists
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCodeExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCodeExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCodeExists"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCodeExists
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCodeExists(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCodeExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCodeExists", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNewsItemCountLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNewsItemCountLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNewsItemCountLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNewsItemCountLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNewsItemCountLimitExceeded
void PlayFab::PlayFabErrorCode::_set_TitleNewsItemCountLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNewsItemCountLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNewsItemCountLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidTwitchToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidTwitchToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidTwitchToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidTwitchToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidTwitchToken
void PlayFab::PlayFabErrorCode::_set_InvalidTwitchToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidTwitchToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidTwitchToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TwitchResponseError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TwitchResponseError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TwitchResponseError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TwitchResponseError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TwitchResponseError
void PlayFab::PlayFabErrorCode::_set_TwitchResponseError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TwitchResponseError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TwitchResponseError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ProfaneDisplayName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ProfaneDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ProfaneDisplayName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ProfaneDisplayName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ProfaneDisplayName
void PlayFab::PlayFabErrorCode::_set_ProfaneDisplayName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ProfaneDisplayName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ProfaneDisplayName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UserAlreadyAdded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UserAlreadyAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UserAlreadyAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UserAlreadyAdded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UserAlreadyAdded
void PlayFab::PlayFabErrorCode::_set_UserAlreadyAdded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UserAlreadyAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UserAlreadyAdded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidVirtualCurrencyCode
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidVirtualCurrencyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidVirtualCurrencyCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidVirtualCurrencyCode"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidVirtualCurrencyCode
void PlayFab::PlayFabErrorCode::_set_InvalidVirtualCurrencyCode(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidVirtualCurrencyCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidVirtualCurrencyCode", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCannotBeDeleted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCannotBeDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCannotBeDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCannotBeDeleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCannotBeDeleted
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCannotBeDeleted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCannotBeDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCannotBeDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode IdentifierAlreadyClaimed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_IdentifierAlreadyClaimed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_IdentifierAlreadyClaimed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "IdentifierAlreadyClaimed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode IdentifierAlreadyClaimed
void PlayFab::PlayFabErrorCode::_set_IdentifierAlreadyClaimed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_IdentifierAlreadyClaimed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "IdentifierAlreadyClaimed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode IdentifierNotLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_IdentifierNotLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_IdentifierNotLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "IdentifierNotLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode IdentifierNotLinked
void PlayFab::PlayFabErrorCode::_set_IdentifierNotLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_IdentifierNotLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "IdentifierNotLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidContinuationToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidContinuationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidContinuationToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidContinuationToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidContinuationToken
void PlayFab::PlayFabErrorCode::_set_InvalidContinuationToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidContinuationToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidContinuationToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExpiredContinuationToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExpiredContinuationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExpiredContinuationToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExpiredContinuationToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExpiredContinuationToken
void PlayFab::PlayFabErrorCode::_set_ExpiredContinuationToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExpiredContinuationToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExpiredContinuationToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSegment
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSegment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSegment"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSegment
void PlayFab::PlayFabErrorCode::_set_InvalidSegment(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSegment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSegment", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSessionId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSessionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSessionId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSessionId
void PlayFab::PlayFabErrorCode::_set_InvalidSessionId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSessionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSessionId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SessionLogNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SessionLogNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SessionLogNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SessionLogNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SessionLogNotFound
void PlayFab::PlayFabErrorCode::_set_SessionLogNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SessionLogNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SessionLogNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSearchTerm
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSearchTerm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSearchTerm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSearchTerm"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSearchTerm
void PlayFab::PlayFabErrorCode::_set_InvalidSearchTerm(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSearchTerm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSearchTerm", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TwoFactorAuthenticationTokenRequired
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TwoFactorAuthenticationTokenRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TwoFactorAuthenticationTokenRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TwoFactorAuthenticationTokenRequired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TwoFactorAuthenticationTokenRequired
void PlayFab::PlayFabErrorCode::_set_TwoFactorAuthenticationTokenRequired(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TwoFactorAuthenticationTokenRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TwoFactorAuthenticationTokenRequired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GameServerHostCountLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GameServerHostCountLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GameServerHostCountLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GameServerHostCountLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GameServerHostCountLimitExceeded
void PlayFab::PlayFabErrorCode::_set_GameServerHostCountLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GameServerHostCountLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GameServerHostCountLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PlayerTagCountLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PlayerTagCountLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PlayerTagCountLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PlayerTagCountLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PlayerTagCountLimitExceeded
void PlayFab::PlayFabErrorCode::_set_PlayerTagCountLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PlayerTagCountLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PlayerTagCountLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RequestAlreadyRunning
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RequestAlreadyRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RequestAlreadyRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RequestAlreadyRunning"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RequestAlreadyRunning
void PlayFab::PlayFabErrorCode::_set_RequestAlreadyRunning(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RequestAlreadyRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RequestAlreadyRunning", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ActionGroupNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ActionGroupNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ActionGroupNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ActionGroupNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ActionGroupNotFound
void PlayFab::PlayFabErrorCode::_set_ActionGroupNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ActionGroupNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ActionGroupNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MaximumSegmentBulkActionJobsRunning
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MaximumSegmentBulkActionJobsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MaximumSegmentBulkActionJobsRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MaximumSegmentBulkActionJobsRunning"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MaximumSegmentBulkActionJobsRunning
void PlayFab::PlayFabErrorCode::_set_MaximumSegmentBulkActionJobsRunning(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MaximumSegmentBulkActionJobsRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MaximumSegmentBulkActionJobsRunning", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoActionsOnPlayersInSegmentJob
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoActionsOnPlayersInSegmentJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoActionsOnPlayersInSegmentJob");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoActionsOnPlayersInSegmentJob"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoActionsOnPlayersInSegmentJob
void PlayFab::PlayFabErrorCode::_set_NoActionsOnPlayersInSegmentJob(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoActionsOnPlayersInSegmentJob");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoActionsOnPlayersInSegmentJob", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateStatisticName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateStatisticName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateStatisticName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateStatisticName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateStatisticName
void PlayFab::PlayFabErrorCode::_set_DuplicateStatisticName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateStatisticName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateStatisticName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ScheduledTaskNameConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ScheduledTaskNameConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ScheduledTaskNameConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ScheduledTaskNameConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ScheduledTaskNameConflict
void PlayFab::PlayFabErrorCode::_set_ScheduledTaskNameConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ScheduledTaskNameConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ScheduledTaskNameConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ScheduledTaskCreateConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ScheduledTaskCreateConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ScheduledTaskCreateConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ScheduledTaskCreateConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ScheduledTaskCreateConflict
void PlayFab::PlayFabErrorCode::_set_ScheduledTaskCreateConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ScheduledTaskCreateConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ScheduledTaskCreateConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidScheduledTaskName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidScheduledTaskName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidScheduledTaskName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidScheduledTaskName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidScheduledTaskName
void PlayFab::PlayFabErrorCode::_set_InvalidScheduledTaskName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidScheduledTaskName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidScheduledTaskName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidTaskSchedule
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidTaskSchedule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidTaskSchedule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidTaskSchedule"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidTaskSchedule
void PlayFab::PlayFabErrorCode::_set_InvalidTaskSchedule(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidTaskSchedule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidTaskSchedule", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SteamNotEnabledForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SteamNotEnabledForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SteamNotEnabledForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SteamNotEnabledForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SteamNotEnabledForTitle
void PlayFab::PlayFabErrorCode::_set_SteamNotEnabledForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SteamNotEnabledForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SteamNotEnabledForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LimitNotAnUpgradeOption
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LimitNotAnUpgradeOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LimitNotAnUpgradeOption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LimitNotAnUpgradeOption"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LimitNotAnUpgradeOption
void PlayFab::PlayFabErrorCode::_set_LimitNotAnUpgradeOption(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LimitNotAnUpgradeOption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LimitNotAnUpgradeOption", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoSecretKeyEnabledForCloudScript
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoSecretKeyEnabledForCloudScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoSecretKeyEnabledForCloudScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoSecretKeyEnabledForCloudScript"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoSecretKeyEnabledForCloudScript
void PlayFab::PlayFabErrorCode::_set_NoSecretKeyEnabledForCloudScript(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoSecretKeyEnabledForCloudScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoSecretKeyEnabledForCloudScript", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TaskNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TaskNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TaskNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TaskNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TaskNotFound
void PlayFab::PlayFabErrorCode::_set_TaskNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TaskNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TaskNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TaskInstanceNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TaskInstanceNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TaskInstanceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TaskInstanceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TaskInstanceNotFound
void PlayFab::PlayFabErrorCode::_set_TaskInstanceNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TaskInstanceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TaskInstanceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidIdentityProviderId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidIdentityProviderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidIdentityProviderId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidIdentityProviderId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidIdentityProviderId
void PlayFab::PlayFabErrorCode::_set_InvalidIdentityProviderId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidIdentityProviderId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidIdentityProviderId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MisconfiguredIdentityProvider
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MisconfiguredIdentityProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MisconfiguredIdentityProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MisconfiguredIdentityProvider"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MisconfiguredIdentityProvider
void PlayFab::PlayFabErrorCode::_set_MisconfiguredIdentityProvider(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MisconfiguredIdentityProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MisconfiguredIdentityProvider", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidScheduledTaskType
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidScheduledTaskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidScheduledTaskType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidScheduledTaskType"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidScheduledTaskType
void PlayFab::PlayFabErrorCode::_set_InvalidScheduledTaskType(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidScheduledTaskType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidScheduledTaskType", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode BillingInformationRequired
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_BillingInformationRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_BillingInformationRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "BillingInformationRequired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode BillingInformationRequired
void PlayFab::PlayFabErrorCode::_set_BillingInformationRequired(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_BillingInformationRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "BillingInformationRequired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LimitedEditionItemUnavailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LimitedEditionItemUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LimitedEditionItemUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LimitedEditionItemUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LimitedEditionItemUnavailable
void PlayFab::PlayFabErrorCode::_set_LimitedEditionItemUnavailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LimitedEditionItemUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LimitedEditionItemUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidAdPlacementAndReward
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidAdPlacementAndReward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidAdPlacementAndReward");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidAdPlacementAndReward"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidAdPlacementAndReward
void PlayFab::PlayFabErrorCode::_set_InvalidAdPlacementAndReward(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidAdPlacementAndReward");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidAdPlacementAndReward", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AllAdPlacementViewsAlreadyConsumed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AllAdPlacementViewsAlreadyConsumed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AllAdPlacementViewsAlreadyConsumed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AllAdPlacementViewsAlreadyConsumed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AllAdPlacementViewsAlreadyConsumed
void PlayFab::PlayFabErrorCode::_set_AllAdPlacementViewsAlreadyConsumed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AllAdPlacementViewsAlreadyConsumed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AllAdPlacementViewsAlreadyConsumed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GoogleOAuthNotConfiguredForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GoogleOAuthNotConfiguredForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GoogleOAuthNotConfiguredForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GoogleOAuthNotConfiguredForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GoogleOAuthNotConfiguredForTitle
void PlayFab::PlayFabErrorCode::_set_GoogleOAuthNotConfiguredForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GoogleOAuthNotConfiguredForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GoogleOAuthNotConfiguredForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GoogleOAuthError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GoogleOAuthError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GoogleOAuthError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GoogleOAuthError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GoogleOAuthError
void PlayFab::PlayFabErrorCode::_set_GoogleOAuthError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GoogleOAuthError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GoogleOAuthError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UserNotFriend
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UserNotFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UserNotFriend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UserNotFriend"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UserNotFriend
void PlayFab::PlayFabErrorCode::_set_UserNotFriend(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UserNotFriend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UserNotFriend", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSignature
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSignature"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSignature
void PlayFab::PlayFabErrorCode::_set_InvalidSignature(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSignature", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidPublicKey
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidPublicKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidPublicKey"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidPublicKey
void PlayFab::PlayFabErrorCode::_set_InvalidPublicKey(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidPublicKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidPublicKey", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GoogleOAuthNoIdTokenIncludedInResponse
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GoogleOAuthNoIdTokenIncludedInResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GoogleOAuthNoIdTokenIncludedInResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GoogleOAuthNoIdTokenIncludedInResponse"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GoogleOAuthNoIdTokenIncludedInResponse
void PlayFab::PlayFabErrorCode::_set_GoogleOAuthNoIdTokenIncludedInResponse(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GoogleOAuthNoIdTokenIncludedInResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GoogleOAuthNoIdTokenIncludedInResponse", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticUpdateInProgress
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticUpdateInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticUpdateInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticUpdateInProgress"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticUpdateInProgress
void PlayFab::PlayFabErrorCode::_set_StatisticUpdateInProgress(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticUpdateInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticUpdateInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LeaderboardVersionNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LeaderboardVersionNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LeaderboardVersionNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LeaderboardVersionNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LeaderboardVersionNotAvailable
void PlayFab::PlayFabErrorCode::_set_LeaderboardVersionNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LeaderboardVersionNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LeaderboardVersionNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticAlreadyHasPrizeTable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticAlreadyHasPrizeTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticAlreadyHasPrizeTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticAlreadyHasPrizeTable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticAlreadyHasPrizeTable
void PlayFab::PlayFabErrorCode::_set_StatisticAlreadyHasPrizeTable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticAlreadyHasPrizeTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticAlreadyHasPrizeTable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PrizeTableHasOverlappingRanks
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PrizeTableHasOverlappingRanks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PrizeTableHasOverlappingRanks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PrizeTableHasOverlappingRanks"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PrizeTableHasOverlappingRanks
void PlayFab::PlayFabErrorCode::_set_PrizeTableHasOverlappingRanks(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PrizeTableHasOverlappingRanks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PrizeTableHasOverlappingRanks", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PrizeTableHasMissingRanks
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PrizeTableHasMissingRanks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PrizeTableHasMissingRanks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PrizeTableHasMissingRanks"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PrizeTableHasMissingRanks
void PlayFab::PlayFabErrorCode::_set_PrizeTableHasMissingRanks(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PrizeTableHasMissingRanks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PrizeTableHasMissingRanks", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PrizeTableRankStartsAtZero
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PrizeTableRankStartsAtZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PrizeTableRankStartsAtZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PrizeTableRankStartsAtZero"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PrizeTableRankStartsAtZero
void PlayFab::PlayFabErrorCode::_set_PrizeTableRankStartsAtZero(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PrizeTableRankStartsAtZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PrizeTableRankStartsAtZero", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidStatistic
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidStatistic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidStatistic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidStatistic"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidStatistic
void PlayFab::PlayFabErrorCode::_set_InvalidStatistic(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidStatistic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidStatistic", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExpressionParseFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExpressionParseFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExpressionParseFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExpressionParseFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExpressionParseFailure
void PlayFab::PlayFabErrorCode::_set_ExpressionParseFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExpressionParseFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExpressionParseFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExpressionInvokeFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExpressionInvokeFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExpressionInvokeFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExpressionInvokeFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExpressionInvokeFailure
void PlayFab::PlayFabErrorCode::_set_ExpressionInvokeFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExpressionInvokeFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExpressionInvokeFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExpressionTooLong
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExpressionTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExpressionTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExpressionTooLong"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExpressionTooLong
void PlayFab::PlayFabErrorCode::_set_ExpressionTooLong(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExpressionTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExpressionTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DataUpdateRateExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DataUpdateRateExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DataUpdateRateExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DataUpdateRateExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DataUpdateRateExceeded
void PlayFab::PlayFabErrorCode::_set_DataUpdateRateExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DataUpdateRateExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DataUpdateRateExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RestrictedEmailDomain
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RestrictedEmailDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RestrictedEmailDomain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RestrictedEmailDomain"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RestrictedEmailDomain
void PlayFab::PlayFabErrorCode::_set_RestrictedEmailDomain(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RestrictedEmailDomain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RestrictedEmailDomain", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EncryptionKeyDisabled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EncryptionKeyDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EncryptionKeyDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EncryptionKeyDisabled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EncryptionKeyDisabled
void PlayFab::PlayFabErrorCode::_set_EncryptionKeyDisabled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EncryptionKeyDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EncryptionKeyDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EncryptionKeyMissing
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EncryptionKeyMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EncryptionKeyMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EncryptionKeyMissing"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EncryptionKeyMissing
void PlayFab::PlayFabErrorCode::_set_EncryptionKeyMissing(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EncryptionKeyMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EncryptionKeyMissing", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EncryptionKeyBroken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EncryptionKeyBroken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EncryptionKeyBroken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EncryptionKeyBroken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EncryptionKeyBroken
void PlayFab::PlayFabErrorCode::_set_EncryptionKeyBroken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EncryptionKeyBroken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EncryptionKeyBroken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoSharedSecretKeyConfigured
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoSharedSecretKeyConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoSharedSecretKeyConfigured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoSharedSecretKeyConfigured"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoSharedSecretKeyConfigured
void PlayFab::PlayFabErrorCode::_set_NoSharedSecretKeyConfigured(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoSharedSecretKeyConfigured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoSharedSecretKeyConfigured", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SecretKeyNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SecretKeyNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SecretKeyNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SecretKeyNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SecretKeyNotFound
void PlayFab::PlayFabErrorCode::_set_SecretKeyNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SecretKeyNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SecretKeyNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PlayerSecretAlreadyConfigured
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PlayerSecretAlreadyConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PlayerSecretAlreadyConfigured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PlayerSecretAlreadyConfigured"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PlayerSecretAlreadyConfigured
void PlayFab::PlayFabErrorCode::_set_PlayerSecretAlreadyConfigured(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PlayerSecretAlreadyConfigured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PlayerSecretAlreadyConfigured", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode APIRequestsDisabledForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_APIRequestsDisabledForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_APIRequestsDisabledForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "APIRequestsDisabledForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode APIRequestsDisabledForTitle
void PlayFab::PlayFabErrorCode::_set_APIRequestsDisabledForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_APIRequestsDisabledForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "APIRequestsDisabledForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSharedSecretKey
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSharedSecretKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSharedSecretKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSharedSecretKey"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSharedSecretKey
void PlayFab::PlayFabErrorCode::_set_InvalidSharedSecretKey(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSharedSecretKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSharedSecretKey", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PrizeTableHasNoRanks
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PrizeTableHasNoRanks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PrizeTableHasNoRanks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PrizeTableHasNoRanks"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PrizeTableHasNoRanks
void PlayFab::PlayFabErrorCode::_set_PrizeTableHasNoRanks(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PrizeTableHasNoRanks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PrizeTableHasNoRanks", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ProfileDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ProfileDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ProfileDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ProfileDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ProfileDoesNotExist
void PlayFab::PlayFabErrorCode::_set_ProfileDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ProfileDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ProfileDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ContentS3OriginBucketNotConfigured
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ContentS3OriginBucketNotConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ContentS3OriginBucketNotConfigured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ContentS3OriginBucketNotConfigured"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ContentS3OriginBucketNotConfigured
void PlayFab::PlayFabErrorCode::_set_ContentS3OriginBucketNotConfigured(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ContentS3OriginBucketNotConfigured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ContentS3OriginBucketNotConfigured", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidEnvironmentForReceipt
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidEnvironmentForReceipt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidEnvironmentForReceipt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidEnvironmentForReceipt"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidEnvironmentForReceipt
void PlayFab::PlayFabErrorCode::_set_InvalidEnvironmentForReceipt(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidEnvironmentForReceipt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidEnvironmentForReceipt", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EncryptedRequestNotAllowed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EncryptedRequestNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EncryptedRequestNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EncryptedRequestNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EncryptedRequestNotAllowed
void PlayFab::PlayFabErrorCode::_set_EncryptedRequestNotAllowed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EncryptedRequestNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EncryptedRequestNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SignedRequestNotAllowed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SignedRequestNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SignedRequestNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SignedRequestNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SignedRequestNotAllowed
void PlayFab::PlayFabErrorCode::_set_SignedRequestNotAllowed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SignedRequestNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SignedRequestNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RequestViewConstraintParamsNotAllowed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RequestViewConstraintParamsNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RequestViewConstraintParamsNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RequestViewConstraintParamsNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RequestViewConstraintParamsNotAllowed
void PlayFab::PlayFabErrorCode::_set_RequestViewConstraintParamsNotAllowed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RequestViewConstraintParamsNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RequestViewConstraintParamsNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode BadPartnerConfiguration
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_BadPartnerConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_BadPartnerConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "BadPartnerConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode BadPartnerConfiguration
void PlayFab::PlayFabErrorCode::_set_BadPartnerConfiguration(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_BadPartnerConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "BadPartnerConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode XboxBPCertificateFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_XboxBPCertificateFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_XboxBPCertificateFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "XboxBPCertificateFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode XboxBPCertificateFailure
void PlayFab::PlayFabErrorCode::_set_XboxBPCertificateFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_XboxBPCertificateFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "XboxBPCertificateFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode XboxXASSExchangeFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_XboxXASSExchangeFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_XboxXASSExchangeFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "XboxXASSExchangeFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode XboxXASSExchangeFailure
void PlayFab::PlayFabErrorCode::_set_XboxXASSExchangeFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_XboxXASSExchangeFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "XboxXASSExchangeFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidEntityId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidEntityId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidEntityId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidEntityId
void PlayFab::PlayFabErrorCode::_set_InvalidEntityId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidEntityId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidEntityId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticValueAggregationOverflow
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticValueAggregationOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticValueAggregationOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticValueAggregationOverflow"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticValueAggregationOverflow
void PlayFab::PlayFabErrorCode::_set_StatisticValueAggregationOverflow(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticValueAggregationOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticValueAggregationOverflow", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailMessageFromAddressIsMissing
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailMessageFromAddressIsMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailMessageFromAddressIsMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailMessageFromAddressIsMissing"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailMessageFromAddressIsMissing
void PlayFab::PlayFabErrorCode::_set_EmailMessageFromAddressIsMissing(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailMessageFromAddressIsMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailMessageFromAddressIsMissing", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailMessageToAddressIsMissing
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailMessageToAddressIsMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailMessageToAddressIsMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailMessageToAddressIsMissing"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailMessageToAddressIsMissing
void PlayFab::PlayFabErrorCode::_set_EmailMessageToAddressIsMissing(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailMessageToAddressIsMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailMessageToAddressIsMissing", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SmtpServerAuthenticationError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SmtpServerAuthenticationError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SmtpServerAuthenticationError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SmtpServerAuthenticationError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SmtpServerAuthenticationError
void PlayFab::PlayFabErrorCode::_set_SmtpServerAuthenticationError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SmtpServerAuthenticationError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SmtpServerAuthenticationError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SmtpServerLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SmtpServerLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SmtpServerLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SmtpServerLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SmtpServerLimitExceeded
void PlayFab::PlayFabErrorCode::_set_SmtpServerLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SmtpServerLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SmtpServerLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SmtpServerInsufficientStorage
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SmtpServerInsufficientStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SmtpServerInsufficientStorage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SmtpServerInsufficientStorage"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SmtpServerInsufficientStorage
void PlayFab::PlayFabErrorCode::_set_SmtpServerInsufficientStorage(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SmtpServerInsufficientStorage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SmtpServerInsufficientStorage", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SmtpServerCommunicationError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SmtpServerCommunicationError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SmtpServerCommunicationError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SmtpServerCommunicationError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SmtpServerCommunicationError
void PlayFab::PlayFabErrorCode::_set_SmtpServerCommunicationError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SmtpServerCommunicationError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SmtpServerCommunicationError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SmtpServerGeneralFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SmtpServerGeneralFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SmtpServerGeneralFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SmtpServerGeneralFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SmtpServerGeneralFailure
void PlayFab::PlayFabErrorCode::_set_SmtpServerGeneralFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SmtpServerGeneralFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SmtpServerGeneralFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailClientTimeout
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailClientTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailClientTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailClientTimeout"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailClientTimeout
void PlayFab::PlayFabErrorCode::_set_EmailClientTimeout(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailClientTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailClientTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailClientCanceledTask
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailClientCanceledTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailClientCanceledTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailClientCanceledTask"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailClientCanceledTask
void PlayFab::PlayFabErrorCode::_set_EmailClientCanceledTask(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailClientCanceledTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailClientCanceledTask", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailTemplateMissing
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailTemplateMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailTemplateMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailTemplateMissing"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailTemplateMissing
void PlayFab::PlayFabErrorCode::_set_EmailTemplateMissing(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailTemplateMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailTemplateMissing", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidHostForTitleId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidHostForTitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidHostForTitleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidHostForTitleId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidHostForTitleId
void PlayFab::PlayFabErrorCode::_set_InvalidHostForTitleId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidHostForTitleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidHostForTitleId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailConfirmationTokenDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailConfirmationTokenDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailConfirmationTokenDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailConfirmationTokenDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailConfirmationTokenDoesNotExist
void PlayFab::PlayFabErrorCode::_set_EmailConfirmationTokenDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailConfirmationTokenDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailConfirmationTokenDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailConfirmationTokenExpired
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailConfirmationTokenExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailConfirmationTokenExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailConfirmationTokenExpired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailConfirmationTokenExpired
void PlayFab::PlayFabErrorCode::_set_EmailConfirmationTokenExpired(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailConfirmationTokenExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailConfirmationTokenExpired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AccountDeleted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AccountDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AccountDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AccountDeleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AccountDeleted
void PlayFab::PlayFabErrorCode::_set_AccountDeleted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AccountDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AccountDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PlayerSecretNotConfigured
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PlayerSecretNotConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PlayerSecretNotConfigured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PlayerSecretNotConfigured"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PlayerSecretNotConfigured
void PlayFab::PlayFabErrorCode::_set_PlayerSecretNotConfigured(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PlayerSecretNotConfigured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PlayerSecretNotConfigured", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidSignatureTime
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidSignatureTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidSignatureTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidSignatureTime"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidSignatureTime
void PlayFab::PlayFabErrorCode::_set_InvalidSignatureTime(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidSignatureTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidSignatureTime", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoContactEmailAddressFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoContactEmailAddressFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoContactEmailAddressFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoContactEmailAddressFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoContactEmailAddressFound
void PlayFab::PlayFabErrorCode::_set_NoContactEmailAddressFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoContactEmailAddressFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoContactEmailAddressFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidAuthToken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidAuthToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidAuthToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidAuthToken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidAuthToken
void PlayFab::PlayFabErrorCode::_set_InvalidAuthToken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidAuthToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidAuthToken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AuthTokenDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AuthTokenDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AuthTokenDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AuthTokenDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AuthTokenDoesNotExist
void PlayFab::PlayFabErrorCode::_set_AuthTokenDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AuthTokenDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AuthTokenDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AuthTokenExpired
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AuthTokenExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AuthTokenExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AuthTokenExpired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AuthTokenExpired
void PlayFab::PlayFabErrorCode::_set_AuthTokenExpired(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AuthTokenExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AuthTokenExpired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AuthTokenAlreadyUsedToResetPassword
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AuthTokenAlreadyUsedToResetPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AuthTokenAlreadyUsedToResetPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AuthTokenAlreadyUsedToResetPassword"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AuthTokenAlreadyUsedToResetPassword
void PlayFab::PlayFabErrorCode::_set_AuthTokenAlreadyUsedToResetPassword(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AuthTokenAlreadyUsedToResetPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AuthTokenAlreadyUsedToResetPassword", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MembershipNameTooLong
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MembershipNameTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MembershipNameTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MembershipNameTooLong"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MembershipNameTooLong
void PlayFab::PlayFabErrorCode::_set_MembershipNameTooLong(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MembershipNameTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MembershipNameTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MembershipNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MembershipNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MembershipNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MembershipNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MembershipNotFound
void PlayFab::PlayFabErrorCode::_set_MembershipNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MembershipNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MembershipNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GoogleServiceAccountInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GoogleServiceAccountInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GoogleServiceAccountInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GoogleServiceAccountInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GoogleServiceAccountInvalid
void PlayFab::PlayFabErrorCode::_set_GoogleServiceAccountInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GoogleServiceAccountInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GoogleServiceAccountInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GoogleServiceAccountParseFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GoogleServiceAccountParseFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GoogleServiceAccountParseFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GoogleServiceAccountParseFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GoogleServiceAccountParseFailure
void PlayFab::PlayFabErrorCode::_set_GoogleServiceAccountParseFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GoogleServiceAccountParseFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GoogleServiceAccountParseFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityTokenMissing
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityTokenMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityTokenMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityTokenMissing"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityTokenMissing
void PlayFab::PlayFabErrorCode::_set_EntityTokenMissing(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityTokenMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityTokenMissing", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityTokenInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityTokenInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityTokenInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityTokenInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityTokenInvalid
void PlayFab::PlayFabErrorCode::_set_EntityTokenInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityTokenInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityTokenInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityTokenExpired
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityTokenExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityTokenExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityTokenExpired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityTokenExpired
void PlayFab::PlayFabErrorCode::_set_EntityTokenExpired(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityTokenExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityTokenExpired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityTokenRevoked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityTokenRevoked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityTokenRevoked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityTokenRevoked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityTokenRevoked
void PlayFab::PlayFabErrorCode::_set_EntityTokenRevoked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityTokenRevoked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityTokenRevoked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidProductForSubscription
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidProductForSubscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidProductForSubscription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidProductForSubscription"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidProductForSubscription
void PlayFab::PlayFabErrorCode::_set_InvalidProductForSubscription(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidProductForSubscription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidProductForSubscription", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode XboxInaccessible
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_XboxInaccessible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_XboxInaccessible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "XboxInaccessible"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode XboxInaccessible
void PlayFab::PlayFabErrorCode::_set_XboxInaccessible(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_XboxInaccessible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "XboxInaccessible", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SubscriptionAlreadyTaken
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SubscriptionAlreadyTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SubscriptionAlreadyTaken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SubscriptionAlreadyTaken"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SubscriptionAlreadyTaken
void PlayFab::PlayFabErrorCode::_set_SubscriptionAlreadyTaken(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SubscriptionAlreadyTaken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SubscriptionAlreadyTaken", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SmtpAddonNotEnabled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SmtpAddonNotEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SmtpAddonNotEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SmtpAddonNotEnabled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SmtpAddonNotEnabled
void PlayFab::PlayFabErrorCode::_set_SmtpAddonNotEnabled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SmtpAddonNotEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SmtpAddonNotEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode APIConcurrentRequestLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_APIConcurrentRequestLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_APIConcurrentRequestLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "APIConcurrentRequestLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode APIConcurrentRequestLimitExceeded
void PlayFab::PlayFabErrorCode::_set_APIConcurrentRequestLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_APIConcurrentRequestLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "APIConcurrentRequestLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode XboxRejectedXSTSExchangeRequest
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_XboxRejectedXSTSExchangeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_XboxRejectedXSTSExchangeRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "XboxRejectedXSTSExchangeRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode XboxRejectedXSTSExchangeRequest
void PlayFab::PlayFabErrorCode::_set_XboxRejectedXSTSExchangeRequest(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_XboxRejectedXSTSExchangeRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "XboxRejectedXSTSExchangeRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VariableNotDefined
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VariableNotDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VariableNotDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VariableNotDefined"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VariableNotDefined
void PlayFab::PlayFabErrorCode::_set_VariableNotDefined(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VariableNotDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VariableNotDefined", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TemplateVersionNotDefined
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TemplateVersionNotDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TemplateVersionNotDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TemplateVersionNotDefined"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TemplateVersionNotDefined
void PlayFab::PlayFabErrorCode::_set_TemplateVersionNotDefined(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TemplateVersionNotDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TemplateVersionNotDefined", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FileTooLarge
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FileTooLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FileTooLarge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FileTooLarge"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FileTooLarge
void PlayFab::PlayFabErrorCode::_set_FileTooLarge(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FileTooLarge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FileTooLarge", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleDeleted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleDeleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleDeleted
void PlayFab::PlayFabErrorCode::_set_TitleDeleted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleContainsUserAccounts
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleContainsUserAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleContainsUserAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleContainsUserAccounts"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleContainsUserAccounts
void PlayFab::PlayFabErrorCode::_set_TitleContainsUserAccounts(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleContainsUserAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleContainsUserAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleDeletionPlayerCleanupFailure
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleDeletionPlayerCleanupFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleDeletionPlayerCleanupFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleDeletionPlayerCleanupFailure"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleDeletionPlayerCleanupFailure
void PlayFab::PlayFabErrorCode::_set_TitleDeletionPlayerCleanupFailure(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleDeletionPlayerCleanupFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleDeletionPlayerCleanupFailure", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityFileOperationPending
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityFileOperationPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityFileOperationPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityFileOperationPending"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityFileOperationPending
void PlayFab::PlayFabErrorCode::_set_EntityFileOperationPending(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityFileOperationPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityFileOperationPending", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoEntityFileOperationPending
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoEntityFileOperationPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoEntityFileOperationPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoEntityFileOperationPending"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoEntityFileOperationPending
void PlayFab::PlayFabErrorCode::_set_NoEntityFileOperationPending(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoEntityFileOperationPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoEntityFileOperationPending", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityProfileVersionMismatch
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityProfileVersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityProfileVersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityProfileVersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityProfileVersionMismatch
void PlayFab::PlayFabErrorCode::_set_EntityProfileVersionMismatch(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityProfileVersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityProfileVersionMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TemplateVersionTooOld
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TemplateVersionTooOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TemplateVersionTooOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TemplateVersionTooOld"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TemplateVersionTooOld
void PlayFab::PlayFabErrorCode::_set_TemplateVersionTooOld(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TemplateVersionTooOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TemplateVersionTooOld", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MembershipDefinitionInUse
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MembershipDefinitionInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MembershipDefinitionInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MembershipDefinitionInUse"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MembershipDefinitionInUse
void PlayFab::PlayFabErrorCode::_set_MembershipDefinitionInUse(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MembershipDefinitionInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MembershipDefinitionInUse", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PaymentPageNotConfigured
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PaymentPageNotConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PaymentPageNotConfigured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PaymentPageNotConfigured"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PaymentPageNotConfigured
void PlayFab::PlayFabErrorCode::_set_PaymentPageNotConfigured(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PaymentPageNotConfigured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PaymentPageNotConfigured", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FailedLoginAttemptRateLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FailedLoginAttemptRateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FailedLoginAttemptRateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FailedLoginAttemptRateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FailedLoginAttemptRateLimitExceeded
void PlayFab::PlayFabErrorCode::_set_FailedLoginAttemptRateLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FailedLoginAttemptRateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FailedLoginAttemptRateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityBlockedByGroup
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityBlockedByGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityBlockedByGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityBlockedByGroup"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityBlockedByGroup
void PlayFab::PlayFabErrorCode::_set_EntityBlockedByGroup(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityBlockedByGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityBlockedByGroup", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RoleDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RoleDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RoleDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RoleDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RoleDoesNotExist
void PlayFab::PlayFabErrorCode::_set_RoleDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RoleDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RoleDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityIsAlreadyMember
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityIsAlreadyMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityIsAlreadyMember");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityIsAlreadyMember"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityIsAlreadyMember
void PlayFab::PlayFabErrorCode::_set_EntityIsAlreadyMember(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityIsAlreadyMember");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityIsAlreadyMember", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateRoleId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateRoleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateRoleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateRoleId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateRoleId
void PlayFab::PlayFabErrorCode::_set_DuplicateRoleId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateRoleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateRoleId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GroupInvitationNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GroupInvitationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GroupInvitationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GroupInvitationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GroupInvitationNotFound
void PlayFab::PlayFabErrorCode::_set_GroupInvitationNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GroupInvitationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GroupInvitationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GroupApplicationNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GroupApplicationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GroupApplicationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GroupApplicationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GroupApplicationNotFound
void PlayFab::PlayFabErrorCode::_set_GroupApplicationNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GroupApplicationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GroupApplicationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode OutstandingInvitationAcceptedInstead
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_OutstandingInvitationAcceptedInstead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_OutstandingInvitationAcceptedInstead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "OutstandingInvitationAcceptedInstead"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode OutstandingInvitationAcceptedInstead
void PlayFab::PlayFabErrorCode::_set_OutstandingInvitationAcceptedInstead(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_OutstandingInvitationAcceptedInstead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "OutstandingInvitationAcceptedInstead", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode OutstandingApplicationAcceptedInstead
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_OutstandingApplicationAcceptedInstead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_OutstandingApplicationAcceptedInstead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "OutstandingApplicationAcceptedInstead"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode OutstandingApplicationAcceptedInstead
void PlayFab::PlayFabErrorCode::_set_OutstandingApplicationAcceptedInstead(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_OutstandingApplicationAcceptedInstead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "OutstandingApplicationAcceptedInstead", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RoleIsGroupDefaultMember
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RoleIsGroupDefaultMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RoleIsGroupDefaultMember");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RoleIsGroupDefaultMember"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RoleIsGroupDefaultMember
void PlayFab::PlayFabErrorCode::_set_RoleIsGroupDefaultMember(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RoleIsGroupDefaultMember");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RoleIsGroupDefaultMember", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RoleIsGroupAdmin
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RoleIsGroupAdmin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RoleIsGroupAdmin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RoleIsGroupAdmin"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RoleIsGroupAdmin
void PlayFab::PlayFabErrorCode::_set_RoleIsGroupAdmin(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RoleIsGroupAdmin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RoleIsGroupAdmin", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RoleNameNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RoleNameNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RoleNameNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RoleNameNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RoleNameNotAvailable
void PlayFab::PlayFabErrorCode::_set_RoleNameNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RoleNameNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RoleNameNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GroupNameNotAvailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GroupNameNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GroupNameNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GroupNameNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GroupNameNotAvailable
void PlayFab::PlayFabErrorCode::_set_GroupNameNotAvailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GroupNameNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GroupNameNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailReportAlreadySent
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailReportAlreadySent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailReportAlreadySent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailReportAlreadySent"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailReportAlreadySent
void PlayFab::PlayFabErrorCode::_set_EmailReportAlreadySent(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailReportAlreadySent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailReportAlreadySent", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailReportRecipientBlacklisted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailReportRecipientBlacklisted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailReportRecipientBlacklisted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailReportRecipientBlacklisted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailReportRecipientBlacklisted
void PlayFab::PlayFabErrorCode::_set_EmailReportRecipientBlacklisted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailReportRecipientBlacklisted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailReportRecipientBlacklisted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EventNamespaceNotAllowed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EventNamespaceNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EventNamespaceNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EventNamespaceNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EventNamespaceNotAllowed
void PlayFab::PlayFabErrorCode::_set_EventNamespaceNotAllowed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EventNamespaceNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EventNamespaceNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EventEntityNotAllowed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EventEntityNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EventEntityNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EventEntityNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EventEntityNotAllowed
void PlayFab::PlayFabErrorCode::_set_EventEntityNotAllowed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EventEntityNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EventEntityNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidEntityType
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidEntityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidEntityType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidEntityType"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidEntityType
void PlayFab::PlayFabErrorCode::_set_InvalidEntityType(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidEntityType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidEntityType", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NullTokenResultFromAad
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NullTokenResultFromAad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NullTokenResultFromAad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NullTokenResultFromAad"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NullTokenResultFromAad
void PlayFab::PlayFabErrorCode::_set_NullTokenResultFromAad(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NullTokenResultFromAad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NullTokenResultFromAad", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidTokenResultFromAad
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidTokenResultFromAad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidTokenResultFromAad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidTokenResultFromAad"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidTokenResultFromAad
void PlayFab::PlayFabErrorCode::_set_InvalidTokenResultFromAad(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidTokenResultFromAad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidTokenResultFromAad", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoValidCertificateForAad
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoValidCertificateForAad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoValidCertificateForAad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoValidCertificateForAad"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoValidCertificateForAad
void PlayFab::PlayFabErrorCode::_set_NoValidCertificateForAad(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoValidCertificateForAad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoValidCertificateForAad", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidCertificateForAad
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidCertificateForAad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidCertificateForAad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidCertificateForAad"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidCertificateForAad
void PlayFab::PlayFabErrorCode::_set_InvalidCertificateForAad(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidCertificateForAad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidCertificateForAad", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateDropTableId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateDropTableId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateDropTableId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateDropTableId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateDropTableId
void PlayFab::PlayFabErrorCode::_set_DuplicateDropTableId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateDropTableId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateDropTableId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerError
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerTooManyRequests
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerTooManyRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerTooManyRequests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerTooManyRequests"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerTooManyRequests
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerTooManyRequests(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerTooManyRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerTooManyRequests", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerNoContent
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerNoContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerNoContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerNoContent"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerNoContent
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerNoContent(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerNoContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerNoContent", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerBadRequest
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerBadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerBadRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerBadRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerBadRequest
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerBadRequest(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerBadRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerBadRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerUnauthorized
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerUnauthorized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerUnauthorized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerUnauthorized"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerUnauthorized
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerUnauthorized(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerUnauthorized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerUnauthorized", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerForbidden
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerForbidden"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerForbidden
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerForbidden(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerForbidden", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerNotFound
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerConflict
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerInternalServerError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerInternalServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerInternalServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerInternalServerError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerInternalServerError
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerInternalServerError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerInternalServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerInternalServerError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerUnavailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerUnavailable
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerUnavailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExplicitContentDetected
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExplicitContentDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExplicitContentDetected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExplicitContentDetected"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExplicitContentDetected
void PlayFab::PlayFabErrorCode::_set_ExplicitContentDetected(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExplicitContentDetected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExplicitContentDetected", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PIIContentDetected
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PIIContentDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PIIContentDetected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PIIContentDetected"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PIIContentDetected
void PlayFab::PlayFabErrorCode::_set_PIIContentDetected(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PIIContentDetected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PIIContentDetected", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidScheduledTaskParameter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidScheduledTaskParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidScheduledTaskParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidScheduledTaskParameter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidScheduledTaskParameter
void PlayFab::PlayFabErrorCode::_set_InvalidScheduledTaskParameter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidScheduledTaskParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidScheduledTaskParameter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PerEntityEventRateLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PerEntityEventRateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PerEntityEventRateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PerEntityEventRateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PerEntityEventRateLimitExceeded
void PlayFab::PlayFabErrorCode::_set_PerEntityEventRateLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PerEntityEventRateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PerEntityEventRateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleDefaultLanguageNotSet
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleDefaultLanguageNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleDefaultLanguageNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleDefaultLanguageNotSet"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleDefaultLanguageNotSet
void PlayFab::PlayFabErrorCode::_set_TitleDefaultLanguageNotSet(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleDefaultLanguageNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleDefaultLanguageNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailTemplateMissingDefaultVersion
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailTemplateMissingDefaultVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailTemplateMissingDefaultVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailTemplateMissingDefaultVersion"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailTemplateMissingDefaultVersion
void PlayFab::PlayFabErrorCode::_set_EmailTemplateMissingDefaultVersion(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailTemplateMissingDefaultVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailTemplateMissingDefaultVersion", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FacebookInstantGamesIdNotLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FacebookInstantGamesIdNotLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FacebookInstantGamesIdNotLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FacebookInstantGamesIdNotLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FacebookInstantGamesIdNotLinked
void PlayFab::PlayFabErrorCode::_set_FacebookInstantGamesIdNotLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FacebookInstantGamesIdNotLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FacebookInstantGamesIdNotLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidFacebookInstantGamesSignature
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidFacebookInstantGamesSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidFacebookInstantGamesSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidFacebookInstantGamesSignature"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidFacebookInstantGamesSignature
void PlayFab::PlayFabErrorCode::_set_InvalidFacebookInstantGamesSignature(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidFacebookInstantGamesSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidFacebookInstantGamesSignature", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode FacebookInstantGamesAuthNotConfiguredForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_FacebookInstantGamesAuthNotConfiguredForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_FacebookInstantGamesAuthNotConfiguredForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "FacebookInstantGamesAuthNotConfiguredForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode FacebookInstantGamesAuthNotConfiguredForTitle
void PlayFab::PlayFabErrorCode::_set_FacebookInstantGamesAuthNotConfiguredForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_FacebookInstantGamesAuthNotConfiguredForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "FacebookInstantGamesAuthNotConfiguredForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityProfileConstraintValidationFailed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityProfileConstraintValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityProfileConstraintValidationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityProfileConstraintValidationFailed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityProfileConstraintValidationFailed
void PlayFab::PlayFabErrorCode::_set_EntityProfileConstraintValidationFailed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityProfileConstraintValidationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityProfileConstraintValidationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TelemetryIngestionKeyPending
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TelemetryIngestionKeyPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TelemetryIngestionKeyPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TelemetryIngestionKeyPending"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TelemetryIngestionKeyPending
void PlayFab::PlayFabErrorCode::_set_TelemetryIngestionKeyPending(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TelemetryIngestionKeyPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TelemetryIngestionKeyPending", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TelemetryIngestionKeyNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TelemetryIngestionKeyNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TelemetryIngestionKeyNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TelemetryIngestionKeyNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TelemetryIngestionKeyNotFound
void PlayFab::PlayFabErrorCode::_set_TelemetryIngestionKeyNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TelemetryIngestionKeyNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TelemetryIngestionKeyNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StatisticChildNameInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StatisticChildNameInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StatisticChildNameInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StatisticChildNameInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StatisticChildNameInvalid
void PlayFab::PlayFabErrorCode::_set_StatisticChildNameInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StatisticChildNameInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StatisticChildNameInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DataIntegrityError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DataIntegrityError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DataIntegrityError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DataIntegrityError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DataIntegrityError
void PlayFab::PlayFabErrorCode::_set_DataIntegrityError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DataIntegrityError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DataIntegrityError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCannotBeSetToOlderVersion
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCannotBeSetToOlderVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyCannotBeSetToOlderVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCannotBeSetToOlderVersion"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyCannotBeSetToOlderVersion
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCannotBeSetToOlderVersion(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyCannotBeSetToOlderVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyCannotBeSetToOlderVersion", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyMustBeWithinIntegerRange
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyMustBeWithinIntegerRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyMustBeWithinIntegerRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyMustBeWithinIntegerRange"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyMustBeWithinIntegerRange
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyMustBeWithinIntegerRange(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyMustBeWithinIntegerRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyMustBeWithinIntegerRange", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailTemplateInvalidSyntax
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailTemplateInvalidSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailTemplateInvalidSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailTemplateInvalidSyntax"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailTemplateInvalidSyntax
void PlayFab::PlayFabErrorCode::_set_EmailTemplateInvalidSyntax(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailTemplateInvalidSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailTemplateInvalidSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailTemplateMissingCallback
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailTemplateMissingCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailTemplateMissingCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailTemplateMissingCallback"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailTemplateMissingCallback
void PlayFab::PlayFabErrorCode::_set_EmailTemplateMissingCallback(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailTemplateMissingCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailTemplateMissingCallback", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateInvalidPayload
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateInvalidPayload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateInvalidPayload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateInvalidPayload"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateInvalidPayload
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateInvalidPayload(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateInvalidPayload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateInvalidPayload", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidLocalizedPushNotificationLanguage
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidLocalizedPushNotificationLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidLocalizedPushNotificationLanguage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidLocalizedPushNotificationLanguage"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidLocalizedPushNotificationLanguage
void PlayFab::PlayFabErrorCode::_set_InvalidLocalizedPushNotificationLanguage(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidLocalizedPushNotificationLanguage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidLocalizedPushNotificationLanguage", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MissingLocalizedPushNotificationMessage
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MissingLocalizedPushNotificationMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MissingLocalizedPushNotificationMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MissingLocalizedPushNotificationMessage"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MissingLocalizedPushNotificationMessage
void PlayFab::PlayFabErrorCode::_set_MissingLocalizedPushNotificationMessage(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MissingLocalizedPushNotificationMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MissingLocalizedPushNotificationMessage", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateMissingPlatformPayload
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateMissingPlatformPayload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateMissingPlatformPayload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateMissingPlatformPayload"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateMissingPlatformPayload
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateMissingPlatformPayload(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateMissingPlatformPayload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateMissingPlatformPayload", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplatePayloadContainsInvalidJson
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplatePayloadContainsInvalidJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplatePayloadContainsInvalidJson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplatePayloadContainsInvalidJson"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplatePayloadContainsInvalidJson
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplatePayloadContainsInvalidJson(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplatePayloadContainsInvalidJson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplatePayloadContainsInvalidJson", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateContainsInvalidIosPayload
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateContainsInvalidIosPayload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateContainsInvalidIosPayload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateContainsInvalidIosPayload"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateContainsInvalidIosPayload
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateContainsInvalidIosPayload(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateContainsInvalidIosPayload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateContainsInvalidIosPayload", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateContainsInvalidAndroidPayload
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateContainsInvalidAndroidPayload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateContainsInvalidAndroidPayload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateContainsInvalidAndroidPayload"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateContainsInvalidAndroidPayload
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateContainsInvalidAndroidPayload(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateContainsInvalidAndroidPayload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateContainsInvalidAndroidPayload", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateIosPayloadMissingNotificationBody
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateIosPayloadMissingNotificationBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateIosPayloadMissingNotificationBody");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateIosPayloadMissingNotificationBody"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateIosPayloadMissingNotificationBody
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateIosPayloadMissingNotificationBody(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateIosPayloadMissingNotificationBody");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateIosPayloadMissingNotificationBody", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateAndroidPayloadMissingNotificationBody
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateAndroidPayloadMissingNotificationBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateAndroidPayloadMissingNotificationBody");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateAndroidPayloadMissingNotificationBody"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateAndroidPayloadMissingNotificationBody
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateAndroidPayloadMissingNotificationBody(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateAndroidPayloadMissingNotificationBody");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateAndroidPayloadMissingNotificationBody", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateNotFound
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateMissingDefaultVersion
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateMissingDefaultVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateMissingDefaultVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateMissingDefaultVersion"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateMissingDefaultVersion
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateMissingDefaultVersion(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateMissingDefaultVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateMissingDefaultVersion", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateInvalidSyntax
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateInvalidSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateInvalidSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateInvalidSyntax"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateInvalidSyntax
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateInvalidSyntax(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateInvalidSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateInvalidSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateNoCustomPayloadForV1
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateNoCustomPayloadForV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateNoCustomPayloadForV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateNoCustomPayloadForV1"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateNoCustomPayloadForV1
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateNoCustomPayloadForV1(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateNoCustomPayloadForV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateNoCustomPayloadForV1", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NoLeaderboardForStatistic
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NoLeaderboardForStatistic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NoLeaderboardForStatistic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NoLeaderboardForStatistic"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NoLeaderboardForStatistic
void PlayFab::PlayFabErrorCode::_set_NoLeaderboardForStatistic(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NoLeaderboardForStatistic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NoLeaderboardForStatistic", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNewsMissingDefaultLanguage
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNewsMissingDefaultLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNewsMissingDefaultLanguage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNewsMissingDefaultLanguage"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNewsMissingDefaultLanguage
void PlayFab::PlayFabErrorCode::_set_TitleNewsMissingDefaultLanguage(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNewsMissingDefaultLanguage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNewsMissingDefaultLanguage", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNewsNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNewsNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNewsNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNewsNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNewsNotFound
void PlayFab::PlayFabErrorCode::_set_TitleNewsNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNewsNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNewsNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNewsDuplicateLanguage
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNewsDuplicateLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNewsDuplicateLanguage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNewsDuplicateLanguage"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNewsDuplicateLanguage
void PlayFab::PlayFabErrorCode::_set_TitleNewsDuplicateLanguage(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNewsDuplicateLanguage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNewsDuplicateLanguage", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNewsMissingTitleOrBody
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNewsMissingTitleOrBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNewsMissingTitleOrBody");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNewsMissingTitleOrBody"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNewsMissingTitleOrBody
void PlayFab::PlayFabErrorCode::_set_TitleNewsMissingTitleOrBody(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNewsMissingTitleOrBody");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNewsMissingTitleOrBody", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNewsInvalidLanguage
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNewsInvalidLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNewsInvalidLanguage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNewsInvalidLanguage"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNewsInvalidLanguage
void PlayFab::PlayFabErrorCode::_set_TitleNewsInvalidLanguage(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNewsInvalidLanguage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNewsInvalidLanguage", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EmailRecipientBlacklisted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EmailRecipientBlacklisted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EmailRecipientBlacklisted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EmailRecipientBlacklisted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EmailRecipientBlacklisted
void PlayFab::PlayFabErrorCode::_set_EmailRecipientBlacklisted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EmailRecipientBlacklisted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EmailRecipientBlacklisted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InvalidGameCenterAuthRequest
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InvalidGameCenterAuthRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InvalidGameCenterAuthRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InvalidGameCenterAuthRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InvalidGameCenterAuthRequest
void PlayFab::PlayFabErrorCode::_set_InvalidGameCenterAuthRequest(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InvalidGameCenterAuthRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InvalidGameCenterAuthRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GameCenterAuthenticationFailed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GameCenterAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GameCenterAuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GameCenterAuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GameCenterAuthenticationFailed
void PlayFab::PlayFabErrorCode::_set_GameCenterAuthenticationFailed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GameCenterAuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GameCenterAuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CannotEnablePartiesForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CannotEnablePartiesForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CannotEnablePartiesForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CannotEnablePartiesForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CannotEnablePartiesForTitle
void PlayFab::PlayFabErrorCode::_set_CannotEnablePartiesForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CannotEnablePartiesForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CannotEnablePartiesForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyError
void PlayFab::PlayFabErrorCode::_set_PartyError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyRequests
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyRequests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyRequests"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyRequests
void PlayFab::PlayFabErrorCode::_set_PartyRequests(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyRequests", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyNoContent
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyNoContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyNoContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyNoContent"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyNoContent
void PlayFab::PlayFabErrorCode::_set_PartyNoContent(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyNoContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyNoContent", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyBadRequest
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyBadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyBadRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyBadRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyBadRequest
void PlayFab::PlayFabErrorCode::_set_PartyBadRequest(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyBadRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyBadRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyUnauthorized
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyUnauthorized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyUnauthorized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyUnauthorized"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyUnauthorized
void PlayFab::PlayFabErrorCode::_set_PartyUnauthorized(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyUnauthorized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyUnauthorized", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyForbidden
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyForbidden"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyForbidden
void PlayFab::PlayFabErrorCode::_set_PartyForbidden(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyForbidden", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyNotFound
void PlayFab::PlayFabErrorCode::_set_PartyNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyConflict
void PlayFab::PlayFabErrorCode::_set_PartyConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyInternalServerError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyInternalServerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyInternalServerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyInternalServerError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyInternalServerError
void PlayFab::PlayFabErrorCode::_set_PartyInternalServerError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyInternalServerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyInternalServerError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyUnavailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyUnavailable
void PlayFab::PlayFabErrorCode::_set_PartyUnavailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyTooManyRequests
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyTooManyRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyTooManyRequests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyTooManyRequests"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyTooManyRequests
void PlayFab::PlayFabErrorCode::_set_PartyTooManyRequests(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyTooManyRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyTooManyRequests", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateMissingName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateMissingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PushNotificationTemplateMissingName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateMissingName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PushNotificationTemplateMissingName
void PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateMissingName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PushNotificationTemplateMissingName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PushNotificationTemplateMissingName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CannotEnableMultiplayerServersForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CannotEnableMultiplayerServersForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CannotEnableMultiplayerServersForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CannotEnableMultiplayerServersForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CannotEnableMultiplayerServersForTitle
void PlayFab::PlayFabErrorCode::_set_CannotEnableMultiplayerServersForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CannotEnableMultiplayerServersForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CannotEnableMultiplayerServersForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode WriteAttemptedDuringExport
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_WriteAttemptedDuringExport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_WriteAttemptedDuringExport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "WriteAttemptedDuringExport"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode WriteAttemptedDuringExport
void PlayFab::PlayFabErrorCode::_set_WriteAttemptedDuringExport(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_WriteAttemptedDuringExport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "WriteAttemptedDuringExport", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerTitleQuotaCoresExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerTitleQuotaCoresExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerTitleQuotaCoresExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerTitleQuotaCoresExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerTitleQuotaCoresExceeded
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerTitleQuotaCoresExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerTitleQuotaCoresExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerTitleQuotaCoresExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AutomationRuleNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AutomationRuleNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AutomationRuleNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AutomationRuleNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AutomationRuleNotFound
void PlayFab::PlayFabErrorCode::_set_AutomationRuleNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AutomationRuleNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AutomationRuleNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityAPIKeyLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityAPIKeyLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityAPIKeyLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyLimitExceeded
void PlayFab::PlayFabErrorCode::_set_EntityAPIKeyLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityAPIKeyLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityAPIKeyLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityAPIKeyNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityAPIKeyNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityAPIKeyNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyNotFound
void PlayFab::PlayFabErrorCode::_set_EntityAPIKeyNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityAPIKeyNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityAPIKeyNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyOrSecretInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityAPIKeyOrSecretInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityAPIKeyOrSecretInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityAPIKeyOrSecretInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyOrSecretInvalid
void PlayFab::PlayFabErrorCode::_set_EntityAPIKeyOrSecretInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityAPIKeyOrSecretInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityAPIKeyOrSecretInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EconomyServiceUnavailable
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EconomyServiceUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EconomyServiceUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EconomyServiceUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EconomyServiceUnavailable
void PlayFab::PlayFabErrorCode::_set_EconomyServiceUnavailable(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EconomyServiceUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EconomyServiceUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EconomyServiceInternalError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EconomyServiceInternalError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EconomyServiceInternalError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EconomyServiceInternalError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EconomyServiceInternalError
void PlayFab::PlayFabErrorCode::_set_EconomyServiceInternalError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EconomyServiceInternalError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EconomyServiceInternalError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode QueryRateLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_QueryRateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_QueryRateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "QueryRateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode QueryRateLimitExceeded
void PlayFab::PlayFabErrorCode::_set_QueryRateLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_QueryRateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "QueryRateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyCreationDisabledForEntity
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EntityAPIKeyCreationDisabledForEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EntityAPIKeyCreationDisabledForEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EntityAPIKeyCreationDisabledForEntity"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EntityAPIKeyCreationDisabledForEntity
void PlayFab::PlayFabErrorCode::_set_EntityAPIKeyCreationDisabledForEntity(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EntityAPIKeyCreationDisabledForEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EntityAPIKeyCreationDisabledForEntity", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ForbiddenByEntityPolicy
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ForbiddenByEntityPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ForbiddenByEntityPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ForbiddenByEntityPolicy"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ForbiddenByEntityPolicy
void PlayFab::PlayFabErrorCode::_set_ForbiddenByEntityPolicy(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ForbiddenByEntityPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ForbiddenByEntityPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode UpdateInventoryRateLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_UpdateInventoryRateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_UpdateInventoryRateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "UpdateInventoryRateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode UpdateInventoryRateLimitExceeded
void PlayFab::PlayFabErrorCode::_set_UpdateInventoryRateLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_UpdateInventoryRateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "UpdateInventoryRateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StudioCreationRateLimited
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StudioCreationRateLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StudioCreationRateLimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StudioCreationRateLimited"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StudioCreationRateLimited
void PlayFab::PlayFabErrorCode::_set_StudioCreationRateLimited(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StudioCreationRateLimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StudioCreationRateLimited", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StudioCreationInProgress
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StudioCreationInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StudioCreationInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StudioCreationInProgress"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StudioCreationInProgress
void PlayFab::PlayFabErrorCode::_set_StudioCreationInProgress(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StudioCreationInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StudioCreationInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateStudioName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateStudioName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateStudioName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateStudioName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateStudioName
void PlayFab::PlayFabErrorCode::_set_DuplicateStudioName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateStudioName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateStudioName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StudioNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StudioNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StudioNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StudioNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StudioNotFound
void PlayFab::PlayFabErrorCode::_set_StudioNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StudioNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StudioNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StudioDeleted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StudioDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StudioDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StudioDeleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StudioDeleted
void PlayFab::PlayFabErrorCode::_set_StudioDeleted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StudioDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StudioDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StudioDeactivated
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StudioDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StudioDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StudioDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StudioDeactivated
void PlayFab::PlayFabErrorCode::_set_StudioDeactivated(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StudioDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StudioDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode StudioActivated
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_StudioActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_StudioActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "StudioActivated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode StudioActivated
void PlayFab::PlayFabErrorCode::_set_StudioActivated(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_StudioActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "StudioActivated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleCreationRateLimited
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleCreationRateLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleCreationRateLimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleCreationRateLimited"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleCreationRateLimited
void PlayFab::PlayFabErrorCode::_set_TitleCreationRateLimited(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleCreationRateLimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleCreationRateLimited", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleCreationInProgress
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleCreationInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleCreationInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleCreationInProgress"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleCreationInProgress
void PlayFab::PlayFabErrorCode::_set_TitleCreationInProgress(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleCreationInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleCreationInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateTitleName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateTitleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateTitleName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateTitleName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateTitleName
void PlayFab::PlayFabErrorCode::_set_DuplicateTitleName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateTitleName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateTitleName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleActivationRateLimited
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleActivationRateLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleActivationRateLimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleActivationRateLimited"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleActivationRateLimited
void PlayFab::PlayFabErrorCode::_set_TitleActivationRateLimited(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleActivationRateLimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleActivationRateLimited", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleActivationInProgress
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleActivationInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleActivationInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleActivationInProgress"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleActivationInProgress
void PlayFab::PlayFabErrorCode::_set_TitleActivationInProgress(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleActivationInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleActivationInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleDeactivated
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleDeactivated
void PlayFab::PlayFabErrorCode::_set_TitleDeactivated(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleActivated
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleActivated"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleActivated
void PlayFab::PlayFabErrorCode::_set_TitleActivated(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleActivated", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsExecutionTimeLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsExecutionTimeLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsExecutionTimeLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsExecutionTimeLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsExecutionTimeLimitExceeded
void PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsExecutionTimeLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsExecutionTimeLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsExecutionTimeLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsArgumentSizeExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsArgumentSizeExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsArgumentSizeExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsArgumentSizeExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsArgumentSizeExceeded
void PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsArgumentSizeExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsArgumentSizeExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsArgumentSizeExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsReturnSizeExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsReturnSizeExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsReturnSizeExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsReturnSizeExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsReturnSizeExceeded
void PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsReturnSizeExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsReturnSizeExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsReturnSizeExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsHTTPRequestError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsHTTPRequestError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsHTTPRequestError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsHTTPRequestError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsHTTPRequestError
void PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsHTTPRequestError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsHTTPRequestError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsHTTPRequestError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaGetError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaGetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaGetError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaGetError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaGetError
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaGetError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaGetError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaGetError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaCreateError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaCreateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaCreateError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaCreateError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaCreateError
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaCreateError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaCreateError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaCreateError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaInitialDepositSaveError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaInitialDepositSaveError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaInitialDepositSaveError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaInitialDepositSaveError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaInitialDepositSaveError
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaInitialDepositSaveError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaInitialDepositSaveError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaInitialDepositSaveError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaSaveError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaSaveError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaSaveError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaSaveError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaSaveError
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaSaveError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaSaveError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaSaveError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaDeleteError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaDeleteError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaDeleteError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaDeleteError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaDeleteError
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaDeleteError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaDeleteError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaDeleteError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaRestoreError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaRestoreError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaRestoreError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaRestoreError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaRestoreError
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaRestoreError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaRestoreError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaRestoreError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaSaveConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaSaveConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaSaveConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaSaveConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaSaveConflict
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaSaveConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaSaveConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaSaveConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaUpdateError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaUpdateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_VirtualCurrencyBetaUpdateError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaUpdateError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode VirtualCurrencyBetaUpdateError
void PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaUpdateError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_VirtualCurrencyBetaUpdateError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "VirtualCurrencyBetaUpdateError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementDatabaseNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementDatabaseNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementDatabaseNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementDatabaseNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementDatabaseNotFound
void PlayFab::PlayFabErrorCode::_set_InsightsManagementDatabaseNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementDatabaseNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementDatabaseNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementOperationNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementOperationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementOperationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementOperationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementOperationNotFound
void PlayFab::PlayFabErrorCode::_set_InsightsManagementOperationNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementOperationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementOperationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementErrorPendingOperationExists
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementErrorPendingOperationExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementErrorPendingOperationExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementErrorPendingOperationExists"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementErrorPendingOperationExists
void PlayFab::PlayFabErrorCode::_set_InsightsManagementErrorPendingOperationExists(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementErrorPendingOperationExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementErrorPendingOperationExists", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetPerformanceLevelInvalidParameter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementSetPerformanceLevelInvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementSetPerformanceLevelInvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementSetPerformanceLevelInvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetPerformanceLevelInvalidParameter
void PlayFab::PlayFabErrorCode::_set_InsightsManagementSetPerformanceLevelInvalidParameter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementSetPerformanceLevelInvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementSetPerformanceLevelInvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetStorageRetentionInvalidParameter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementSetStorageRetentionInvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementSetStorageRetentionInvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementSetStorageRetentionInvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetStorageRetentionInvalidParameter
void PlayFab::PlayFabErrorCode::_set_InsightsManagementSetStorageRetentionInvalidParameter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementSetStorageRetentionInvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementSetStorageRetentionInvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementGetStorageUsageInvalidParameter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementGetStorageUsageInvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementGetStorageUsageInvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementGetStorageUsageInvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementGetStorageUsageInvalidParameter
void PlayFab::PlayFabErrorCode::_set_InsightsManagementGetStorageUsageInvalidParameter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementGetStorageUsageInvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementGetStorageUsageInvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementGetOperationStatusInvalidParameter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementGetOperationStatusInvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementGetOperationStatusInvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementGetOperationStatusInvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementGetOperationStatusInvalidParameter
void PlayFab::PlayFabErrorCode::_set_InsightsManagementGetOperationStatusInvalidParameter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementGetOperationStatusInvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementGetOperationStatusInvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicatePurchaseTransactionId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicatePurchaseTransactionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicatePurchaseTransactionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicatePurchaseTransactionId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicatePurchaseTransactionId
void PlayFab::PlayFabErrorCode::_set_DuplicatePurchaseTransactionId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicatePurchaseTransactionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicatePurchaseTransactionId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EvaluationModePlayerCountExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EvaluationModePlayerCountExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EvaluationModePlayerCountExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EvaluationModePlayerCountExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EvaluationModePlayerCountExceeded
void PlayFab::PlayFabErrorCode::_set_EvaluationModePlayerCountExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EvaluationModePlayerCountExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EvaluationModePlayerCountExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode GetPlayersInSegmentRateLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_GetPlayersInSegmentRateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_GetPlayersInSegmentRateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "GetPlayersInSegmentRateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode GetPlayersInSegmentRateLimitExceeded
void PlayFab::PlayFabErrorCode::_set_GetPlayersInSegmentRateLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_GetPlayersInSegmentRateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "GetPlayersInSegmentRateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptFunctionNameSizeExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptFunctionNameSizeExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptFunctionNameSizeExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptFunctionNameSizeExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptFunctionNameSizeExceeded
void PlayFab::PlayFabErrorCode::_set_CloudScriptFunctionNameSizeExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptFunctionNameSizeExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptFunctionNameSizeExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementTitleInEvaluationMode
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementTitleInEvaluationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementTitleInEvaluationMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementTitleInEvaluationMode"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementTitleInEvaluationMode
void PlayFab::PlayFabErrorCode::_set_InsightsManagementTitleInEvaluationMode(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementTitleInEvaluationMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementTitleInEvaluationMode", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsQueueRequestError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsQueueRequestError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CloudScriptAzureFunctionsQueueRequestError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsQueueRequestError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CloudScriptAzureFunctionsQueueRequestError
void PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsQueueRequestError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CloudScriptAzureFunctionsQueueRequestError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CloudScriptAzureFunctionsQueueRequestError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode EvaluationModeTitleCountExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_EvaluationModeTitleCountExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_EvaluationModeTitleCountExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "EvaluationModeTitleCountExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode EvaluationModeTitleCountExceeded
void PlayFab::PlayFabErrorCode::_set_EvaluationModeTitleCountExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_EvaluationModeTitleCountExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "EvaluationModeTitleCountExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementTitleNotInFlight
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementTitleNotInFlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementTitleNotInFlight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementTitleNotInFlight"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementTitleNotInFlight
void PlayFab::PlayFabErrorCode::_set_InsightsManagementTitleNotInFlight(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementTitleNotInFlight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementTitleNotInFlight", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LimitNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LimitNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LimitNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LimitNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LimitNotFound
void PlayFab::PlayFabErrorCode::_set_LimitNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LimitNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LimitNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode LimitNotAvailableViaAPI
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_LimitNotAvailableViaAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_LimitNotAvailableViaAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "LimitNotAvailableViaAPI"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode LimitNotAvailableViaAPI
void PlayFab::PlayFabErrorCode::_set_LimitNotAvailableViaAPI(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_LimitNotAvailableViaAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "LimitNotAvailableViaAPI", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetStorageRetentionBelowMinimum
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementSetStorageRetentionBelowMinimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementSetStorageRetentionBelowMinimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementSetStorageRetentionBelowMinimum"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetStorageRetentionBelowMinimum
void PlayFab::PlayFabErrorCode::_set_InsightsManagementSetStorageRetentionBelowMinimum(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementSetStorageRetentionBelowMinimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementSetStorageRetentionBelowMinimum", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetStorageRetentionAboveMaximum
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementSetStorageRetentionAboveMaximum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementSetStorageRetentionAboveMaximum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementSetStorageRetentionAboveMaximum"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetStorageRetentionAboveMaximum
void PlayFab::PlayFabErrorCode::_set_InsightsManagementSetStorageRetentionAboveMaximum(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementSetStorageRetentionAboveMaximum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementSetStorageRetentionAboveMaximum", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode AppleNotEnabledForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_AppleNotEnabledForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_AppleNotEnabledForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "AppleNotEnabledForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode AppleNotEnabledForTitle
void PlayFab::PlayFabErrorCode::_set_AppleNotEnabledForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_AppleNotEnabledForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "AppleNotEnabledForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementNewActiveEventExportLimitInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementNewActiveEventExportLimitInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementNewActiveEventExportLimitInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementNewActiveEventExportLimitInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementNewActiveEventExportLimitInvalid
void PlayFab::PlayFabErrorCode::_set_InsightsManagementNewActiveEventExportLimitInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementNewActiveEventExportLimitInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementNewActiveEventExportLimitInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetPerformanceRateLimited
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_InsightsManagementSetPerformanceRateLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_InsightsManagementSetPerformanceRateLimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "InsightsManagementSetPerformanceRateLimited"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode InsightsManagementSetPerformanceRateLimited
void PlayFab::PlayFabErrorCode::_set_InsightsManagementSetPerformanceRateLimited(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_InsightsManagementSetPerformanceRateLimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "InsightsManagementSetPerformanceRateLimited", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyRequestsThrottledFromRateLimiter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyRequestsThrottledFromRateLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyRequestsThrottledFromRateLimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyRequestsThrottledFromRateLimiter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyRequestsThrottledFromRateLimiter
void PlayFab::PlayFabErrorCode::_set_PartyRequestsThrottledFromRateLimiter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyRequestsThrottledFromRateLimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyRequestsThrottledFromRateLimiter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode XboxServiceTooManyRequests
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_XboxServiceTooManyRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_XboxServiceTooManyRequests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "XboxServiceTooManyRequests"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode XboxServiceTooManyRequests
void PlayFab::PlayFabErrorCode::_set_XboxServiceTooManyRequests(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_XboxServiceTooManyRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "XboxServiceTooManyRequests", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NintendoSwitchNotEnabledForTitle
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NintendoSwitchNotEnabledForTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NintendoSwitchNotEnabledForTitle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NintendoSwitchNotEnabledForTitle"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NintendoSwitchNotEnabledForTitle
void PlayFab::PlayFabErrorCode::_set_NintendoSwitchNotEnabledForTitle(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NintendoSwitchNotEnabledForTitle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NintendoSwitchNotEnabledForTitle", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode RequestMultiplayerServersThrottledFromRateLimiter
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_RequestMultiplayerServersThrottledFromRateLimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_RequestMultiplayerServersThrottledFromRateLimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "RequestMultiplayerServersThrottledFromRateLimiter"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode RequestMultiplayerServersThrottledFromRateLimiter
void PlayFab::PlayFabErrorCode::_set_RequestMultiplayerServersThrottledFromRateLimiter(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_RequestMultiplayerServersThrottledFromRateLimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "RequestMultiplayerServersThrottledFromRateLimiter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleDataInstanceNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleDataInstanceNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleDataInstanceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleDataInstanceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleDataInstanceNotFound
void PlayFab::PlayFabErrorCode::_set_TitleDataInstanceNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleDataInstanceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleDataInstanceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode DuplicateTitleDataOverrideInstanceName
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_DuplicateTitleDataOverrideInstanceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_DuplicateTitleDataOverrideInstanceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "DuplicateTitleDataOverrideInstanceName"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode DuplicateTitleDataOverrideInstanceName
void PlayFab::PlayFabErrorCode::_set_DuplicateTitleDataOverrideInstanceName(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_DuplicateTitleDataOverrideInstanceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "DuplicateTitleDataOverrideInstanceName", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingEntityInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingEntityInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingEntityInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingEntityInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingEntityInvalid
void PlayFab::PlayFabErrorCode::_set_MatchmakingEntityInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingEntityInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingEntityInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingPlayerAttributesInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingPlayerAttributesInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingPlayerAttributesInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingPlayerAttributesInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingPlayerAttributesInvalid
void PlayFab::PlayFabErrorCode::_set_MatchmakingPlayerAttributesInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingPlayerAttributesInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingPlayerAttributesInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingQueueNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingQueueNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingQueueNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingQueueNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingQueueNotFound
void PlayFab::PlayFabErrorCode::_set_MatchmakingQueueNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingQueueNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingQueueNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingMatchNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingMatchNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingMatchNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingMatchNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingMatchNotFound
void PlayFab::PlayFabErrorCode::_set_MatchmakingMatchNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingMatchNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingMatchNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingTicketNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingTicketNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingTicketNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingTicketNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingTicketNotFound
void PlayFab::PlayFabErrorCode::_set_MatchmakingTicketNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingTicketNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingTicketNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingAlreadyJoinedTicket
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingAlreadyJoinedTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingAlreadyJoinedTicket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingAlreadyJoinedTicket"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingAlreadyJoinedTicket
void PlayFab::PlayFabErrorCode::_set_MatchmakingAlreadyJoinedTicket(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingAlreadyJoinedTicket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingAlreadyJoinedTicket", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingTicketAlreadyCompleted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingTicketAlreadyCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingTicketAlreadyCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingTicketAlreadyCompleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingTicketAlreadyCompleted
void PlayFab::PlayFabErrorCode::_set_MatchmakingTicketAlreadyCompleted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingTicketAlreadyCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingTicketAlreadyCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingQueueConfigInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingQueueConfigInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingQueueConfigInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingQueueConfigInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingQueueConfigInvalid
void PlayFab::PlayFabErrorCode::_set_MatchmakingQueueConfigInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingQueueConfigInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingQueueConfigInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingMemberProfileInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingMemberProfileInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingMemberProfileInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingMemberProfileInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingMemberProfileInvalid
void PlayFab::PlayFabErrorCode::_set_MatchmakingMemberProfileInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingMemberProfileInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingMemberProfileInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode NintendoSwitchDeviceIdNotLinked
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_NintendoSwitchDeviceIdNotLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_NintendoSwitchDeviceIdNotLinked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "NintendoSwitchDeviceIdNotLinked"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode NintendoSwitchDeviceIdNotLinked
void PlayFab::PlayFabErrorCode::_set_NintendoSwitchDeviceIdNotLinked(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_NintendoSwitchDeviceIdNotLinked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "NintendoSwitchDeviceIdNotLinked", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingNotEnabled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingNotEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingNotEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingNotEnabled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingNotEnabled
void PlayFab::PlayFabErrorCode::_set_MatchmakingNotEnabled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingNotEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingNotEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingPlayerAttributesTooLarge
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingPlayerAttributesTooLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingPlayerAttributesTooLarge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingPlayerAttributesTooLarge"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingPlayerAttributesTooLarge
void PlayFab::PlayFabErrorCode::_set_MatchmakingPlayerAttributesTooLarge(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingPlayerAttributesTooLarge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingPlayerAttributesTooLarge", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingNumberOfPlayersInTicketTooLarge
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingNumberOfPlayersInTicketTooLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingNumberOfPlayersInTicketTooLarge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingNumberOfPlayersInTicketTooLarge"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingNumberOfPlayersInTicketTooLarge
void PlayFab::PlayFabErrorCode::_set_MatchmakingNumberOfPlayersInTicketTooLarge(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingNumberOfPlayersInTicketTooLarge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingNumberOfPlayersInTicketTooLarge", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingAttributeInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingAttributeInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingAttributeInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingAttributeInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingAttributeInvalid
void PlayFab::PlayFabErrorCode::_set_MatchmakingAttributeInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingAttributeInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingAttributeInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingPlayerHasNotJoinedTicket
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingPlayerHasNotJoinedTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingPlayerHasNotJoinedTicket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingPlayerHasNotJoinedTicket"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingPlayerHasNotJoinedTicket
void PlayFab::PlayFabErrorCode::_set_MatchmakingPlayerHasNotJoinedTicket(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingPlayerHasNotJoinedTicket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingPlayerHasNotJoinedTicket", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingRateLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingRateLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingRateLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingRateLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingRateLimitExceeded
void PlayFab::PlayFabErrorCode::_set_MatchmakingRateLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingRateLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingRateLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingTicketMembershipLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingTicketMembershipLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingTicketMembershipLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingTicketMembershipLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingTicketMembershipLimitExceeded
void PlayFab::PlayFabErrorCode::_set_MatchmakingTicketMembershipLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingTicketMembershipLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingTicketMembershipLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingUnauthorized
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingUnauthorized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingUnauthorized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingUnauthorized"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingUnauthorized
void PlayFab::PlayFabErrorCode::_set_MatchmakingUnauthorized(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingUnauthorized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingUnauthorized", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingQueueLimitExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingQueueLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingQueueLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingQueueLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingQueueLimitExceeded
void PlayFab::PlayFabErrorCode::_set_MatchmakingQueueLimitExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingQueueLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingQueueLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingRequestTypeMismatch
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingRequestTypeMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingRequestTypeMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingRequestTypeMismatch"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingRequestTypeMismatch
void PlayFab::PlayFabErrorCode::_set_MatchmakingRequestTypeMismatch(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingRequestTypeMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingRequestTypeMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MatchmakingBadRequest
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MatchmakingBadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MatchmakingBadRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MatchmakingBadRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MatchmakingBadRequest
void PlayFab::PlayFabErrorCode::_set_MatchmakingBadRequest(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MatchmakingBadRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MatchmakingBadRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleConfigNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleConfigNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleConfigNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleConfigNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleConfigNotFound
void PlayFab::PlayFabErrorCode::_set_TitleConfigNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleConfigNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleConfigNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleConfigUpdateConflict
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleConfigUpdateConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleConfigUpdateConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleConfigUpdateConflict"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleConfigUpdateConflict
void PlayFab::PlayFabErrorCode::_set_TitleConfigUpdateConflict(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleConfigUpdateConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleConfigUpdateConflict", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleConfigSerializationError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleConfigSerializationError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleConfigSerializationError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleConfigSerializationError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleConfigSerializationError
void PlayFab::PlayFabErrorCode::_set_TitleConfigSerializationError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleConfigSerializationError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleConfigSerializationError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogEntityInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogEntityInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogEntityInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogEntityInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogEntityInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogEntityInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogEntityInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogEntityInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogTitleIdMissing
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogTitleIdMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogTitleIdMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogTitleIdMissing"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogTitleIdMissing
void PlayFab::PlayFabErrorCode::_set_CatalogTitleIdMissing(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogTitleIdMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogTitleIdMissing", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogPlayerIdMissing
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogPlayerIdMissing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogPlayerIdMissing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogPlayerIdMissing"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogPlayerIdMissing
void PlayFab::PlayFabErrorCode::_set_CatalogPlayerIdMissing(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogPlayerIdMissing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogPlayerIdMissing", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogClientIdentityInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogClientIdentityInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogClientIdentityInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogClientIdentityInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogClientIdentityInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogClientIdentityInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogClientIdentityInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogClientIdentityInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogOneOrMoreFilesInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogOneOrMoreFilesInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogOneOrMoreFilesInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogOneOrMoreFilesInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogOneOrMoreFilesInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogOneOrMoreFilesInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogOneOrMoreFilesInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogOneOrMoreFilesInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogItemMetadataInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogItemMetadataInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogItemMetadataInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogItemMetadataInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogItemMetadataInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogItemMetadataInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogItemMetadataInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogItemMetadataInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogItemIdInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogItemIdInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogItemIdInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogItemIdInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogItemIdInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogItemIdInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogItemIdInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogItemIdInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogSearchParameterInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogSearchParameterInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogSearchParameterInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogSearchParameterInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogSearchParameterInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogSearchParameterInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogSearchParameterInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogSearchParameterInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogFeatureDisabled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogFeatureDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogFeatureDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogFeatureDisabled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogFeatureDisabled
void PlayFab::PlayFabErrorCode::_set_CatalogFeatureDisabled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogFeatureDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogFeatureDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogConfigInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogConfigInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogConfigInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogConfigInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogConfigInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogConfigInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogConfigInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogConfigInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogUnauthorized
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogUnauthorized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogUnauthorized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogUnauthorized"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogUnauthorized
void PlayFab::PlayFabErrorCode::_set_CatalogUnauthorized(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogUnauthorized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogUnauthorized", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogItemTypeInvalid
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogItemTypeInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogItemTypeInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogItemTypeInvalid"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogItemTypeInvalid
void PlayFab::PlayFabErrorCode::_set_CatalogItemTypeInvalid(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogItemTypeInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogItemTypeInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogBadRequest
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogBadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogBadRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogBadRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogBadRequest
void PlayFab::PlayFabErrorCode::_set_CatalogBadRequest(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogBadRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogBadRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode CatalogTooManyRequests
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_CatalogTooManyRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_CatalogTooManyRequests");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "CatalogTooManyRequests"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode CatalogTooManyRequests
void PlayFab::PlayFabErrorCode::_set_CatalogTooManyRequests(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_CatalogTooManyRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "CatalogTooManyRequests", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportInvalidStatusUpdate
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportInvalidStatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportInvalidStatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportInvalidStatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportInvalidStatusUpdate
void PlayFab::PlayFabErrorCode::_set_ExportInvalidStatusUpdate(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportInvalidStatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportInvalidStatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportInvalidPrefix
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportInvalidPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportInvalidPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportInvalidPrefix"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportInvalidPrefix
void PlayFab::PlayFabErrorCode::_set_ExportInvalidPrefix(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportInvalidPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportInvalidPrefix", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportBlobContainerDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportBlobContainerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportBlobContainerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportBlobContainerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportBlobContainerDoesNotExist
void PlayFab::PlayFabErrorCode::_set_ExportBlobContainerDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportBlobContainerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportBlobContainerDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportNotFound
void PlayFab::PlayFabErrorCode::_set_ExportNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportCouldNotUpdate
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportCouldNotUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportCouldNotUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportCouldNotUpdate"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportCouldNotUpdate
void PlayFab::PlayFabErrorCode::_set_ExportCouldNotUpdate(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportCouldNotUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportCouldNotUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportInvalidStorageType
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportInvalidStorageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportInvalidStorageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportInvalidStorageType"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportInvalidStorageType
void PlayFab::PlayFabErrorCode::_set_ExportInvalidStorageType(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportInvalidStorageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportInvalidStorageType", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportAmazonBucketDoesNotExist
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportAmazonBucketDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportAmazonBucketDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportAmazonBucketDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportAmazonBucketDoesNotExist
void PlayFab::PlayFabErrorCode::_set_ExportAmazonBucketDoesNotExist(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportAmazonBucketDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportAmazonBucketDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportInvalidBlobStorage
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportInvalidBlobStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportInvalidBlobStorage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportInvalidBlobStorage"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportInvalidBlobStorage
void PlayFab::PlayFabErrorCode::_set_ExportInvalidBlobStorage(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportInvalidBlobStorage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportInvalidBlobStorage", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportKustoException
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportKustoException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportKustoException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportKustoException"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportKustoException
void PlayFab::PlayFabErrorCode::_set_ExportKustoException(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportKustoException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportKustoException", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportKustoConnectionFailed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportKustoConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportKustoConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportKustoConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportKustoConnectionFailed
void PlayFab::PlayFabErrorCode::_set_ExportKustoConnectionFailed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportKustoConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportKustoConnectionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportUnknownError
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportUnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportUnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportUnknownError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportUnknownError
void PlayFab::PlayFabErrorCode::_set_ExportUnknownError(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportUnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportUnknownError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportCantEditPendingExport
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportCantEditPendingExport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportCantEditPendingExport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportCantEditPendingExport"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportCantEditPendingExport
void PlayFab::PlayFabErrorCode::_set_ExportCantEditPendingExport(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportCantEditPendingExport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportCantEditPendingExport", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportLimitExports
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportLimitExports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportLimitExports");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportLimitExports"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportLimitExports
void PlayFab::PlayFabErrorCode::_set_ExportLimitExports(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportLimitExports");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportLimitExports", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportLimitEvents
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportLimitEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportLimitEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportLimitEvents"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportLimitEvents
void PlayFab::PlayFabErrorCode::_set_ExportLimitEvents(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportLimitEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportLimitEvents", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportInvalidPartitionStatusModification
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportInvalidPartitionStatusModification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportInvalidPartitionStatusModification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportInvalidPartitionStatusModification"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportInvalidPartitionStatusModification
void PlayFab::PlayFabErrorCode::_set_ExportInvalidPartitionStatusModification(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportInvalidPartitionStatusModification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportInvalidPartitionStatusModification", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportCouldNotCreate
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportCouldNotCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportCouldNotCreate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportCouldNotCreate"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportCouldNotCreate
void PlayFab::PlayFabErrorCode::_set_ExportCouldNotCreate(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportCouldNotCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportCouldNotCreate", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportNoBackingDatabaseFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportNoBackingDatabaseFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportNoBackingDatabaseFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportNoBackingDatabaseFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportNoBackingDatabaseFound
void PlayFab::PlayFabErrorCode::_set_ExportNoBackingDatabaseFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportNoBackingDatabaseFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportNoBackingDatabaseFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportCouldNotDelete
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportCouldNotDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportCouldNotDelete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportCouldNotDelete"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportCouldNotDelete
void PlayFab::PlayFabErrorCode::_set_ExportCouldNotDelete(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportCouldNotDelete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportCouldNotDelete", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportCannotDetermineEventQuery
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportCannotDetermineEventQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportCannotDetermineEventQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportCannotDetermineEventQuery"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportCannotDetermineEventQuery
void PlayFab::PlayFabErrorCode::_set_ExportCannotDetermineEventQuery(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportCannotDetermineEventQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportCannotDetermineEventQuery", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportInvalidQuerySchemaModification
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportInvalidQuerySchemaModification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportInvalidQuerySchemaModification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportInvalidQuerySchemaModification"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportInvalidQuerySchemaModification
void PlayFab::PlayFabErrorCode::_set_ExportInvalidQuerySchemaModification(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportInvalidQuerySchemaModification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportInvalidQuerySchemaModification", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportQuerySchemaMissingRequiredColumns
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportQuerySchemaMissingRequiredColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportQuerySchemaMissingRequiredColumns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportQuerySchemaMissingRequiredColumns"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportQuerySchemaMissingRequiredColumns
void PlayFab::PlayFabErrorCode::_set_ExportQuerySchemaMissingRequiredColumns(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportQuerySchemaMissingRequiredColumns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportQuerySchemaMissingRequiredColumns", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportCannotParseQuery
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportCannotParseQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportCannotParseQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportCannotParseQuery"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportCannotParseQuery
void PlayFab::PlayFabErrorCode::_set_ExportCannotParseQuery(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportCannotParseQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportCannotParseQuery", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportControlCommandsNotAllowed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportControlCommandsNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportControlCommandsNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportControlCommandsNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportControlCommandsNotAllowed
void PlayFab::PlayFabErrorCode::_set_ExportControlCommandsNotAllowed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportControlCommandsNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportControlCommandsNotAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExportQueryMissingTableReference
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExportQueryMissingTableReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExportQueryMissingTableReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExportQueryMissingTableReference"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExportQueryMissingTableReference
void PlayFab::PlayFabErrorCode::_set_ExportQueryMissingTableReference(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExportQueryMissingTableReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExportQueryMissingTableReference", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNotEnabledForParty
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNotEnabledForParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNotEnabledForParty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNotEnabledForParty"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNotEnabledForParty
void PlayFab::PlayFabErrorCode::_set_TitleNotEnabledForParty(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNotEnabledForParty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNotEnabledForParty", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode PartyVersionNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_PartyVersionNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_PartyVersionNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "PartyVersionNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode PartyVersionNotFound
void PlayFab::PlayFabErrorCode::_set_PartyVersionNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_PartyVersionNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "PartyVersionNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MultiplayerServerBuildReferencedByMatchmakingQueue
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MultiplayerServerBuildReferencedByMatchmakingQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MultiplayerServerBuildReferencedByMatchmakingQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MultiplayerServerBuildReferencedByMatchmakingQueue"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MultiplayerServerBuildReferencedByMatchmakingQueue
void PlayFab::PlayFabErrorCode::_set_MultiplayerServerBuildReferencedByMatchmakingQueue(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MultiplayerServerBuildReferencedByMatchmakingQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MultiplayerServerBuildReferencedByMatchmakingQueue", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentStopped
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentStopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentStopped"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentStopped
void PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentStopped(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentStopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentStopped", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentRunning
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentRunning"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentRunning
void PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentRunning(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentRunning", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentNotFound
void PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentNeverStarted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentNeverStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentNeverStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentNeverStarted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentNeverStarted
void PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentNeverStarted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentNeverStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentNeverStarted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentDeleted
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentDeleted"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentDeleted
void PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentDeleted(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationClientTimeout
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationClientTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationClientTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationClientTimeout"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationClientTimeout
void PlayFab::PlayFabErrorCode::_set_ExperimentationClientTimeout(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationClientTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationClientTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationInvalidVariantConfiguration
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationInvalidVariantConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationInvalidVariantConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationInvalidVariantConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationInvalidVariantConfiguration
void PlayFab::PlayFabErrorCode::_set_ExperimentationInvalidVariantConfiguration(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationInvalidVariantConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationInvalidVariantConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationInvalidVariableConfiguration
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationInvalidVariableConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationInvalidVariableConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationInvalidVariableConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationInvalidVariableConfiguration
void PlayFab::PlayFabErrorCode::_set_ExperimentationInvalidVariableConfiguration(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationInvalidVariableConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationInvalidVariableConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentInvalidId
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentInvalidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentInvalidId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentInvalidId"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentInvalidId
void PlayFab::PlayFabErrorCode::_set_ExperimentInvalidId(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentInvalidId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentInvalidId", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationNoScorecard
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationNoScorecard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationNoScorecard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationNoScorecard"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationNoScorecard
void PlayFab::PlayFabErrorCode::_set_ExperimentationNoScorecard(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationNoScorecard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationNoScorecard", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationTreatmentAssignmentFailed
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationTreatmentAssignmentFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationTreatmentAssignmentFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationTreatmentAssignmentFailed"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationTreatmentAssignmentFailed
void PlayFab::PlayFabErrorCode::_set_ExperimentationTreatmentAssignmentFailed(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationTreatmentAssignmentFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationTreatmentAssignmentFailed", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationTreatmentAssignmentDisabled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationTreatmentAssignmentDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationTreatmentAssignmentDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationTreatmentAssignmentDisabled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationTreatmentAssignmentDisabled
void PlayFab::PlayFabErrorCode::_set_ExperimentationTreatmentAssignmentDisabled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationTreatmentAssignmentDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationTreatmentAssignmentDisabled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationInvalidDuration
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationInvalidDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationInvalidDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationInvalidDuration"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationInvalidDuration
void PlayFab::PlayFabErrorCode::_set_ExperimentationInvalidDuration(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationInvalidDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationInvalidDuration", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationMaxExperimentsReached
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationMaxExperimentsReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationMaxExperimentsReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationMaxExperimentsReached"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationMaxExperimentsReached
void PlayFab::PlayFabErrorCode::_set_ExperimentationMaxExperimentsReached(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationMaxExperimentsReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationMaxExperimentsReached", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentSchedulingInProgress
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentSchedulingInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationExperimentSchedulingInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentSchedulingInProgress"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationExperimentSchedulingInProgress
void PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentSchedulingInProgress(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationExperimentSchedulingInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationExperimentSchedulingInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode ExperimentationExistingCodelessScheduled
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_ExperimentationExistingCodelessScheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_ExperimentationExistingCodelessScheduled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "ExperimentationExistingCodelessScheduled"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode ExperimentationExistingCodelessScheduled
void PlayFab::PlayFabErrorCode::_set_ExperimentationExistingCodelessScheduled(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_ExperimentationExistingCodelessScheduled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "ExperimentationExistingCodelessScheduled", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode MaxActionDepthExceeded
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_MaxActionDepthExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_MaxActionDepthExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "MaxActionDepthExceeded"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode MaxActionDepthExceeded
void PlayFab::PlayFabErrorCode::_set_MaxActionDepthExceeded(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_MaxActionDepthExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "MaxActionDepthExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode TitleNotOnUpdatedPricingPlan
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_TitleNotOnUpdatedPricingPlan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_TitleNotOnUpdatedPricingPlan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "TitleNotOnUpdatedPricingPlan"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode TitleNotOnUpdatedPricingPlan
void PlayFab::PlayFabErrorCode::_set_TitleNotOnUpdatedPricingPlan(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_TitleNotOnUpdatedPricingPlan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "TitleNotOnUpdatedPricingPlan", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabErrorCode SnapshotNotFound
::PlayFab::PlayFabErrorCode PlayFab::PlayFabErrorCode::_get_SnapshotNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_get_SnapshotNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabErrorCode>("PlayFab", "PlayFabErrorCode", "SnapshotNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabErrorCode SnapshotNotFound
void PlayFab::PlayFabErrorCode::_set_SnapshotNotFound(::PlayFab::PlayFabErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::_set_SnapshotNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabErrorCode", "SnapshotNotFound", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabErrorCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabErrorCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder _tempSb
::System::Text::StringBuilder* PlayFab::PlayFabError::_get__tempSb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::_get__tempSb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("PlayFab", "PlayFabError", "_tempSb"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder _tempSb
void PlayFab::PlayFabError::_set__tempSb(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::_set__tempSb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabError", "_tempSb", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String ApiEndpoint
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabError::dyn_ApiEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::dyn_ApiEndpoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApiEndpoint"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 HttpCode
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabError::dyn_HttpCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::dyn_HttpCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HttpCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String HttpStatus
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabError::dyn_HttpStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::dyn_HttpStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HttpStatus"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.PlayFabErrorCode Error
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabErrorCode& PlayFab::PlayFabError::dyn_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::dyn_Error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Error"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabErrorCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ErrorMessage
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabError::dyn_ErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::dyn_ErrorMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.String>> ErrorDetails
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>*& PlayFab::PlayFabError::dyn_ErrorDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::dyn_ErrorDetails");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ErrorDetails"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CustomData
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::PlayFabError::dyn_CustomData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::dyn_CustomData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomData"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabError.GenerateErrorReport
::StringW PlayFab::PlayFabError::GenerateErrorReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::GenerateErrorReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateErrorReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabError.ToString
::StringW PlayFab::PlayFabError::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabError::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabException
#include "PlayFab/PlayFabException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayFab.PlayFabExceptionCode Code
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabExceptionCode& PlayFab::PlayFabException::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabException::dyn_Code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabExceptionCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabExceptionCode
#include "PlayFab/PlayFabExceptionCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabExceptionCode AuthContextRequired
::PlayFab::PlayFabExceptionCode PlayFab::PlayFabExceptionCode::_get_AuthContextRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_get_AuthContextRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabExceptionCode>("PlayFab", "PlayFabExceptionCode", "AuthContextRequired"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabExceptionCode AuthContextRequired
void PlayFab::PlayFabExceptionCode::_set_AuthContextRequired(::PlayFab::PlayFabExceptionCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_set_AuthContextRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabExceptionCode", "AuthContextRequired", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabExceptionCode BuildError
::PlayFab::PlayFabExceptionCode PlayFab::PlayFabExceptionCode::_get_BuildError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_get_BuildError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabExceptionCode>("PlayFab", "PlayFabExceptionCode", "BuildError"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabExceptionCode BuildError
void PlayFab::PlayFabExceptionCode::_set_BuildError(::PlayFab::PlayFabExceptionCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_set_BuildError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabExceptionCode", "BuildError", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabExceptionCode DeveloperKeyNotSet
::PlayFab::PlayFabExceptionCode PlayFab::PlayFabExceptionCode::_get_DeveloperKeyNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_get_DeveloperKeyNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabExceptionCode>("PlayFab", "PlayFabExceptionCode", "DeveloperKeyNotSet"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabExceptionCode DeveloperKeyNotSet
void PlayFab::PlayFabExceptionCode::_set_DeveloperKeyNotSet(::PlayFab::PlayFabExceptionCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_set_DeveloperKeyNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabExceptionCode", "DeveloperKeyNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabExceptionCode EntityTokenNotSet
::PlayFab::PlayFabExceptionCode PlayFab::PlayFabExceptionCode::_get_EntityTokenNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_get_EntityTokenNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabExceptionCode>("PlayFab", "PlayFabExceptionCode", "EntityTokenNotSet"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabExceptionCode EntityTokenNotSet
void PlayFab::PlayFabExceptionCode::_set_EntityTokenNotSet(::PlayFab::PlayFabExceptionCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_set_EntityTokenNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabExceptionCode", "EntityTokenNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabExceptionCode NotLoggedIn
::PlayFab::PlayFabExceptionCode PlayFab::PlayFabExceptionCode::_get_NotLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_get_NotLoggedIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabExceptionCode>("PlayFab", "PlayFabExceptionCode", "NotLoggedIn"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabExceptionCode NotLoggedIn
void PlayFab::PlayFabExceptionCode::_set_NotLoggedIn(::PlayFab::PlayFabExceptionCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_set_NotLoggedIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabExceptionCode", "NotLoggedIn", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabExceptionCode TitleNotSet
::PlayFab::PlayFabExceptionCode PlayFab::PlayFabExceptionCode::_get_TitleNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_get_TitleNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabExceptionCode>("PlayFab", "PlayFabExceptionCode", "TitleNotSet"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabExceptionCode TitleNotSet
void PlayFab::PlayFabExceptionCode::_set_TitleNotSet(::PlayFab::PlayFabExceptionCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::_set_TitleNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabExceptionCode", "TitleNotSet", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabExceptionCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabExceptionCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.WsaReflectionExtensions
#include "PlayFab/WsaReflectionExtensions.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.WsaReflectionExtensions.CreateDelegate
::System::Delegate* PlayFab::WsaReflectionExtensions::CreateDelegate(::System::Reflection::MethodInfo* methodInfo, ::System::Type* delegateType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WsaReflectionExtensions::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "WsaReflectionExtensions", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodInfo), ::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, methodInfo, delegateType, instance);
}
// Autogenerated method: PlayFab.WsaReflectionExtensions.GetTypeInfo
::System::Type* PlayFab::WsaReflectionExtensions::GetTypeInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WsaReflectionExtensions::GetTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "WsaReflectionExtensions", "GetTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.WsaReflectionExtensions.AsType
::System::Type* PlayFab::WsaReflectionExtensions::AsType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WsaReflectionExtensions::AsType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "WsaReflectionExtensions", "AsType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PlayFab.WsaReflectionExtensions.GetDelegateName
::StringW PlayFab::WsaReflectionExtensions::GetDelegateName(::System::Delegate* delegateInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WsaReflectionExtensions::GetDelegateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "WsaReflectionExtensions", "GetDelegateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateInstance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.ISerializerPlugin
#include "PlayFab/ISerializerPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.ISerializerPlugin.DeserializeObject
::Il2CppObject* PlayFab::ISerializerPlugin::DeserializeObject(::StringW serialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ISerializerPlugin::DeserializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ISerializerPlugin*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, serialized);
}
// Autogenerated method: PlayFab.ISerializerPlugin.SerializeObject
::StringW PlayFab::ISerializerPlugin::SerializeObject(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ISerializerPlugin::SerializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ISerializerPlugin*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, obj);
}
// Autogenerated method: PlayFab.ISerializerPlugin.SerializeObject
::StringW PlayFab::ISerializerPlugin::SerializeObject(::Il2CppObject* obj, ::Il2CppObject* serializerStrategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ISerializerPlugin::SerializeObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ISerializerPlugin*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, obj, serializerStrategy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.ITransportPlugin
#include "PlayFab/ITransportPlugin.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.ITransportPlugin.get_IsInitialized
bool PlayFab::ITransportPlugin::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::get_IsInitialized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.ITransportPlugin.Initialize
void PlayFab::ITransportPlugin::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.ITransportPlugin.Update
void PlayFab::ITransportPlugin::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.ITransportPlugin.OnDestroy
void PlayFab::ITransportPlugin::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.ITransportPlugin.SimpleGetCall
void PlayFab::ITransportPlugin::SimpleGetCall(::StringW fullUrl, ::System::Action_1<::ArrayW<uint8_t>>* successCallback, ::System::Action_1<::StringW>* errorCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::SimpleGetCall");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fullUrl, successCallback, errorCallback);
}
// Autogenerated method: PlayFab.ITransportPlugin.SimplePutCall
void PlayFab::ITransportPlugin::SimplePutCall(::StringW fullUrl, ::ArrayW<uint8_t> payload, ::System::Action_1<::ArrayW<uint8_t>>* successCallback, ::System::Action_1<::StringW>* errorCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::SimplePutCall");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fullUrl, payload, successCallback, errorCallback);
}
// Autogenerated method: PlayFab.ITransportPlugin.SimplePostCall
void PlayFab::ITransportPlugin::SimplePostCall(::StringW fullUrl, ::ArrayW<uint8_t> payload, ::System::Action_1<::ArrayW<uint8_t>>* successCallback, ::System::Action_1<::StringW>* errorCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::SimplePostCall");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fullUrl, payload, successCallback, errorCallback);
}
// Autogenerated method: PlayFab.ITransportPlugin.MakeApiCall
void PlayFab::ITransportPlugin::MakeApiCall(::Il2CppObject* reqContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::MakeApiCall");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reqContainer);
}
// Autogenerated method: PlayFab.ITransportPlugin.GetPendingMessages
int PlayFab::ITransportPlugin::GetPendingMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ITransportPlugin::GetPendingMessages");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ITransportPlugin*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _ProductionEnvironmentUrl
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabApiSettings::dyn__ProductionEnvironmentUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn__ProductionEnvironmentUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProductionEnvironmentUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _requestGetParams
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::PlayFabApiSettings::dyn__requestGetParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn__requestGetParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestGetParams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <TitleId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabApiSettings::dyn_$TitleId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn_$TitleId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TitleId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <VerticalName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabApiSettings::dyn_$VerticalName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn_$VerticalName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VerticalName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AdvertisingIdType>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabApiSettings::dyn_$AdvertisingIdType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn_$AdvertisingIdType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AdvertisingIdType>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <AdvertisingIdValue>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabApiSettings::dyn_$AdvertisingIdValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn_$AdvertisingIdValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AdvertisingIdValue>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DisableAdvertising>k__BackingField
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabApiSettings::dyn_$DisableAdvertising$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn_$DisableAdvertising$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisableAdvertising>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DisableDeviceInfo>k__BackingField
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabApiSettings::dyn_$DisableDeviceInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn_$DisableDeviceInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisableDeviceInfo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DisableFocusTimeCollection>k__BackingField
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabApiSettings::dyn_$DisableFocusTimeCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::dyn_$DisableFocusTimeCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DisableFocusTimeCollection>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_RequestGetParams
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* PlayFab::PlayFabApiSettings::get_RequestGetParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_RequestGetParams");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_ProductionEnvironmentUrl
::StringW PlayFab::PlayFabApiSettings::get_ProductionEnvironmentUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_ProductionEnvironmentUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_ProductionEnvironmentUrl
void PlayFab::PlayFabApiSettings::set_ProductionEnvironmentUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_ProductionEnvironmentUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_TitleId
::StringW PlayFab::PlayFabApiSettings::get_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_TitleId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_TitleId
void PlayFab::PlayFabApiSettings::set_TitleId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_TitleId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_VerticalName
::StringW PlayFab::PlayFabApiSettings::get_VerticalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_VerticalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_VerticalName
void PlayFab::PlayFabApiSettings::set_VerticalName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_VerticalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_AdvertisingIdType
::StringW PlayFab::PlayFabApiSettings::get_AdvertisingIdType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_AdvertisingIdType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_AdvertisingIdType
void PlayFab::PlayFabApiSettings::set_AdvertisingIdType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_AdvertisingIdType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_AdvertisingIdValue
::StringW PlayFab::PlayFabApiSettings::get_AdvertisingIdValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_AdvertisingIdValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_AdvertisingIdValue
void PlayFab::PlayFabApiSettings::set_AdvertisingIdValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_AdvertisingIdValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_DisableAdvertising
bool PlayFab::PlayFabApiSettings::get_DisableAdvertising() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_DisableAdvertising");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_DisableAdvertising
void PlayFab::PlayFabApiSettings::set_DisableAdvertising(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_DisableAdvertising");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_DisableDeviceInfo
bool PlayFab::PlayFabApiSettings::get_DisableDeviceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_DisableDeviceInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_DisableDeviceInfo
void PlayFab::PlayFabApiSettings::set_DisableDeviceInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_DisableDeviceInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.get_DisableFocusTimeCollection
bool PlayFab::PlayFabApiSettings::get_DisableFocusTimeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::get_DisableFocusTimeCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.set_DisableFocusTimeCollection
void PlayFab::PlayFabApiSettings::set_DisableFocusTimeCollection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::set_DisableFocusTimeCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabApiSettings.GetFullUrl
::StringW PlayFab::PlayFabApiSettings::GetFullUrl(::StringW apiCall, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* getParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabApiSettings::GetFullUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, apiCall, getParams);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabSettingsRedirect
#include "PlayFab/PlayFabSettingsRedirect.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: PlayFabSharedSettings
#include "GlobalNamespace/PlayFabSharedSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`1<PlayFabSharedSettings> GetSO
[[deprecated("Use field access instead!")]] ::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>*& PlayFab::PlayFabSettingsRedirect::dyn_GetSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::dyn_GetSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GetSO"))->offset;
  return *reinterpret_cast<::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_ProductionEnvironmentUrl
::StringW PlayFab::PlayFabSettingsRedirect::get_ProductionEnvironmentUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_ProductionEnvironmentUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_ProductionEnvironmentUrl
void PlayFab::PlayFabSettingsRedirect::set_ProductionEnvironmentUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_ProductionEnvironmentUrl");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_VerticalName
::StringW PlayFab::PlayFabSettingsRedirect::get_VerticalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_VerticalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_VerticalName
void PlayFab::PlayFabSettingsRedirect::set_VerticalName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_VerticalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_TitleId
::StringW PlayFab::PlayFabSettingsRedirect::get_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_TitleId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_TitleId
void PlayFab::PlayFabSettingsRedirect::set_TitleId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_TitleId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_AdvertisingIdType
::StringW PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_AdvertisingIdType
void PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_AdvertisingIdValue
::StringW PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_AdvertisingIdValue
void PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_DisableAdvertising
bool PlayFab::PlayFabSettingsRedirect::get_DisableAdvertising() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_DisableAdvertising");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_DisableAdvertising
void PlayFab::PlayFabSettingsRedirect::set_DisableAdvertising(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_DisableAdvertising");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_DisableDeviceInfo
bool PlayFab::PlayFabSettingsRedirect::get_DisableDeviceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_DisableDeviceInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_DisableDeviceInfo
void PlayFab::PlayFabSettingsRedirect::set_DisableDeviceInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_DisableDeviceInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.get_DisableFocusTimeCollection
bool PlayFab::PlayFabSettingsRedirect::get_DisableFocusTimeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::get_DisableFocusTimeCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettingsRedirect.set_DisableFocusTimeCollection
void PlayFab::PlayFabSettingsRedirect::set_DisableFocusTimeCollection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::set_DisableFocusTimeCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PlayFabApiSettings*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ClientSessionTicket
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabAuthenticationContext::dyn_ClientSessionTicket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::dyn_ClientSessionTicket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClientSessionTicket"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String PlayFabId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabAuthenticationContext::dyn_PlayFabId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::dyn_PlayFabId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayFabId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EntityToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabAuthenticationContext::dyn_EntityToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::dyn_EntityToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EntityToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EntityId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabAuthenticationContext::dyn_EntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::dyn_EntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EntityId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EntityType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabAuthenticationContext::dyn_EntityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::dyn_EntityType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EntityType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationContext.CopyFrom
void PlayFab::PlayFabAuthenticationContext::CopyFrom(::PlayFab::PlayFabAuthenticationContext* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationContext.IsClientLoggedIn
bool PlayFab::PlayFabAuthenticationContext::IsClientLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::IsClientLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsClientLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationContext.IsEntityLoggedIn
bool PlayFab::PlayFabAuthenticationContext::IsEntityLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::IsEntityLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntityLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabAuthenticationContext.ForgetAllCredentials
void PlayFab::PlayFabAuthenticationContext::ForgetAllCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabAuthenticationContext::ForgetAllCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForgetAllCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabDataGatherer
#include "PlayFab/PlayFabDataGatherer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ProductName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_ProductName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_ProductName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProductName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProductBundle
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_ProductBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_ProductBundle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProductBundle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Version
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Company
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_Company() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_Company");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Company"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RuntimePlatform Platform
[[deprecated("Use field access instead!")]] ::UnityEngine::RuntimePlatform& PlayFab::PlayFabDataGatherer::dyn_Platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_Platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Platform"))->offset;
  return *reinterpret_cast<::UnityEngine::RuntimePlatform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean GraphicsMultiThreaded
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabDataGatherer::dyn_GraphicsMultiThreaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_GraphicsMultiThreaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphicsMultiThreaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.GraphicsDeviceType GraphicsType
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::GraphicsDeviceType& PlayFab::PlayFabDataGatherer::dyn_GraphicsType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_GraphicsType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphicsType"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::GraphicsDeviceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DataPath
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_DataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_DataPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String PersistentDataPath
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_PersistentDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_PersistentDataPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PersistentDataPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String StreamingAssetsPath
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_StreamingAssetsPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_StreamingAssetsPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingAssetsPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TargetFrameRate
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabDataGatherer::dyn_TargetFrameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_TargetFrameRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetFrameRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String UnityVersion
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_UnityVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_UnityVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnityVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RunInBackground
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabDataGatherer::dyn_RunInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_RunInBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RunInBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DeviceModel
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_DeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_DeviceModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeviceModel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.DeviceType DeviceType
[[deprecated("Use field access instead!")]] ::UnityEngine::DeviceType& PlayFab::PlayFabDataGatherer::dyn_DeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_DeviceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeviceType"))->offset;
  return *reinterpret_cast<::UnityEngine::DeviceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DeviceUniqueId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_DeviceUniqueId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_DeviceUniqueId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeviceUniqueId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OperatingSystem
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_OperatingSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_OperatingSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OperatingSystem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GraphicsDeviceId
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabDataGatherer::dyn_GraphicsDeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_GraphicsDeviceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphicsDeviceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String GraphicsDeviceName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_GraphicsDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_GraphicsDeviceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphicsDeviceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GraphicsMemorySize
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabDataGatherer::dyn_GraphicsMemorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_GraphicsMemorySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphicsMemorySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GraphicsShaderLevel
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabDataGatherer::dyn_GraphicsShaderLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_GraphicsShaderLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphicsShaderLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SystemMemorySize
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabDataGatherer::dyn_SystemMemorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_SystemMemorySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SystemMemorySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProcessorCount
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabDataGatherer::dyn_ProcessorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_ProcessorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProcessorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProcessorFrequency
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabDataGatherer::dyn_ProcessorFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_ProcessorFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProcessorFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProcessorType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::PlayFabDataGatherer::dyn_ProcessorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_ProcessorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProcessorType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SupportsAccelerometer
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabDataGatherer::dyn_SupportsAccelerometer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_SupportsAccelerometer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SupportsAccelerometer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SupportsGyroscope
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabDataGatherer::dyn_SupportsGyroscope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_SupportsGyroscope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SupportsGyroscope"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SupportsLocationService
[[deprecated("Use field access instead!")]] bool& PlayFab::PlayFabDataGatherer::dyn_SupportsLocationService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::dyn_SupportsLocationService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SupportsLocationService"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PlayFabDataGatherer.GenerateReport
::StringW PlayFab::PlayFabDataGatherer::GenerateReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataGatherer::GenerateReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.WebRequestType
#include "PlayFab/WebRequestType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.WebRequestType UnityWebRequest
::PlayFab::WebRequestType PlayFab::WebRequestType::_get_UnityWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WebRequestType::_get_UnityWebRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::WebRequestType>("PlayFab", "WebRequestType", "UnityWebRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.WebRequestType UnityWebRequest
void PlayFab::WebRequestType::_set_UnityWebRequest(::PlayFab::WebRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WebRequestType::_set_UnityWebRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "WebRequestType", "UnityWebRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.WebRequestType HttpWebRequest
::PlayFab::WebRequestType PlayFab::WebRequestType::_get_HttpWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WebRequestType::_get_HttpWebRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::WebRequestType>("PlayFab", "WebRequestType", "HttpWebRequest"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.WebRequestType HttpWebRequest
void PlayFab::WebRequestType::_set_HttpWebRequest(::PlayFab::WebRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WebRequestType::_set_HttpWebRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "WebRequestType", "HttpWebRequest", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.WebRequestType CustomHttp
::PlayFab::WebRequestType PlayFab::WebRequestType::_get_CustomHttp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WebRequestType::_get_CustomHttp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::WebRequestType>("PlayFab", "WebRequestType", "CustomHttp"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.WebRequestType CustomHttp
void PlayFab::WebRequestType::_set_CustomHttp(::PlayFab::WebRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WebRequestType::_set_CustomHttp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "WebRequestType", "CustomHttp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::WebRequestType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::WebRequestType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabLogLevel
#include "PlayFab/PlayFabLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabLogLevel None
::PlayFab::PlayFabLogLevel PlayFab::PlayFabLogLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabLogLevel>("PlayFab", "PlayFabLogLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabLogLevel None
void PlayFab::PlayFabLogLevel::_set_None(::PlayFab::PlayFabLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabLogLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabLogLevel Debug
::PlayFab::PlayFabLogLevel PlayFab::PlayFabLogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabLogLevel>("PlayFab", "PlayFabLogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabLogLevel Debug
void PlayFab::PlayFabLogLevel::_set_Debug(::PlayFab::PlayFabLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabLogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabLogLevel Info
::PlayFab::PlayFabLogLevel PlayFab::PlayFabLogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabLogLevel>("PlayFab", "PlayFabLogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabLogLevel Info
void PlayFab::PlayFabLogLevel::_set_Info(::PlayFab::PlayFabLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabLogLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabLogLevel Warning
::PlayFab::PlayFabLogLevel PlayFab::PlayFabLogLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabLogLevel>("PlayFab", "PlayFabLogLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabLogLevel Warning
void PlayFab::PlayFabLogLevel::_set_Warning(::PlayFab::PlayFabLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabLogLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabLogLevel Error
::PlayFab::PlayFabLogLevel PlayFab::PlayFabLogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabLogLevel>("PlayFab", "PlayFabLogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabLogLevel Error
void PlayFab::PlayFabLogLevel::_set_Error(::PlayFab::PlayFabLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabLogLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PlayFabLogLevel All
::PlayFab::PlayFabLogLevel PlayFab::PlayFabLogLevel::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabLogLevel>("PlayFab", "PlayFabLogLevel", "All"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PlayFabLogLevel All
void PlayFab::PlayFabLogLevel::_set_All(::PlayFab::PlayFabLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabLogLevel", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::PlayFabLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabSettings
#include "PlayFab/PlayFabSettings.hpp"
// Including type: PlayFab.PlayFabSettings/<>c
#include "PlayFab/PlayFabSettings_--c.hpp"
// Including type: PlayFabSharedSettings
#include "GlobalNamespace/PlayFabSharedSettings.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: PlayFab.PlayFabLogLevel
#include "PlayFab/PlayFabLogLevel.hpp"
// Including type: PlayFab.WebRequestType
#include "PlayFab/WebRequestType.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private PlayFabSharedSettings _playFabShared
::GlobalNamespace::PlayFabSharedSettings* PlayFab::PlayFabSettings::_get__playFabShared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get__playFabShared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayFabSharedSettings*>("PlayFab", "PlayFabSettings", "_playFabShared"));
}
// Autogenerated static field setter
// Set static field: static private PlayFabSharedSettings _playFabShared
void PlayFab::PlayFabSettings::_set__playFabShared(::GlobalNamespace::PlayFabSharedSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set__playFabShared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "_playFabShared", value));
}
// Autogenerated static field getter
// Get static field: static public readonly PlayFab.PlayFabApiSettings staticSettings
::PlayFab::PlayFabApiSettings* PlayFab::PlayFabSettings::_get_staticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_staticSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabApiSettings*>("PlayFab", "PlayFabSettings", "staticSettings"));
}
// Autogenerated static field setter
// Set static field: static public readonly PlayFab.PlayFabApiSettings staticSettings
void PlayFab::PlayFabSettings::_set_staticSettings(::PlayFab::PlayFabApiSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_staticSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "staticSettings", value));
}
// Autogenerated static field getter
// Get static field: static public readonly PlayFab.PlayFabAuthenticationContext staticPlayer
::PlayFab::PlayFabAuthenticationContext* PlayFab::PlayFabSettings::_get_staticPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_staticPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PlayFabAuthenticationContext*>("PlayFab", "PlayFabSettings", "staticPlayer"));
}
// Autogenerated static field setter
// Set static field: static public readonly PlayFab.PlayFabAuthenticationContext staticPlayer
void PlayFab::PlayFabSettings::_set_staticPlayer(::PlayFab::PlayFabAuthenticationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_staticPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "staticPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SdkVersion
::StringW PlayFab::PlayFabSettings::_get_SdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_SdkVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab", "PlayFabSettings", "SdkVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String SdkVersion
void PlayFab::PlayFabSettings::_set_SdkVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_SdkVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "SdkVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.String BuildIdentifier
::StringW PlayFab::PlayFabSettings::_get_BuildIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_BuildIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab", "PlayFabSettings", "BuildIdentifier"));
}
// Autogenerated static field setter
// Set static field: static public System.String BuildIdentifier
void PlayFab::PlayFabSettings::_set_BuildIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_BuildIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "BuildIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static public System.String VersionString
::StringW PlayFab::PlayFabSettings::_get_VersionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_VersionString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab", "PlayFabSettings", "VersionString"));
}
// Autogenerated static field setter
// Set static field: static public System.String VersionString
void PlayFab::PlayFabSettings::_set_VersionString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_VersionString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "VersionString", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AD_TYPE_IDFA
::StringW PlayFab::PlayFabSettings::_get_AD_TYPE_IDFA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_AD_TYPE_IDFA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab", "PlayFabSettings", "AD_TYPE_IDFA"));
}
// Autogenerated static field setter
// Set static field: static public System.String AD_TYPE_IDFA
void PlayFab::PlayFabSettings::_set_AD_TYPE_IDFA(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_AD_TYPE_IDFA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "AD_TYPE_IDFA", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AD_TYPE_ANDROID_ID
::StringW PlayFab::PlayFabSettings::_get_AD_TYPE_ANDROID_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_AD_TYPE_ANDROID_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab", "PlayFabSettings", "AD_TYPE_ANDROID_ID"));
}
// Autogenerated static field setter
// Set static field: static public System.String AD_TYPE_ANDROID_ID
void PlayFab::PlayFabSettings::_set_AD_TYPE_ANDROID_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_AD_TYPE_ANDROID_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "AD_TYPE_ANDROID_ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DefaultPlayFabApiUrl
::StringW PlayFab::PlayFabSettings::_get_DefaultPlayFabApiUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get_DefaultPlayFabApiUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab", "PlayFabSettings", "DefaultPlayFabApiUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.String DefaultPlayFabApiUrl
void PlayFab::PlayFabSettings::_set_DefaultPlayFabApiUrl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set_DefaultPlayFabApiUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "DefaultPlayFabApiUrl", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _localApiServer
::StringW PlayFab::PlayFabSettings::_get__localApiServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_get__localApiServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PlayFab", "PlayFabSettings", "_localApiServer"));
}
// Autogenerated static field setter
// Set static field: static private System.String _localApiServer
void PlayFab::PlayFabSettings::_set__localApiServer(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::_set__localApiServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings", "_localApiServer", value));
}
// Autogenerated method: PlayFab.PlayFabSettings..cctor
void PlayFab::PlayFabSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_PlayFabSharedPrivate
::GlobalNamespace::PlayFabSharedSettings* PlayFab::PlayFabSettings::get_PlayFabSharedPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_PlayFabSharedPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_PlayFabSharedPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayFabSharedSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.GetSharedSettingsObjectPrivate
::GlobalNamespace::PlayFabSharedSettings* PlayFab::PlayFabSettings::GetSharedSettingsObjectPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::GetSharedSettingsObjectPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "GetSharedSettingsObjectPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayFabSharedSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_DeviceUniqueIdentifier
::StringW PlayFab::PlayFabSettings::get_DeviceUniqueIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_DeviceUniqueIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_DeviceUniqueIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_TitleId
::StringW PlayFab::PlayFabSettings::get_TitleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_TitleId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_TitleId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_TitleId
void PlayFab::PlayFabSettings::set_TitleId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_TitleId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_TitleId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_VerticalName
::StringW PlayFab::PlayFabSettings::get_VerticalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_VerticalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_VerticalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_VerticalName
void PlayFab::PlayFabSettings::set_VerticalName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_VerticalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_VerticalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_DisableAdvertising
bool PlayFab::PlayFabSettings::get_DisableAdvertising() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_DisableAdvertising");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_DisableAdvertising", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_DisableAdvertising
void PlayFab::PlayFabSettings::set_DisableAdvertising(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_DisableAdvertising");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_DisableAdvertising", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_DisableDeviceInfo
bool PlayFab::PlayFabSettings::get_DisableDeviceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_DisableDeviceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_DisableDeviceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_DisableDeviceInfo
void PlayFab::PlayFabSettings::set_DisableDeviceInfo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_DisableDeviceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_DisableDeviceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_DisableFocusTimeCollection
bool PlayFab::PlayFabSettings::get_DisableFocusTimeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_DisableFocusTimeCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_DisableFocusTimeCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_DisableFocusTimeCollection
void PlayFab::PlayFabSettings::set_DisableFocusTimeCollection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_DisableFocusTimeCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_DisableFocusTimeCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_LogLevel
::PlayFab::PlayFabLogLevel PlayFab::PlayFabSettings::get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_LogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_LogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::PlayFabLogLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_LogLevel
void PlayFab::PlayFabSettings::set_LogLevel(::PlayFab::PlayFabLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_LogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_LogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_RequestType
::PlayFab::WebRequestType PlayFab::PlayFabSettings::get_RequestType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_RequestType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_RequestType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::WebRequestType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_RequestType
void PlayFab::PlayFabSettings::set_RequestType(::PlayFab::WebRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_RequestType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_RequestType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_RequestTimeout
int PlayFab::PlayFabSettings::get_RequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_RequestTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_RequestTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_RequestTimeout
void PlayFab::PlayFabSettings::set_RequestTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_RequestTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_RequestTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_RequestKeepAlive
bool PlayFab::PlayFabSettings::get_RequestKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_RequestKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_RequestKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_RequestKeepAlive
void PlayFab::PlayFabSettings::set_RequestKeepAlive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_RequestKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_RequestKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_CompressApiData
bool PlayFab::PlayFabSettings::get_CompressApiData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_CompressApiData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_CompressApiData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_CompressApiData
void PlayFab::PlayFabSettings::set_CompressApiData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_CompressApiData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_CompressApiData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_LoggerHost
::StringW PlayFab::PlayFabSettings::get_LoggerHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_LoggerHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_LoggerHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_LoggerHost
void PlayFab::PlayFabSettings::set_LoggerHost(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_LoggerHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_LoggerHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_LoggerPort
int PlayFab::PlayFabSettings::get_LoggerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_LoggerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_LoggerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_LoggerPort
void PlayFab::PlayFabSettings::set_LoggerPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_LoggerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_LoggerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_EnableRealTimeLogging
bool PlayFab::PlayFabSettings::get_EnableRealTimeLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_EnableRealTimeLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_EnableRealTimeLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_EnableRealTimeLogging
void PlayFab::PlayFabSettings::set_EnableRealTimeLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_EnableRealTimeLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_EnableRealTimeLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_LogCapLimit
int PlayFab::PlayFabSettings::get_LogCapLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_LogCapLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_LogCapLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_LogCapLimit
void PlayFab::PlayFabSettings::set_LogCapLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_LogCapLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_LogCapLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.get_LocalApiServer
::StringW PlayFab::PlayFabSettings::get_LocalApiServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::get_LocalApiServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "get_LocalApiServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings.set_LocalApiServer
void PlayFab::PlayFabSettings::set_LocalApiServer(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::set_LocalApiServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "set_LocalApiServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PlayFab.PlayFabSettings.GetFullUrl
::StringW PlayFab::PlayFabSettings::GetFullUrl(::StringW apiCall, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* getParams, ::PlayFab::PlayFabApiSettings* apiSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::GetFullUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings", "GetFullUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(apiCall), ::il2cpp_utils::ExtractType(getParams), ::il2cpp_utils::ExtractType(apiSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, apiCall, getParams, apiSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PlayFabSettings/<>c
#include "PlayFab/PlayFabSettings_--c.hpp"
// Including type: PlayFabSharedSettings
#include "GlobalNamespace/PlayFabSharedSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PlayFab.PlayFabSettings/<>c <>9
::PlayFab::PlayFabSettings::$$c* PlayFab::PlayFabSettings::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::PlayFab::PlayFabSettings::$$c*>("PlayFab", "PlayFabSettings/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PlayFab.PlayFabSettings/<>c <>9
void PlayFab::PlayFabSettings::$$c::_set_$$9(::PlayFab::PlayFabSettings::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("PlayFab", "PlayFabSettings/<>c", "<>9", value)));
}
// Autogenerated method: PlayFab.PlayFabSettings/<>c..cctor
void PlayFab::PlayFabSettings::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PlayFabSettings/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayFab.PlayFabSettings/<>c.<.cctor>b__0_0
::GlobalNamespace::PlayFabSharedSettings* PlayFab::PlayFabSettings::$$c::$_cctor$b__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettings::$$c::<.cctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayFabSharedSettings*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PluginContract
#include "PlayFab/PluginContract.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.PluginContract PlayFab_Serializer
::PlayFab::PluginContract PlayFab::PluginContract::_get_PlayFab_Serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginContract::_get_PlayFab_Serializer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PluginContract>("PlayFab", "PluginContract", "PlayFab_Serializer"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PluginContract PlayFab_Serializer
void PlayFab::PluginContract::_set_PlayFab_Serializer(::PlayFab::PluginContract value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginContract::_set_PlayFab_Serializer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PluginContract", "PlayFab_Serializer", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.PluginContract PlayFab_Transport
::PlayFab::PluginContract PlayFab::PluginContract::_get_PlayFab_Transport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginContract::_get_PlayFab_Transport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PluginContract>("PlayFab", "PluginContract", "PlayFab_Transport"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.PluginContract PlayFab_Transport
void PlayFab::PluginContract::_set_PlayFab_Transport(::PlayFab::PluginContract value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginContract::_set_PlayFab_Transport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PluginContract", "PlayFab_Transport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::PluginContract::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginContract::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PluginContractKeyComparator
#include "PlayFab/PluginContractKeyComparator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.PluginContractKeyComparator.Equals
bool PlayFab::PluginContractKeyComparator::Equals(::PlayFab::PluginContractKey x, ::PlayFab::PluginContractKey y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginContractKeyComparator::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PluginContractKeyComparator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PlayFab.PluginContractKeyComparator.GetHashCode
int PlayFab::PluginContractKeyComparator::GetHashCode(::PlayFab::PluginContractKey obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginContractKeyComparator::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::PluginContractKeyComparator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.PluginManager
#include "PlayFab/PluginManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.IPlayFabPlugin
#include "PlayFab/IPlayFabPlugin.hpp"
// Including type: PlayFab.ITransportPlugin
#include "PlayFab/ITransportPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly PlayFab.PluginManager Instance
::PlayFab::PluginManager* PlayFab::PluginManager::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::PluginManager*>("PlayFab", "PluginManager", "Instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly PlayFab.PluginManager Instance
void PlayFab::PluginManager::_set_Instance(::PlayFab::PluginManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab", "PluginManager", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<PlayFab.PluginContractKey,PlayFab.IPlayFabPlugin> plugins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::PlayFab::PluginContractKey, ::PlayFab::IPlayFabPlugin*>*& PlayFab::PluginManager::dyn_plugins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::dyn_plugins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plugins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::PlayFab::PluginContractKey, ::PlayFab::IPlayFabPlugin*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayFab.PluginManager.SetPlugin
void PlayFab::PluginManager::SetPlugin(::PlayFab::IPlayFabPlugin* plugin, ::PlayFab::PluginContract contract, ::StringW instanceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::SetPlugin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PluginManager", "SetPlugin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plugin), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(instanceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, plugin, contract, instanceName);
}
// Autogenerated method: PlayFab.PluginManager.GetPluginInternal
::PlayFab::IPlayFabPlugin* PlayFab::PluginManager::GetPluginInternal(::PlayFab::PluginContract contract, ::StringW instanceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::GetPluginInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPluginInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(instanceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::IPlayFabPlugin*, false>(this, ___internal__method, contract, instanceName);
}
// Autogenerated method: PlayFab.PluginManager.SetPluginInternal
void PlayFab::PluginManager::SetPluginInternal(::PlayFab::IPlayFabPlugin* plugin, ::PlayFab::PluginContract contract, ::StringW instanceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::SetPluginInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPluginInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plugin), ::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(instanceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plugin, contract, instanceName);
}
// Autogenerated method: PlayFab.PluginManager.CreatePlayFabTransportPlugin
::PlayFab::ITransportPlugin* PlayFab::PluginManager::CreatePlayFabTransportPlugin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::CreatePlayFabTransportPlugin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayFabTransportPlugin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PlayFab::ITransportPlugin*, false>(this, ___internal__method);
}
// Autogenerated method: PlayFab.PluginManager..cctor
void PlayFab::PluginManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PluginManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab", "PluginManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.SharedModels.HttpResponseObject
#include "PlayFab/SharedModels/HttpResponseObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 code
[[deprecated("Use field access instead!")]] int& PlayFab::SharedModels::HttpResponseObject::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::HttpResponseObject::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String status
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::SharedModels::HttpResponseObject::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::HttpResponseObject::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object data
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::SharedModels::HttpResponseObject::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::HttpResponseObject::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayFab.SharedModels.PlayFabBaseModel.ToJson
::StringW PlayFab::SharedModels::PlayFabBaseModel::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::PlayFabBaseModel::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.SharedModels.PlayFabRequestCommon
#include "PlayFab/SharedModels/PlayFabRequestCommon.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.PlayFabAuthenticationContext AuthenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::SharedModels::PlayFabRequestCommon::dyn_AuthenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::PlayFabRequestCommon::dyn_AuthenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AuthenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
// Including type: PlayFab.SharedModels.PlayFabRequestCommon
#include "PlayFab/SharedModels/PlayFabRequestCommon.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.SharedModels.PlayFabRequestCommon Request
[[deprecated("Use field access instead!")]] ::PlayFab::SharedModels::PlayFabRequestCommon*& PlayFab::SharedModels::PlayFabResultCommon::dyn_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::PlayFabResultCommon::dyn_Request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Request"))->offset;
  return *reinterpret_cast<::PlayFab::SharedModels::PlayFabRequestCommon**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object CustomData
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::SharedModels::PlayFabResultCommon::dyn_CustomData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::PlayFabResultCommon::dyn_CustomData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomData"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.SharedModels.PlayFabLoginResultCommon
#include "PlayFab/SharedModels/PlayFabLoginResultCommon.hpp"
// Including type: PlayFab.PlayFabAuthenticationContext
#include "PlayFab/PlayFabAuthenticationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.PlayFabAuthenticationContext AuthenticationContext
[[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& PlayFab::SharedModels::PlayFabLoginResultCommon::dyn_AuthenticationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::PlayFabLoginResultCommon::dyn_AuthenticationContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AuthenticationContext"))->offset;
  return *reinterpret_cast<::PlayFab::PlayFabAuthenticationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
