// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineImpulseManager
#include "Cinemachine/CinemachineImpulseManager.hpp"
// Including type: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition
#include "Cinemachine/CinemachineImpulseManager_EnvelopeDefinition.hpp"
// Including type: Cinemachine.CinemachineImpulseManager/ImpulseEvent
#include "Cinemachine/CinemachineImpulseManager_ImpulseEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Cinemachine.CinemachineImpulseManager sInstance
::Cinemachine::CinemachineImpulseManager* Cinemachine::CinemachineImpulseManager::_get_sInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::_get_sInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cinemachine::CinemachineImpulseManager*>("Cinemachine", "CinemachineImpulseManager", "sInstance"));
}
// Autogenerated static field setter
// Set static field: static private Cinemachine.CinemachineImpulseManager sInstance
void Cinemachine::CinemachineImpulseManager::_set_sInstance(::Cinemachine::CinemachineImpulseManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::_set_sInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine", "CinemachineImpulseManager", "sInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single Epsilon
float Cinemachine::CinemachineImpulseManager::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Cinemachine", "CinemachineImpulseManager", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single Epsilon
void Cinemachine::CinemachineImpulseManager::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine", "CinemachineImpulseManager", "Epsilon", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Cinemachine.CinemachineImpulseManager/ImpulseEvent> m_ExpiredEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Cinemachine::CinemachineImpulseManager::ImpulseEvent*>*& Cinemachine::CinemachineImpulseManager::dyn_m_ExpiredEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::dyn_m_ExpiredEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExpiredEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Cinemachine::CinemachineImpulseManager::ImpulseEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Cinemachine.CinemachineImpulseManager/ImpulseEvent> m_ActiveEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Cinemachine::CinemachineImpulseManager::ImpulseEvent*>*& Cinemachine::CinemachineImpulseManager::dyn_m_ActiveEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::dyn_m_ActiveEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Cinemachine::CinemachineImpulseManager::ImpulseEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreTimeScale>k__BackingField
[[deprecated("Use field access instead!")]] bool& Cinemachine::CinemachineImpulseManager::dyn_$IgnoreTimeScale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::dyn_$IgnoreTimeScale$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreTimeScale>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.get_Instance
::Cinemachine::CinemachineImpulseManager* Cinemachine::CinemachineImpulseManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine", "CinemachineImpulseManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Cinemachine::CinemachineImpulseManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.GetImpulseAt
bool Cinemachine::CinemachineImpulseManager::GetImpulseAt(::UnityEngine::Vector3 listenerLocation, bool distance2D, int channelMask, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::GetImpulseAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetImpulseAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listenerLocation), ::il2cpp_utils::ExtractType(distance2D), ::il2cpp_utils::ExtractType(channelMask), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, listenerLocation, distance2D, channelMask, byref(pos), byref(rot));
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.get_IgnoreTimeScale
bool Cinemachine::CinemachineImpulseManager::get_IgnoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::get_IgnoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.set_IgnoreTimeScale
void Cinemachine::CinemachineImpulseManager::set_IgnoreTimeScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::set_IgnoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.get_CurrentTime
float Cinemachine::CinemachineImpulseManager::get_CurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::get_CurrentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.NewImpulseEvent
::Cinemachine::CinemachineImpulseManager::ImpulseEvent* Cinemachine::CinemachineImpulseManager::NewImpulseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::NewImpulseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewImpulseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Cinemachine::CinemachineImpulseManager::ImpulseEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.AddImpulseEvent
void Cinemachine::CinemachineImpulseManager::AddImpulseEvent(::Cinemachine::CinemachineImpulseManager::ImpulseEvent* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::AddImpulseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddImpulseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager.Clear
void Cinemachine::CinemachineImpulseManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager..cctor
void Cinemachine::CinemachineImpulseManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine", "CinemachineImpulseManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition
#include "Cinemachine/CinemachineImpulseManager_EnvelopeDefinition.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve m_AttackShape
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_AttackShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_AttackShape");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttackShape"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve m_DecayShape
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_DecayShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_DecayShape");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DecayShape"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_AttackTime
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_AttackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_AttackTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttackTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_SustainTime
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_SustainTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_SustainTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SustainTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_DecayTime
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_DecayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_DecayTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DecayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_ScaleWithImpact
[[deprecated("Use field access instead!")]] bool& Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_ScaleWithImpact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_ScaleWithImpact");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScaleWithImpact"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_HoldForever
[[deprecated("Use field access instead!")]] bool& Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_HoldForever() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::dyn_m_HoldForever");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoldForever"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition.Default
::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine", "CinemachineImpulseManager/EnvelopeDefinition", "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition.get_Duration
float Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition.GetValueAt
float Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::GetValueAt(float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::GetValueAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetValueAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, offset);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition.ChangeStopTime
void Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::ChangeStopTime(float offset, bool forceNoDecay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::ChangeStopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ChangeStopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(forceNoDecay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, forceNoDecay);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition.Clear
void Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/EnvelopeDefinition.Validate
void Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineImpulseManager/ImpulseEvent
#include "Cinemachine/CinemachineImpulseManager_ImpulseEvent.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Cinemachine.ISignalSource6D
#include "Cinemachine/ISignalSource6D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m_StartTime
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_StartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_StartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Cinemachine.CinemachineImpulseManager/EnvelopeDefinition m_Envelope
[[deprecated("Use field access instead!")]] ::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Envelope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Envelope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Envelope"))->offset;
  return *reinterpret_cast<::Cinemachine::CinemachineImpulseManager::EnvelopeDefinition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Cinemachine.ISignalSource6D m_SignalSource
[[deprecated("Use field access instead!")]] ::Cinemachine::ISignalSource6D*& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_SignalSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_SignalSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SignalSource"))->offset;
  return *reinterpret_cast<::Cinemachine::ISignalSource6D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Radius
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DirectionMode m_DirectionMode
[[deprecated("Use field access instead!")]] ::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_DirectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_DirectionMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DirectionMode"))->offset;
  return *reinterpret_cast<::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_Channel
[[deprecated("Use field access instead!")]] int& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_Channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Channel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode m_DissipationMode
[[deprecated("Use field access instead!")]] ::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_DissipationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_DissipationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DissipationMode"))->offset;
  return *reinterpret_cast<::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_DissipationDistance
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_DissipationDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_DissipationDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DissipationDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_PropagationSpeed
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_PropagationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::dyn_m_PropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PropagationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/ImpulseEvent.get_Expired
bool Cinemachine::CinemachineImpulseManager::ImpulseEvent::get_Expired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::get_Expired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/ImpulseEvent.Cancel
void Cinemachine::CinemachineImpulseManager::ImpulseEvent::Cancel(float time, bool forceNoDecay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(forceNoDecay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, forceNoDecay);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/ImpulseEvent.DistanceDecay
float Cinemachine::CinemachineImpulseManager::ImpulseEvent::DistanceDecay(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DistanceDecay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DistanceDecay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, distance);
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/ImpulseEvent.GetDecayedSignal
bool Cinemachine::CinemachineImpulseManager::ImpulseEvent::GetDecayedSignal(::UnityEngine::Vector3 listenerPosition, bool use2D, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::GetDecayedSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecayedSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listenerPosition), ::il2cpp_utils::ExtractType(use2D), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, listenerPosition, use2D, byref(pos), byref(rot));
}
// Autogenerated method: Cinemachine.CinemachineImpulseManager/ImpulseEvent.Clear
void Cinemachine::CinemachineImpulseManager::ImpulseEvent::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineImpulseManager/ImpulseEvent/DirectionMode
#include "Cinemachine/CinemachineImpulseManager_ImpulseEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DirectionMode Fixed
::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode>("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DirectionMode", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DirectionMode Fixed
void Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_set_Fixed(::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DirectionMode", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DirectionMode RotateTowardSource
::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_get_RotateTowardSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_get_RotateTowardSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode>("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DirectionMode", "RotateTowardSource"));
}
// Autogenerated static field setter
// Set static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DirectionMode RotateTowardSource
void Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_set_RotateTowardSource(::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::_set_RotateTowardSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DirectionMode", "RotateTowardSource", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DirectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode
#include "Cinemachine/CinemachineImpulseManager_ImpulseEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode LinearDecay
::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_get_LinearDecay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_get_LinearDecay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode>("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DissipationMode", "LinearDecay"));
}
// Autogenerated static field setter
// Set static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode LinearDecay
void Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_set_LinearDecay(::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_set_LinearDecay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DissipationMode", "LinearDecay", value));
}
// Autogenerated static field getter
// Get static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode SoftDecay
::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_get_SoftDecay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_get_SoftDecay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode>("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DissipationMode", "SoftDecay"));
}
// Autogenerated static field setter
// Set static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode SoftDecay
void Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_set_SoftDecay(::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_set_SoftDecay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DissipationMode", "SoftDecay", value));
}
// Autogenerated static field getter
// Get static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode ExponentialDecay
::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_get_ExponentialDecay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_get_ExponentialDecay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode>("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DissipationMode", "ExponentialDecay"));
}
// Autogenerated static field setter
// Set static field: static public Cinemachine.CinemachineImpulseManager/ImpulseEvent/DissipationMode ExponentialDecay
void Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_set_ExponentialDecay(::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::_set_ExponentialDecay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine", "CinemachineImpulseManager/ImpulseEvent/DissipationMode", "ExponentialDecay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseManager::ImpulseEvent::DissipationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineImpulseSource
#include "Cinemachine/CinemachineImpulseSource.hpp"
// Including type: Cinemachine.CinemachineImpulseDefinition
#include "Cinemachine/CinemachineImpulseDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Cinemachine.CinemachineImpulseDefinition m_ImpulseDefinition
[[deprecated("Use field access instead!")]] ::Cinemachine::CinemachineImpulseDefinition*& Cinemachine::CinemachineImpulseSource::dyn_m_ImpulseDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseSource::dyn_m_ImpulseDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ImpulseDefinition"))->offset;
  return *reinterpret_cast<::Cinemachine::CinemachineImpulseDefinition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cinemachine.CinemachineImpulseSource.OnValidate
void Cinemachine::CinemachineImpulseSource::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseSource::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineImpulseSource.GenerateImpulseAt
void Cinemachine::CinemachineImpulseSource::GenerateImpulseAt(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseSource::GenerateImpulseAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateImpulseAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, velocity);
}
// Autogenerated method: Cinemachine.CinemachineImpulseSource.GenerateImpulse
void Cinemachine::CinemachineImpulseSource::GenerateImpulse(::UnityEngine::Vector3 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseSource::GenerateImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocity);
}
// Autogenerated method: Cinemachine.CinemachineImpulseSource.GenerateImpulse
void Cinemachine::CinemachineImpulseSource::GenerateImpulse(float force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseSource::GenerateImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: Cinemachine.CinemachineImpulseSource.GenerateImpulse
void Cinemachine::CinemachineImpulseSource::GenerateImpulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineImpulseSource::GenerateImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.CinemachineIndependentImpulseListener
#include "Cinemachine/CinemachineIndependentImpulseListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 impulsePosLastFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Cinemachine::CinemachineIndependentImpulseListener::dyn_impulsePosLastFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::dyn_impulsePosLastFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impulsePosLastFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion impulseRotLastFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Cinemachine::CinemachineIndependentImpulseListener::dyn_impulseRotLastFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::dyn_impulseRotLastFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impulseRotLastFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_ChannelMask
[[deprecated("Use field access instead!")]] int& Cinemachine::CinemachineIndependentImpulseListener::dyn_m_ChannelMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::dyn_m_ChannelMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChannelMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_Gain
[[deprecated("Use field access instead!")]] float& Cinemachine::CinemachineIndependentImpulseListener::dyn_m_Gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::dyn_m_Gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_Use2DDistance
[[deprecated("Use field access instead!")]] bool& Cinemachine::CinemachineIndependentImpulseListener::dyn_m_Use2DDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::dyn_m_Use2DDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Use2DDistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cinemachine.CinemachineIndependentImpulseListener.Reset
void Cinemachine::CinemachineIndependentImpulseListener::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineIndependentImpulseListener.OnEnable
void Cinemachine::CinemachineIndependentImpulseListener::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineIndependentImpulseListener.Update
void Cinemachine::CinemachineIndependentImpulseListener::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.CinemachineIndependentImpulseListener.LateUpdate
void Cinemachine::CinemachineIndependentImpulseListener::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineIndependentImpulseListener::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.PostFX.CinemachinePostProcessing
#include "Cinemachine/PostFX/CinemachinePostProcessing.hpp"
// Including type: Cinemachine.CinemachineVirtualCameraBase
#include "Cinemachine/CinemachineVirtualCameraBase.hpp"
// Including type: Cinemachine.CameraState
#include "Cinemachine/CameraState.hpp"
// Including type: Cinemachine.CinemachineCore/Stage
#include "Cinemachine/CinemachineCore_Stage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.PostFX.CinemachinePostProcessing.PostPipelineStageCallback
void Cinemachine::PostFX::CinemachinePostProcessing::PostPipelineStageCallback(::Cinemachine::CinemachineVirtualCameraBase* vcam, ::Cinemachine::CinemachineCore::Stage stage, ByRef<::Cinemachine::CameraState> state, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::PostFX::CinemachinePostProcessing::PostPipelineStageCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Cinemachine::CinemachineExtension*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vcam, stage, byref(state), deltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.PostFX.CinemachineVolumeSettings
#include "Cinemachine/PostFX/CinemachineVolumeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.CinemachineDebug
#include "Cinemachine/Utility/CinemachineDebug.hpp"
// Including type: Cinemachine.Utility.CinemachineDebug/OnGUIDelegate
#include "Cinemachine/Utility/CinemachineDebug_OnGUIDelegate.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.GUIStyle
#include "UnityEngine/GUIStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Object> mClients
::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>* Cinemachine::Utility::CinemachineDebug::_get_mClients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::_get_mClients");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>*>("Cinemachine.Utility", "CinemachineDebug", "mClients"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Object> mClients
void Cinemachine::Utility::CinemachineDebug::_set_mClients(::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::_set_mClients");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "CinemachineDebug", "mClients", value));
}
// Autogenerated static field getter
// Get static field: static public Cinemachine.Utility.CinemachineDebug/OnGUIDelegate OnGUIHandlers
::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate* Cinemachine::Utility::CinemachineDebug::_get_OnGUIHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::_get_OnGUIHandlers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate*>("Cinemachine.Utility", "CinemachineDebug", "OnGUIHandlers"));
}
// Autogenerated static field setter
// Set static field: static public Cinemachine.Utility.CinemachineDebug/OnGUIDelegate OnGUIHandlers
void Cinemachine::Utility::CinemachineDebug::_set_OnGUIHandlers(::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::_set_OnGUIHandlers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "CinemachineDebug", "OnGUIHandlers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Text.StringBuilder> mAvailableStringBuilders
::System::Collections::Generic::List_1<::System::Text::StringBuilder*>* Cinemachine::Utility::CinemachineDebug::_get_mAvailableStringBuilders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::_get_mAvailableStringBuilders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::Text::StringBuilder*>*>("Cinemachine.Utility", "CinemachineDebug", "mAvailableStringBuilders"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Text.StringBuilder> mAvailableStringBuilders
void Cinemachine::Utility::CinemachineDebug::_set_mAvailableStringBuilders(::System::Collections::Generic::List_1<::System::Text::StringBuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::_set_mAvailableStringBuilders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "CinemachineDebug", "mAvailableStringBuilders", value));
}
// Autogenerated method: Cinemachine.Utility.CinemachineDebug.ReleaseScreenPos
void Cinemachine::Utility::CinemachineDebug::ReleaseScreenPos(::UnityEngine::Object* client) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::ReleaseScreenPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "CinemachineDebug", "ReleaseScreenPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client);
}
// Autogenerated method: Cinemachine.Utility.CinemachineDebug.GetScreenPos
::UnityEngine::Rect Cinemachine::Utility::CinemachineDebug::GetScreenPos(::UnityEngine::Object* client, ::StringW text, ::UnityEngine::GUIStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::GetScreenPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "CinemachineDebug", "GetScreenPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, client, text, style);
}
// Autogenerated method: Cinemachine.Utility.CinemachineDebug.SBFromPool
::System::Text::StringBuilder* Cinemachine::Utility::CinemachineDebug::SBFromPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::SBFromPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "CinemachineDebug", "SBFromPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.CinemachineDebug.ReturnToPool
void Cinemachine::Utility::CinemachineDebug::ReturnToPool(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::ReturnToPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "CinemachineDebug", "ReturnToPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Cinemachine.Utility.CinemachineDebug/OnGUIDelegate
#include "Cinemachine/Utility/CinemachineDebug_OnGUIDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.Utility.CinemachineDebug/OnGUIDelegate.Invoke
void Cinemachine::Utility::CinemachineDebug::OnGUIDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.CinemachineDebug/OnGUIDelegate.BeginInvoke
::System::IAsyncResult* Cinemachine::Utility::CinemachineDebug::OnGUIDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Cinemachine.Utility.CinemachineDebug/OnGUIDelegate.EndInvoke
void Cinemachine::Utility::CinemachineDebug::OnGUIDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.GaussianWindow1D_Vector3
#include "Cinemachine/Utility/GaussianWindow1D_Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.Utility.GaussianWindow1D_Vector3.Compute
::UnityEngine::Vector3 Cinemachine::Utility::GaussianWindow1D_Vector3::Compute(int windowPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::GaussianWindow1D_Vector3::Compute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Cinemachine::Utility::GaussianWindow1D_Vector3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, windowPos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.GaussianWindow1D_Quaternion
#include "Cinemachine/Utility/GaussianWindow1D_Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.Utility.GaussianWindow1D_Quaternion.Compute
::UnityEngine::Quaternion Cinemachine::Utility::GaussianWindow1D_Quaternion::Compute(int windowPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::GaussianWindow1D_Quaternion::Compute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Cinemachine::Utility::GaussianWindow1D_Quaternion*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, windowPos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.GaussianWindow1D_CameraRotation
#include "Cinemachine/Utility/GaussianWindow1D_CameraRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.Utility.GaussianWindow1D_CameraRotation.Compute
::UnityEngine::Vector2 Cinemachine::Utility::GaussianWindow1D_CameraRotation::Compute(int windowPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::GaussianWindow1D_CameraRotation::Compute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Cinemachine::Utility::GaussianWindow1D_CameraRotation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, windowPos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.PositionPredictor
#include "Cinemachine/Utility/PositionPredictor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Cinemachine::Utility::PositionPredictor::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::dyn_m_Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_SmoothDampVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Cinemachine::Utility::PositionPredictor::dyn_m_SmoothDampVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::dyn_m_SmoothDampVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothDampVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Pos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Cinemachine::Utility::PositionPredictor::dyn_m_Pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::dyn_m_Pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Pos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SqrSpeed
[[deprecated("Use field access instead!")]] float& Cinemachine::Utility::PositionPredictor::dyn_m_SqrSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::dyn_m_SqrSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SqrSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HavePos
[[deprecated("Use field access instead!")]] bool& Cinemachine::Utility::PositionPredictor::dyn_m_HavePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::dyn_m_HavePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HavePos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <Smoothing>k__BackingField
[[deprecated("Use field access instead!")]] float& Cinemachine::Utility::PositionPredictor::dyn_$Smoothing$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::dyn_$Smoothing$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Smoothing>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.get_Smoothing
float Cinemachine::Utility::PositionPredictor::get_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::get_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.set_Smoothing
void Cinemachine::Utility::PositionPredictor::set_Smoothing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::set_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.IsEmpty
bool Cinemachine::Utility::PositionPredictor::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.ApplyTransformDelta
void Cinemachine::Utility::PositionPredictor::ApplyTransformDelta(::UnityEngine::Vector3 positionDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::ApplyTransformDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTransformDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positionDelta);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.Reset
void Cinemachine::Utility::PositionPredictor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.AddPosition
void Cinemachine::Utility::PositionPredictor::AddPosition(::UnityEngine::Vector3 pos, float deltaTime, float lookaheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::AddPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(deltaTime), ::il2cpp_utils::ExtractType(lookaheadTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, deltaTime, lookaheadTime);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.PredictPositionDelta
::UnityEngine::Vector3 Cinemachine::Utility::PositionPredictor::PredictPositionDelta(float lookaheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::PredictPositionDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictPositionDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookaheadTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, lookaheadTime);
}
// Autogenerated method: Cinemachine.Utility.PositionPredictor.PredictPosition
::UnityEngine::Vector3 Cinemachine::Utility::PositionPredictor::PredictPosition(float lookaheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::PositionPredictor::PredictPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookaheadTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, lookaheadTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.Damper
#include "Cinemachine/Utility/Damper.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single Epsilon
float Cinemachine::Utility::Damper::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Cinemachine.Utility", "Damper", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single Epsilon
void Cinemachine::Utility::Damper::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "Damper", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kNegligibleResidual
float Cinemachine::Utility::Damper::_get_kNegligibleResidual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::_get_kNegligibleResidual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Cinemachine.Utility", "Damper", "kNegligibleResidual"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kNegligibleResidual
void Cinemachine::Utility::Damper::_set_kNegligibleResidual(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::_set_kNegligibleResidual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "Damper", "kNegligibleResidual", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kLogNegligibleResidual
float Cinemachine::Utility::Damper::_get_kLogNegligibleResidual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::_get_kLogNegligibleResidual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Cinemachine.Utility", "Damper", "kLogNegligibleResidual"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLogNegligibleResidual
void Cinemachine::Utility::Damper::_set_kLogNegligibleResidual(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::_set_kLogNegligibleResidual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "Damper", "kLogNegligibleResidual", value));
}
// Autogenerated method: Cinemachine.Utility.Damper.DecayConstant
float Cinemachine::Utility::Damper::DecayConstant(float time, float residual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::DecayConstant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "Damper", "DecayConstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(residual)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, residual);
}
// Autogenerated method: Cinemachine.Utility.Damper.DecayedRemainder
float Cinemachine::Utility::Damper::DecayedRemainder(float initial, float decayConstant, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::DecayedRemainder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "Damper", "DecayedRemainder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initial), ::il2cpp_utils::ExtractType(decayConstant), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initial, decayConstant, deltaTime);
}
// Autogenerated method: Cinemachine.Utility.Damper.Damp
float Cinemachine::Utility::Damper::Damp(float initial, float dampTime, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::Damp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "Damper", "Damp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initial), ::il2cpp_utils::ExtractType(dampTime), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initial, dampTime, deltaTime);
}
// Autogenerated method: Cinemachine.Utility.Damper.Damp
::UnityEngine::Vector3 Cinemachine::Utility::Damper::Damp(::UnityEngine::Vector3 initial, ::UnityEngine::Vector3 dampTime, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::Damp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "Damper", "Damp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initial), ::il2cpp_utils::ExtractType(dampTime), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initial, dampTime, deltaTime);
}
// Autogenerated method: Cinemachine.Utility.Damper.Damp
::UnityEngine::Vector3 Cinemachine::Utility::Damper::Damp(::UnityEngine::Vector3 initial, float dampTime, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::Damper::Damp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "Damper", "Damp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initial), ::il2cpp_utils::ExtractType(dampTime), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initial, dampTime, deltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.HeadingTracker
#include "Cinemachine/Utility/HeadingTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single mDecayExponent
float Cinemachine::Utility::HeadingTracker::_get_mDecayExponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::_get_mDecayExponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Cinemachine.Utility", "HeadingTracker", "mDecayExponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Single mDecayExponent
void Cinemachine::Utility::HeadingTracker::_set_mDecayExponent(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::_set_mDecayExponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "HeadingTracker", "mDecayExponent", value));
}
// Autogenerated instance field getter
// Get instance field: private Cinemachine.Utility.HeadingTracker/Item[] mHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::Cinemachine::Utility::HeadingTracker::Item>& Cinemachine::Utility::HeadingTracker::dyn_mHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::Cinemachine::Utility::HeadingTracker::Item>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mTop
[[deprecated("Use field access instead!")]] int& Cinemachine::Utility::HeadingTracker::dyn_mTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mBottom
[[deprecated("Use field access instead!")]] int& Cinemachine::Utility::HeadingTracker::dyn_mBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mBottom"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mCount
[[deprecated("Use field access instead!")]] int& Cinemachine::Utility::HeadingTracker::dyn_mCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 mHeadingSum
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Cinemachine::Utility::HeadingTracker::dyn_mHeadingSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mHeadingSum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mHeadingSum"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single mWeightSum
[[deprecated("Use field access instead!")]] float& Cinemachine::Utility::HeadingTracker::dyn_mWeightSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mWeightSum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mWeightSum"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single mWeightTime
[[deprecated("Use field access instead!")]] float& Cinemachine::Utility::HeadingTracker::dyn_mWeightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mWeightTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mWeightTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 mLastGoodHeading
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Cinemachine::Utility::HeadingTracker::dyn_mLastGoodHeading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::dyn_mLastGoodHeading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mLastGoodHeading"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Cinemachine.Utility.HeadingTracker.get_FilterSize
int Cinemachine::Utility::HeadingTracker::get_FilterSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::get_FilterSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FilterSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.HeadingTracker.ClearHistory
void Cinemachine::Utility::HeadingTracker::ClearHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::ClearHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.HeadingTracker.Decay
float Cinemachine::Utility::HeadingTracker::Decay(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::Decay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "HeadingTracker", "Decay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: Cinemachine.Utility.HeadingTracker.Add
void Cinemachine::Utility::HeadingTracker::Add(::UnityEngine::Vector3 velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, velocity);
}
// Autogenerated method: Cinemachine.Utility.HeadingTracker.PopBottom
void Cinemachine::Utility::HeadingTracker::PopBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::PopBottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopBottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.HeadingTracker.DecayHistory
void Cinemachine::Utility::HeadingTracker::DecayHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::DecayHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecayHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Cinemachine.Utility.HeadingTracker.GetReliableHeading
::UnityEngine::Vector3 Cinemachine::Utility::HeadingTracker::GetReliableHeading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::HeadingTracker::GetReliableHeading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReliableHeading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.SplineHelpers
#include "Cinemachine/Utility/SplineHelpers.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.Utility.SplineHelpers.Bezier3
::UnityEngine::Vector3 Cinemachine::Utility::SplineHelpers::Bezier3(float t, ::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::SplineHelpers::Bezier3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "SplineHelpers", "Bezier3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, p0, p1, p2, p3);
}
// Autogenerated method: Cinemachine.Utility.SplineHelpers.BezierTangent3
::UnityEngine::Vector3 Cinemachine::Utility::SplineHelpers::BezierTangent3(float t, ::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::SplineHelpers::BezierTangent3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "SplineHelpers", "BezierTangent3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, p0, p1, p2, p3);
}
// Autogenerated method: Cinemachine.Utility.SplineHelpers.Bezier1
float Cinemachine::Utility::SplineHelpers::Bezier1(float t, float p0, float p1, float p2, float p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::SplineHelpers::Bezier1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "SplineHelpers", "Bezier1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, p0, p1, p2, p3);
}
// Autogenerated method: Cinemachine.Utility.SplineHelpers.BezierTangent1
float Cinemachine::Utility::SplineHelpers::BezierTangent1(float t, float p0, float p1, float p2, float p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::SplineHelpers::BezierTangent1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "SplineHelpers", "BezierTangent1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, p0, p1, p2, p3);
}
// Autogenerated method: Cinemachine.Utility.SplineHelpers.ComputeSmoothControlPoints
void Cinemachine::Utility::SplineHelpers::ComputeSmoothControlPoints(ByRef<::ArrayW<::UnityEngine::Vector4>> knot, ByRef<::ArrayW<::UnityEngine::Vector4>> ctrl1, ByRef<::ArrayW<::UnityEngine::Vector4>> ctrl2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::SplineHelpers::ComputeSmoothControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "SplineHelpers", "ComputeSmoothControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(knot), ::il2cpp_utils::ExtractType(ctrl1), ::il2cpp_utils::ExtractType(ctrl2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(knot), byref(ctrl1), byref(ctrl2));
}
// Autogenerated method: Cinemachine.Utility.SplineHelpers.ComputeSmoothControlPointsLooped
void Cinemachine::Utility::SplineHelpers::ComputeSmoothControlPointsLooped(ByRef<::ArrayW<::UnityEngine::Vector4>> knot, ByRef<::ArrayW<::UnityEngine::Vector4>> ctrl1, ByRef<::ArrayW<::UnityEngine::Vector4>> ctrl2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::SplineHelpers::ComputeSmoothControlPointsLooped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "SplineHelpers", "ComputeSmoothControlPointsLooped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(knot), ::il2cpp_utils::ExtractType(ctrl1), ::il2cpp_utils::ExtractType(ctrl2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(knot), byref(ctrl1), byref(ctrl2));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.UnityVectorExtensions
#include "Cinemachine/Utility/UnityVectorExtensions.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single Epsilon
float Cinemachine::Utility::UnityVectorExtensions::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Cinemachine.Utility", "UnityVectorExtensions", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Epsilon
void Cinemachine::Utility::UnityVectorExtensions::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Cinemachine.Utility", "UnityVectorExtensions", "Epsilon", value));
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.IsNaN
bool Cinemachine::Utility::UnityVectorExtensions::IsNaN(::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::IsNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "IsNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.IsNaN
bool Cinemachine::Utility::UnityVectorExtensions::IsNaN(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::IsNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "IsNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.ClosestPointOnSegment
float Cinemachine::Utility::UnityVectorExtensions::ClosestPointOnSegment(::UnityEngine::Vector3 p, ::UnityEngine::Vector3 s0, ::UnityEngine::Vector3 s1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::ClosestPointOnSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "ClosestPointOnSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(s0), ::il2cpp_utils::ExtractType(s1)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, s0, s1);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.ClosestPointOnSegment
float Cinemachine::Utility::UnityVectorExtensions::ClosestPointOnSegment(::UnityEngine::Vector2 p, ::UnityEngine::Vector2 s0, ::UnityEngine::Vector2 s1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::ClosestPointOnSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "ClosestPointOnSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(s0), ::il2cpp_utils::ExtractType(s1)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, s0, s1);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.ProjectOntoPlane
::UnityEngine::Vector3 Cinemachine::Utility::UnityVectorExtensions::ProjectOntoPlane(::UnityEngine::Vector3 vector, ::UnityEngine::Vector3 planeNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::ProjectOntoPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "ProjectOntoPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(planeNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, planeNormal);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.FindIntersection
int Cinemachine::Utility::UnityVectorExtensions::FindIntersection(ByRef<::UnityEngine::Vector2> p1, ByRef<::UnityEngine::Vector2> p2, ByRef<::UnityEngine::Vector2> p3, ByRef<::UnityEngine::Vector2> p4, ByRef<::UnityEngine::Vector2> intersection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::FindIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "FindIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(p4), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(p1), byref(p2), byref(p3), byref(p4), byref(intersection));
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.Abs
::UnityEngine::Vector2 Cinemachine::Utility::UnityVectorExtensions::Abs(::UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.Abs
::UnityEngine::Vector3 Cinemachine::Utility::UnityVectorExtensions::Abs(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.AlmostZero
bool Cinemachine::Utility::UnityVectorExtensions::AlmostZero(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::AlmostZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "AlmostZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.Angle
float Cinemachine::Utility::UnityVectorExtensions::Angle(::UnityEngine::Vector3 v1, ::UnityEngine::Vector3 v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.SignedAngle
float Cinemachine::Utility::UnityVectorExtensions::SignedAngle(::UnityEngine::Vector3 v1, ::UnityEngine::Vector3 v2, ::UnityEngine::Vector3 up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::SignedAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "SignedAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(up)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2, up);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.SafeFromToRotation
::UnityEngine::Quaternion Cinemachine::Utility::UnityVectorExtensions::SafeFromToRotation(::UnityEngine::Vector3 v1, ::UnityEngine::Vector3 v2, ::UnityEngine::Vector3 up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::SafeFromToRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "SafeFromToRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(up)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, v2, up);
}
// Autogenerated method: Cinemachine.Utility.UnityVectorExtensions.SlerpWithReferenceUp
::UnityEngine::Vector3 Cinemachine::Utility::UnityVectorExtensions::SlerpWithReferenceUp(::UnityEngine::Vector3 vA, ::UnityEngine::Vector3 vB, float t, ::UnityEngine::Vector3 up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityVectorExtensions::SlerpWithReferenceUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityVectorExtensions", "SlerpWithReferenceUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vA), ::il2cpp_utils::ExtractType(vB), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(up)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vA, vB, t, up);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.UnityQuaternionExtensions
#include "Cinemachine/Utility/UnityQuaternionExtensions.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.Utility.UnityQuaternionExtensions.SlerpWithReferenceUp
::UnityEngine::Quaternion Cinemachine::Utility::UnityQuaternionExtensions::SlerpWithReferenceUp(::UnityEngine::Quaternion qA, ::UnityEngine::Quaternion qB, float t, ::UnityEngine::Vector3 up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityQuaternionExtensions::SlerpWithReferenceUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityQuaternionExtensions", "SlerpWithReferenceUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qA), ::il2cpp_utils::ExtractType(qB), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(up)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qA, qB, t, up);
}
// Autogenerated method: Cinemachine.Utility.UnityQuaternionExtensions.Normalized
::UnityEngine::Quaternion Cinemachine::Utility::UnityQuaternionExtensions::Normalized(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityQuaternionExtensions::Normalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityQuaternionExtensions", "Normalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: Cinemachine.Utility.UnityQuaternionExtensions.GetCameraRotationToTarget
::UnityEngine::Vector2 Cinemachine::Utility::UnityQuaternionExtensions::GetCameraRotationToTarget(::UnityEngine::Quaternion orient, ::UnityEngine::Vector3 lookAtDir, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityQuaternionExtensions::GetCameraRotationToTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityQuaternionExtensions", "GetCameraRotationToTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(orient), ::il2cpp_utils::ExtractType(lookAtDir), ::il2cpp_utils::ExtractType(worldUp)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, orient, lookAtDir, worldUp);
}
// Autogenerated method: Cinemachine.Utility.UnityQuaternionExtensions.ApplyCameraRotation
::UnityEngine::Quaternion Cinemachine::Utility::UnityQuaternionExtensions::ApplyCameraRotation(::UnityEngine::Quaternion orient, ::UnityEngine::Vector2 rot, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityQuaternionExtensions::ApplyCameraRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityQuaternionExtensions", "ApplyCameraRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(orient), ::il2cpp_utils::ExtractType(rot), ::il2cpp_utils::ExtractType(worldUp)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, orient, rot, worldUp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Cinemachine.Utility.UnityRectExtensions
#include "Cinemachine/Utility/UnityRectExtensions.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Cinemachine.Utility.UnityRectExtensions.Inflated
::UnityEngine::Rect Cinemachine::Utility::UnityRectExtensions::Inflated(::UnityEngine::Rect r, ::UnityEngine::Vector2 delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::UnityRectExtensions::Inflated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Cinemachine.Utility", "UnityRectExtensions", "Inflated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r, delta);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ClipperLib.Int128
#include "ClipperLib/Int128.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 hi
[[deprecated("Use field access instead!")]] int64_t& ClipperLib::Int128::dyn_hi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Int128::dyn_hi");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hi"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 lo
[[deprecated("Use field access instead!")]] uint64_t& ClipperLib::Int128::dyn_lo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Int128::dyn_lo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lo"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ClipperLib.Int128..ctor
// ABORTED elsewhere.  ClipperLib::Int128::Int128(int64_t _hi, uint64_t _lo)
// Autogenerated method: ClipperLib.Int128.Int128Mul
::ClipperLib::Int128 ClipperLib::Int128::Int128Mul(int64_t lhs, int64_t rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Int128::Int128Mul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Int128", "Int128Mul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::Int128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: ClipperLib.Int128.Equals
bool ClipperLib::Int128::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Int128::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ClipperLib.Int128.GetHashCode
int ClipperLib::Int128::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Int128::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Int128.op_Equality
bool ClipperLib::operator ==(const ::ClipperLib::Int128& val1, const ::ClipperLib::Int128& val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Int128::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Int128", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val1, val2);
}
// Autogenerated method: ClipperLib.Int128.op_UnaryNegation
::ClipperLib::Int128 ClipperLib::operator-(const ::ClipperLib::Int128& val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Int128::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Int128", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::Int128, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ClipperLib.IntPoint
#include "ClipperLib/IntPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 X
[[deprecated("Use field access instead!")]] int64_t& ClipperLib::IntPoint::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntPoint::dyn_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 Y
[[deprecated("Use field access instead!")]] int64_t& ClipperLib::IntPoint::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntPoint::dyn_Y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ClipperLib.IntPoint..ctor
// ABORTED elsewhere.  ClipperLib::IntPoint::IntPoint(int64_t X, int64_t Y)
// Autogenerated method: ClipperLib.IntPoint..ctor
ClipperLib::IntPoint::IntPoint(double x, double y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntPoint::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: ClipperLib.IntPoint..ctor
// ABORTED elsewhere.  ClipperLib::IntPoint::IntPoint(::ClipperLib::IntPoint pt)
// Autogenerated method: ClipperLib.IntPoint.Equals
bool ClipperLib::IntPoint::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntPoint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ClipperLib.IntPoint.GetHashCode
int ClipperLib::IntPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.IntPoint.op_Equality
bool ClipperLib::operator ==(const ::ClipperLib::IntPoint& a, const ::ClipperLib::IntPoint& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntPoint::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "IntPoint", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: ClipperLib.IntPoint.op_Inequality
bool ClipperLib::operator !=(const ::ClipperLib::IntPoint& a, const ::ClipperLib::IntPoint& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntPoint::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "IntPoint", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.ClipType
#include "ClipperLib/ClipType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ClipperLib.ClipType ctIntersection
::ClipperLib::ClipType ClipperLib::ClipType::_get_ctIntersection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_get_ctIntersection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::ClipType>("ClipperLib", "ClipType", "ctIntersection"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.ClipType ctIntersection
void ClipperLib::ClipType::_set_ctIntersection(::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_set_ctIntersection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "ClipType", "ctIntersection", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.ClipType ctUnion
::ClipperLib::ClipType ClipperLib::ClipType::_get_ctUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_get_ctUnion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::ClipType>("ClipperLib", "ClipType", "ctUnion"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.ClipType ctUnion
void ClipperLib::ClipType::_set_ctUnion(::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_set_ctUnion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "ClipType", "ctUnion", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.ClipType ctDifference
::ClipperLib::ClipType ClipperLib::ClipType::_get_ctDifference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_get_ctDifference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::ClipType>("ClipperLib", "ClipType", "ctDifference"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.ClipType ctDifference
void ClipperLib::ClipType::_set_ctDifference(::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_set_ctDifference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "ClipType", "ctDifference", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.ClipType ctXor
::ClipperLib::ClipType ClipperLib::ClipType::_get_ctXor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_get_ctXor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::ClipType>("ClipperLib", "ClipType", "ctXor"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.ClipType ctXor
void ClipperLib::ClipType::_set_ctXor(::ClipperLib::ClipType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::_set_ctXor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "ClipType", "ctXor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ClipperLib::ClipType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.PolyType
#include "ClipperLib/PolyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ClipperLib.PolyType ptSubject
::ClipperLib::PolyType ClipperLib::PolyType::_get_ptSubject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyType::_get_ptSubject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::PolyType>("ClipperLib", "PolyType", "ptSubject"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.PolyType ptSubject
void ClipperLib::PolyType::_set_ptSubject(::ClipperLib::PolyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyType::_set_ptSubject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "PolyType", "ptSubject", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.PolyType ptClip
::ClipperLib::PolyType ClipperLib::PolyType::_get_ptClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyType::_get_ptClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::PolyType>("ClipperLib", "PolyType", "ptClip"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.PolyType ptClip
void ClipperLib::PolyType::_set_ptClip(::ClipperLib::PolyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyType::_set_ptClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "PolyType", "ptClip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ClipperLib::PolyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.PolyFillType
#include "ClipperLib/PolyFillType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ClipperLib.PolyFillType pftEvenOdd
::ClipperLib::PolyFillType ClipperLib::PolyFillType::_get_pftEvenOdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_get_pftEvenOdd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::PolyFillType>("ClipperLib", "PolyFillType", "pftEvenOdd"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.PolyFillType pftEvenOdd
void ClipperLib::PolyFillType::_set_pftEvenOdd(::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_set_pftEvenOdd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "PolyFillType", "pftEvenOdd", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.PolyFillType pftNonZero
::ClipperLib::PolyFillType ClipperLib::PolyFillType::_get_pftNonZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_get_pftNonZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::PolyFillType>("ClipperLib", "PolyFillType", "pftNonZero"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.PolyFillType pftNonZero
void ClipperLib::PolyFillType::_set_pftNonZero(::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_set_pftNonZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "PolyFillType", "pftNonZero", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.PolyFillType pftPositive
::ClipperLib::PolyFillType ClipperLib::PolyFillType::_get_pftPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_get_pftPositive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::PolyFillType>("ClipperLib", "PolyFillType", "pftPositive"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.PolyFillType pftPositive
void ClipperLib::PolyFillType::_set_pftPositive(::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_set_pftPositive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "PolyFillType", "pftPositive", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.PolyFillType pftNegative
::ClipperLib::PolyFillType ClipperLib::PolyFillType::_get_pftNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_get_pftNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::PolyFillType>("ClipperLib", "PolyFillType", "pftNegative"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.PolyFillType pftNegative
void ClipperLib::PolyFillType::_set_pftNegative(::ClipperLib::PolyFillType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::_set_pftNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "PolyFillType", "pftNegative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ClipperLib::PolyFillType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::PolyFillType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.EdgeSide
#include "ClipperLib/EdgeSide.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ClipperLib.EdgeSide esLeft
::ClipperLib::EdgeSide ClipperLib::EdgeSide::_get_esLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::EdgeSide::_get_esLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::EdgeSide>("ClipperLib", "EdgeSide", "esLeft"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.EdgeSide esLeft
void ClipperLib::EdgeSide::_set_esLeft(::ClipperLib::EdgeSide value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::EdgeSide::_set_esLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "EdgeSide", "esLeft", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.EdgeSide esRight
::ClipperLib::EdgeSide ClipperLib::EdgeSide::_get_esRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::EdgeSide::_get_esRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::EdgeSide>("ClipperLib", "EdgeSide", "esRight"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.EdgeSide esRight
void ClipperLib::EdgeSide::_set_esRight(::ClipperLib::EdgeSide value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::EdgeSide::_set_esRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "EdgeSide", "esRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ClipperLib::EdgeSide::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::EdgeSide::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.Direction
#include "ClipperLib/Direction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ClipperLib.Direction dRightToLeft
::ClipperLib::Direction ClipperLib::Direction::_get_dRightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Direction::_get_dRightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::Direction>("ClipperLib", "Direction", "dRightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.Direction dRightToLeft
void ClipperLib::Direction::_set_dRightToLeft(::ClipperLib::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Direction::_set_dRightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "Direction", "dRightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public ClipperLib.Direction dLeftToRight
::ClipperLib::Direction ClipperLib::Direction::_get_dLeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Direction::_get_dLeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ClipperLib::Direction>("ClipperLib", "Direction", "dLeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public ClipperLib.Direction dLeftToRight
void ClipperLib::Direction::_set_dLeftToRight(::ClipperLib::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Direction::_set_dLeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("ClipperLib", "Direction", "dLeftToRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& ClipperLib::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.TEdge
#include "ClipperLib/TEdge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: ClipperLib.IntPoint Bot
[[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& ClipperLib::TEdge::dyn_Bot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Bot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Bot"))->offset;
  return *reinterpret_cast<::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.IntPoint Curr
[[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& ClipperLib::TEdge::dyn_Curr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Curr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Curr"))->offset;
  return *reinterpret_cast<::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.IntPoint Top
[[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& ClipperLib::TEdge::dyn_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Top"))->offset;
  return *reinterpret_cast<::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.IntPoint Delta
[[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& ClipperLib::TEdge::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double Dx
[[deprecated("Use field access instead!")]] double& ClipperLib::TEdge::dyn_Dx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Dx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dx"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.PolyType PolyTyp
[[deprecated("Use field access instead!")]] ::ClipperLib::PolyType& ClipperLib::TEdge::dyn_PolyTyp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_PolyTyp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PolyTyp"))->offset;
  return *reinterpret_cast<::ClipperLib::PolyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.EdgeSide Side
[[deprecated("Use field access instead!")]] ::ClipperLib::EdgeSide& ClipperLib::TEdge::dyn_Side() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Side");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Side"))->offset;
  return *reinterpret_cast<::ClipperLib::EdgeSide*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 WindDelta
[[deprecated("Use field access instead!")]] int& ClipperLib::TEdge::dyn_WindDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_WindDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindDelta"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 WindCnt
[[deprecated("Use field access instead!")]] int& ClipperLib::TEdge::dyn_WindCnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_WindCnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindCnt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 WindCnt2
[[deprecated("Use field access instead!")]] int& ClipperLib::TEdge::dyn_WindCnt2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_WindCnt2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindCnt2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 OutIdx
[[deprecated("Use field access instead!")]] int& ClipperLib::TEdge::dyn_OutIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_OutIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge Next
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::TEdge::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge Prev
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::TEdge::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge NextInLML
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::TEdge::dyn_NextInLML() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_NextInLML");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextInLML"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge NextInAEL
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::TEdge::dyn_NextInAEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_NextInAEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextInAEL"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge PrevInAEL
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::TEdge::dyn_PrevInAEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_PrevInAEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevInAEL"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge NextInSEL
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::TEdge::dyn_NextInSEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_NextInSEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextInSEL"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge PrevInSEL
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::TEdge::dyn_PrevInSEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::TEdge::dyn_PrevInSEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevInSEL"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.IntersectNode
#include "ClipperLib/IntersectNode.hpp"
// Including type: ClipperLib.TEdge
#include "ClipperLib/TEdge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge Edge1
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::IntersectNode::dyn_Edge1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntersectNode::dyn_Edge1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Edge1"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge Edge2
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::IntersectNode::dyn_Edge2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntersectNode::dyn_Edge2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Edge2"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.IntPoint Pt
[[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& ClipperLib::IntersectNode::dyn_Pt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::IntersectNode::dyn_Pt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pt"))->offset;
  return *reinterpret_cast<::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.MyIntersectNodeSort
#include "ClipperLib/MyIntersectNodeSort.hpp"
// Including type: ClipperLib.IntersectNode
#include "ClipperLib/IntersectNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ClipperLib.MyIntersectNodeSort.Compare
int ClipperLib::MyIntersectNodeSort::Compare(::ClipperLib::IntersectNode* node1, ::ClipperLib::IntersectNode* node2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::MyIntersectNodeSort::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ClipperLib::MyIntersectNodeSort*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, node1, node2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.LocalMinima
#include "ClipperLib/LocalMinima.hpp"
// Including type: ClipperLib.TEdge
#include "ClipperLib/TEdge.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 Y
[[deprecated("Use field access instead!")]] int64_t& ClipperLib::LocalMinima::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::LocalMinima::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge LeftBound
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::LocalMinima::dyn_LeftBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::LocalMinima::dyn_LeftBound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftBound"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge RightBound
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::LocalMinima::dyn_RightBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::LocalMinima::dyn_RightBound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightBound"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.LocalMinima Next
[[deprecated("Use field access instead!")]] ::ClipperLib::LocalMinima*& ClipperLib::LocalMinima::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::LocalMinima::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::ClipperLib::LocalMinima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.Scanbeam
#include "ClipperLib/Scanbeam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 Y
[[deprecated("Use field access instead!")]] int64_t& ClipperLib::Scanbeam::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Scanbeam::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.Scanbeam Next
[[deprecated("Use field access instead!")]] ::ClipperLib::Scanbeam*& ClipperLib::Scanbeam::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Scanbeam::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::ClipperLib::Scanbeam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.Maxima
#include "ClipperLib/Maxima.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 X
[[deprecated("Use field access instead!")]] int64_t& ClipperLib::Maxima::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Maxima::dyn_X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.Maxima Next
[[deprecated("Use field access instead!")]] ::ClipperLib::Maxima*& ClipperLib::Maxima::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Maxima::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::ClipperLib::Maxima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.Maxima Prev
[[deprecated("Use field access instead!")]] ::ClipperLib::Maxima*& ClipperLib::Maxima::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Maxima::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::ClipperLib::Maxima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.OutRec
#include "ClipperLib/OutRec.hpp"
// Including type: ClipperLib.OutPt
#include "ClipperLib/OutPt.hpp"
// Including type: ClipperLib.PolyNode
#include "ClipperLib/PolyNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 Idx
[[deprecated("Use field access instead!")]] int& ClipperLib::OutRec::dyn_Idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutRec::dyn_Idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsHole
[[deprecated("Use field access instead!")]] bool& ClipperLib::OutRec::dyn_IsHole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutRec::dyn_IsHole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsHole"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsOpen
[[deprecated("Use field access instead!")]] bool& ClipperLib::OutRec::dyn_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutRec::dyn_IsOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.OutRec FirstLeft
[[deprecated("Use field access instead!")]] ::ClipperLib::OutRec*& ClipperLib::OutRec::dyn_FirstLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutRec::dyn_FirstLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstLeft"))->offset;
  return *reinterpret_cast<::ClipperLib::OutRec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.OutPt Pts
[[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& ClipperLib::OutRec::dyn_Pts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutRec::dyn_Pts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pts"))->offset;
  return *reinterpret_cast<::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.OutPt BottomPt
[[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& ClipperLib::OutRec::dyn_BottomPt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutRec::dyn_BottomPt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BottomPt"))->offset;
  return *reinterpret_cast<::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.PolyNode PolyNode
[[deprecated("Use field access instead!")]] ::ClipperLib::PolyNode*& ClipperLib::OutRec::dyn_PolyNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutRec::dyn_PolyNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PolyNode"))->offset;
  return *reinterpret_cast<::ClipperLib::PolyNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.OutPt
#include "ClipperLib/OutPt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 Idx
[[deprecated("Use field access instead!")]] int& ClipperLib::OutPt::dyn_Idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutPt::dyn_Idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.IntPoint Pt
[[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& ClipperLib::OutPt::dyn_Pt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutPt::dyn_Pt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pt"))->offset;
  return *reinterpret_cast<::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.OutPt Next
[[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& ClipperLib::OutPt::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutPt::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.OutPt Prev
[[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& ClipperLib::OutPt::dyn_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::OutPt::dyn_Prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prev"))->offset;
  return *reinterpret_cast<::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.Join
#include "ClipperLib/Join.hpp"
// Including type: ClipperLib.OutPt
#include "ClipperLib/OutPt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: ClipperLib.OutPt OutPt1
[[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& ClipperLib::Join::dyn_OutPt1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Join::dyn_OutPt1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutPt1"))->offset;
  return *reinterpret_cast<::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.OutPt OutPt2
[[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& ClipperLib::Join::dyn_OutPt2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Join::dyn_OutPt2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutPt2"))->offset;
  return *reinterpret_cast<::ClipperLib::OutPt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.IntPoint OffPt
[[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& ClipperLib::Join::dyn_OffPt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Join::dyn_OffPt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffPt"))->offset;
  return *reinterpret_cast<::ClipperLib::IntPoint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.ClipperBase
#include "ClipperLib/ClipperBase.hpp"
// Including type: ClipperLib.LocalMinima
#include "ClipperLib/LocalMinima.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ClipperLib.TEdge
#include "ClipperLib/TEdge.hpp"
// Including type: ClipperLib.Scanbeam
#include "ClipperLib/Scanbeam.hpp"
// Including type: ClipperLib.OutRec
#include "ClipperLib/OutRec.hpp"
// Including type: ClipperLib.PolyType
#include "ClipperLib/PolyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: ClipperLib.LocalMinima m_MinimaList
[[deprecated("Use field access instead!")]] ::ClipperLib::LocalMinima*& ClipperLib::ClipperBase::dyn_m_MinimaList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_MinimaList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinimaList"))->offset;
  return *reinterpret_cast<::ClipperLib::LocalMinima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.LocalMinima m_CurrentLM
[[deprecated("Use field access instead!")]] ::ClipperLib::LocalMinima*& ClipperLib::ClipperBase::dyn_m_CurrentLM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_CurrentLM");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentLM"))->offset;
  return *reinterpret_cast<::ClipperLib::LocalMinima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Collections.Generic.List`1<ClipperLib.TEdge>> m_edges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::ClipperLib::TEdge*>*>*& ClipperLib::ClipperBase::dyn_m_edges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_edges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_edges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::ClipperLib::TEdge*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.Scanbeam m_Scanbeam
[[deprecated("Use field access instead!")]] ::ClipperLib::Scanbeam*& ClipperLib::ClipperBase::dyn_m_Scanbeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_Scanbeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scanbeam"))->offset;
  return *reinterpret_cast<::ClipperLib::Scanbeam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<ClipperLib.OutRec> m_PolyOuts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ClipperLib::OutRec*>*& ClipperLib::ClipperBase::dyn_m_PolyOuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_PolyOuts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PolyOuts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ClipperLib::OutRec*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ClipperLib.TEdge m_ActiveEdges
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::ClipperBase::dyn_m_ActiveEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_ActiveEdges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveEdges"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_UseFullRange
[[deprecated("Use field access instead!")]] bool& ClipperLib::ClipperBase::dyn_m_UseFullRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_UseFullRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseFullRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_HasOpenPaths
[[deprecated("Use field access instead!")]] bool& ClipperLib::ClipperBase::dyn_m_HasOpenPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_m_HasOpenPaths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasOpenPaths"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PreserveCollinear>k__BackingField
[[deprecated("Use field access instead!")]] bool& ClipperLib::ClipperBase::dyn_$PreserveCollinear$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::dyn_$PreserveCollinear$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PreserveCollinear>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ClipperLib.ClipperBase.get_PreserveCollinear
bool ClipperLib::ClipperBase::get_PreserveCollinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::get_PreserveCollinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreserveCollinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.ClipperBase.set_PreserveCollinear
void ClipperLib::ClipperBase::set_PreserveCollinear(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::set_PreserveCollinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreserveCollinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClipperLib.ClipperBase.Swap
void ClipperLib::ClipperBase::Swap(ByRef<int64_t> val1, ByRef<int64_t> val2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::Swap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Swap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val1), ::il2cpp_utils::ExtractType(val2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(val1), byref(val2));
}
// Autogenerated method: ClipperLib.ClipperBase.IsHorizontal
bool ClipperLib::ClipperBase::IsHorizontal(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::IsHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "ClipperBase", "IsHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: ClipperLib.ClipperBase.SlopesEqual
bool ClipperLib::ClipperBase::SlopesEqual(::ClipperLib::TEdge* e1, ::ClipperLib::TEdge* e2, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::SlopesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "ClipperBase", "SlopesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e1, e2, UseFullRange);
}
// Autogenerated method: ClipperLib.ClipperBase.SlopesEqual
bool ClipperLib::ClipperBase::SlopesEqual(::ClipperLib::IntPoint pt1, ::ClipperLib::IntPoint pt2, ::ClipperLib::IntPoint pt3, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::SlopesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "ClipperBase", "SlopesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt1), ::il2cpp_utils::ExtractType(pt2), ::il2cpp_utils::ExtractType(pt3), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pt1, pt2, pt3, UseFullRange);
}
// Autogenerated method: ClipperLib.ClipperBase.SlopesEqual
bool ClipperLib::ClipperBase::SlopesEqual(::ClipperLib::IntPoint pt1, ::ClipperLib::IntPoint pt2, ::ClipperLib::IntPoint pt3, ::ClipperLib::IntPoint pt4, bool UseFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::SlopesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "ClipperBase", "SlopesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt1), ::il2cpp_utils::ExtractType(pt2), ::il2cpp_utils::ExtractType(pt3), ::il2cpp_utils::ExtractType(pt4), ::il2cpp_utils::ExtractType(UseFullRange)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pt1, pt2, pt3, pt4, UseFullRange);
}
// Autogenerated method: ClipperLib.ClipperBase.RangeTest
void ClipperLib::ClipperBase::RangeTest(::ClipperLib::IntPoint Pt, ByRef<bool> useFullRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::RangeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RangeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Pt), ::il2cpp_utils::ExtractType(useFullRange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Pt, byref(useFullRange));
}
// Autogenerated method: ClipperLib.ClipperBase.InitEdge
void ClipperLib::ClipperBase::InitEdge(::ClipperLib::TEdge* e, ::ClipperLib::TEdge* eNext, ::ClipperLib::TEdge* ePrev, ::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::InitEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(eNext), ::il2cpp_utils::ExtractType(ePrev), ::il2cpp_utils::ExtractType(pt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, eNext, ePrev, pt);
}
// Autogenerated method: ClipperLib.ClipperBase.InitEdge2
void ClipperLib::ClipperBase::InitEdge2(::ClipperLib::TEdge* e, ::ClipperLib::PolyType polyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::InitEdge2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitEdge2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(polyType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, polyType);
}
// Autogenerated method: ClipperLib.ClipperBase.FindNextLocMin
::ClipperLib::TEdge* ClipperLib::ClipperBase::FindNextLocMin(::ClipperLib::TEdge* E) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::FindNextLocMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNextLocMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(E)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::TEdge*, false>(this, ___internal__method, E);
}
// Autogenerated method: ClipperLib.ClipperBase.ProcessBound
::ClipperLib::TEdge* ClipperLib::ClipperBase::ProcessBound(::ClipperLib::TEdge* E, bool LeftBoundIsForward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::ProcessBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(E), ::il2cpp_utils::ExtractType(LeftBoundIsForward)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::TEdge*, false>(this, ___internal__method, E, LeftBoundIsForward);
}
// Autogenerated method: ClipperLib.ClipperBase.AddPath
bool ClipperLib::ClipperBase::AddPath(::System::Collections::Generic::List_1<::ClipperLib::IntPoint>* pg, ::ClipperLib::PolyType polyType, bool Closed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::AddPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pg), ::il2cpp_utils::ExtractType(polyType), ::il2cpp_utils::ExtractType(Closed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pg, polyType, Closed);
}
// Autogenerated method: ClipperLib.ClipperBase.AddPaths
bool ClipperLib::ClipperBase::AddPaths(::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::ClipperLib::IntPoint>*>* ppg, ::ClipperLib::PolyType polyType, bool closed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::AddPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ppg), ::il2cpp_utils::ExtractType(polyType), ::il2cpp_utils::ExtractType(closed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ppg, polyType, closed);
}
// Autogenerated method: ClipperLib.ClipperBase.Pt2IsBetweenPt1AndPt3
bool ClipperLib::ClipperBase::Pt2IsBetweenPt1AndPt3(::ClipperLib::IntPoint pt1, ::ClipperLib::IntPoint pt2, ::ClipperLib::IntPoint pt3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::Pt2IsBetweenPt1AndPt3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pt2IsBetweenPt1AndPt3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt1), ::il2cpp_utils::ExtractType(pt2), ::il2cpp_utils::ExtractType(pt3)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pt1, pt2, pt3);
}
// Autogenerated method: ClipperLib.ClipperBase.RemoveEdge
::ClipperLib::TEdge* ClipperLib::ClipperBase::RemoveEdge(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::RemoveEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::TEdge*, false>(this, ___internal__method, e);
}
// Autogenerated method: ClipperLib.ClipperBase.SetDx
void ClipperLib::ClipperBase::SetDx(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::SetDx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: ClipperLib.ClipperBase.InsertLocalMinima
void ClipperLib::ClipperBase::InsertLocalMinima(::ClipperLib::LocalMinima* newLm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::InsertLocalMinima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertLocalMinima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLm);
}
// Autogenerated method: ClipperLib.ClipperBase.PopLocalMinima
bool ClipperLib::ClipperBase::PopLocalMinima(int64_t Y, ByRef<::ClipperLib::LocalMinima*> current) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::PopLocalMinima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopLocalMinima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Y), ::il2cpp_utils::ExtractIndependentType<::ClipperLib::LocalMinima*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, Y, byref(current));
}
// Autogenerated method: ClipperLib.ClipperBase.ReverseHorizontal
void ClipperLib::ClipperBase::ReverseHorizontal(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::ReverseHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: ClipperLib.ClipperBase.Reset
void ClipperLib::ClipperBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::ClipperLib::ClipperBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.ClipperBase.InsertScanbeam
void ClipperLib::ClipperBase::InsertScanbeam(int64_t Y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::InsertScanbeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertScanbeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Y);
}
// Autogenerated method: ClipperLib.ClipperBase.PopScanbeam
bool ClipperLib::ClipperBase::PopScanbeam(ByRef<int64_t> Y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::PopScanbeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopScanbeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(Y));
}
// Autogenerated method: ClipperLib.ClipperBase.LocalMinimaPending
bool ClipperLib::ClipperBase::LocalMinimaPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::LocalMinimaPending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalMinimaPending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.ClipperBase.CreateOutRec
::ClipperLib::OutRec* ClipperLib::ClipperBase::CreateOutRec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::CreateOutRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOutRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutRec*, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.ClipperBase.DisposeOutRec
void ClipperLib::ClipperBase::DisposeOutRec(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::DisposeOutRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeOutRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: ClipperLib.ClipperBase.UpdateEdgeIntoAEL
void ClipperLib::ClipperBase::UpdateEdgeIntoAEL(ByRef<::ClipperLib::TEdge*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::UpdateEdgeIntoAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEdgeIntoAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(e));
}
// Autogenerated method: ClipperLib.ClipperBase.SwapPositionsInAEL
void ClipperLib::ClipperBase::SwapPositionsInAEL(::ClipperLib::TEdge* edge1, ::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::SwapPositionsInAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapPositionsInAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge1, edge2);
}
// Autogenerated method: ClipperLib.ClipperBase.DeleteFromAEL
void ClipperLib::ClipperBase::DeleteFromAEL(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::ClipperBase::DeleteFromAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteFromAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.Clipper
#include "ClipperLib/Clipper.hpp"
// Including type: ClipperLib.Maxima
#include "ClipperLib/Maxima.hpp"
// Including type: ClipperLib.TEdge
#include "ClipperLib/TEdge.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ClipperLib.IntersectNode
#include "ClipperLib/IntersectNode.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
// Including type: ClipperLib.Join
#include "ClipperLib/Join.hpp"
// Including type: ClipperLib.OutPt
#include "ClipperLib/OutPt.hpp"
// Including type: ClipperLib.OutRec
#include "ClipperLib/OutRec.hpp"
// Including type: ClipperLib.Direction
#include "ClipperLib/Direction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ClipperLib.ClipType m_ClipType
[[deprecated("Use field access instead!")]] ::ClipperLib::ClipType& ClipperLib::Clipper::dyn_m_ClipType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_ClipType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipType"))->offset;
  return *reinterpret_cast<::ClipperLib::ClipType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ClipperLib.Maxima m_Maxima
[[deprecated("Use field access instead!")]] ::ClipperLib::Maxima*& ClipperLib::Clipper::dyn_m_Maxima() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_Maxima");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Maxima"))->offset;
  return *reinterpret_cast<::ClipperLib::Maxima**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ClipperLib.TEdge m_SortedEdges
[[deprecated("Use field access instead!")]] ::ClipperLib::TEdge*& ClipperLib::Clipper::dyn_m_SortedEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_SortedEdges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SortedEdges"))->offset;
  return *reinterpret_cast<::ClipperLib::TEdge**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<ClipperLib.IntersectNode> m_IntersectList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ClipperLib::IntersectNode*>*& ClipperLib::Clipper::dyn_m_IntersectList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_IntersectList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntersectList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ClipperLib::IntersectNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IComparer`1<ClipperLib.IntersectNode> m_IntersectNodeComparer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IComparer_1<::ClipperLib::IntersectNode*>*& ClipperLib::Clipper::dyn_m_IntersectNodeComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_IntersectNodeComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntersectNodeComparer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IComparer_1<::ClipperLib::IntersectNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ExecuteLocked
[[deprecated("Use field access instead!")]] bool& ClipperLib::Clipper::dyn_m_ExecuteLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_ExecuteLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExecuteLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ClipperLib.PolyFillType m_ClipFillType
[[deprecated("Use field access instead!")]] ::ClipperLib::PolyFillType& ClipperLib::Clipper::dyn_m_ClipFillType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_ClipFillType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipFillType"))->offset;
  return *reinterpret_cast<::ClipperLib::PolyFillType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ClipperLib.PolyFillType m_SubjFillType
[[deprecated("Use field access instead!")]] ::ClipperLib::PolyFillType& ClipperLib::Clipper::dyn_m_SubjFillType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_SubjFillType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubjFillType"))->offset;
  return *reinterpret_cast<::ClipperLib::PolyFillType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<ClipperLib.Join> m_Joins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ClipperLib::Join*>*& ClipperLib::Clipper::dyn_m_Joins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_Joins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Joins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ClipperLib::Join*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<ClipperLib.Join> m_GhostJoins
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ClipperLib::Join*>*& ClipperLib::Clipper::dyn_m_GhostJoins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_GhostJoins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GhostJoins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ClipperLib::Join*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UsingPolyTree
[[deprecated("Use field access instead!")]] bool& ClipperLib::Clipper::dyn_m_UsingPolyTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_m_UsingPolyTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsingPolyTree"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ReverseSolution>k__BackingField
[[deprecated("Use field access instead!")]] bool& ClipperLib::Clipper::dyn_$ReverseSolution$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_$ReverseSolution$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReverseSolution>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <StrictlySimple>k__BackingField
[[deprecated("Use field access instead!")]] bool& ClipperLib::Clipper::dyn_$StrictlySimple$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::dyn_$StrictlySimple$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StrictlySimple>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ClipperLib.Clipper.InsertMaxima
void ClipperLib::Clipper::InsertMaxima(int64_t X) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::InsertMaxima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertMaxima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(X)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, X);
}
// Autogenerated method: ClipperLib.Clipper.get_ReverseSolution
bool ClipperLib::Clipper::get_ReverseSolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::get_ReverseSolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverseSolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.set_ReverseSolution
void ClipperLib::Clipper::set_ReverseSolution(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::set_ReverseSolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverseSolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClipperLib.Clipper.get_StrictlySimple
bool ClipperLib::Clipper::get_StrictlySimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::get_StrictlySimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StrictlySimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.set_StrictlySimple
void ClipperLib::Clipper::set_StrictlySimple(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::set_StrictlySimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StrictlySimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClipperLib.Clipper.Execute
bool ClipperLib::Clipper::Execute(::ClipperLib::ClipType clipType, ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::ClipperLib::IntPoint>*>* solution, ::ClipperLib::PolyFillType subjFillType, ::ClipperLib::PolyFillType clipFillType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipType), ::il2cpp_utils::ExtractType(solution), ::il2cpp_utils::ExtractType(subjFillType), ::il2cpp_utils::ExtractType(clipFillType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipType, solution, subjFillType, clipFillType);
}
// Autogenerated method: ClipperLib.Clipper.ExecuteInternal
bool ClipperLib::Clipper::ExecuteInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ExecuteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.DisposeAllPolyPts
void ClipperLib::Clipper::DisposeAllPolyPts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::DisposeAllPolyPts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeAllPolyPts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.AddJoin
void ClipperLib::Clipper::AddJoin(::ClipperLib::OutPt* Op1, ::ClipperLib::OutPt* Op2, ::ClipperLib::IntPoint OffPt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::AddJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Op1), ::il2cpp_utils::ExtractType(Op2), ::il2cpp_utils::ExtractType(OffPt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Op1, Op2, OffPt);
}
// Autogenerated method: ClipperLib.Clipper.AddGhostJoin
void ClipperLib::Clipper::AddGhostJoin(::ClipperLib::OutPt* Op, ::ClipperLib::IntPoint OffPt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::AddGhostJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGhostJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Op), ::il2cpp_utils::ExtractType(OffPt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Op, OffPt);
}
// Autogenerated method: ClipperLib.Clipper.InsertLocalMinimaIntoAEL
void ClipperLib::Clipper::InsertLocalMinimaIntoAEL(int64_t botY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::InsertLocalMinimaIntoAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertLocalMinimaIntoAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(botY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, botY);
}
// Autogenerated method: ClipperLib.Clipper.InsertEdgeIntoAEL
void ClipperLib::Clipper::InsertEdgeIntoAEL(::ClipperLib::TEdge* edge, ::ClipperLib::TEdge* startEdge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::InsertEdgeIntoAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertEdgeIntoAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge), ::il2cpp_utils::ExtractType(startEdge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge, startEdge);
}
// Autogenerated method: ClipperLib.Clipper.E2InsertsBeforeE1
bool ClipperLib::Clipper::E2InsertsBeforeE1(::ClipperLib::TEdge* e1, ::ClipperLib::TEdge* e2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::E2InsertsBeforeE1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "E2InsertsBeforeE1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e1, e2);
}
// Autogenerated method: ClipperLib.Clipper.IsEvenOddFillType
bool ClipperLib::Clipper::IsEvenOddFillType(::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::IsEvenOddFillType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEvenOddFillType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, edge);
}
// Autogenerated method: ClipperLib.Clipper.IsEvenOddAltFillType
bool ClipperLib::Clipper::IsEvenOddAltFillType(::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::IsEvenOddAltFillType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEvenOddAltFillType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, edge);
}
// Autogenerated method: ClipperLib.Clipper.IsContributing
bool ClipperLib::Clipper::IsContributing(::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::IsContributing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsContributing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, edge);
}
// Autogenerated method: ClipperLib.Clipper.SetWindingCount
void ClipperLib::Clipper::SetWindingCount(::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::SetWindingCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWindingCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge);
}
// Autogenerated method: ClipperLib.Clipper.AddEdgeToSEL
void ClipperLib::Clipper::AddEdgeToSEL(::ClipperLib::TEdge* edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::AddEdgeToSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEdgeToSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge);
}
// Autogenerated method: ClipperLib.Clipper.PopEdgeFromSEL
bool ClipperLib::Clipper::PopEdgeFromSEL(ByRef<::ClipperLib::TEdge*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::PopEdgeFromSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopEdgeFromSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ClipperLib::TEdge*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(e));
}
// Autogenerated method: ClipperLib.Clipper.CopyAELToSEL
void ClipperLib::Clipper::CopyAELToSEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::CopyAELToSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyAELToSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.SwapPositionsInSEL
void ClipperLib::Clipper::SwapPositionsInSEL(::ClipperLib::TEdge* edge1, ::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::SwapPositionsInSEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapPositionsInSEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge1, edge2);
}
// Autogenerated method: ClipperLib.Clipper.AddLocalMaxPoly
void ClipperLib::Clipper::AddLocalMaxPoly(::ClipperLib::TEdge* e1, ::ClipperLib::TEdge* e2, ::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::AddLocalMaxPoly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLocalMaxPoly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(pt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e1, e2, pt);
}
// Autogenerated method: ClipperLib.Clipper.AddLocalMinPoly
::ClipperLib::OutPt* ClipperLib::Clipper::AddLocalMinPoly(::ClipperLib::TEdge* e1, ::ClipperLib::TEdge* e2, ::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::AddLocalMinPoly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLocalMinPoly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(pt)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutPt*, false>(this, ___internal__method, e1, e2, pt);
}
// Autogenerated method: ClipperLib.Clipper.AddOutPt
::ClipperLib::OutPt* ClipperLib::Clipper::AddOutPt(::ClipperLib::TEdge* e, ::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::AddOutPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOutPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(pt)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutPt*, false>(this, ___internal__method, e, pt);
}
// Autogenerated method: ClipperLib.Clipper.GetLastOutPt
::ClipperLib::OutPt* ClipperLib::Clipper::GetLastOutPt(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetLastOutPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastOutPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutPt*, false>(this, ___internal__method, e);
}
// Autogenerated method: ClipperLib.Clipper.HorzSegmentsOverlap
bool ClipperLib::Clipper::HorzSegmentsOverlap(int64_t seg1a, int64_t seg1b, int64_t seg2a, int64_t seg2b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::HorzSegmentsOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HorzSegmentsOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seg1a), ::il2cpp_utils::ExtractType(seg1b), ::il2cpp_utils::ExtractType(seg2a), ::il2cpp_utils::ExtractType(seg2b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, seg1a, seg1b, seg2a, seg2b);
}
// Autogenerated method: ClipperLib.Clipper.SetHoleState
void ClipperLib::Clipper::SetHoleState(::ClipperLib::TEdge* e, ::ClipperLib::OutRec* outRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::SetHoleState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHoleState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(outRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, outRec);
}
// Autogenerated method: ClipperLib.Clipper.GetDx
double ClipperLib::Clipper::GetDx(::ClipperLib::IntPoint pt1, ::ClipperLib::IntPoint pt2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetDx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt1), ::il2cpp_utils::ExtractType(pt2)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, pt1, pt2);
}
// Autogenerated method: ClipperLib.Clipper.FirstIsBottomPt
bool ClipperLib::Clipper::FirstIsBottomPt(::ClipperLib::OutPt* btmPt1, ::ClipperLib::OutPt* btmPt2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::FirstIsBottomPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirstIsBottomPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btmPt1), ::il2cpp_utils::ExtractType(btmPt2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, btmPt1, btmPt2);
}
// Autogenerated method: ClipperLib.Clipper.GetBottomPt
::ClipperLib::OutPt* ClipperLib::Clipper::GetBottomPt(::ClipperLib::OutPt* pp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetBottomPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBottomPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pp)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutPt*, false>(this, ___internal__method, pp);
}
// Autogenerated method: ClipperLib.Clipper.GetLowermostRec
::ClipperLib::OutRec* ClipperLib::Clipper::GetLowermostRec(::ClipperLib::OutRec* outRec1, ::ClipperLib::OutRec* outRec2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetLowermostRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLowermostRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec1), ::il2cpp_utils::ExtractType(outRec2)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutRec*, false>(this, ___internal__method, outRec1, outRec2);
}
// Autogenerated method: ClipperLib.Clipper.OutRec1RightOfOutRec2
bool ClipperLib::Clipper::OutRec1RightOfOutRec2(::ClipperLib::OutRec* outRec1, ::ClipperLib::OutRec* outRec2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::OutRec1RightOfOutRec2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutRec1RightOfOutRec2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec1), ::il2cpp_utils::ExtractType(outRec2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, outRec1, outRec2);
}
// Autogenerated method: ClipperLib.Clipper.GetOutRec
::ClipperLib::OutRec* ClipperLib::Clipper::GetOutRec(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetOutRec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutRec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutRec*, false>(this, ___internal__method, idx);
}
// Autogenerated method: ClipperLib.Clipper.AppendPolygon
void ClipperLib::Clipper::AppendPolygon(::ClipperLib::TEdge* e1, ::ClipperLib::TEdge* e2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::AppendPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e1, e2);
}
// Autogenerated method: ClipperLib.Clipper.ReversePolyPtLinks
void ClipperLib::Clipper::ReversePolyPtLinks(::ClipperLib::OutPt* pp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ReversePolyPtLinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReversePolyPtLinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pp);
}
// Autogenerated method: ClipperLib.Clipper.SwapSides
void ClipperLib::Clipper::SwapSides(::ClipperLib::TEdge* edge1, ::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::SwapSides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Clipper", "SwapSides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, edge1, edge2);
}
// Autogenerated method: ClipperLib.Clipper.SwapPolyIndexes
void ClipperLib::Clipper::SwapPolyIndexes(::ClipperLib::TEdge* edge1, ::ClipperLib::TEdge* edge2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::SwapPolyIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Clipper", "SwapPolyIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, edge1, edge2);
}
// Autogenerated method: ClipperLib.Clipper.IntersectEdges
void ClipperLib::Clipper::IntersectEdges(::ClipperLib::TEdge* e1, ::ClipperLib::TEdge* e2, ::ClipperLib::IntPoint pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::IntersectEdges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntersectEdges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e1), ::il2cpp_utils::ExtractType(e2), ::il2cpp_utils::ExtractType(pt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e1, e2, pt);
}
// Autogenerated method: ClipperLib.Clipper.ProcessHorizontals
void ClipperLib::Clipper::ProcessHorizontals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ProcessHorizontals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHorizontals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.GetHorzDirection
void ClipperLib::Clipper::GetHorzDirection(::ClipperLib::TEdge* HorzEdge, ByRef<::ClipperLib::Direction> Dir, ByRef<int64_t> Left, ByRef<int64_t> Right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetHorzDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHorzDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(HorzEdge), ::il2cpp_utils::ExtractIndependentType<::ClipperLib::Direction&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, HorzEdge, byref(Dir), byref(Left), byref(Right));
}
// Autogenerated method: ClipperLib.Clipper.ProcessHorizontal
void ClipperLib::Clipper::ProcessHorizontal(::ClipperLib::TEdge* horzEdge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ProcessHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(horzEdge)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, horzEdge);
}
// Autogenerated method: ClipperLib.Clipper.GetNextInAEL
::ClipperLib::TEdge* ClipperLib::Clipper::GetNextInAEL(::ClipperLib::TEdge* e, ::ClipperLib::Direction Direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetNextInAEL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextInAEL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(Direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::TEdge*, false>(this, ___internal__method, e, Direction);
}
// Autogenerated method: ClipperLib.Clipper.IsMaxima
bool ClipperLib::Clipper::IsMaxima(::ClipperLib::TEdge* e, double Y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::IsMaxima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMaxima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(Y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e, Y);
}
// Autogenerated method: ClipperLib.Clipper.IsIntermediate
bool ClipperLib::Clipper::IsIntermediate(::ClipperLib::TEdge* e, double Y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::IsIntermediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIntermediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(Y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e, Y);
}
// Autogenerated method: ClipperLib.Clipper.GetMaximaPair
::ClipperLib::TEdge* ClipperLib::Clipper::GetMaximaPair(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetMaximaPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaximaPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::TEdge*, false>(this, ___internal__method, e);
}
// Autogenerated method: ClipperLib.Clipper.GetMaximaPairEx
::ClipperLib::TEdge* ClipperLib::Clipper::GetMaximaPairEx(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetMaximaPairEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaximaPairEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::TEdge*, false>(this, ___internal__method, e);
}
// Autogenerated method: ClipperLib.Clipper.ProcessIntersections
bool ClipperLib::Clipper::ProcessIntersections(int64_t topY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ProcessIntersections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessIntersections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topY)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, topY);
}
// Autogenerated method: ClipperLib.Clipper.BuildIntersectList
void ClipperLib::Clipper::BuildIntersectList(int64_t topY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::BuildIntersectList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildIntersectList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topY);
}
// Autogenerated method: ClipperLib.Clipper.EdgesAdjacent
bool ClipperLib::Clipper::EdgesAdjacent(::ClipperLib::IntersectNode* inode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::EdgesAdjacent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EdgesAdjacent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inode);
}
// Autogenerated method: ClipperLib.Clipper.FixupIntersectionOrder
bool ClipperLib::Clipper::FixupIntersectionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::FixupIntersectionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupIntersectionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.ProcessIntersectList
void ClipperLib::Clipper::ProcessIntersectList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ProcessIntersectList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessIntersectList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.Round
int64_t ClipperLib::Clipper::Round(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Clipper", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: ClipperLib.Clipper.TopX
int64_t ClipperLib::Clipper::TopX(::ClipperLib::TEdge* edge, int64_t currentY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::TopX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Clipper", "TopX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge), ::il2cpp_utils::ExtractType(currentY)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, edge, currentY);
}
// Autogenerated method: ClipperLib.Clipper.IntersectPoint
void ClipperLib::Clipper::IntersectPoint(::ClipperLib::TEdge* edge1, ::ClipperLib::TEdge* edge2, ByRef<::ClipperLib::IntPoint> ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::IntersectPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntersectPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(edge1), ::il2cpp_utils::ExtractType(edge2), ::il2cpp_utils::ExtractIndependentType<::ClipperLib::IntPoint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, edge1, edge2, byref(ip));
}
// Autogenerated method: ClipperLib.Clipper.ProcessEdgesAtTopOfScanbeam
void ClipperLib::Clipper::ProcessEdgesAtTopOfScanbeam(int64_t topY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ProcessEdgesAtTopOfScanbeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEdgesAtTopOfScanbeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topY);
}
// Autogenerated method: ClipperLib.Clipper.DoMaxima
void ClipperLib::Clipper::DoMaxima(::ClipperLib::TEdge* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::DoMaxima");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoMaxima", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: ClipperLib.Clipper.PointCount
int ClipperLib::Clipper::PointCount(::ClipperLib::OutPt* pts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::PointCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PointCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pts)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pts);
}
// Autogenerated method: ClipperLib.Clipper.BuildResult
void ClipperLib::Clipper::BuildResult(::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::ClipperLib::IntPoint>*>* polyg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::BuildResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(polyg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, polyg);
}
// Autogenerated method: ClipperLib.Clipper.FixupOutPolyline
void ClipperLib::Clipper::FixupOutPolyline(::ClipperLib::OutRec* outrec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::FixupOutPolyline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupOutPolyline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outrec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outrec);
}
// Autogenerated method: ClipperLib.Clipper.FixupOutPolygon
void ClipperLib::Clipper::FixupOutPolygon(::ClipperLib::OutRec* outRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::FixupOutPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupOutPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outRec);
}
// Autogenerated method: ClipperLib.Clipper.DupOutPt
::ClipperLib::OutPt* ClipperLib::Clipper::DupOutPt(::ClipperLib::OutPt* outPt, bool InsertAfter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::DupOutPt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DupOutPt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outPt), ::il2cpp_utils::ExtractType(InsertAfter)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutPt*, false>(this, ___internal__method, outPt, InsertAfter);
}
// Autogenerated method: ClipperLib.Clipper.GetOverlap
bool ClipperLib::Clipper::GetOverlap(int64_t a1, int64_t a2, int64_t b1, int64_t b2, ByRef<int64_t> Left, ByRef<int64_t> Right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::GetOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(a2), ::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a1, a2, b1, b2, byref(Left), byref(Right));
}
// Autogenerated method: ClipperLib.Clipper.JoinHorz
bool ClipperLib::Clipper::JoinHorz(::ClipperLib::OutPt* op1, ::ClipperLib::OutPt* op1b, ::ClipperLib::OutPt* op2, ::ClipperLib::OutPt* op2b, ::ClipperLib::IntPoint Pt, bool DiscardLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::JoinHorz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinHorz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op1), ::il2cpp_utils::ExtractType(op1b), ::il2cpp_utils::ExtractType(op2), ::il2cpp_utils::ExtractType(op2b), ::il2cpp_utils::ExtractType(Pt), ::il2cpp_utils::ExtractType(DiscardLeft)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, op1, op1b, op2, op2b, Pt, DiscardLeft);
}
// Autogenerated method: ClipperLib.Clipper.JoinPoints
bool ClipperLib::Clipper::JoinPoints(::ClipperLib::Join* j, ::ClipperLib::OutRec* outRec1, ::ClipperLib::OutRec* outRec2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::JoinPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(j), ::il2cpp_utils::ExtractType(outRec1), ::il2cpp_utils::ExtractType(outRec2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, j, outRec1, outRec2);
}
// Autogenerated method: ClipperLib.Clipper.PointInPolygon
int ClipperLib::Clipper::PointInPolygon(::ClipperLib::IntPoint pt, ::ClipperLib::OutPt* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::PointInPolygon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Clipper", "PointInPolygon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pt, op);
}
// Autogenerated method: ClipperLib.Clipper.Poly2ContainsPoly1
bool ClipperLib::Clipper::Poly2ContainsPoly1(::ClipperLib::OutPt* outPt1, ::ClipperLib::OutPt* outPt2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::Poly2ContainsPoly1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Clipper", "Poly2ContainsPoly1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outPt1), ::il2cpp_utils::ExtractType(outPt2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outPt1, outPt2);
}
// Autogenerated method: ClipperLib.Clipper.FixupFirstLefts1
void ClipperLib::Clipper::FixupFirstLefts1(::ClipperLib::OutRec* OldOutRec, ::ClipperLib::OutRec* NewOutRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::FixupFirstLefts1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupFirstLefts1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OldOutRec), ::il2cpp_utils::ExtractType(NewOutRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OldOutRec, NewOutRec);
}
// Autogenerated method: ClipperLib.Clipper.FixupFirstLefts2
void ClipperLib::Clipper::FixupFirstLefts2(::ClipperLib::OutRec* innerOutRec, ::ClipperLib::OutRec* outerOutRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::FixupFirstLefts2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupFirstLefts2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerOutRec), ::il2cpp_utils::ExtractType(outerOutRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, innerOutRec, outerOutRec);
}
// Autogenerated method: ClipperLib.Clipper.FixupFirstLefts3
void ClipperLib::Clipper::FixupFirstLefts3(::ClipperLib::OutRec* OldOutRec, ::ClipperLib::OutRec* NewOutRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::FixupFirstLefts3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupFirstLefts3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(OldOutRec), ::il2cpp_utils::ExtractType(NewOutRec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, OldOutRec, NewOutRec);
}
// Autogenerated method: ClipperLib.Clipper.ParseFirstLeft
::ClipperLib::OutRec* ClipperLib::Clipper::ParseFirstLeft(::ClipperLib::OutRec* FirstLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::ParseFirstLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("ClipperLib", "Clipper", "ParseFirstLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(FirstLeft)})));
  return ::il2cpp_utils::RunMethodRethrow<::ClipperLib::OutRec*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, FirstLeft);
}
// Autogenerated method: ClipperLib.Clipper.JoinCommonEdges
void ClipperLib::Clipper::JoinCommonEdges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::JoinCommonEdges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinCommonEdges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.UpdateOutPtIdxs
void ClipperLib::Clipper::UpdateOutPtIdxs(::ClipperLib::OutRec* outrec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::UpdateOutPtIdxs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOutPtIdxs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outrec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outrec);
}
// Autogenerated method: ClipperLib.Clipper.DoSimplePolygons
void ClipperLib::Clipper::DoSimplePolygons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::DoSimplePolygons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSimplePolygons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClipperLib.Clipper.Area
double ClipperLib::Clipper::Area(::ClipperLib::OutRec* outRec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::Area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outRec)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, outRec);
}
// Autogenerated method: ClipperLib.Clipper.Area
double ClipperLib::Clipper::Area(::ClipperLib::OutPt* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Clipper::Area");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Area", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClipperLib.ClipperException
#include "ClipperLib/ClipperException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppDummyDll.AddressAttribute
#include "Il2CppDummyDll/AddressAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String RVA
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::AddressAttribute::dyn_RVA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::AddressAttribute::dyn_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Offset
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::AddressAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::AddressAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VA
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::AddressAttribute::dyn_VA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::AddressAttribute::dyn_VA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VA"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Slot
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::AddressAttribute::dyn_Slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::AddressAttribute::dyn_Slot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Slot"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppDummyDll.FieldOffsetAttribute
#include "Il2CppDummyDll/FieldOffsetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::FieldOffsetAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::FieldOffsetAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppDummyDll.AttributeAttribute
#include "Il2CppDummyDll/AttributeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::AttributeAttribute::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::AttributeAttribute::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RVA
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::AttributeAttribute::dyn_RVA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::AttributeAttribute::dyn_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Offset
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::AttributeAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::AttributeAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppDummyDll.MetadataOffsetAttribute
#include "Il2CppDummyDll/MetadataOffsetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::MetadataOffsetAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::MetadataOffsetAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppDummyDll.TokenAttribute
#include "Il2CppDummyDll/TokenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Token
[[deprecated("Use field access instead!")]] ::StringW& Il2CppDummyDll::TokenAttribute::dyn_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppDummyDll::TokenAttribute::dyn_Token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Token"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AssemblyInfo
#include "GlobalNamespace/AssemblyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_AtlasesAndRects
#include "GlobalNamespace/MB_AtlasesAndRects.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MB_MaterialAndUVRect
#include "GlobalNamespace/MB_MaterialAndUVRect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] atlases
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::MB_AtlasesAndRects::dyn_atlases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_AtlasesAndRects::dyn_atlases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlases"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MB_MaterialAndUVRect> mat2rect_map
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MB_MaterialAndUVRect*>*& GlobalNamespace::MB_AtlasesAndRects::dyn_mat2rect_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_AtlasesAndRects::dyn_mat2rect_map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mat2rect_map"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MB_MaterialAndUVRect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] texPropertyNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::MB_AtlasesAndRects::dyn_texPropertyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_AtlasesAndRects::dyn_texPropertyNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texPropertyNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TextureArrayResultMaterial
#include "GlobalNamespace/MB_TextureArrayResultMaterial.hpp"
// Including type: MB_AtlasesAndRects
#include "GlobalNamespace/MB_AtlasesAndRects.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MB_AtlasesAndRects[] slices
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>& GlobalNamespace::MB_TextureArrayResultMaterial::dyn_slices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayResultMaterial::dyn_slices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slices"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_MultiMaterial
#include "GlobalNamespace/MB_MultiMaterial.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material combinedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB_MultiMaterial::dyn_combinedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MultiMaterial::dyn_combinedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combinedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean considerMeshUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB_MultiMaterial::dyn_considerMeshUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MultiMaterial::dyn_considerMeshUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "considerMeshUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Material> sourceMaterials
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Material*>*& GlobalNamespace::MB_MultiMaterial::dyn_sourceMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MultiMaterial::dyn_sourceMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceMaterials"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TexArraySliceRendererMatPair
#include "GlobalNamespace/MB_TexArraySliceRendererMatPair.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material sourceMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB_TexArraySliceRendererMatPair::dyn_sourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySliceRendererMatPair::dyn_sourceMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MB_TexArraySliceRendererMatPair::dyn_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySliceRendererMatPair::dyn_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TexArraySlice
#include "GlobalNamespace/MB_TexArraySlice.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MB_TexArraySliceRendererMatPair
#include "GlobalNamespace/MB_TexArraySliceRendererMatPair.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean considerMeshUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB_TexArraySlice::dyn_considerMeshUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySlice::dyn_considerMeshUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "considerMeshUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MB_TexArraySliceRendererMatPair> sourceMaterials
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MB_TexArraySliceRendererMatPair*>*& GlobalNamespace::MB_TexArraySlice::dyn_sourceMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySlice::dyn_sourceMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceMaterials"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MB_TexArraySliceRendererMatPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB_TexArraySlice.ContainsMaterial
bool GlobalNamespace::MB_TexArraySlice::ContainsMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySlice::ContainsMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mat);
}
// Autogenerated method: MB_TexArraySlice.GetDistinctMaterials
::System::Collections::Generic::HashSet_1<::UnityEngine::Material*>* GlobalNamespace::MB_TexArraySlice::GetDistinctMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySlice::GetDistinctMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistinctMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB_TexArraySlice.ContainsMaterialAndMesh
bool GlobalNamespace::MB_TexArraySlice::ContainsMaterialAndMesh(::UnityEngine::Material* mat, ::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySlice::ContainsMaterialAndMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsMaterialAndMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(mesh)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mat, mesh);
}
// Autogenerated method: MB_TexArraySlice.GetAllUsedMaterials
::System::Collections::Generic::List_1<::UnityEngine::Material*>* GlobalNamespace::MB_TexArraySlice::GetAllUsedMaterials(::System::Collections::Generic::List_1<::UnityEngine::Material*>* usedMats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySlice::GetAllUsedMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllUsedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usedMats)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Material*>*, false>(this, ___internal__method, usedMats);
}
// Autogenerated method: MB_TexArraySlice.GetAllUsedRenderers
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::MB_TexArraySlice::GetAllUsedRenderers(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* allObjsFromTextureBaker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArraySlice::GetAllUsedRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllUsedRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allObjsFromTextureBaker)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method, allObjsFromTextureBaker);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TextureArrayReference
#include "GlobalNamespace/MB_TextureArrayReference.hpp"
// Including type: UnityEngine.Texture2DArray
#include "UnityEngine/Texture2DArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String texFromatSetName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB_TextureArrayReference::dyn_texFromatSetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayReference::dyn_texFromatSetName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texFromatSetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2DArray texArray
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2DArray*& GlobalNamespace::MB_TextureArrayReference::dyn_texArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayReference::dyn_texArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texArray"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2DArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TexArrayForProperty
#include "GlobalNamespace/MB_TexArrayForProperty.hpp"
// Including type: MB_TextureArrayReference
#include "GlobalNamespace/MB_TextureArrayReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String texPropertyName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB_TexArrayForProperty::dyn_texPropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArrayForProperty::dyn_texPropertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texPropertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_TextureArrayReference[] formats
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_TextureArrayReference*>& GlobalNamespace::MB_TexArrayForProperty::dyn_formats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TexArrayForProperty::dyn_formats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formats"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_TextureArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_MultiMaterialTexArray
#include "GlobalNamespace/MB_MultiMaterialTexArray.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MB_TexArraySlice
#include "GlobalNamespace/MB_TexArraySlice.hpp"
// Including type: MB_TexArrayForProperty
#include "GlobalNamespace/MB_TexArrayForProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material combinedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB_MultiMaterialTexArray::dyn_combinedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MultiMaterialTexArray::dyn_combinedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combinedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MB_TexArraySlice> slices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MB_TexArraySlice*>*& GlobalNamespace::MB_MultiMaterialTexArray::dyn_slices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MultiMaterialTexArray::dyn_slices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MB_TexArraySlice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<MB_TexArrayForProperty> textureProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MB_TexArrayForProperty*>*& GlobalNamespace::MB_MultiMaterialTexArray::dyn_textureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MultiMaterialTexArray::dyn_textureProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MB_TexArrayForProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TextureArrayFormat
#include "GlobalNamespace/MB_TextureArrayFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String propertyName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB_TextureArrayFormat::dyn_propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayFormat::dyn_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextureFormat format
[[deprecated("Use field access instead!")]] ::UnityEngine::TextureFormat& GlobalNamespace::MB_TextureArrayFormat::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayFormat::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::UnityEngine::TextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TextureArrayFormatSet
#include "GlobalNamespace/MB_TextureArrayFormatSet.hpp"
// Including type: MB_TextureArrayFormat
#include "GlobalNamespace/MB_TextureArrayFormat.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB_TextureArrayFormatSet::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayFormatSet::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextureFormat defaultFormat
[[deprecated("Use field access instead!")]] ::UnityEngine::TextureFormat& GlobalNamespace::MB_TextureArrayFormatSet::dyn_defaultFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayFormatSet::dyn_defaultFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultFormat"))->offset;
  return *reinterpret_cast<::UnityEngine::TextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_TextureArrayFormat[] formatOverrides
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_TextureArrayFormat*>& GlobalNamespace::MB_TextureArrayFormatSet::dyn_formatOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayFormatSet::dyn_formatOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formatOverrides"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_TextureArrayFormat*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB_TextureArrayFormatSet.ValidateTextureImporterFormatsExistsForTextureFormats
bool GlobalNamespace::MB_TextureArrayFormatSet::ValidateTextureImporterFormatsExistsForTextureFormats(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayFormatSet::ValidateTextureImporterFormatsExistsForTextureFormats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateTextureImporterFormatsExistsForTextureFormats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, editorMethods, idx);
}
// Autogenerated method: MB_TextureArrayFormatSet.GetFormatForProperty
::UnityEngine::TextureFormat GlobalNamespace::MB_TextureArrayFormatSet::GetFormatForProperty(::StringW propName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayFormatSet::GetFormatForProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormatForProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextureFormat, false>(this, ___internal__method, propName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB_MaterialAndUVRect
#include "GlobalNamespace/MB_MaterialAndUVRect.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB_MaterialAndUVRect::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect atlasRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MB_MaterialAndUVRect::dyn_atlasRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_atlasRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlasRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String srcObjName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB_MaterialAndUVRect::dyn_srcObjName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_srcObjName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "srcObjName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 textureArraySliceIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB_MaterialAndUVRect::dyn_textureArraySliceIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_textureArraySliceIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureArraySliceIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean allPropsUseSameTiling
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB_MaterialAndUVRect::dyn_allPropsUseSameTiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_allPropsUseSameTiling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allPropsUseSameTiling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect allPropsUseSameTiling_sourceMaterialTiling
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MB_MaterialAndUVRect::dyn_allPropsUseSameTiling_sourceMaterialTiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_allPropsUseSameTiling_sourceMaterialTiling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allPropsUseSameTiling_sourceMaterialTiling"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect allPropsUseSameTiling_samplingEncapsulatinRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MB_MaterialAndUVRect::dyn_allPropsUseSameTiling_samplingEncapsulatinRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_allPropsUseSameTiling_samplingEncapsulatinRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allPropsUseSameTiling_samplingEncapsulatinRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect propsUseDifferntTiling_srcUVsamplingRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MB_MaterialAndUVRect::dyn_propsUseDifferntTiling_srcUVsamplingRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_propsUseDifferntTiling_srcUVsamplingRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propsUseDifferntTiling_srcUVsamplingRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> objectsThatUse
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::MB_MaterialAndUVRect::dyn_objectsThatUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_objectsThatUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectsThatUse"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB_TextureTilingTreatment tilingTreatment
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB_TextureTilingTreatment& GlobalNamespace::MB_MaterialAndUVRect::dyn_tilingTreatment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::dyn_tilingTreatment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tilingTreatment"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB_TextureTilingTreatment*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB_MaterialAndUVRect.GetEncapsulatingRect
::UnityEngine::Rect GlobalNamespace::MB_MaterialAndUVRect::GetEncapsulatingRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::GetEncapsulatingRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncapsulatingRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: MB_MaterialAndUVRect.GetMaterialTilingRect
::UnityEngine::Rect GlobalNamespace::MB_MaterialAndUVRect::GetMaterialTilingRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::GetMaterialTilingRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterialTilingRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: MB_MaterialAndUVRect.GetHashCode
int GlobalNamespace::MB_MaterialAndUVRect::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB_MaterialAndUVRect.Equals
bool GlobalNamespace::MB_MaterialAndUVRect::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_MaterialAndUVRect::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB2_TextureBakeResults
#include "GlobalNamespace/MB2_TextureBakeResults.hpp"
// Including type: MB2_TextureBakeResults/CoroutineResult
#include "GlobalNamespace/MB2_TextureBakeResults_CoroutineResult.hpp"
// Including type: MB_MaterialAndUVRect
#include "GlobalNamespace/MB_MaterialAndUVRect.hpp"
// Including type: MB2_TextureBakeResults/<FindRuntimeMaterialsFromAddresses>d__14
#include "GlobalNamespace/MB2_TextureBakeResults_-FindRuntimeMaterialsFromAddresses-d__14.hpp"
// Including type: MB_MultiMaterial
#include "GlobalNamespace/MB_MultiMaterial.hpp"
// Including type: MB_MultiMaterialTexArray
#include "GlobalNamespace/MB_MultiMaterialTexArray.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: DigitalOpus.MB.Core.MB_TextureTilingTreatment
#include "DigitalOpus/MB/Core/MB_TextureTilingTreatment.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: DigitalOpus.MB.Core.MB2_LogLevel
#include "DigitalOpus/MB/Core/MB2_LogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 version
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB2_TextureBakeResults::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB2_TextureBakeResults/ResultType resultType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults::ResultType& GlobalNamespace::MB2_TextureBakeResults::dyn_resultType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::dyn_resultType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults::ResultType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MaterialAndUVRect[] materialsAndUVRects
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MaterialAndUVRect*>& GlobalNamespace::MB2_TextureBakeResults::dyn_materialsAndUVRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::dyn_materialsAndUVRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialsAndUVRects"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MaterialAndUVRect*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MultiMaterial[] resultMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MultiMaterial*>& GlobalNamespace::MB2_TextureBakeResults::dyn_resultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::dyn_resultMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MultiMaterial*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MultiMaterialTexArray[] resultMaterialsTexArray
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MultiMaterialTexArray*>& GlobalNamespace::MB2_TextureBakeResults::dyn_resultMaterialsTexArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::dyn_resultMaterialsTexArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterialsTexArray"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MultiMaterialTexArray*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean doMultiMaterial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB2_TextureBakeResults::dyn_doMultiMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::dyn_doMultiMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doMultiMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB2_TextureBakeResults.get_VERSION
int GlobalNamespace::MB2_TextureBakeResults::get_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::get_VERSION");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB2_TextureBakeResults", "get_VERSION", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults.OnEnable
void GlobalNamespace::MB2_TextureBakeResults::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults.NumResultMaterials
int GlobalNamespace::MB2_TextureBakeResults::NumResultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::NumResultMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumResultMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults.GetCombinedMaterialForSubmesh
::UnityEngine::Material* GlobalNamespace::MB2_TextureBakeResults::GetCombinedMaterialForSubmesh(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::GetCombinedMaterialForSubmesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCombinedMaterialForSubmesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, idx);
}
// Autogenerated method: MB2_TextureBakeResults.FindRuntimeMaterialsFromAddresses
::System::Collections::IEnumerator* GlobalNamespace::MB2_TextureBakeResults::FindRuntimeMaterialsFromAddresses(::GlobalNamespace::MB2_TextureBakeResults::CoroutineResult* isComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::FindRuntimeMaterialsFromAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindRuntimeMaterialsFromAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isComplete)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, isComplete);
}
// Autogenerated method: MB2_TextureBakeResults.GetConsiderMeshUVs
bool GlobalNamespace::MB2_TextureBakeResults::GetConsiderMeshUVs(int idxInSrcMats, ::UnityEngine::Material* srcMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::GetConsiderMeshUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConsiderMeshUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idxInSrcMats), ::il2cpp_utils::ExtractType(srcMaterial)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, idxInSrcMats, srcMaterial);
}
// Autogenerated method: MB2_TextureBakeResults.GetSourceMaterialsUsedByResultMaterial
::System::Collections::Generic::List_1<::UnityEngine::Material*>* GlobalNamespace::MB2_TextureBakeResults::GetSourceMaterialsUsedByResultMaterial(int resultMatIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::GetSourceMaterialsUsedByResultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSourceMaterialsUsedByResultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultMatIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Material*>*, false>(this, ___internal__method, resultMatIdx);
}
// Autogenerated method: MB2_TextureBakeResults.CreateForMaterialsOnRenderer
::GlobalNamespace::MB2_TextureBakeResults* GlobalNamespace::MB2_TextureBakeResults::CreateForMaterialsOnRenderer(::ArrayW<::UnityEngine::GameObject*> gos, ::System::Collections::Generic::List_1<::UnityEngine::Material*>* matsOnTargetRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::CreateForMaterialsOnRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB2_TextureBakeResults", "CreateForMaterialsOnRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gos), ::il2cpp_utils::ExtractType(matsOnTargetRenderer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB2_TextureBakeResults*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gos, matsOnTargetRenderer);
}
// Autogenerated method: MB2_TextureBakeResults.DoAnyResultMatsUseConsiderMeshUVs
bool GlobalNamespace::MB2_TextureBakeResults::DoAnyResultMatsUseConsiderMeshUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::DoAnyResultMatsUseConsiderMeshUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoAnyResultMatsUseConsiderMeshUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults.ContainsMaterial
bool GlobalNamespace::MB2_TextureBakeResults::ContainsMaterial(::UnityEngine::Material* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::ContainsMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: MB2_TextureBakeResults.GetDescription
::StringW GlobalNamespace::MB2_TextureBakeResults::GetDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults.UpgradeToCurrentVersion
void GlobalNamespace::MB2_TextureBakeResults::UpgradeToCurrentVersion(::GlobalNamespace::MB2_TextureBakeResults* tbr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::UpgradeToCurrentVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToCurrentVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tbr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tbr);
}
// Autogenerated method: MB2_TextureBakeResults.IsMeshAndMaterialRectEnclosedByAtlasRect
bool GlobalNamespace::MB2_TextureBakeResults::IsMeshAndMaterialRectEnclosedByAtlasRect(::DigitalOpus::MB::Core::MB_TextureTilingTreatment tilingTreatment, ::UnityEngine::Rect uvR, ::UnityEngine::Rect sourceMaterialTiling, ::UnityEngine::Rect samplingEncapsulatinRect, ::DigitalOpus::MB::Core::MB2_LogLevel logLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::IsMeshAndMaterialRectEnclosedByAtlasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB2_TextureBakeResults", "IsMeshAndMaterialRectEnclosedByAtlasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tilingTreatment), ::il2cpp_utils::ExtractType(uvR), ::il2cpp_utils::ExtractType(sourceMaterialTiling), ::il2cpp_utils::ExtractType(samplingEncapsulatinRect), ::il2cpp_utils::ExtractType(logLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tilingTreatment, uvR, sourceMaterialTiling, samplingEncapsulatinRect, logLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB2_TextureBakeResults/CoroutineResult
#include "GlobalNamespace/MB2_TextureBakeResults_CoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isComplete
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB2_TextureBakeResults::CoroutineResult::dyn_isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::CoroutineResult::dyn_isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB2_TextureBakeResults/ResultType
#include "GlobalNamespace/MB2_TextureBakeResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MB2_TextureBakeResults/ResultType atlas
::GlobalNamespace::MB2_TextureBakeResults::ResultType GlobalNamespace::MB2_TextureBakeResults::ResultType::_get_atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::ResultType::_get_atlas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MB2_TextureBakeResults::ResultType>("", "MB2_TextureBakeResults/ResultType", "atlas"));
}
// Autogenerated static field setter
// Set static field: static public MB2_TextureBakeResults/ResultType atlas
void GlobalNamespace::MB2_TextureBakeResults::ResultType::_set_atlas(::GlobalNamespace::MB2_TextureBakeResults::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::ResultType::_set_atlas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MB2_TextureBakeResults/ResultType", "atlas", value));
}
// Autogenerated static field getter
// Get static field: static public MB2_TextureBakeResults/ResultType textureArray
::GlobalNamespace::MB2_TextureBakeResults::ResultType GlobalNamespace::MB2_TextureBakeResults::ResultType::_get_textureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::ResultType::_get_textureArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MB2_TextureBakeResults::ResultType>("", "MB2_TextureBakeResults/ResultType", "textureArray"));
}
// Autogenerated static field setter
// Set static field: static public MB2_TextureBakeResults/ResultType textureArray
void GlobalNamespace::MB2_TextureBakeResults::ResultType::_set_textureArray(::GlobalNamespace::MB2_TextureBakeResults::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::ResultType::_set_textureArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MB2_TextureBakeResults/ResultType", "textureArray", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB2_TextureBakeResults::ResultType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::ResultType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB2_TextureBakeResults/<FindRuntimeMaterialsFromAddresses>d__14
#include "GlobalNamespace/MB2_TextureBakeResults_-FindRuntimeMaterialsFromAddresses-d__14.hpp"
// Including type: MB2_TextureBakeResults/CoroutineResult
#include "GlobalNamespace/MB2_TextureBakeResults_CoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB2_TextureBakeResults <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults*& GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB2_TextureBakeResults/CoroutineResult isComplete
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults::CoroutineResult*& GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::dyn_isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isComplete"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults::CoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB2_TextureBakeResults/<FindRuntimeMaterialsFromAddresses>d__14.System.IDisposable.Dispose
void GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults/<FindRuntimeMaterialsFromAddresses>d__14.MoveNext
bool GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults/<FindRuntimeMaterialsFromAddresses>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults/<FindRuntimeMaterialsFromAddresses>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB2_TextureBakeResults/<FindRuntimeMaterialsFromAddresses>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB2_TextureBakeResults::$FindRuntimeMaterialsFromAddresses$d__14*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB2_UpdateSkinnedMeshBoundsFromBones
#include "GlobalNamespace/MB2_UpdateSkinnedMeshBoundsFromBones.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer smr
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::dyn_smr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::dyn_smr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smr"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] bones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::dyn_bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::dyn_bones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB2_UpdateSkinnedMeshBoundsFromBones.Start
void GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB2_UpdateSkinnedMeshBoundsFromBones.Update
void GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBones::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB2_UpdateSkinnedMeshBoundsFromBounds
#include "GlobalNamespace/MB2_UpdateSkinnedMeshBoundsFromBounds.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> objects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::dyn_objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::dyn_objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SkinnedMeshRenderer smr
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::dyn_smr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::dyn_smr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smr"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB2_UpdateSkinnedMeshBoundsFromBounds.Start
void GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB2_UpdateSkinnedMeshBoundsFromBounds.Update
void GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB2_UpdateSkinnedMeshBoundsFromBounds::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_BatchPrefabBaker
#include "GlobalNamespace/MB3_BatchPrefabBaker.hpp"
// Including type: MB3_BatchPrefabBaker/MB3_PrefabBakerRow
#include "GlobalNamespace/MB3_BatchPrefabBaker_MB3_PrefabBakerRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& GlobalNamespace::MB3_BatchPrefabBaker::dyn_LOG_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BatchPrefabBaker::dyn_LOG_LEVEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOG_LEVEL"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_BatchPrefabBaker/MB3_PrefabBakerRow[] prefabRows
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB3_BatchPrefabBaker::MB3_PrefabBakerRow*>& GlobalNamespace::MB3_BatchPrefabBaker::dyn_prefabRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BatchPrefabBaker::dyn_prefabRows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabRows"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB3_BatchPrefabBaker::MB3_PrefabBakerRow*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String outputPrefabFolder
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB3_BatchPrefabBaker::dyn_outputPrefabFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BatchPrefabBaker::dyn_outputPrefabFolder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputPrefabFolder"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_BatchPrefabBaker.CreateSourceAndResultPrefabInstances
void GlobalNamespace::MB3_BatchPrefabBaker::CreateSourceAndResultPrefabInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BatchPrefabBaker::CreateSourceAndResultPrefabInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSourceAndResultPrefabInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_BatchPrefabBaker/MB3_PrefabBakerRow
#include "GlobalNamespace/MB3_BatchPrefabBaker_MB3_PrefabBakerRow.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject sourcePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MB3_BatchPrefabBaker::MB3_PrefabBakerRow::dyn_sourcePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BatchPrefabBaker::MB3_PrefabBakerRow::dyn_sourcePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourcePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject resultPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MB3_BatchPrefabBaker::MB3_PrefabBakerRow::dyn_resultPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BatchPrefabBaker::MB3_PrefabBakerRow::dyn_resultPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_BoneWeightCopier
#include "GlobalNamespace/MB3_BoneWeightCopier.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject inputGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MB3_BoneWeightCopier::dyn_inputGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BoneWeightCopier::dyn_inputGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject outputPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MB3_BoneWeightCopier::dyn_outputPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BoneWeightCopier::dyn_outputPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_BoneWeightCopier::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BoneWeightCopier::dyn_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer seamMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::MB3_BoneWeightCopier::dyn_seamMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BoneWeightCopier::dyn_seamMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seamMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String outputFolder
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB3_BoneWeightCopier::dyn_outputFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_BoneWeightCopier::dyn_outputFolder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputFolder"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_DisableHiddenAnimations
#include "GlobalNamespace/MB3_DisableHiddenAnimations.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Animation> animationsToCull
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Animation*>*& GlobalNamespace::MB3_DisableHiddenAnimations::dyn_animationsToCull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_DisableHiddenAnimations::dyn_animationsToCull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationsToCull"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Animation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_DisableHiddenAnimations.Start
void GlobalNamespace::MB3_DisableHiddenAnimations::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_DisableHiddenAnimations::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_DisableHiddenAnimations.OnBecameVisible
void GlobalNamespace::MB3_DisableHiddenAnimations::OnBecameVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_DisableHiddenAnimations::OnBecameVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_DisableHiddenAnimations.OnBecameInvisible
void GlobalNamespace::MB3_DisableHiddenAnimations::OnBecameInvisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_DisableHiddenAnimations::OnBecameInvisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameInvisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBaker
#include "GlobalNamespace/MB3_MeshBaker.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshCombinerSingle
#include "DigitalOpus/MB/Core/MB3_MeshCombinerSingle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected DigitalOpus.MB.Core.MB3_MeshCombinerSingle _meshCombiner
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_MeshCombinerSingle*& GlobalNamespace::MB3_MeshBaker::dyn__meshCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::dyn__meshCombiner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshCombiner"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_MeshCombinerSingle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBaker.BuildSceneMeshObject
void GlobalNamespace::MB3_MeshBaker::BuildSceneMeshObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::BuildSceneMeshObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildSceneMeshObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBaker.ShowHide
bool GlobalNamespace::MB3_MeshBaker::ShowHide(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<::UnityEngine::GameObject*> deleteGOs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::ShowHide");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBaker*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, deleteGOs);
}
// Autogenerated method: MB3_MeshBaker.ApplyShowHide
void GlobalNamespace::MB3_MeshBaker::ApplyShowHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::ApplyShowHide");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBaker*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBaker.OnDestroy
void GlobalNamespace::MB3_MeshBaker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBaker.get_meshCombiner
::DigitalOpus::MB::Core::MB3_MeshCombiner* GlobalNamespace::MB3_MeshBaker::get_meshCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::get_meshCombiner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_MeshCombiner*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBaker.AddDeleteGameObjects
bool GlobalNamespace::MB3_MeshBaker::AddDeleteGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<::UnityEngine::GameObject*> deleteGOs, bool disableRendererInSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::AddDeleteGameObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, deleteGOs, disableRendererInSource);
}
// Autogenerated method: MB3_MeshBaker.AddDeleteGameObjectsByID
bool GlobalNamespace::MB3_MeshBaker::AddDeleteGameObjectsByID(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOinstanceIDs, bool disableRendererInSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBaker::AddDeleteGameObjectsByID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, deleteGOinstanceIDs, disableRendererInSource);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerCommon
#include "GlobalNamespace/MB3_MeshBakerCommon.hpp"
// Including type: MB3_MeshBakerCommon/<>c
#include "GlobalNamespace/MB3_MeshBakerCommon_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: MB2_TextureBakeResults
#include "GlobalNamespace/MB2_TextureBakeResults.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: MB3_TextureBaker
#include "GlobalNamespace/MB3_TextureBaker.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshCombiner/GenerateUV2Delegate
#include "DigitalOpus/MB/Core/MB3_MeshCombiner_GenerateUV2Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> objsToMesh
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::MB3_MeshBakerCommon::dyn_objsToMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::dyn_objsToMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objsToMesh"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useObjsToMeshFromTexBaker
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerCommon::dyn_useObjsToMeshFromTexBaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::dyn_useObjsToMeshFromTexBaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useObjsToMeshFromTexBaker"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean clearBuffersAfterBake
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerCommon::dyn_clearBuffersAfterBake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::dyn_clearBuffersAfterBake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearBuffersAfterBake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String bakeAssetsInPlaceFolderPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB3_MeshBakerCommon::dyn_bakeAssetsInPlaceFolderPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::dyn_bakeAssetsInPlaceFolderPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bakeAssetsInPlaceFolderPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject resultPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MB3_MeshBakerCommon::dyn_resultPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::dyn_resultPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resultPrefabLeaveInstanceInSceneAfterBake
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerCommon::dyn_resultPrefabLeaveInstanceInSceneAfterBake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::dyn_resultPrefabLeaveInstanceInSceneAfterBake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultPrefabLeaveInstanceInSceneAfterBake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform parentSceneObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MB3_MeshBakerCommon::dyn_parentSceneObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::dyn_parentSceneObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentSceneObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerCommon.get_meshCombiner
::DigitalOpus::MB::Core::MB3_MeshCombiner* GlobalNamespace::MB3_MeshBakerCommon::get_meshCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::get_meshCombiner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_MeshCombiner*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.EnableDisableSourceObjectRenderers
void GlobalNamespace::MB3_MeshBakerCommon::EnableDisableSourceObjectRenderers(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::EnableDisableSourceObjectRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableDisableSourceObjectRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, show);
}
// Autogenerated method: MB3_MeshBakerCommon.ClearMesh
void GlobalNamespace::MB3_MeshBakerCommon::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::ClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.ClearMesh
void GlobalNamespace::MB3_MeshBakerCommon::ClearMesh(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::ClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editorMethods);
}
// Autogenerated method: MB3_MeshBakerCommon.DestroyMesh
void GlobalNamespace::MB3_MeshBakerCommon::DestroyMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::DestroyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.DestroyMeshEditor
void GlobalNamespace::MB3_MeshBakerCommon::DestroyMeshEditor(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::DestroyMeshEditor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editorMethods);
}
// Autogenerated method: MB3_MeshBakerCommon.GetNumObjectsInCombined
int GlobalNamespace::MB3_MeshBakerCommon::GetNumObjectsInCombined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::GetNumObjectsInCombined");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.GetNumVerticesFor
int GlobalNamespace::MB3_MeshBakerCommon::GetNumVerticesFor(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::GetNumVerticesFor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, go);
}
// Autogenerated method: MB3_MeshBakerCommon.GetTextureBaker
::GlobalNamespace::MB3_TextureBaker* GlobalNamespace::MB3_MeshBakerCommon::GetTextureBaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::GetTextureBaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureBaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB3_TextureBaker*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.AddDeleteGameObjects
bool GlobalNamespace::MB3_MeshBakerCommon::AddDeleteGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<::UnityEngine::GameObject*> deleteGOs, bool disableRendererInSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::AddDeleteGameObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, deleteGOs, disableRendererInSource);
}
// Autogenerated method: MB3_MeshBakerCommon.AddDeleteGameObjectsByID
bool GlobalNamespace::MB3_MeshBakerCommon::AddDeleteGameObjectsByID(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOinstanceIDs, bool disableRendererInSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::AddDeleteGameObjectsByID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, deleteGOinstanceIDs, disableRendererInSource);
}
// Autogenerated method: MB3_MeshBakerCommon.Apply
void GlobalNamespace::MB3_MeshBakerCommon::Apply(::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uv2GenerationMethod);
}
// Autogenerated method: MB3_MeshBakerCommon.Apply
void GlobalNamespace::MB3_MeshBakerCommon::Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones, bool blendShapesFlag, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, triangles, vertices, normals, tangents, uvs, uv2, uv3, uv4, colors, bones, blendShapesFlag, uv2GenerationMethod);
}
// Autogenerated method: MB3_MeshBakerCommon.CombinedMeshContains
bool GlobalNamespace::MB3_MeshBakerCommon::CombinedMeshContains(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::CombinedMeshContains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, go);
}
// Autogenerated method: MB3_MeshBakerCommon.UpdateGameObjects
void GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gos);
}
// Autogenerated method: MB3_MeshBakerCommon.UpdateGameObjects
void GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool updateBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gos, updateBounds);
}
// Autogenerated method: MB3_MeshBakerCommon.UpdateGameObjects
void GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV1, bool updateUV2, bool updateColors, bool updateSkinningInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gos, recalcBounds, updateVertices, updateNormals, updateTangents, updateUV, updateUV1, updateUV2, updateColors, updateSkinningInfo);
}
// Autogenerated method: MB3_MeshBakerCommon.UpdateGameObjects
bool GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateUV5, bool updateUV6, bool updateUV7, bool updateUV8, bool updateColors, bool updateSkinningInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::UpdateGameObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, recalcBounds, updateVertices, updateNormals, updateTangents, updateUV, updateUV2, updateUV3, updateUV4, updateUV5, updateUV6, updateUV7, updateUV8, updateColors, updateSkinningInfo);
}
// Autogenerated method: MB3_MeshBakerCommon.UpdateSkinnedMeshApproximateBounds
void GlobalNamespace::MB3_MeshBakerCommon::UpdateSkinnedMeshApproximateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::UpdateSkinnedMeshApproximateBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.UpdateSkinnedMeshApproximateBoundsFromBones
void GlobalNamespace::MB3_MeshBakerCommon::UpdateSkinnedMeshApproximateBoundsFromBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::UpdateSkinnedMeshApproximateBoundsFromBones");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.UpdateSkinnedMeshApproximateBoundsFromBounds
void GlobalNamespace::MB3_MeshBakerCommon::UpdateSkinnedMeshApproximateBoundsFromBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::UpdateSkinnedMeshApproximateBoundsFromBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon._ValidateForUpdateSkinnedMeshBounds
bool GlobalNamespace::MB3_MeshBakerCommon::_ValidateForUpdateSkinnedMeshBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::_ValidateForUpdateSkinnedMeshBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.get_textureBakeResults
::GlobalNamespace::MB2_TextureBakeResults* GlobalNamespace::MB3_MeshBakerCommon::get_textureBakeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::get_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB2_TextureBakeResults*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.set_textureBakeResults
void GlobalNamespace::MB3_MeshBakerCommon::set_textureBakeResults(::GlobalNamespace::MB2_TextureBakeResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::set_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerCommon.GetObjectsToCombine
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::MB3_MeshBakerCommon::GetObjectsToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::GetObjectsToCombine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon.PurgeNullsFromObjectsToCombine
void GlobalNamespace::MB3_MeshBakerCommon::PurgeNullsFromObjectsToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::PurgeNullsFromObjectsToCombine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerCommon/<>c
#include "GlobalNamespace/MB3_MeshBakerCommon_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MB3_MeshBakerCommon/<>c <>9
::GlobalNamespace::MB3_MeshBakerCommon::$$c* GlobalNamespace::MB3_MeshBakerCommon::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MB3_MeshBakerCommon::$$c*>("", "MB3_MeshBakerCommon/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MB3_MeshBakerCommon/<>c <>9
void GlobalNamespace::MB3_MeshBakerCommon::$$c::_set_$$9(::GlobalNamespace::MB3_MeshBakerCommon::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MB3_MeshBakerCommon/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.GameObject> <>9__13_0
::System::Predicate_1<::UnityEngine::GameObject*>* GlobalNamespace::MB3_MeshBakerCommon::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::GameObject*>*>("", "MB3_MeshBakerCommon/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.GameObject> <>9__13_0
void GlobalNamespace::MB3_MeshBakerCommon::$$c::_set_$$9__13_0(::System::Predicate_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MB3_MeshBakerCommon/<>c", "<>9__13_0", value)));
}
// Autogenerated method: MB3_MeshBakerCommon/<>c..cctor
void GlobalNamespace::MB3_MeshBakerCommon::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB3_MeshBakerCommon/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MB3_MeshBakerCommon/<>c.<PurgeNullsFromObjectsToCombine>b__13_0
bool GlobalNamespace::MB3_MeshBakerCommon::$$c::$PurgeNullsFromObjectsToCombine$b__13_0(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerCommon::$$c::<PurgeNullsFromObjectsToCombine>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PurgeNullsFromObjectsToCombine>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerGrouper
#include "GlobalNamespace/MB3_MeshBakerGrouper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
#include "DigitalOpus/MB/Core/MB3_MeshBakerGrouperCore.hpp"
// Including type: DigitalOpus.MB.Core.GrouperData
#include "DigitalOpus/MB/Core/GrouperData.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshCombinerSettings
#include "DigitalOpus/MB/Core/MB3_MeshCombinerSettings.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshCombinerSettingsData
#include "DigitalOpus/MB/Core/MB3_MeshCombinerSettingsData.hpp"
// Including type: DigitalOpus.MB.Core.MB_IMeshBakerSettings
#include "DigitalOpus/MB/Core/MB_IMeshBakerSettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MB3_MeshBakerCommon
#include "GlobalNamespace/MB3_MeshBakerCommon.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Color WHITE_TRANSP
::UnityEngine::Color GlobalNamespace::MB3_MeshBakerGrouper::_get_WHITE_TRANSP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::_get_WHITE_TRANSP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "MB3_MeshBakerGrouper", "WHITE_TRANSP"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Color WHITE_TRANSP
void GlobalNamespace::MB3_MeshBakerGrouper::_set_WHITE_TRANSP(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::_set_WHITE_TRANSP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MB3_MeshBakerGrouper", "WHITE_TRANSP", value));
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore grouper
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*& GlobalNamespace::MB3_MeshBakerGrouper::dyn_grouper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_grouper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grouper"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_MeshBakerGrouper/ClusterType clusterType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType& GlobalNamespace::MB3_MeshBakerGrouper::dyn_clusterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_clusterType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clusterType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform parentSceneObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MB3_MeshBakerGrouper::dyn_parentSceneObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_parentSceneObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentSceneObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.GrouperData data
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::GrouperData*& GlobalNamespace::MB3_MeshBakerGrouper::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::GrouperData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Bounds sourceObjectBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& GlobalNamespace::MB3_MeshBakerGrouper::dyn_sourceObjectBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_sourceObjectBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceObjectBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String prefabOptions_outputFolder
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MB3_MeshBakerGrouper::dyn_prefabOptions_outputFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_prefabOptions_outputFolder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabOptions_outputFolder"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prefabOptions_autoGeneratePrefabs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerGrouper::dyn_prefabOptions_autoGeneratePrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_prefabOptions_autoGeneratePrefabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabOptions_autoGeneratePrefabs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prefabOptions_mergeOutputIntoSinglePrefab
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerGrouper::dyn_prefabOptions_mergeOutputIntoSinglePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_prefabOptions_mergeOutputIntoSinglePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabOptions_mergeOutputIntoSinglePrefab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_MeshCombinerSettings meshBakerSettingsAsset
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_MeshCombinerSettings*& GlobalNamespace::MB3_MeshBakerGrouper::dyn_meshBakerSettingsAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_meshBakerSettingsAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshBakerSettingsAsset"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_MeshCombinerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_MeshCombinerSettingsData meshBakerSettings
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*& GlobalNamespace::MB3_MeshBakerGrouper::dyn_meshBakerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::dyn_meshBakerSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshBakerSettings"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerGrouper.GetMeshBakerSettings
::DigitalOpus::MB::Core::MB_IMeshBakerSettings* GlobalNamespace::MB3_MeshBakerGrouper::GetMeshBakerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::GetMeshBakerSettings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerGrouper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerGrouper.GetMeshBakerSettingsAsSerializedProperty
void GlobalNamespace::MB3_MeshBakerGrouper::GetMeshBakerSettingsAsSerializedProperty(ByRef<::StringW> propertyName, ByRef<::UnityEngine::Object*> targetObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::GetMeshBakerSettingsAsSerializedProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerGrouper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(propertyName), byref(targetObj));
}
// Autogenerated method: MB3_MeshBakerGrouper.OnDrawGizmosSelected
void GlobalNamespace::MB3_MeshBakerGrouper::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerGrouper.CreateGrouper
::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore* GlobalNamespace::MB3_MeshBakerGrouper::CreateGrouper(::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType t, ::DigitalOpus::MB::Core::GrouperData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::CreateGrouper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGrouper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*, false>(this, ___internal__method, t, data);
}
// Autogenerated method: MB3_MeshBakerGrouper.DeleteAllChildMeshBakers
void GlobalNamespace::MB3_MeshBakerGrouper::DeleteAllChildMeshBakers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::DeleteAllChildMeshBakers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAllChildMeshBakers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerGrouper.GenerateMeshBakers
::System::Collections::Generic::List_1<::GlobalNamespace::MB3_MeshBakerCommon*>* GlobalNamespace::MB3_MeshBakerGrouper::GenerateMeshBakers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::GenerateMeshBakers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMeshBakers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::MB3_MeshBakerCommon*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerGrouper..cctor
void GlobalNamespace::MB3_MeshBakerGrouper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB3_MeshBakerGrouper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerGrouper/ClusterType
#include "GlobalNamespace/MB3_MeshBakerGrouper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MB3_MeshBakerGrouper/ClusterType none
::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType>("", "MB3_MeshBakerGrouper/ClusterType", "none"));
}
// Autogenerated static field setter
// Set static field: static public MB3_MeshBakerGrouper/ClusterType none
void GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_none(::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MB3_MeshBakerGrouper/ClusterType", "none", value));
}
// Autogenerated static field getter
// Get static field: static public MB3_MeshBakerGrouper/ClusterType grid
::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_grid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_grid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType>("", "MB3_MeshBakerGrouper/ClusterType", "grid"));
}
// Autogenerated static field setter
// Set static field: static public MB3_MeshBakerGrouper/ClusterType grid
void GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_grid(::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_grid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MB3_MeshBakerGrouper/ClusterType", "grid", value));
}
// Autogenerated static field getter
// Get static field: static public MB3_MeshBakerGrouper/ClusterType pie
::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_pie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_pie");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType>("", "MB3_MeshBakerGrouper/ClusterType", "pie"));
}
// Autogenerated static field setter
// Set static field: static public MB3_MeshBakerGrouper/ClusterType pie
void GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_pie(::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_pie");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MB3_MeshBakerGrouper/ClusterType", "pie", value));
}
// Autogenerated static field getter
// Get static field: static public MB3_MeshBakerGrouper/ClusterType agglomerative
::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_agglomerative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_get_agglomerative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType>("", "MB3_MeshBakerGrouper/ClusterType", "agglomerative"));
}
// Autogenerated static field setter
// Set static field: static public MB3_MeshBakerGrouper/ClusterType agglomerative
void GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_agglomerative(::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::_set_agglomerative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MB3_MeshBakerGrouper/ClusterType", "agglomerative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerPrefab
#include "GlobalNamespace/MB3_MeshBakerPrefab.hpp"
// Including type: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineSuccess
#include "GlobalNamespace/MB3_MeshBakerPrefab_OnCombinedTexturesCoroutineSuccess.hpp"
// Including type: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineFail
#include "GlobalNamespace/MB3_MeshBakerPrefab_OnCombinedTexturesCoroutineFail.hpp"
// Including type: MB3_MeshBakerPrefab/<CreateAtlasesCoroutine>d__103
#include "GlobalNamespace/MB3_MeshBakerPrefab_-CreateAtlasesCoroutine-d__103.hpp"
// Including type: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutineTextureArray>d__104
#include "GlobalNamespace/MB3_MeshBakerPrefab_-_CreateAtlasesCoroutineTextureArray-d__104.hpp"
// Including type: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutine>d__105
#include "GlobalNamespace/MB3_MeshBakerPrefab_-_CreateAtlasesCoroutine-d__105.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DigitalOpus.MB.Core.ShaderTextureProperty
#include "DigitalOpus/MB/Core/ShaderTextureProperty.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: MB_MultiMaterial
#include "GlobalNamespace/MB_MultiMaterial.hpp"
// Including type: MB_MultiMaterialTexArray
#include "GlobalNamespace/MB_MultiMaterialTexArray.hpp"
// Including type: MB_TextureArrayFormatSet
#include "GlobalNamespace/MB_TextureArrayFormatSet.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MB_AtlasesAndRects
#include "GlobalNamespace/MB_AtlasesAndRects.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: MB_TextureArrayResultMaterial
#include "GlobalNamespace/MB_TextureArrayResultMaterial.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& GlobalNamespace::MB3_MeshBakerPrefab::dyn_LOG_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_LOG_LEVEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOG_LEVEL"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected MB2_TextureBakeResults _textureBakeResults
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults*& GlobalNamespace::MB3_MeshBakerPrefab::dyn__textureBakeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__textureBakeResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureBakeResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _atlasPadding
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::dyn__atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__atlasPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_atlasPadding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxAtlasSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _useMaxAtlasWidthOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__useMaxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__useMaxAtlasWidthOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMaxAtlasWidthOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasWidthOverride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxAtlasWidthOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasWidthOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _useMaxAtlasHeightOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__useMaxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__useMaxAtlasHeightOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMaxAtlasHeightOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasHeightOverride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxAtlasHeightOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasHeightOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _resizePowerOfTwoTextures
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__resizePowerOfTwoTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__resizePowerOfTwoTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resizePowerOfTwoTextures"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _fixOutOfBoundsUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__fixOutOfBoundsUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixOutOfBoundsUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxTilingBakeSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxTilingBakeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__maxTilingBakeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxTilingBakeSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected DigitalOpus.MB.Core.MB2_PackingAlgorithmEnum _packingAlgorithm
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum& GlobalNamespace::MB3_MeshBakerPrefab::dyn__packingAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__packingAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packingAlgorithm"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _layerTexturePackerFastMesh
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::dyn__layerTexturePackerFastMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__layerTexturePackerFastMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layerTexturePackerFastMesh"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _meshBakerTexturePackerForcePowerOfTwo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__meshBakerTexturePackerForcePowerOfTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__meshBakerTexturePackerForcePowerOfTwo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshBakerTexturePackerForcePowerOfTwo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<DigitalOpus.MB.Core.ShaderTextureProperty> _customShaderProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>*& GlobalNamespace::MB3_MeshBakerPrefab::dyn__customShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__customShaderProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customShaderProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> _texturePropNamesToIgnore
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::MB3_MeshBakerPrefab::dyn__texturePropNamesToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__texturePropNamesToIgnore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texturePropNamesToIgnore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> _customShaderPropNames_Depricated
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::MB3_MeshBakerPrefab::dyn__customShaderPropNames_Depricated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__customShaderPropNames_Depricated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customShaderPropNames_Depricated"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected MB2_TextureBakeResults/ResultType _resultType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults::ResultType& GlobalNamespace::MB3_MeshBakerPrefab::dyn__resultType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__resultType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults::ResultType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__doMultiMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__doMultiMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterialSplitAtlasesIfTooBig
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__doMultiMaterialSplitAtlasesIfTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__doMultiMaterialSplitAtlasesIfTooBig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterialSplitAtlasesIfTooBig"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterialSplitAtlasesIfOBUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__doMultiMaterialSplitAtlasesIfOBUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__doMultiMaterialSplitAtlasesIfOBUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterialSplitAtlasesIfOBUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material _resultMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB3_MeshBakerPrefab::dyn__resultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__resultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _considerNonTextureProperties
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__considerNonTextureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__considerNonTextureProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_considerNonTextureProperties"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doSuggestTreatment
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::dyn__doSuggestTreatment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__doSuggestTreatment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doSuggestTreatment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult _coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_MeshBakerPrefab::dyn__coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn__coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MultiMaterial[] resultMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MultiMaterial*>& GlobalNamespace::MB3_MeshBakerPrefab::dyn_resultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_resultMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MultiMaterial*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MultiMaterialTexArray[] resultMaterialsTexArray
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MultiMaterialTexArray*>& GlobalNamespace::MB3_MeshBakerPrefab::dyn_resultMaterialsTexArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_resultMaterialsTexArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterialsTexArray"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MultiMaterialTexArray*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_TextureArrayFormatSet[] textureArrayOutputFormats
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_TextureArrayFormatSet*>& GlobalNamespace::MB3_MeshBakerPrefab::dyn_textureArrayOutputFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_textureArrayOutputFormats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureArrayOutputFormats"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_TextureArrayFormatSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> objsToMesh
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::MB3_MeshBakerPrefab::dyn_objsToMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_objsToMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objsToMesh"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess*& GlobalNamespace::MB3_MeshBakerPrefab::dyn_onBuiltAtlasesSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_onBuiltAtlasesSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onBuiltAtlasesSuccess"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineFail onBuiltAtlasesFail
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail*& GlobalNamespace::MB3_MeshBakerPrefab::dyn_onBuiltAtlasesFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_onBuiltAtlasesFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onBuiltAtlasesFail"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>& GlobalNamespace::MB3_MeshBakerPrefab::dyn_OnCombinedTexturesCoroutineAtlasesAndRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::dyn_OnCombinedTexturesCoroutineAtlasesAndRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnCombinedTexturesCoroutineAtlasesAndRects"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_atlasPadding
int GlobalNamespace::MB3_MeshBakerPrefab::get_atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_atlasPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_atlasPadding
void GlobalNamespace::MB3_MeshBakerPrefab::set_atlasPadding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_atlasPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_maxAtlasSize
int GlobalNamespace::MB3_MeshBakerPrefab::get_maxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_maxAtlasSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_maxAtlasSize
void GlobalNamespace::MB3_MeshBakerPrefab::set_maxAtlasSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_maxAtlasSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_useMaxAtlasWidthOverride
bool GlobalNamespace::MB3_MeshBakerPrefab::get_useMaxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_useMaxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_useMaxAtlasWidthOverride
void GlobalNamespace::MB3_MeshBakerPrefab::set_useMaxAtlasWidthOverride(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_useMaxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_maxAtlasWidthOverride
int GlobalNamespace::MB3_MeshBakerPrefab::get_maxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_maxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_maxAtlasWidthOverride
void GlobalNamespace::MB3_MeshBakerPrefab::set_maxAtlasWidthOverride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_maxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_useMaxAtlasHeightOverride
bool GlobalNamespace::MB3_MeshBakerPrefab::get_useMaxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_useMaxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_useMaxAtlasHeightOverride
void GlobalNamespace::MB3_MeshBakerPrefab::set_useMaxAtlasHeightOverride(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_useMaxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_maxAtlasHeightOverride
int GlobalNamespace::MB3_MeshBakerPrefab::get_maxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_maxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_maxAtlasHeightOverride
void GlobalNamespace::MB3_MeshBakerPrefab::set_maxAtlasHeightOverride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_maxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_resizePowerOfTwoTextures
bool GlobalNamespace::MB3_MeshBakerPrefab::get_resizePowerOfTwoTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_resizePowerOfTwoTextures");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_resizePowerOfTwoTextures
void GlobalNamespace::MB3_MeshBakerPrefab::set_resizePowerOfTwoTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_resizePowerOfTwoTextures");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_fixOutOfBoundsUVs
bool GlobalNamespace::MB3_MeshBakerPrefab::get_fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_fixOutOfBoundsUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_fixOutOfBoundsUVs
void GlobalNamespace::MB3_MeshBakerPrefab::set_fixOutOfBoundsUVs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_fixOutOfBoundsUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_maxTilingBakeSize
int GlobalNamespace::MB3_MeshBakerPrefab::get_maxTilingBakeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_maxTilingBakeSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_maxTilingBakeSize
void GlobalNamespace::MB3_MeshBakerPrefab::set_maxTilingBakeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_maxTilingBakeSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_packingAlgorithm
::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum GlobalNamespace::MB3_MeshBakerPrefab::get_packingAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_packingAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_packingAlgorithm
void GlobalNamespace::MB3_MeshBakerPrefab::set_packingAlgorithm(::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_packingAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_layerForTexturePackerFastMesh
int GlobalNamespace::MB3_MeshBakerPrefab::get_layerForTexturePackerFastMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_layerForTexturePackerFastMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_layerForTexturePackerFastMesh
void GlobalNamespace::MB3_MeshBakerPrefab::set_layerForTexturePackerFastMesh(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_layerForTexturePackerFastMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_meshBakerTexturePackerForcePowerOfTwo
bool GlobalNamespace::MB3_MeshBakerPrefab::get_meshBakerTexturePackerForcePowerOfTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_meshBakerTexturePackerForcePowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshBakerTexturePackerForcePowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_meshBakerTexturePackerForcePowerOfTwo
void GlobalNamespace::MB3_MeshBakerPrefab::set_meshBakerTexturePackerForcePowerOfTwo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_meshBakerTexturePackerForcePowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_meshBakerTexturePackerForcePowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_customShaderProperties
::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* GlobalNamespace::MB3_MeshBakerPrefab::get_customShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_customShaderProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_customShaderProperties
void GlobalNamespace::MB3_MeshBakerPrefab::set_customShaderProperties(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_customShaderProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_texturePropNamesToIgnore
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::MB3_MeshBakerPrefab::get_texturePropNamesToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_texturePropNamesToIgnore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_texturePropNamesToIgnore
void GlobalNamespace::MB3_MeshBakerPrefab::set_texturePropNamesToIgnore(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_texturePropNamesToIgnore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_customShaderPropNames
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::MB3_MeshBakerPrefab::get_customShaderPropNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_customShaderPropNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_customShaderPropNames
void GlobalNamespace::MB3_MeshBakerPrefab::set_customShaderPropNames(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_customShaderPropNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_resultType
::GlobalNamespace::MB2_TextureBakeResults::ResultType GlobalNamespace::MB3_MeshBakerPrefab::get_resultType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_resultType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB2_TextureBakeResults::ResultType, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_resultType
void GlobalNamespace::MB3_MeshBakerPrefab::set_resultType(::GlobalNamespace::MB2_TextureBakeResults::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_resultType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_doMultiMaterial
bool GlobalNamespace::MB3_MeshBakerPrefab::get_doMultiMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_doMultiMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 34));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_doMultiMaterial
void GlobalNamespace::MB3_MeshBakerPrefab::set_doMultiMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_doMultiMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_doMultiMaterialSplitAtlasesIfTooBig
bool GlobalNamespace::MB3_MeshBakerPrefab::get_doMultiMaterialSplitAtlasesIfTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_doMultiMaterialSplitAtlasesIfTooBig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 36));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_doMultiMaterialSplitAtlasesIfTooBig
void GlobalNamespace::MB3_MeshBakerPrefab::set_doMultiMaterialSplitAtlasesIfTooBig(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_doMultiMaterialSplitAtlasesIfTooBig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_doMultiMaterialSplitAtlasesIfOBUVs
bool GlobalNamespace::MB3_MeshBakerPrefab::get_doMultiMaterialSplitAtlasesIfOBUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_doMultiMaterialSplitAtlasesIfOBUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_doMultiMaterialSplitAtlasesIfOBUVs
void GlobalNamespace::MB3_MeshBakerPrefab::set_doMultiMaterialSplitAtlasesIfOBUVs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_doMultiMaterialSplitAtlasesIfOBUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_resultMaterial
::UnityEngine::Material* GlobalNamespace::MB3_MeshBakerPrefab::get_resultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_resultMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_resultMaterial
void GlobalNamespace::MB3_MeshBakerPrefab::set_resultMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_resultMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_considerNonTextureProperties
bool GlobalNamespace::MB3_MeshBakerPrefab::get_considerNonTextureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_considerNonTextureProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_considerNonTextureProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_considerNonTextureProperties
void GlobalNamespace::MB3_MeshBakerPrefab::set_considerNonTextureProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_considerNonTextureProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_considerNonTextureProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_doSuggestTreatment
bool GlobalNamespace::MB3_MeshBakerPrefab::get_doSuggestTreatment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_doSuggestTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_doSuggestTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.set_doSuggestTreatment
void GlobalNamespace::MB3_MeshBakerPrefab::set_doSuggestTreatment(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::set_doSuggestTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_doSuggestTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerPrefab.get_CoroutineResult
::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* GlobalNamespace::MB3_MeshBakerPrefab::get_CoroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::get_CoroutineResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CoroutineResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.CreateAtlases
::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> GlobalNamespace::MB3_MeshBakerPrefab::CreateAtlases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::CreateAtlases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.CreateAtlasesCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MB3_MeshBakerPrefab::CreateAtlasesCoroutine(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::CreateAtlasesCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlasesCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_MeshBakerPrefab._CreateAtlasesCoroutineTextureArray
::System::Collections::IEnumerator* GlobalNamespace::MB3_MeshBakerPrefab::_CreateAtlasesCoroutineTextureArray(::DigitalOpus::MB::Core::MB3_TextureCombiner* combiner, ::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::_CreateAtlasesCoroutineTextureArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_CreateAtlasesCoroutineTextureArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combiner), ::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, combiner, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_MeshBakerPrefab._CreateAtlasesCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MB3_MeshBakerPrefab::_CreateAtlasesCoroutine(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::_CreateAtlasesCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_CreateAtlasesCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_MeshBakerPrefab.CreateAtlases
::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> GlobalNamespace::MB3_MeshBakerPrefab::CreateAtlases(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::CreateAtlases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>, false>(this, ___internal__method, progressInfo, saveAtlasesAsAssets, editorMethods);
}
// Autogenerated method: MB3_MeshBakerPrefab.unpackMat2RectMap
void GlobalNamespace::MB3_MeshBakerPrefab::unpackMat2RectMap(::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> rawResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::unpackMat2RectMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unpackMat2RectMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawResults);
}
// Autogenerated method: MB3_MeshBakerPrefab.unpackMat2RectMap
void GlobalNamespace::MB3_MeshBakerPrefab::unpackMat2RectMap(::ArrayW<::GlobalNamespace::MB_TextureArrayResultMaterial*> rawResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::unpackMat2RectMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unpackMat2RectMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawResults);
}
// Autogenerated method: MB3_MeshBakerPrefab.CreateAndConfigureTextureCombiner
::DigitalOpus::MB::Core::MB3_TextureCombiner* GlobalNamespace::MB3_MeshBakerPrefab::CreateAndConfigureTextureCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::CreateAndConfigureTextureCombiner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndConfigureTextureCombiner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_TextureCombiner*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab.ConfigureNewMaterialToMatchOld
void GlobalNamespace::MB3_MeshBakerPrefab::ConfigureNewMaterialToMatchOld(::UnityEngine::Material* newMat, ::UnityEngine::Material* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::ConfigureNewMaterialToMatchOld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB3_MeshBakerPrefab", "ConfigureNewMaterialToMatchOld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newMat), ::il2cpp_utils::ExtractType(original)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newMat, original);
}
// Autogenerated method: MB3_MeshBakerPrefab.PrintSet
::StringW GlobalNamespace::MB3_MeshBakerPrefab::PrintSet(::System::Collections::Generic::HashSet_1<::UnityEngine::Material*>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::PrintSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated method: MB3_MeshBakerPrefab._ValidateResultMaterials
bool GlobalNamespace::MB3_MeshBakerPrefab::_ValidateResultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::_ValidateResultMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_ValidateResultMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineSuccess
#include "GlobalNamespace/MB3_MeshBakerPrefab_OnCombinedTexturesCoroutineSuccess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineSuccess.Invoke
void GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineSuccess.BeginInvoke
::System::IAsyncResult* GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineSuccess.EndInvoke
void GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineSuccess*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineFail
#include "GlobalNamespace/MB3_MeshBakerPrefab_OnCombinedTexturesCoroutineFail.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineFail.Invoke
void GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineFail.BeginInvoke
::System::IAsyncResult* GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: MB3_MeshBakerPrefab/OnCombinedTexturesCoroutineFail.EndInvoke
void GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::OnCombinedTexturesCoroutineFail*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_MeshBakerPrefab/<CreateAtlasesCoroutine>d__103
#include "GlobalNamespace/MB3_MeshBakerPrefab_-CreateAtlasesCoroutine-d__103.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_MeshBakerPrefab <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_MeshBakerPrefab*& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_MeshBakerPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveAtlasesAsAssets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_saveAtlasesAsAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_saveAtlasesAsAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveAtlasesAsAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerPrefab/<CreateAtlasesCoroutine>d__103.System.IDisposable.Dispose
void GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<CreateAtlasesCoroutine>d__103.MoveNext
bool GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<CreateAtlasesCoroutine>d__103.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<CreateAtlasesCoroutine>d__103.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<CreateAtlasesCoroutine>d__103.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$CreateAtlasesCoroutine$d__103*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutineTextureArray>d__104
#include "GlobalNamespace/MB3_MeshBakerPrefab_-_CreateAtlasesCoroutineTextureArray-d__104.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: MB_TextureArrayResultMaterial
#include "GlobalNamespace/MB_TextureArrayResultMaterial.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_MeshBakerPrefab <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_MeshBakerPrefab*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_MeshBakerPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner combiner
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_combiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_combiner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combiner"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveAtlasesAsAssets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_saveAtlasesAsAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_saveAtlasesAsAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveAtlasesAsAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MB_TextureArrayResultMaterial[] <bakedMatsAndSlices>5__2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_TextureArrayResultMaterial*>& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$bakedMatsAndSlices$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$bakedMatsAndSlices$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bakedMatsAndSlices>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_TextureArrayResultMaterial*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <resMatIdx>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$resMatIdx$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::dyn_$resMatIdx$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<resMatIdx>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutineTextureArray>d__104.System.IDisposable.Dispose
void GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutineTextureArray>d__104.MoveNext
bool GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutineTextureArray>d__104.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutineTextureArray>d__104.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutineTextureArray>d__104.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutineTextureArray$d__104*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutine>d__105
#include "GlobalNamespace/MB3_MeshBakerPrefab_-_CreateAtlasesCoroutine-d__105.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_MeshBakerPrefab <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_MeshBakerPrefab*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_MeshBakerPrefab**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveAtlasesAsAssets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_saveAtlasesAsAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_saveAtlasesAsAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveAtlasesAsAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutine>d__105.System.IDisposable.Dispose
void GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutine>d__105.MoveNext
bool GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutine>d__105.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutine>d__105.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerPrefab/<_CreateAtlasesCoroutine>d__105.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerPrefab::$_CreateAtlasesCoroutine$d__105*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerRoot
#include "GlobalNamespace/MB3_MeshBakerRoot.hpp"
// Including type: MB3_MeshBakerRoot/ZSortObjects
#include "GlobalNamespace/MB3_MeshBakerRoot_ZSortObjects.hpp"
// Including type: MB2_TextureBakeResults
#include "GlobalNamespace/MB2_TextureBakeResults.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: DigitalOpus.MB.Core.MB_ObjsToCombineTypes
#include "DigitalOpus/MB/Core/MB_ObjsToCombineTypes.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB2_ValidationLevel
#include "DigitalOpus/MB/Core/MB2_ValidationLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 sortAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MB3_MeshBakerRoot::dyn_sortAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::dyn_sortAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerRoot.get_textureBakeResults
::GlobalNamespace::MB2_TextureBakeResults* GlobalNamespace::MB3_MeshBakerRoot::get_textureBakeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::get_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB2_TextureBakeResults*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerRoot.set_textureBakeResults
void GlobalNamespace::MB3_MeshBakerRoot::set_textureBakeResults(::GlobalNamespace::MB2_TextureBakeResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::set_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_MeshBakerRoot.GetObjectsToCombine
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::MB3_MeshBakerRoot::GetObjectsToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::GetObjectsToCombine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerRoot.PurgeNullsFromObjectsToCombine
void GlobalNamespace::MB3_MeshBakerRoot::PurgeNullsFromObjectsToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::PurgeNullsFromObjectsToCombine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MeshBakerRoot.DoCombinedValidate
bool GlobalNamespace::MB3_MeshBakerRoot::DoCombinedValidate(::GlobalNamespace::MB3_MeshBakerRoot* mom, ::DigitalOpus::MB::Core::MB_ObjsToCombineTypes objToCombineType, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, ::DigitalOpus::MB::Core::MB2_ValidationLevel validationLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::DoCombinedValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB3_MeshBakerRoot", "DoCombinedValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mom), ::il2cpp_utils::ExtractType(objToCombineType), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(validationLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mom, objToCombineType, editorMethods, validationLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerRoot/ZSortObjects
#include "GlobalNamespace/MB3_MeshBakerRoot_ZSortObjects.hpp"
// Including type: MB3_MeshBakerRoot/ZSortObjects/Item
#include "GlobalNamespace/MB3_MeshBakerRoot_ZSortObjects_Item.hpp"
// Including type: MB3_MeshBakerRoot/ZSortObjects/ItemComparer
#include "GlobalNamespace/MB3_MeshBakerRoot_ZSortObjects_ItemComparer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 sortAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::dyn_sortAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::dyn_sortAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MeshBakerRoot/ZSortObjects.SortByDistanceAlongAxis
void GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::SortByDistanceAlongAxis(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* gos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::SortByDistanceAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortByDistanceAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerRoot/ZSortObjects/Item
#include "GlobalNamespace/MB3_MeshBakerRoot_ZSortObjects_Item.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject go
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::Item::dyn_go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::Item::dyn_go");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "go"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::Item::dyn_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::Item::dyn_point");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MeshBakerRoot/ZSortObjects/ItemComparer
#include "GlobalNamespace/MB3_MeshBakerRoot_ZSortObjects_ItemComparer.hpp"
// Including type: MB3_MeshBakerRoot/ZSortObjects/Item
#include "GlobalNamespace/MB3_MeshBakerRoot_ZSortObjects_Item.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MB3_MeshBakerRoot/ZSortObjects/ItemComparer.Compare
int GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::ItemComparer::Compare(::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::Item* a, ::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::Item* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::ItemComparer::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::ItemComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_MultiMeshBaker
#include "GlobalNamespace/MB3_MultiMeshBaker.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MultiMeshCombiner
#include "DigitalOpus/MB/Core/MB3_MultiMeshCombiner.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected DigitalOpus.MB.Core.MB3_MultiMeshCombiner _meshCombiner
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*& GlobalNamespace::MB3_MultiMeshBaker::dyn__meshCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MultiMeshBaker::dyn__meshCombiner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshCombiner"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_MultiMeshCombiner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_MultiMeshBaker.OnDestroy
void GlobalNamespace::MB3_MultiMeshBaker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MultiMeshBaker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MultiMeshBaker.get_meshCombiner
::DigitalOpus::MB::Core::MB3_MeshCombiner* GlobalNamespace::MB3_MultiMeshBaker::get_meshCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MultiMeshBaker::get_meshCombiner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_MeshCombiner*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_MultiMeshBaker.AddDeleteGameObjects
bool GlobalNamespace::MB3_MultiMeshBaker::AddDeleteGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<::UnityEngine::GameObject*> deleteGOs, bool disableRendererInSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MultiMeshBaker::AddDeleteGameObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, deleteGOs, disableRendererInSource);
}
// Autogenerated method: MB3_MultiMeshBaker.AddDeleteGameObjectsByID
bool GlobalNamespace::MB3_MultiMeshBaker::AddDeleteGameObjectsByID(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOs, bool disableRendererInSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MultiMeshBaker::AddDeleteGameObjectsByID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerCommon*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gos, deleteGOs, disableRendererInSource);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_TextureBaker
#include "GlobalNamespace/MB3_TextureBaker.hpp"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineSuccess.hpp"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineFail
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineFail.hpp"
// Including type: MB3_TextureBaker/<>c
#include "GlobalNamespace/MB3_TextureBaker_--c.hpp"
// Including type: MB3_TextureBaker/<CreateAtlasesCoroutine>d__108
#include "GlobalNamespace/MB3_TextureBaker_-CreateAtlasesCoroutine-d__108.hpp"
// Including type: MB3_TextureBaker/<_CreateAtlasesCoroutineAtlases>d__109
#include "GlobalNamespace/MB3_TextureBaker_-_CreateAtlasesCoroutineAtlases-d__109.hpp"
// Including type: MB3_TextureBaker/<_CreateAtlasesCoroutineTextureArray>d__110
#include "GlobalNamespace/MB3_TextureBaker_-_CreateAtlasesCoroutineTextureArray-d__110.hpp"
// Including type: MB3_TextureBaker/<_CreateAtlasesCoroutine>d__111
#include "GlobalNamespace/MB3_TextureBaker_-_CreateAtlasesCoroutine-d__111.hpp"
// Including type: MB2_TextureBakeResults
#include "GlobalNamespace/MB2_TextureBakeResults.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DigitalOpus.MB.Core.ShaderTextureProperty
#include "DigitalOpus/MB/Core/ShaderTextureProperty.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: MB_MultiMaterial
#include "GlobalNamespace/MB_MultiMaterial.hpp"
// Including type: MB_MultiMaterialTexArray
#include "GlobalNamespace/MB_MultiMaterialTexArray.hpp"
// Including type: MB_TextureArrayFormatSet
#include "GlobalNamespace/MB_TextureArrayFormatSet.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MB_AtlasesAndRects
#include "GlobalNamespace/MB_AtlasesAndRects.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: MB_TextureArrayResultMaterial
#include "GlobalNamespace/MB_TextureArrayResultMaterial.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& GlobalNamespace::MB3_TextureBaker::dyn_LOG_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_LOG_LEVEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOG_LEVEL"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected MB2_TextureBakeResults _textureBakeResults
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults*& GlobalNamespace::MB3_TextureBaker::dyn__textureBakeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__textureBakeResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureBakeResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _atlasPadding
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__atlasPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_atlasPadding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _useMaxAtlasWidthOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasWidthOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMaxAtlasWidthOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasWidthOverride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasWidthOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasWidthOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _useMaxAtlasHeightOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasHeightOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMaxAtlasHeightOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasHeightOverride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasHeightOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasHeightOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _resizePowerOfTwoTextures
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__resizePowerOfTwoTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__resizePowerOfTwoTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resizePowerOfTwoTextures"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _fixOutOfBoundsUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__fixOutOfBoundsUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixOutOfBoundsUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxTilingBakeSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxTilingBakeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxTilingBakeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxTilingBakeSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected DigitalOpus.MB.Core.MB2_PackingAlgorithmEnum _packingAlgorithm
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum& GlobalNamespace::MB3_TextureBaker::dyn__packingAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__packingAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packingAlgorithm"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _layerTexturePackerFastMesh
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__layerTexturePackerFastMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__layerTexturePackerFastMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layerTexturePackerFastMesh"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _meshBakerTexturePackerForcePowerOfTwo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__meshBakerTexturePackerForcePowerOfTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__meshBakerTexturePackerForcePowerOfTwo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshBakerTexturePackerForcePowerOfTwo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<DigitalOpus.MB.Core.ShaderTextureProperty> _customShaderProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>*& GlobalNamespace::MB3_TextureBaker::dyn__customShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__customShaderProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customShaderProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> _texturePropNamesToIgnore
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::MB3_TextureBaker::dyn__texturePropNamesToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__texturePropNamesToIgnore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texturePropNamesToIgnore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> _customShaderPropNames_Depricated
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::MB3_TextureBaker::dyn__customShaderPropNames_Depricated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__customShaderPropNames_Depricated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customShaderPropNames_Depricated"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected MB2_TextureBakeResults/ResultType _resultType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults::ResultType& GlobalNamespace::MB3_TextureBaker::dyn__resultType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__resultType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults::ResultType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterialSplitAtlasesIfTooBig
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfTooBig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterialSplitAtlasesIfTooBig"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterialSplitAtlasesIfOBUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfOBUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfOBUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterialSplitAtlasesIfOBUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material _resultMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB3_TextureBaker::dyn__resultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__resultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _considerNonTextureProperties
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__considerNonTextureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__considerNonTextureProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_considerNonTextureProperties"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doSuggestTreatment
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doSuggestTreatment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doSuggestTreatment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doSuggestTreatment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult _coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::dyn__coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MultiMaterial[] resultMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MultiMaterial*>& GlobalNamespace::MB3_TextureBaker::dyn_resultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_resultMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MultiMaterial*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MultiMaterialTexArray[] resultMaterialsTexArray
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MultiMaterialTexArray*>& GlobalNamespace::MB3_TextureBaker::dyn_resultMaterialsTexArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_resultMaterialsTexArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterialsTexArray"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MultiMaterialTexArray*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_TextureArrayFormatSet[] textureArrayOutputFormats
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_TextureArrayFormatSet*>& GlobalNamespace::MB3_TextureBaker::dyn_textureArrayOutputFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_textureArrayOutputFormats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureArrayOutputFormats"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_TextureArrayFormatSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> objsToMesh
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::MB3_TextureBaker::dyn_objsToMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_objsToMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objsToMesh"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*& GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onBuiltAtlasesSuccess"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker/OnCombinedTexturesCoroutineFail onBuiltAtlasesFail
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*& GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onBuiltAtlasesFail"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>& GlobalNamespace::MB3_TextureBaker::dyn_OnCombinedTexturesCoroutineAtlasesAndRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_OnCombinedTexturesCoroutineAtlasesAndRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnCombinedTexturesCoroutineAtlasesAndRects"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_TextureBaker.get_atlasPadding
int GlobalNamespace::MB3_TextureBaker::get_atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_atlasPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_atlasPadding
void GlobalNamespace::MB3_TextureBaker::set_atlasPadding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_atlasPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxAtlasSize
int GlobalNamespace::MB3_TextureBaker::get_maxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxAtlasSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxAtlasSize
void GlobalNamespace::MB3_TextureBaker::set_maxAtlasSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxAtlasSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_useMaxAtlasWidthOverride
bool GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_useMaxAtlasWidthOverride
void GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasWidthOverride(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxAtlasWidthOverride
int GlobalNamespace::MB3_TextureBaker::get_maxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxAtlasWidthOverride
void GlobalNamespace::MB3_TextureBaker::set_maxAtlasWidthOverride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_useMaxAtlasHeightOverride
bool GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_useMaxAtlasHeightOverride
void GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasHeightOverride(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxAtlasHeightOverride
int GlobalNamespace::MB3_TextureBaker::get_maxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxAtlasHeightOverride
void GlobalNamespace::MB3_TextureBaker::set_maxAtlasHeightOverride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_resizePowerOfTwoTextures
bool GlobalNamespace::MB3_TextureBaker::get_resizePowerOfTwoTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_resizePowerOfTwoTextures");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_resizePowerOfTwoTextures
void GlobalNamespace::MB3_TextureBaker::set_resizePowerOfTwoTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_resizePowerOfTwoTextures");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_fixOutOfBoundsUVs
bool GlobalNamespace::MB3_TextureBaker::get_fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_fixOutOfBoundsUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_fixOutOfBoundsUVs
void GlobalNamespace::MB3_TextureBaker::set_fixOutOfBoundsUVs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_fixOutOfBoundsUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxTilingBakeSize
int GlobalNamespace::MB3_TextureBaker::get_maxTilingBakeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxTilingBakeSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxTilingBakeSize
void GlobalNamespace::MB3_TextureBaker::set_maxTilingBakeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxTilingBakeSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_packingAlgorithm
::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum GlobalNamespace::MB3_TextureBaker::get_packingAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_packingAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_packingAlgorithm
void GlobalNamespace::MB3_TextureBaker::set_packingAlgorithm(::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_packingAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_layerForTexturePackerFastMesh
int GlobalNamespace::MB3_TextureBaker::get_layerForTexturePackerFastMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_layerForTexturePackerFastMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_layerForTexturePackerFastMesh
void GlobalNamespace::MB3_TextureBaker::set_layerForTexturePackerFastMesh(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_layerForTexturePackerFastMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_meshBakerTexturePackerForcePowerOfTwo
bool GlobalNamespace::MB3_TextureBaker::get_meshBakerTexturePackerForcePowerOfTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_meshBakerTexturePackerForcePowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshBakerTexturePackerForcePowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_meshBakerTexturePackerForcePowerOfTwo
void GlobalNamespace::MB3_TextureBaker::set_meshBakerTexturePackerForcePowerOfTwo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_meshBakerTexturePackerForcePowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_meshBakerTexturePackerForcePowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_customShaderProperties
::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* GlobalNamespace::MB3_TextureBaker::get_customShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_customShaderProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_customShaderProperties
void GlobalNamespace::MB3_TextureBaker::set_customShaderProperties(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_customShaderProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_texturePropNamesToIgnore
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::MB3_TextureBaker::get_texturePropNamesToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_texturePropNamesToIgnore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_texturePropNamesToIgnore
void GlobalNamespace::MB3_TextureBaker::set_texturePropNamesToIgnore(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_texturePropNamesToIgnore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_customShaderPropNames
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::MB3_TextureBaker::get_customShaderPropNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_customShaderPropNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_customShaderPropNames
void GlobalNamespace::MB3_TextureBaker::set_customShaderPropNames(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_customShaderPropNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_resultType
::GlobalNamespace::MB2_TextureBakeResults::ResultType GlobalNamespace::MB3_TextureBaker::get_resultType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_resultType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB2_TextureBakeResults::ResultType, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_resultType
void GlobalNamespace::MB3_TextureBaker::set_resultType(::GlobalNamespace::MB2_TextureBakeResults::ResultType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_resultType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doMultiMaterial
bool GlobalNamespace::MB3_TextureBaker::get_doMultiMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doMultiMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doMultiMaterial
void GlobalNamespace::MB3_TextureBaker::set_doMultiMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doMultiMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doMultiMaterialSplitAtlasesIfTooBig
bool GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfTooBig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 40));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doMultiMaterialSplitAtlasesIfTooBig
void GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfTooBig(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfTooBig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doMultiMaterialSplitAtlasesIfOBUVs
bool GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfOBUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfOBUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 42));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doMultiMaterialSplitAtlasesIfOBUVs
void GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfOBUVs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfOBUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_resultMaterial
::UnityEngine::Material* GlobalNamespace::MB3_TextureBaker::get_resultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_resultMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_resultMaterial
void GlobalNamespace::MB3_TextureBaker::set_resultMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_resultMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_considerNonTextureProperties
bool GlobalNamespace::MB3_TextureBaker::get_considerNonTextureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_considerNonTextureProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_considerNonTextureProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_considerNonTextureProperties
void GlobalNamespace::MB3_TextureBaker::set_considerNonTextureProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_considerNonTextureProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_considerNonTextureProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doSuggestTreatment
bool GlobalNamespace::MB3_TextureBaker::get_doSuggestTreatment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doSuggestTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_doSuggestTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doSuggestTreatment
void GlobalNamespace::MB3_TextureBaker::set_doSuggestTreatment(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doSuggestTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_doSuggestTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_CoroutineResult
::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* GlobalNamespace::MB3_TextureBaker::get_CoroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_CoroutineResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CoroutineResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.CreateAtlases
::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> GlobalNamespace::MB3_TextureBaker::CreateAtlases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.CreateAtlasesCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutine(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlasesCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_TextureBaker._CreateAtlasesCoroutineAtlases
::System::Collections::IEnumerator* GlobalNamespace::MB3_TextureBaker::_CreateAtlasesCoroutineAtlases(::DigitalOpus::MB::Core::MB3_TextureCombiner* combiner, ::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::_CreateAtlasesCoroutineAtlases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_CreateAtlasesCoroutineAtlases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combiner), ::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, combiner, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_TextureBaker._CreateAtlasesCoroutineTextureArray
::System::Collections::IEnumerator* GlobalNamespace::MB3_TextureBaker::_CreateAtlasesCoroutineTextureArray(::DigitalOpus::MB::Core::MB3_TextureCombiner* combiner, ::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::_CreateAtlasesCoroutineTextureArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_CreateAtlasesCoroutineTextureArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combiner), ::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, combiner, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_TextureBaker._CreateAtlasesCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MB3_TextureBaker::_CreateAtlasesCoroutine(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::_CreateAtlasesCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_CreateAtlasesCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_TextureBaker.CreateAtlases
::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> GlobalNamespace::MB3_TextureBaker::CreateAtlases(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>, false>(this, ___internal__method, progressInfo, saveAtlasesAsAssets, editorMethods);
}
// Autogenerated method: MB3_TextureBaker.unpackMat2RectMap
void GlobalNamespace::MB3_TextureBaker::unpackMat2RectMap(::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> rawResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::unpackMat2RectMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unpackMat2RectMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawResults);
}
// Autogenerated method: MB3_TextureBaker.unpackMat2RectMap
void GlobalNamespace::MB3_TextureBaker::unpackMat2RectMap(::ArrayW<::GlobalNamespace::MB_TextureArrayResultMaterial*> rawResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::unpackMat2RectMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unpackMat2RectMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawResults);
}
// Autogenerated method: MB3_TextureBaker.CreateAndConfigureTextureCombiner
::DigitalOpus::MB::Core::MB3_TextureCombiner* GlobalNamespace::MB3_TextureBaker::CreateAndConfigureTextureCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAndConfigureTextureCombiner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndConfigureTextureCombiner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_TextureCombiner*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.ConfigureNewMaterialToMatchOld
void GlobalNamespace::MB3_TextureBaker::ConfigureNewMaterialToMatchOld(::UnityEngine::Material* newMat, ::UnityEngine::Material* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::ConfigureNewMaterialToMatchOld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB3_TextureBaker", "ConfigureNewMaterialToMatchOld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newMat), ::il2cpp_utils::ExtractType(original)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newMat, original);
}
// Autogenerated method: MB3_TextureBaker.PrintSet
::StringW GlobalNamespace::MB3_TextureBaker::PrintSet(::System::Collections::Generic::HashSet_1<::UnityEngine::Material*>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::PrintSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated method: MB3_TextureBaker._ValidateResultMaterials
bool GlobalNamespace::MB3_TextureBaker::_ValidateResultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::_ValidateResultMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_ValidateResultMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.get_textureBakeResults
::GlobalNamespace::MB2_TextureBakeResults* GlobalNamespace::MB3_TextureBaker::get_textureBakeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB2_TextureBakeResults*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_textureBakeResults
void GlobalNamespace::MB3_TextureBaker::set_textureBakeResults(::GlobalNamespace::MB2_TextureBakeResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.GetObjectsToCombine
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::MB3_TextureBaker::GetObjectsToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::GetObjectsToCombine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.PurgeNullsFromObjectsToCombine
void GlobalNamespace::MB3_TextureBaker::PurgeNullsFromObjectsToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::PurgeNullsFromObjectsToCombine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineSuccess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess.Invoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess.BeginInvoke
::System::IAsyncResult* GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess.EndInvoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineFail
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineFail.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineFail.Invoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineFail.BeginInvoke
::System::IAsyncResult* GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineFail.EndInvoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_TextureBaker/<>c
#include "GlobalNamespace/MB3_TextureBaker_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MB3_TextureBaker/<>c <>9
::GlobalNamespace::MB3_TextureBaker::$$c* GlobalNamespace::MB3_TextureBaker::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MB3_TextureBaker::$$c*>("", "MB3_TextureBaker/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MB3_TextureBaker/<>c <>9
void GlobalNamespace::MB3_TextureBaker::$$c::_set_$$9(::GlobalNamespace::MB3_TextureBaker::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MB3_TextureBaker/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.GameObject> <>9__101_0
::System::Predicate_1<::UnityEngine::GameObject*>* GlobalNamespace::MB3_TextureBaker::$$c::_get_$$9__101_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$$c::_get_$$9__101_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::GameObject*>*>("", "MB3_TextureBaker/<>c", "<>9__101_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.GameObject> <>9__101_0
void GlobalNamespace::MB3_TextureBaker::$$c::_set_$$9__101_0(::System::Predicate_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$$c::_set_$$9__101_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MB3_TextureBaker/<>c", "<>9__101_0", value)));
}
// Autogenerated method: MB3_TextureBaker/<>c..cctor
void GlobalNamespace::MB3_TextureBaker::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB3_TextureBaker/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<>c.<PurgeNullsFromObjectsToCombine>b__101_0
bool GlobalNamespace::MB3_TextureBaker::$$c::$PurgeNullsFromObjectsToCombine$b__101_0(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$$c::<PurgeNullsFromObjectsToCombine>b__101_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PurgeNullsFromObjectsToCombine>b__101_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/<CreateAtlasesCoroutine>d__108
#include "GlobalNamespace/MB3_TextureBaker_-CreateAtlasesCoroutine-d__108.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveAtlasesAsAssets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_saveAtlasesAsAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_saveAtlasesAsAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveAtlasesAsAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__108.System.IDisposable.Dispose
void GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__108.MoveNext
bool GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__108.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__108.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__108.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__108*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/<_CreateAtlasesCoroutineAtlases>d__109
#include "GlobalNamespace/MB3_TextureBaker_-_CreateAtlasesCoroutineAtlases-d__109.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CombineTexturesIntoAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner combiner
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_combiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_combiner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combiner"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DigitalOpus.MB.Core.MB3_TextureCombiner/CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__3
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$coroutineResult2$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::dyn_$coroutineResult2$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<coroutineResult2>5__3"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineAtlases>d__109.System.IDisposable.Dispose
void GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineAtlases>d__109.MoveNext
bool GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineAtlases>d__109.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineAtlases>d__109.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineAtlases>d__109.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineAtlases$d__109*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/<_CreateAtlasesCoroutineTextureArray>d__110
#include "GlobalNamespace/MB3_TextureBaker_-_CreateAtlasesCoroutineTextureArray-d__110.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: MB_TextureArrayResultMaterial
#include "GlobalNamespace/MB_TextureArrayResultMaterial.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner combiner
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_combiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_combiner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combiner"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveAtlasesAsAssets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_saveAtlasesAsAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_saveAtlasesAsAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveAtlasesAsAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MB_TextureArrayResultMaterial[] <bakedMatsAndSlices>5__2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_TextureArrayResultMaterial*>& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$bakedMatsAndSlices$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$bakedMatsAndSlices$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bakedMatsAndSlices>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_TextureArrayResultMaterial*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <resMatIdx>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$resMatIdx$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::dyn_$resMatIdx$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<resMatIdx>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineTextureArray>d__110.System.IDisposable.Dispose
void GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineTextureArray>d__110.MoveNext
bool GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineTextureArray>d__110.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineTextureArray>d__110.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutineTextureArray>d__110.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutineTextureArray$d__110*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/<_CreateAtlasesCoroutine>d__111
#include "GlobalNamespace/MB3_TextureBaker_-_CreateAtlasesCoroutine-d__111.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombiner/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveAtlasesAsAssets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_saveAtlasesAsAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_saveAtlasesAsAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveAtlasesAsAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutine>d__111.System.IDisposable.Dispose
void GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutine>d__111.MoveNext
bool GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutine>d__111.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutine>d__111.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<_CreateAtlasesCoroutine>d__111.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$_CreateAtlasesCoroutine$d__111*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_PreserveLightmapData
#include "GlobalNamespace/MB_PreserveLightmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 lightmapIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB_PreserveLightmapData::dyn_lightmapIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_PreserveLightmapData::dyn_lightmapIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightmapIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 lightmapScaleOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::MB_PreserveLightmapData::dyn_lightmapScaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_PreserveLightmapData::dyn_lightmapScaleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightmapScaleOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB_PreserveLightmapData.Awake
void GlobalNamespace::MB_PreserveLightmapData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_PreserveLightmapData::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB_TextureCombinerRenderTexture
#include "GlobalNamespace/MB_TextureCombinerRenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DigitalOpus.MB.Core.MB_TexSet
#include "DigitalOpus/MB/Core/MB_TexSet.hpp"
// Including type: DigitalOpus.MB.Core.ShaderTextureProperty
#include "DigitalOpus/MB/Core/ShaderTextureProperty.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties
#include "DigitalOpus/MB/Core/MB3_TextureCombinerNonTextureProperties.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner
#include "DigitalOpus/MB/Core/MB3_TextureCombiner.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: DigitalOpus.MB.Core.MeshBakerMaterialTexture
#include "DigitalOpus/MB/Core/MeshBakerMaterialTexture.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_LOG_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_LOG_LEVEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOG_LEVEL"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material mat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_mat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_mat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _destinationTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__destinationTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__destinationTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destinationTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera myCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_myCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_myCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _padding
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_padding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isNormalMap
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__isNormalMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__isNormalMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isNormalMap"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fixOutOfBoundsUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__fixOutOfBoundsUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixOutOfBoundsUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _doRenderAtlas
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__doRenderAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__doRenderAtlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doRenderAtlas"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect[] rs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rect>& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_rs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_rs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Rect>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB_TexSet> textureSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>*& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_textureSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_textureSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indexOfTexSetToRender
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_indexOfTexSetToRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_indexOfTexSetToRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indexOfTexSetToRender"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DigitalOpus.MB.Core.ShaderTextureProperty _texPropertyName
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ShaderTextureProperty*& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__texPropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__texPropertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texPropertyName"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ShaderTextureProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties _resultMaterialTextureBlender
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties*& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__resultMaterialTextureBlender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn__resultMaterialTextureBlender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMaterialTextureBlender"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D targTex
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_targTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::dyn_targTex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targTex"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB_TextureCombinerRenderTexture.DoRenderAtlas
::UnityEngine::Texture2D* GlobalNamespace::MB_TextureCombinerRenderTexture::DoRenderAtlas(::UnityEngine::GameObject* gameObject, int width, int height, int padding, ::ArrayW<::UnityEngine::Rect> rss, ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>* textureSetss, int indexOfTexSetToRenders, ::DigitalOpus::MB::Core::ShaderTextureProperty* texPropertyname, ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties* resultMaterialTextureBlender, bool isNormalMap, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, ::DigitalOpus::MB::Core::MB3_TextureCombiner* texCombiner, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::DoRenderAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoRenderAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(rss), ::il2cpp_utils::ExtractType(textureSetss), ::il2cpp_utils::ExtractType(indexOfTexSetToRenders), ::il2cpp_utils::ExtractType(texPropertyname), ::il2cpp_utils::ExtractType(resultMaterialTextureBlender), ::il2cpp_utils::ExtractType(isNormalMap), ::il2cpp_utils::ExtractType(fixOutOfBoundsUVs), ::il2cpp_utils::ExtractType(considerNonTextureProperties), ::il2cpp_utils::ExtractType(texCombiner), ::il2cpp_utils::ExtractType(LOG_LEV)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, gameObject, width, height, padding, rss, textureSetss, indexOfTexSetToRenders, texPropertyname, resultMaterialTextureBlender, isNormalMap, fixOutOfBoundsUVs, considerNonTextureProperties, texCombiner, LOG_LEV);
}
// Autogenerated method: MB_TextureCombinerRenderTexture.OnRenderObject
void GlobalNamespace::MB_TextureCombinerRenderTexture::OnRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::OnRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB_TextureCombinerRenderTexture.ConvertRenderTextureToTexture2D
void GlobalNamespace::MB_TextureCombinerRenderTexture::ConvertRenderTextureToTexture2D(::UnityEngine::RenderTexture* _destinationTexture, bool yIsFlipped, bool doLinearColorSpace, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL, ::UnityEngine::Texture2D* tempTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::ConvertRenderTextureToTexture2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB_TextureCombinerRenderTexture", "ConvertRenderTextureToTexture2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_destinationTexture), ::il2cpp_utils::ExtractType(yIsFlipped), ::il2cpp_utils::ExtractType(doLinearColorSpace), ::il2cpp_utils::ExtractType(LOG_LEVEL), ::il2cpp_utils::ExtractType(tempTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, _destinationTexture, yIsFlipped, doLinearColorSpace, LOG_LEVEL, tempTexture);
}
// Autogenerated method: MB_TextureCombinerRenderTexture.ConvertNormalFormatFromUnity_ToStandard
::UnityEngine::Color32 GlobalNamespace::MB_TextureCombinerRenderTexture::ConvertNormalFormatFromUnity_ToStandard(::UnityEngine::Color32 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::ConvertNormalFormatFromUnity_ToStandard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertNormalFormatFromUnity_ToStandard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(this, ___internal__method, c);
}
// Autogenerated method: MB_TextureCombinerRenderTexture.YisFlipped
bool GlobalNamespace::MB_TextureCombinerRenderTexture::YisFlipped(::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::YisFlipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB_TextureCombinerRenderTexture", "YisFlipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(LOG_LEVEL)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, LOG_LEVEL);
}
// Autogenerated method: MB_TextureCombinerRenderTexture.CopyScaledAndTiledToAtlas
void GlobalNamespace::MB_TextureCombinerRenderTexture::CopyScaledAndTiledToAtlas(::DigitalOpus::MB::Core::MB_TexSet* texSet, ::DigitalOpus::MB::Core::MeshBakerMaterialTexture* source, ::UnityEngine::Vector2 obUVoffset, ::UnityEngine::Vector2 obUVscale, ::UnityEngine::Rect rec, ::DigitalOpus::MB::Core::ShaderTextureProperty* texturePropertyName, ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties* resultMatTexBlender, bool yIsFlipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::CopyScaledAndTiledToAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyScaledAndTiledToAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texSet), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(obUVoffset), ::il2cpp_utils::ExtractType(obUVscale), ::il2cpp_utils::ExtractType(rec), ::il2cpp_utils::ExtractType(texturePropertyName), ::il2cpp_utils::ExtractType(resultMatTexBlender), ::il2cpp_utils::ExtractType(yIsFlipped)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texSet, source, obUVoffset, obUVscale, rec, texturePropertyName, resultMatTexBlender, yIsFlipped);
}
// Autogenerated method: MB_TextureCombinerRenderTexture._printTexture
void GlobalNamespace::MB_TextureCombinerRenderTexture::_printTexture(::UnityEngine::Texture2D* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureCombinerRenderTexture::_printTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB_TextureCombinerRenderTexture", "_printTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_AtlasPackerRenderTexture
#include "GlobalNamespace/MB3_AtlasPackerRenderTexture.hpp"
// Including type: MB_TextureCombinerRenderTexture
#include "GlobalNamespace/MB_TextureCombinerRenderTexture.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties
#include "DigitalOpus/MB/Core/MB3_TextureCombinerNonTextureProperties.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DigitalOpus.MB.Core.MB_TexSet
#include "DigitalOpus/MB/Core/MB_TexSet.hpp"
// Including type: DigitalOpus.MB.Core.ShaderTextureProperty
#include "DigitalOpus/MB/Core/ShaderTextureProperty.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner
#include "DigitalOpus/MB/Core/MB3_TextureCombiner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MB_TextureCombinerRenderTexture fastRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB_TextureCombinerRenderTexture*& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_fastRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_fastRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB_TextureCombinerRenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _doRenderAtlas
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn__doRenderAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn__doRenderAtlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doRenderAtlas"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 padding
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isNormalMap
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_isNormalMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_isNormalMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNormalMap"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fixOutOfBoundsUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_fixOutOfBoundsUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixOutOfBoundsUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean considerNonTextureProperties
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_considerNonTextureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_considerNonTextureProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "considerNonTextureProperties"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties*& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_resultMaterialTextureBlender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_resultMaterialTextureBlender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterialTextureBlender"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect[] rects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Rect>& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_rects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_rects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Rect>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D tex1
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_tex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_tex1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tex1"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB_TexSet> textureSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>*& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_textureSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_textureSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 indexOfTexSetToRender
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_indexOfTexSetToRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_indexOfTexSetToRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indexOfTexSetToRender"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ShaderTextureProperty texPropertyName
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ShaderTextureProperty*& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_texPropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_texPropertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texPropertyName"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ShaderTextureProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_LOG_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_LOG_LEVEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOG_LEVEL"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D testTex
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_testTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_testTex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testTex"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material testMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_testMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::dyn_testMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_AtlasPackerRenderTexture.OnRenderAtlas
::UnityEngine::Texture2D* GlobalNamespace::MB3_AtlasPackerRenderTexture::OnRenderAtlas(::DigitalOpus::MB::Core::MB3_TextureCombiner* combiner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::OnRenderAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combiner)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, combiner);
}
// Autogenerated method: MB3_AtlasPackerRenderTexture.OnRenderObject
void GlobalNamespace::MB3_AtlasPackerRenderTexture::OnRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_AtlasPackerRenderTexture::OnRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DigitalOpus.MB.Core.CustomizerPutSliceIndexInUV0_z
#include "DigitalOpus/MB/Core/CustomizerPutSliceIndexInUV0_z.hpp"
// Including type: DigitalOpus.MB.Core.MB_IMeshBakerSettings
#include "DigitalOpus/MB/Core/MB_IMeshBakerSettings.hpp"
// Including type: MB2_TextureBakeResults
#include "GlobalNamespace/MB2_TextureBakeResults.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DigitalOpus.MB.Core.CustomizerPutSliceIndexInUV0_z.meshAssign_UV0
void DigitalOpus::MB::Core::CustomizerPutSliceIndexInUV0_z::meshAssign_UV0(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::CustomizerPutSliceIndexInUV0_z::meshAssign_UV0");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MB_DefaultMeshAssignCustomizer*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel, settings, textureBakeResults, mesh, uvs, sliceIndexes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DigitalOpus.MB.Core.MB3_Comment
#include "DigitalOpus/MB/Core/MB3_Comment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String comment
[[deprecated("Use field access instead!")]] ::StringW& DigitalOpus::MB::Core::MB3_Comment::dyn_comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_Comment::dyn_comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DigitalOpus.MB.Core.MBVersionConcrete
#include "DigitalOpus/MB/Core/MBVersionConcrete.hpp"
// Including type: DigitalOpus.MB.Core.MBVersionConcrete/<>c
#include "DigitalOpus/MB/Core/MBVersionConcrete_--c.hpp"
// Including type: DigitalOpus.MB.Core.MBVersionConcrete/<FindRuntimeMaterialsFromAddresses>d__30
#include "DigitalOpus/MB/Core/MBVersionConcrete_-FindRuntimeMaterialsFromAddresses-d__30.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: DigitalOpus.MB.Core.MB2_LogLevel
#include "DigitalOpus/MB/Core/MB2_LogLevel.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DigitalOpus.MB.Core.ShaderTextureProperty
#include "DigitalOpus/MB/Core/ShaderTextureProperty.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.ColorSpace
#include "UnityEngine/ColorSpace.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: DigitalOpus.MB.Core.MBVersion/PipelineType
#include "DigitalOpus/MB/Core/MBVersion_PipelineType.hpp"
// Including type: MB2_TextureBakeResults/CoroutineResult
#include "GlobalNamespace/MB2_TextureBakeResults_CoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _HALF_UV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& DigitalOpus::MB::Core::MBVersionConcrete::dyn__HALF_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::dyn__HALF_UV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HALF_UV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.version
::StringW DigitalOpus::MB::Core::MBVersionConcrete::version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetMajorVersion
int DigitalOpus::MB::Core::MBVersionConcrete::GetMajorVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetMajorVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetMinorVersion
int DigitalOpus::MB::Core::MBVersionConcrete::GetMinorVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetMinorVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetActive
bool DigitalOpus::MB::Core::MBVersionConcrete::GetActive(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, go);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.SetActive
void DigitalOpus::MB::Core::MBVersionConcrete::SetActive(::UnityEngine::GameObject* go, bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::SetActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, go, isActive);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.SetActiveRecursively
void DigitalOpus::MB::Core::MBVersionConcrete::SetActiveRecursively(::UnityEngine::GameObject* go, bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::SetActiveRecursively");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, go, isActive);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.FindSceneObjectsOfType
::ArrayW<::UnityEngine::Object*> DigitalOpus::MB::Core::MBVersionConcrete::FindSceneObjectsOfType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::FindSceneObjectsOfType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(this, ___internal__method, t);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.OptimizeMesh
void DigitalOpus::MB::Core::MBVersionConcrete::OptimizeMesh(::UnityEngine::Mesh* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::OptimizeMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.IsRunningAndMeshNotReadWriteable
bool DigitalOpus::MB::Core::MBVersionConcrete::IsRunningAndMeshNotReadWriteable(::UnityEngine::Mesh* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::IsRunningAndMeshNotReadWriteable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetMeshUV1s
::ArrayW<::UnityEngine::Vector2> DigitalOpus::MB::Core::MBVersionConcrete::GetMeshUV1s(::UnityEngine::Mesh* m, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetMeshUV1s");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshUV1s", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(LOG_LEVEL)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method, m, LOG_LEVEL);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetMeshUVChannel
::ArrayW<::UnityEngine::Vector2> DigitalOpus::MB::Core::MBVersionConcrete::GetMeshUVChannel(int channel, ::UnityEngine::Mesh* m, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetMeshUVChannel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method, channel, m, LOG_LEVEL);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.MeshClear
void DigitalOpus::MB::Core::MBVersionConcrete::MeshClear(::UnityEngine::Mesh* m, bool t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::MeshClear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m, t);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.MeshAssignUVChannel
void DigitalOpus::MB::Core::MBVersionConcrete::MeshAssignUVChannel(int channel, ::UnityEngine::Mesh* m, ::ArrayW<::UnityEngine::Vector2> uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::MeshAssignUVChannel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel, m, uvs);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetLightmapTilingOffset
::UnityEngine::Vector4 DigitalOpus::MB::Core::MBVersionConcrete::GetLightmapTilingOffset(::UnityEngine::Renderer* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetLightmapTilingOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, r);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetBones
::ArrayW<::UnityEngine::Transform*> DigitalOpus::MB::Core::MBVersionConcrete::GetBones(::UnityEngine::Renderer* r, bool isSkinnedMeshWithBones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetBones");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method, r, isSkinnedMeshWithBones);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetBlendShapeFrameCount
int DigitalOpus::MB::Core::MBVersionConcrete::GetBlendShapeFrameCount(::UnityEngine::Mesh* m, int shapeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetBlendShapeFrameCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, m, shapeIndex);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetBlendShapeFrameWeight
float DigitalOpus::MB::Core::MBVersionConcrete::GetBlendShapeFrameWeight(::UnityEngine::Mesh* m, int shapeIndex, int frameIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetBlendShapeFrameWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 19));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, m, shapeIndex, frameIndex);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetBlendShapeFrameVertices
void DigitalOpus::MB::Core::MBVersionConcrete::GetBlendShapeFrameVertices(::UnityEngine::Mesh* m, int shapeIndex, int frameIndex, ::ArrayW<::UnityEngine::Vector3> vs, ::ArrayW<::UnityEngine::Vector3> ns, ::ArrayW<::UnityEngine::Vector3> ts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetBlendShapeFrameVertices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m, shapeIndex, frameIndex, vs, ns, ts);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.ClearBlendShapes
void DigitalOpus::MB::Core::MBVersionConcrete::ClearBlendShapes(::UnityEngine::Mesh* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::ClearBlendShapes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.AddBlendShapeFrame
void DigitalOpus::MB::Core::MBVersionConcrete::AddBlendShapeFrame(::UnityEngine::Mesh* m, ::StringW nm, float wt, ::ArrayW<::UnityEngine::Vector3> vs, ::ArrayW<::UnityEngine::Vector3> ns, ::ArrayW<::UnityEngine::Vector3> ts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::AddBlendShapeFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m, nm, wt, vs, ns, ts);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.MaxMeshVertexCount
int DigitalOpus::MB::Core::MBVersionConcrete::MaxMeshVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::MaxMeshVertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.SetMeshIndexFormatAndClearMesh
void DigitalOpus::MB::Core::MBVersionConcrete::SetMeshIndexFormatAndClearMesh(::UnityEngine::Mesh* m, int numVerts, bool vertices, bool justClearTriangles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::SetMeshIndexFormatAndClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m, numVerts, vertices, justClearTriangles);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GraphicsUVStartsAtTop
bool DigitalOpus::MB::Core::MBVersionConcrete::GraphicsUVStartsAtTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GraphicsUVStartsAtTop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.IsTextureReadable
bool DigitalOpus::MB::Core::MBVersionConcrete::IsTextureReadable(::UnityEngine::Texture2D* tex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::IsTextureReadable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tex);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.CollectPropertyNames
bool DigitalOpus::MB::Core::MBVersionConcrete::CollectPropertyNames(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* texPropertyNames, ::ArrayW<::DigitalOpus::MB::Core::ShaderTextureProperty*> shaderTexPropertyNames, ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* _customShaderPropNames, ::UnityEngine::Material* resultMaterial, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::CollectPropertyNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, texPropertyNames, shaderTexPropertyNames, _customShaderPropNames, resultMaterial, LOG_LEVEL);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.DoSpecialRenderPipeline_TexturePackerFastSetup
void DigitalOpus::MB::Core::MBVersionConcrete::DoSpecialRenderPipeline_TexturePackerFastSetup(::UnityEngine::GameObject* cameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::DoSpecialRenderPipeline_TexturePackerFastSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cameraGameObject);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.GetProjectColorSpace
::UnityEngine::ColorSpace DigitalOpus::MB::Core::MBVersionConcrete::GetProjectColorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::GetProjectColorSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ColorSpace, false>(this, ___internal__method);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.DetectPipeline
::DigitalOpus::MB::Core::MBVersion::PipelineType DigitalOpus::MB::Core::MBVersionConcrete::DetectPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::DetectPipeline");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MBVersion::PipelineType, false>(this, ___internal__method);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.UnescapeURL
::StringW DigitalOpus::MB::Core::MBVersionConcrete::UnescapeURL(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::UnescapeURL");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, url);
}
// Autogenerated method: DigitalOpus.MB.Core.MBVersionConcrete.FindRuntimeMaterialsFromAddresses
::System::Collections::IEnumerator* DigitalOpus::MB::Core::MBVersionConcrete::FindRuntimeMaterialsFromAddresses(::GlobalNamespace::MB2_TextureBakeResults* texBakeResult, ::GlobalNamespace::MB2_TextureBakeResults::CoroutineResult* isComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MBVersionConcrete::FindRuntimeMaterialsFromAddresses");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::MBVersionConcrete*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, texBakeResult, isComplete);
}
