// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHatButton
#include "GlobalNamespace/GorillaHatButton.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: GorillaHatButtonParent
#include "GlobalNamespace/GorillaHatButtonParent.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaHatButtonParent buttonParent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHatButtonParent*& GlobalNamespace::GorillaHatButton::dyn_buttonParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_buttonParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonParent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHatButtonParent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaHatButton/HatButtonType buttonType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHatButton::HatButtonType& GlobalNamespace::GorillaHatButton::dyn_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_buttonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHatButton::HatButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHatButton::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material offMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaHatButton::dyn_offMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material onMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaHatButton::dyn_onMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButton::dyn_offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String onText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButton::dyn_onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaHatButton::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debounceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHatButton::dyn_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_debounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single touchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHatButton::dyn_touchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_touchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String cosmeticName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButton::dyn_cosmeticName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_cosmeticName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHatButton::dyn_testPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::dyn_testPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHatButton.Update
void GlobalNamespace::GorillaHatButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHatButton.OnTriggerEnter
void GlobalNamespace::GorillaHatButton::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaHatButton.UpdateColor
void GlobalNamespace::GorillaHatButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHatButton/HatButtonType
#include "GlobalNamespace/GorillaHatButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaHatButton/HatButtonType Hat
::GlobalNamespace::GorillaHatButton::HatButtonType GlobalNamespace::GorillaHatButton::HatButtonType::_get_Hat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_get_Hat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHatButton::HatButtonType>("", "GorillaHatButton/HatButtonType", "Hat"));
}
// Autogenerated static field setter
// Set static field: static public GorillaHatButton/HatButtonType Hat
void GlobalNamespace::GorillaHatButton::HatButtonType::_set_Hat(::GlobalNamespace::GorillaHatButton::HatButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_set_Hat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaHatButton/HatButtonType", "Hat", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaHatButton/HatButtonType Face
::GlobalNamespace::GorillaHatButton::HatButtonType GlobalNamespace::GorillaHatButton::HatButtonType::_get_Face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_get_Face");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHatButton::HatButtonType>("", "GorillaHatButton/HatButtonType", "Face"));
}
// Autogenerated static field setter
// Set static field: static public GorillaHatButton/HatButtonType Face
void GlobalNamespace::GorillaHatButton::HatButtonType::_set_Face(::GlobalNamespace::GorillaHatButton::HatButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_set_Face");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaHatButton/HatButtonType", "Face", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaHatButton/HatButtonType Badge
::GlobalNamespace::GorillaHatButton::HatButtonType GlobalNamespace::GorillaHatButton::HatButtonType::_get_Badge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_get_Badge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHatButton::HatButtonType>("", "GorillaHatButton/HatButtonType", "Badge"));
}
// Autogenerated static field setter
// Set static field: static public GorillaHatButton/HatButtonType Badge
void GlobalNamespace::GorillaHatButton::HatButtonType::_set_Badge(::GlobalNamespace::GorillaHatButton::HatButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::_set_Badge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaHatButton/HatButtonType", "Badge", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHatButton::HatButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButton::HatButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHatButtonParent
#include "GlobalNamespace/GorillaHatButtonParent.hpp"
// Including type: GorillaHatButton/HatButtonType
#include "GlobalNamespace/GorillaHatButton.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaLevelScreen
#include "GlobalNamespace/GorillaLevelScreen.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaHatButton[] hatButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaHatButton*>& GlobalNamespace::GorillaHatButtonParent::dyn_hatButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_hatButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hatButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaHatButton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] adminObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaHatButtonParent::dyn_adminObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_adminObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adminObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String hat
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_hat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_hat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String face
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_face");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "face"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String badge
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_badge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_badge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badge"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String leftHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_leftHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_leftHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String rightHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaHatButtonParent::dyn_rightHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_rightHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHatButtonParent::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLevelScreen screen
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaLevelScreen*& GlobalNamespace::GorillaHatButtonParent::dyn_screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::dyn_screen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screen"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaLevelScreen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHatButtonParent.Start
void GlobalNamespace::GorillaHatButtonParent::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHatButtonParent.LateUpdate
void GlobalNamespace::GorillaHatButtonParent::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHatButtonParent.PressButton
void GlobalNamespace::GorillaHatButtonParent::PressButton(bool isOn, ::GlobalNamespace::GorillaHatButton::HatButtonType buttonType, ::StringW buttonValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::PressButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn), ::il2cpp_utils::ExtractType(buttonType), ::il2cpp_utils::ExtractType(buttonValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn, buttonType, buttonValue);
}
// Autogenerated method: GorillaHatButtonParent.UpdateButtonState
void GlobalNamespace::GorillaHatButtonParent::UpdateButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHatButtonParent::UpdateButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHuntComputer
#include "GlobalNamespace/GorillaHuntComputer.hpp"
// Including type: GorillaHuntComputer/<>c
#include "GlobalNamespace/GorillaHuntComputer_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaHuntComputer::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image material
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image hat
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_hat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_hat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hat"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image face
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_face");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "face"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image badge
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_badge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_badge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badge"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaHuntComputer::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player myTarget
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntComputer::dyn_myTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_myTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myTarget"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player tempTarget
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntComputer::dyn_tempTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_tempTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempTarget"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaHuntComputer::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite tempSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::GorillaHuntComputer::dyn_tempSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_tempSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem tempItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GlobalNamespace::GorillaHuntComputer::dyn_tempItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::dyn_tempItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntComputer.Update
void GlobalNamespace::GorillaHuntComputer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntComputer.SetImage
void GlobalNamespace::GorillaHuntComputer::SetImage(::StringW itemDisplayName, ByRef<::UnityEngine::UI::Image*> image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::SetImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemDisplayName), ::il2cpp_utils::ExtractType(image)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemDisplayName, byref(image));
}
// Autogenerated method: GorillaHuntComputer.NormalizeName
::StringW GlobalNamespace::GorillaHuntComputer::NormalizeName(bool doIt, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::NormalizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doIt), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, doIt, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHuntComputer/<>c
#include "GlobalNamespace/GorillaHuntComputer_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaHuntComputer/<>c <>9
::GlobalNamespace::GorillaHuntComputer::$$c* GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaHuntComputer::$$c*>("", "GorillaHuntComputer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaHuntComputer/<>c <>9
void GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9(::GlobalNamespace::GorillaHuntComputer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaHuntComputer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Char> <>9__14_0
::System::Predicate_1<::Il2CppChar>* GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Il2CppChar>*>("", "GorillaHuntComputer/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Char> <>9__14_0
void GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9__14_0(::System::Predicate_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaHuntComputer/<>c", "<>9__14_0", value)));
}
// Autogenerated method: GorillaHuntComputer/<>c..cctor
void GlobalNamespace::GorillaHuntComputer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaHuntComputer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaHuntComputer/<>c.<NormalizeName>b__14_0
bool GlobalNamespace::GorillaHuntComputer::$$c::$NormalizeName$b__14_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntComputer::$$c::<NormalizeName>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NormalizeName>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaHuntManager
#include "GlobalNamespace/GorillaHuntManager.hpp"
// Including type: GorillaHuntManager/<StartHuntCountdown>d__25
#include "GlobalNamespace/GorillaHuntManager_-StartHuntCountdown-d__25.hpp"
// Including type: GorillaHuntManager/<HuntEnd>d__28
#include "GlobalNamespace/GorillaHuntManager_-HuntEnd-d__28.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single tagDistanceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHuntManager::dyn_tagDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tagDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCoolDown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHuntManager::dyn_tagCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tagCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] currentHuntedArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaHuntManager::dyn_currentHuntedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentHuntedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentHuntedArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Realtime.Player> currentHunted
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::GorillaHuntManager::dyn_currentHunted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentHunted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentHunted"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] currentTargetArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaHuntManager::dyn_currentTargetArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentTargetArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTargetArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Realtime.Player> currentTarget
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::GorillaHuntManager::dyn_currentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_currentTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTarget"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean huntStarted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHuntManager::dyn_huntStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_huntStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "huntStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean waitingToStartNextHuntGame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHuntManager::dyn_waitingToStartNextHuntGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_waitingToStartNextHuntGame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitingToStartNextHuntGame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inStartCountdown
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaHuntManager::dyn_inStartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_inStartCountdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inStartCountdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 countDownTime
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_countDownTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_countDownTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countDownTime"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double timeHuntGameEnded
[[deprecated("Use field access instead!")]] double& GlobalNamespace::GorillaHuntManager::dyn_timeHuntGameEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_timeHuntGameEnded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeHuntGameEnded"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeLastSlowTagged
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaHuntManager::dyn_timeLastSlowTagged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_timeLastSlowTagged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeLastSlowTagged"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object objRef
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaHuntManager::dyn_objRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_objRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objRef"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iterator1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_iterator1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_iterator1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterator1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempRandPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntManager::dyn_tempRandPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempRandPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempRandIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_tempRandIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempRandIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 notHuntedCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_notHuntedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_notHuntedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notHuntedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempTargetIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_tempTargetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempTargetIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempTargetIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaHuntManager::dyn_tempPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_tempPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 copyListToArrayIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_copyListToArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_copyListToArrayIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyListToArrayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 copyArrayToListIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::dyn_copyArrayToListIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::dyn_copyArrayToListIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyArrayToListIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntManager.UpdateState
void GlobalNamespace::GorillaHuntManager::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.CleanUpHunt
void GlobalNamespace::GorillaHuntManager::CleanUpHunt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CleanUpHunt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpHunt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.StartHuntCountdown
::System::Collections::IEnumerator* GlobalNamespace::GorillaHuntManager::StartHuntCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::StartHuntCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHuntCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.StartHunt
void GlobalNamespace::GorillaHuntManager::StartHunt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::StartHunt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartHunt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.RandomizePlayerList
void GlobalNamespace::GorillaHuntManager::RandomizePlayerList(ByRef<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*> listToRandomize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::RandomizePlayerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomizePlayerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listToRandomize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(listToRandomize));
}
// Autogenerated method: GorillaHuntManager.HuntEnd
::System::Collections::IEnumerator* GlobalNamespace::GorillaHuntManager::HuntEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::HuntEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HuntEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.UpdateHuntState
void GlobalNamespace::GorillaHuntManager::UpdateHuntState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::UpdateHuntState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHuntState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.EndHuntGame
void GlobalNamespace::GorillaHuntManager::EndHuntGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::EndHuntGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndHuntGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.IsTargetOf
bool GlobalNamespace::GorillaHuntManager::IsTargetOf(::Photon::Realtime::Player* huntingPlayer, ::Photon::Realtime::Player* huntedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::IsTargetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTargetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(huntingPlayer), ::il2cpp_utils::ExtractType(huntedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, huntingPlayer, huntedPlayer);
}
// Autogenerated method: GorillaHuntManager.GetTargetOf
::Photon::Realtime::Player* GlobalNamespace::GorillaHuntManager::GetTargetOf(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::GetTargetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTargetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaHuntManager.CopyHuntDataListToArray
void GlobalNamespace::GorillaHuntManager::CopyHuntDataListToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CopyHuntDataListToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyHuntDataListToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.CopyHuntDataArrayToList
void GlobalNamespace::GorillaHuntManager::CopyHuntDataArrayToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CopyHuntDataArrayToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyHuntDataArrayToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void GlobalNamespace::GorillaHuntManager::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: GorillaHuntManager.CopyRoomDataToLocalData
void GlobalNamespace::GorillaHuntManager::CopyRoomDataToLocalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::CopyRoomDataToLocalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyRoomDataToLocalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::GorillaHuntManager::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager*), 66));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaHuntManager.GameMode
::StringW GlobalNamespace::GorillaHuntManager::GameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::GameMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.Awake
void GlobalNamespace::GorillaHuntManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.LocalCanTag
bool GlobalNamespace::GorillaHuntManager::LocalCanTag(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::LocalCanTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 61));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaHuntManager.ReportTag
void GlobalNamespace::GorillaHuntManager::ReportTag(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::ReportTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, taggingPlayer);
}
// Autogenerated method: GorillaHuntManager.OnPlayerEnteredRoom
void GlobalNamespace::GorillaHuntManager::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaHuntManager.NewVRRig
void GlobalNamespace::GorillaHuntManager::NewVRRig(::Photon::Realtime::Player* player, int vrrigPhotonViewID, bool didntDoTutorial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::NewVRRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrigPhotonViewID, didntDoTutorial);
}
// Autogenerated method: GorillaHuntManager.OnPlayerLeftRoom
void GlobalNamespace::GorillaHuntManager::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaHuntManager.ReportTagRPC
void GlobalNamespace::GorillaHuntManager::ReportTagRPC(::Photon::Realtime::Player* taggedPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::ReportTagRPC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, info);
}
// Autogenerated method: GorillaHuntManager.MyMatIndex
int GlobalNamespace::GorillaHuntManager::MyMatIndex(::Photon::Realtime::Player* forPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::MyMatIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 65));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, forPlayer);
}
// Autogenerated method: GorillaHuntManager.LocalPlayerSpeed
::ArrayW<float> GlobalNamespace::GorillaHuntManager::LocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::LocalPlayerSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager.InfrequentUpdate
void GlobalNamespace::GorillaHuntManager::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::InfrequentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaHuntManager/<StartHuntCountdown>d__25
#include "GlobalNamespace/GorillaHuntManager_-StartHuntCountdown-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaHuntManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHuntManager*& GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHuntManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__25.System.IDisposable.Dispose
void GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__25.MoveNext
bool GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<StartHuntCountdown>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$StartHuntCountdown$d__25*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaHuntManager/<HuntEnd>d__28
#include "GlobalNamespace/GorillaHuntManager_-HuntEnd-d__28.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaHuntManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaHuntManager*& GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaHuntManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__28.System.IDisposable.Dispose
void GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__28.MoveNext
bool GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__28.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__28.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHuntManager/<HuntEnd>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaHuntManager::$HuntEnd$d__28*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaJoinTeamBox
#include "GlobalNamespace/GorillaJoinTeamBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean joinRedTeam
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaJoinTeamBox::dyn_joinRedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaJoinTeamBox::dyn_joinRedTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRedTeam"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaJoinTeamBox.OnBoxTriggered
void GlobalNamespace::GorillaJoinTeamBox::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaJoinTeamBox::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaLevelScreen
#include "GlobalNamespace/GorillaLevelScreen.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String startingText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaLevelScreen::dyn_startingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_startingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material goodMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaLevelScreen::dyn_goodMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_goodMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material badMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaLevelScreen::dyn_badMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_badMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaLevelScreen::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLevelScreen.Awake
void GlobalNamespace::GorillaLevelScreen::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLevelScreen.UpdateText
void GlobalNamespace::GorillaLevelScreen::UpdateText(::StringW newText, bool setToGoodMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLevelScreen::UpdateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newText), ::il2cpp_utils::ExtractType(setToGoodMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newText, setToGoodMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaLightmapData
#include "GlobalNamespace/GorillaLightmapData.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dirTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::GorillaLightmapData::dyn_dirTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_dirTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] lightTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::GorillaLightmapData::dyn_lightTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_lightTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[][] lights
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Color>>& GlobalNamespace::GorillaLightmapData::dyn_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lights"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Color>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[][] dirs
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::UnityEngine::Color>>& GlobalNamespace::GorillaLightmapData::dyn_dirs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_dirs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirs"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::UnityEngine::Color>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean done
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaLightmapData::dyn_done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::dyn_done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLightmapData.Awake
void GlobalNamespace::GorillaLightmapData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaLightmapData::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaModeSelector
#include "GlobalNamespace/GorillaModeSelector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaModeSelector.Start
void GlobalNamespace::GorillaModeSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaModeSelector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaModeSelector.Update
void GlobalNamespace::GorillaModeSelector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaModeSelector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaParent
#include "GlobalNamespace/GorillaParent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaParent instance
::GlobalNamespace::GorillaParent* GlobalNamespace::GorillaParent::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaParent*>("", "GorillaParent", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaParent instance
void GlobalNamespace::GorillaParent::_set_instance(::GlobalNamespace::GorillaParent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaParent", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject tagUI
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaParent::dyn_tagUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_tagUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagUI"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaParent::dyn_playerParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_playerParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject vrrigParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaParent::dyn_vrrigParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_vrrigParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrigParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<VRRig> vrrigs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>*& GlobalNamespace::GorillaParent::dyn_vrrigs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_vrrigs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrigs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<Photon.Realtime.Player,VRRig> vrrigDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Photon::Realtime::Player*, ::GlobalNamespace::VRRig*>*& GlobalNamespace::GorillaParent::dyn_vrrigDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_vrrigDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrrigDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Photon::Realtime::Player*, ::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 i
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaParent::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaParent.Awake
void GlobalNamespace::GorillaParent::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaParent.Update
void GlobalNamespace::GorillaParent::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaParent::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaReporter
#include "GlobalNamespace/GorillaReporter.hpp"
// Including type: GorillaReporter/<CheckReports>d__28
#include "GlobalNamespace/GorillaReporter_-CheckReports-d__28.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaReporter instance
::GlobalNamespace::GorillaReporter* GlobalNamespace::GorillaReporter::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaReporter*>("", "GorillaReporter", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaReporter instance
void GlobalNamespace::GorillaReporter::_set_instance(::GlobalNamespace::GorillaReporter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaReporter", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte ReportAssault
uint8_t GlobalNamespace::GorillaReporter::_get_ReportAssault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::_get_ReportAssault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "GorillaReporter", "ReportAssault"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte ReportAssault
void GlobalNamespace::GorillaReporter::_set_ReportAssault(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::_set_ReportAssault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaReporter", "ReportAssault", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sendReport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaReporter::dyn__sendReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn__sendReport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendReport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _suspiciousPlayerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaReporter::dyn__suspiciousPlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn__suspiciousPlayerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspiciousPlayerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _suspiciousPlayerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaReporter::dyn__suspiciousPlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn__suspiciousPlayerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspiciousPlayerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _suspiciousReason
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaReporter::dyn__suspiciousReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn__suspiciousReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspiciousReason"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> reportedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GorillaReporter::dyn_reportedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_reportedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte roomSize
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::GorillaReporter::dyn_roomSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_roomSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastCheck
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaReporter::dyn_lastCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_lastCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCheck"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single checkCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaReporter::dyn_checkCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_checkCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single userDecayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaReporter::dyn_userDecayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_userDecayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userDecayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player currentMasterClient
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaReporter::dyn_currentMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_currentMasterClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMasterClient"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testAssault
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaReporter::dyn_testAssault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_testAssault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testAssault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lowestActorNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaReporter::dyn_lowestActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::dyn_lowestActorNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowestActorNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaReporter.get_sendReport
bool GlobalNamespace::GorillaReporter::get_sendReport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::get_sendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter.set_sendReport
void GlobalNamespace::GorillaReporter::set_sendReport(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::set_sendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaReporter.get_suspiciousPlayerId
::StringW GlobalNamespace::GorillaReporter::get_suspiciousPlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::get_suspiciousPlayerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_suspiciousPlayerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter.set_suspiciousPlayerId
void GlobalNamespace::GorillaReporter::set_suspiciousPlayerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::set_suspiciousPlayerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_suspiciousPlayerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaReporter.get_suspiciousPlayerName
::StringW GlobalNamespace::GorillaReporter::get_suspiciousPlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::get_suspiciousPlayerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_suspiciousPlayerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter.set_suspiciousPlayerName
void GlobalNamespace::GorillaReporter::set_suspiciousPlayerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::set_suspiciousPlayerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_suspiciousPlayerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaReporter.get_suspiciousReason
::StringW GlobalNamespace::GorillaReporter::get_suspiciousReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::get_suspiciousReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_suspiciousReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter.set_suspiciousReason
void GlobalNamespace::GorillaReporter::set_suspiciousReason(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::set_suspiciousReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_suspiciousReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaReporter.Start
void GlobalNamespace::GorillaReporter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter.SendReport
void GlobalNamespace::GorillaReporter::SendReport(::StringW susReason, ::StringW susId, ::StringW susNick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::SendReport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(susReason), ::il2cpp_utils::ExtractType(susId), ::il2cpp_utils::ExtractType(susNick)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, susReason, susId, susNick);
}
// Autogenerated method: GorillaReporter.CheckReports
::System::Collections::IEnumerator* GlobalNamespace::GorillaReporter::CheckReports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::CheckReports");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReports", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter.LowestActorNumber
int GlobalNamespace::GorillaReporter::LowestActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::LowestActorNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowestActorNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaReporter/<CheckReports>d__28
#include "GlobalNamespace/GorillaReporter_-CheckReports-d__28.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaReporter::$CheckReports$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaReporter::$CheckReports$d__28::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaReporter <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaReporter*& GlobalNamespace::GorillaReporter::$CheckReports$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaReporter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaReporter/<CheckReports>d__28.System.IDisposable.Dispose
void GlobalNamespace::GorillaReporter::$CheckReports$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaReporter::$CheckReports$d__28*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter/<CheckReports>d__28.MoveNext
bool GlobalNamespace::GorillaReporter::$CheckReports$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaReporter::$CheckReports$d__28*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter/<CheckReports>d__28.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaReporter::$CheckReports$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaReporter::$CheckReports$d__28*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter/<CheckReports>d__28.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaReporter::$CheckReports$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaReporter::$CheckReports$d__28*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaReporter/<CheckReports>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaReporter::$CheckReports$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaReporter::$CheckReports$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaReporter::$CheckReports$d__28*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaScoreBoard
#include "GlobalNamespace/GorillaScoreBoard.hpp"
// Including type: GorillaScoreBoard/<InfrequentUpdateCoroutine>d__16
#include "GlobalNamespace/GorillaScoreBoard_-InfrequentUpdateCoroutine-d__16.hpp"
// Including type: GorillaScoreBoard/<>c
#include "GlobalNamespace/GorillaScoreBoard_--c.hpp"
// Including type: GorillaScoreBoard/<RefreshData>d__21
#include "GlobalNamespace/GorillaScoreBoard_-RefreshData-d__21.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaGameManager
#include "GlobalNamespace/GorillaGameManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject scoreBoardLinePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreBoard::dyn_scoreBoardLinePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_scoreBoardLinePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreBoardLinePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 startingYValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::dyn_startingYValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_startingYValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingYValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lineHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::dyn_lineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_lineHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaGameManager gameManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaGameManager*& GlobalNamespace::GorillaScoreBoard::dyn_gameManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_gameManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaGameManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String gameType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreBoard::dyn_gameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_gameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeMMR
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreBoard::dyn_includeMMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_includeMMR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeMMR"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreBoard::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaPlayerScoreboardLine> lines
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>*& GlobalNamespace::GorillaScoreBoard::dyn_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text boardText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaScoreBoard::dyn_boardText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_boardText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boardText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text buttonText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaScoreBoard::dyn_buttonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_buttonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player playerForVRRig
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaScoreBoard::dyn_playerForVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_playerForVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerForVRRig"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 i
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig currentRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaScoreBoard::dyn_currentRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_currentRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player outPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaScoreBoard::dyn_outPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::dyn_outPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreBoard.Awake
void GlobalNamespace::GorillaScoreBoard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.GetBeginningString
::StringW GlobalNamespace::GorillaScoreBoard::GetBeginningString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::GetBeginningString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeginningString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.InfrequentUpdateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::GorillaScoreBoard::InfrequentUpdateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::InfrequentUpdateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InfrequentUpdateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.InfrequentUpdate
void GlobalNamespace::GorillaScoreBoard::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::InfrequentUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InfrequentUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.RedrawPlayerLines
void GlobalNamespace::GorillaScoreBoard::RedrawPlayerLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::RedrawPlayerLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RedrawPlayerLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard.Photon.Realtime.IOnEventCallback.OnEvent
void GlobalNamespace::GorillaScoreBoard::Photon_Realtime_IOnEventCallback_OnEvent(::ExitGames::Client::Photon::EventData* photonEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::Photon.Realtime.IOnEventCallback.OnEvent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, photonEvent);
}
// Autogenerated method: GorillaScoreBoard.RefreshData
::System::Collections::IEnumerator* GlobalNamespace::GorillaScoreBoard::RefreshData(int actorNumber1, int actorNumber2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::RefreshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actorNumber1), ::il2cpp_utils::ExtractType(actorNumber2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, actorNumber1, actorNumber2);
}
// Autogenerated method: GorillaScoreBoard.GetActorIDFromUserID
int GlobalNamespace::GorillaScoreBoard::GetActorIDFromUserID(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::GetActorIDFromUserID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActorIDFromUserID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, userID);
}
// Autogenerated method: GorillaScoreBoard.NormalizeName
::StringW GlobalNamespace::GorillaScoreBoard::NormalizeName(bool doIt, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::NormalizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doIt), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, doIt, text);
}
// Autogenerated method: GorillaScoreBoard.OnPlayerLeftRoom
void GlobalNamespace::GorillaScoreBoard::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaScoreBoard/<InfrequentUpdateCoroutine>d__16
#include "GlobalNamespace/GorillaScoreBoard_-InfrequentUpdateCoroutine-d__16.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaScoreBoard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaScoreBoard*& GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaScoreBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreBoard/<InfrequentUpdateCoroutine>d__16.System.IDisposable.Dispose
void GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<InfrequentUpdateCoroutine>d__16.MoveNext
bool GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<InfrequentUpdateCoroutine>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<InfrequentUpdateCoroutine>d__16.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<InfrequentUpdateCoroutine>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$InfrequentUpdateCoroutine$d__16*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaScoreBoard/<>c
#include "GlobalNamespace/GorillaScoreBoard_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaScoreBoard/<>c <>9
::GlobalNamespace::GorillaScoreBoard::$$c* GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaScoreBoard::$$c*>("", "GorillaScoreBoard/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaScoreBoard/<>c <>9
void GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9(::GlobalNamespace::GorillaScoreBoard::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaScoreBoard/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<GorillaPlayerScoreboardLine> <>9__19_0
::System::Comparison_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>* GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>*>("", "GorillaScoreBoard/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<GorillaPlayerScoreboardLine> <>9__19_0
void GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9__19_0(::System::Comparison_1<::GlobalNamespace::GorillaPlayerScoreboardLine*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaScoreBoard/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Char> <>9__23_0
::System::Predicate_1<::Il2CppChar>* GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9__23_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_get_$$9__23_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Il2CppChar>*>("", "GorillaScoreBoard/<>c", "<>9__23_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Char> <>9__23_0
void GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9__23_0(::System::Predicate_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::_set_$$9__23_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaScoreBoard/<>c", "<>9__23_0", value)));
}
// Autogenerated method: GorillaScoreBoard/<>c..cctor
void GlobalNamespace::GorillaScoreBoard::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaScoreBoard/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<>c.<RedrawPlayerLines>b__19_0
int GlobalNamespace::GorillaScoreBoard::$$c::$RedrawPlayerLines$b__19_0(::GlobalNamespace::GorillaPlayerScoreboardLine* line1, ::GlobalNamespace::GorillaPlayerScoreboardLine* line2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::<RedrawPlayerLines>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RedrawPlayerLines>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line1), ::il2cpp_utils::ExtractType(line2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, line1, line2);
}
// Autogenerated method: GorillaScoreBoard/<>c.<NormalizeName>b__23_0
bool GlobalNamespace::GorillaScoreBoard::$$c::$NormalizeName$b__23_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$$c::<NormalizeName>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NormalizeName>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaScoreBoard/<RefreshData>d__21
#include "GlobalNamespace/GorillaScoreBoard_-RefreshData-d__21.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaScoreBoard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaScoreBoard*& GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaScoreBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 actorNumber1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_actorNumber1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_actorNumber1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actorNumber1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 actorNumber2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_actorNumber2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::dyn_actorNumber2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actorNumber2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreBoard/<RefreshData>d__21.System.IDisposable.Dispose
void GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<RefreshData>d__21.MoveNext
bool GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<RefreshData>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<RefreshData>d__21.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreBoard/<RefreshData>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreBoard::$RefreshData$d__21*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagManager
#include "GlobalNamespace/GorillaTagManager.hpp"
// Including type: GorillaTagManager/<InfectionEnd>d__26
#include "GlobalNamespace/GorillaTagManager_-InfectionEnd-d__26.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte ReportTagEvent
uint8_t GlobalNamespace::GorillaTagManager::_get_ReportTagEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_get_ReportTagEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "GorillaTagManager", "ReportTagEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ReportTagEvent
void GlobalNamespace::GorillaTagManager::_set_ReportTagEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_set_ReportTagEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagManager", "ReportTagEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte ReportInfectionTagEvent
uint8_t GlobalNamespace::GorillaTagManager::_get_ReportInfectionTagEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_get_ReportInfectionTagEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "GorillaTagManager", "ReportInfectionTagEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte ReportInfectionTagEvent
void GlobalNamespace::GorillaTagManager::_set_ReportInfectionTagEvent(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::_set_ReportInfectionTagEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagManager", "ReportInfectionTagEvent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagDistanceThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagManager::dyn_tagDistanceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_tagDistanceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagDistanceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCoolDown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagManager::dyn_tagCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_tagCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 infectedModeThreshold
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::dyn_infectedModeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_infectedModeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infectedModeThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Photon.Realtime.Player> currentInfected
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::GorillaTagManager::dyn_currentInfected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_currentInfected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentInfected"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] currentInfectedArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::GorillaTagManager::dyn_currentInfectedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_currentInfectedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentInfectedArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player currentIt
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagManager::dyn_currentIt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_currentIt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIt"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player lastInfectedPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagManager::dyn_lastInfectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_lastInfectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastInfectedPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double lastTag
[[deprecated("Use field access instead!")]] double& GlobalNamespace::GorillaTagManager::dyn_lastTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_lastTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTag"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double timeInfectedGameEnded
[[deprecated("Use field access instead!")]] double& GlobalNamespace::GorillaTagManager::dyn_timeInfectedGameEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_timeInfectedGameEnded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeInfectedGameEnded"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean waitingToStartNextInfectionGame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_waitingToStartNextInfectionGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_waitingToStartNextInfectionGame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitingToStartNextInfectionGame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCurrentlyTag
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_isCurrentlyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_isCurrentlyTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCurrentlyTag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCasual
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_isCasual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_isCasual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCasual"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempItInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::dyn_tempItInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_tempItInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object objRef
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaTagManager::dyn_objRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_objRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objRef"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iterator1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::dyn_iterator1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_iterator1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterator1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagManager::dyn_tempPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_tempPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allInfected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_allInfected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_allInfected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allInfected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Realtime.Player> returnPlayerList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*& GlobalNamespace::GorillaTagManager::dyn_returnPlayerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_returnPlayerList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnPlayerList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Realtime::Player*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean persistedIsTag
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_persistedIsTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_persistedIsTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persistedIsTag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean persistedIsTagResult
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagManager::dyn_persistedIsTagResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_persistedIsTagResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "persistedIsTagResult"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] inspectorLocalPlayerSpeed
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::GorillaTagManager::dyn_inspectorLocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::dyn_inspectorLocalPlayerSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectorLocalPlayerSpeed"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagManager.UpdateState
void GlobalNamespace::GorillaTagManager::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.InfectionEnd
::System::Collections::IEnumerator* GlobalNamespace::GorillaTagManager::InfectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InfectionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InfectionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.UpdateInfectionState
void GlobalNamespace::GorillaTagManager::UpdateInfectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::UpdateInfectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInfectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.UpdateTagState
void GlobalNamespace::GorillaTagManager::UpdateTagState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::UpdateTagState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTagState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.EndInfectionGame
void GlobalNamespace::GorillaTagManager::EndInfectionGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::EndInfectionGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInfectionGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.CurrentInfectionPlayers
::ArrayW<::Photon::Realtime::Player*> GlobalNamespace::GorillaTagManager::CurrentInfectionPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CurrentInfectionPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentInfectionPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Photon::Realtime::Player*>, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.InterpolatedInfectedJumpMultiplier
float GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpMultiplier(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedInfectedJumpMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.InterpolatedInfectedJumpSpeed
float GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpSpeed(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedInfectedJumpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedInfectedJumpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.InterpolatedNoobJumpMultiplier
float GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpMultiplier(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedNoobJumpMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.InterpolatedNoobJumpSpeed
float GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpSpeed(int infectedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InterpolatedNoobJumpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolatedNoobJumpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, infectedCount);
}
// Autogenerated method: GorillaTagManager.CopyInfectedListToArray
void GlobalNamespace::GorillaTagManager::CopyInfectedListToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CopyInfectedListToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInfectedListToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.CopyInfectedArrayToList
void GlobalNamespace::GorillaTagManager::CopyInfectedArrayToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CopyInfectedArrayToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInfectedArrayToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.ChangeCurrentIt
void GlobalNamespace::GorillaTagManager::ChangeCurrentIt(::Photon::Realtime::Player* newCurrentIt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::ChangeCurrentIt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeCurrentIt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newCurrentIt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newCurrentIt);
}
// Autogenerated method: GorillaTagManager.SetisCurrentlyTag
void GlobalNamespace::GorillaTagManager::SetisCurrentlyTag(bool newTagSetting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::SetisCurrentlyTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetisCurrentlyTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTagSetting)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTagSetting);
}
// Autogenerated method: GorillaTagManager.AddInfectedPlayer
void GlobalNamespace::GorillaTagManager::AddInfectedPlayer(::Photon::Realtime::Player* infectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::AddInfectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInfectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infectedPlayer);
}
// Autogenerated method: GorillaTagManager.AddInfectedPlayer
void GlobalNamespace::GorillaTagManager::AddInfectedPlayer(::Photon::Realtime::Player* infectedPlayer, bool withTagStop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::AddInfectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInfectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infectedPlayer), ::il2cpp_utils::ExtractType(withTagStop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infectedPlayer, withTagStop);
}
// Autogenerated method: GorillaTagManager.ClearInfectionState
void GlobalNamespace::GorillaTagManager::ClearInfectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::ClearInfectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInfectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.IsGameModeTag
bool GlobalNamespace::GorillaTagManager::IsGameModeTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::IsGameModeTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGameModeTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void GlobalNamespace::GorillaTagManager::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: GorillaTagManager.CopyRoomDataToLocalData
void GlobalNamespace::GorillaTagManager::CopyRoomDataToLocalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::CopyRoomDataToLocalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyRoomDataToLocalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::GorillaTagManager::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager*), 66));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaTagManager.Awake
void GlobalNamespace::GorillaTagManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.InfrequentUpdate
void GlobalNamespace::GorillaTagManager::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::InfrequentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.LocalCanTag
bool GlobalNamespace::GorillaTagManager::LocalCanTag(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::LocalCanTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 61));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaTagManager.ReportTag
void GlobalNamespace::GorillaTagManager::ReportTag(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::ReportTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, taggingPlayer);
}
// Autogenerated method: GorillaTagManager.OnPlayerEnteredRoom
void GlobalNamespace::GorillaTagManager::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaTagManager.NewVRRig
void GlobalNamespace::GorillaTagManager::NewVRRig(::Photon::Realtime::Player* player, int vrrigPhotonViewID, bool didntDoTutorial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::NewVRRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrigPhotonViewID, didntDoTutorial);
}
// Autogenerated method: GorillaTagManager.OnPlayerLeftRoom
void GlobalNamespace::GorillaTagManager::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaTagManager.ReportTagRPC
void GlobalNamespace::GorillaTagManager::ReportTagRPC(::Photon::Realtime::Player* taggedPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::ReportTagRPC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, info);
}
// Autogenerated method: GorillaTagManager.GameMode
::StringW GlobalNamespace::GorillaTagManager::GameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::GameMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager.MyMatIndex
int GlobalNamespace::GorillaTagManager::MyMatIndex(::Photon::Realtime::Player* forPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::MyMatIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 65));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, forPlayer);
}
// Autogenerated method: GorillaTagManager.LocalPlayerSpeed
::ArrayW<float> GlobalNamespace::GorillaTagManager::LocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::LocalPlayerSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagManager/<InfectionEnd>d__26
#include "GlobalNamespace/GorillaTagManager_-InfectionEnd-d__26.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTagManager*& GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTagManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__26.System.IDisposable.Dispose
void GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__26.MoveNext
bool GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__26.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__26.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagManager/<InfectionEnd>d__26.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagManager::$InfectionEnd$d__26*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTagger
#include "GlobalNamespace/GorillaTagger.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: GorillaTagger/<HapticPulses>d__80
#include "GlobalNamespace/GorillaTagger_-HapticPulses-d__80.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaTagger _instance
::GlobalNamespace::GorillaTagger* GlobalNamespace::GorillaTagger::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger*>("", "GorillaTagger", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaTagger _instance
void GlobalNamespace::GorillaTagger::_set__instance(::GlobalNamespace::GorillaTagger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sphereCastRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn__sphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn__sphereCastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sphereCastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inCosmeticsRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_inCosmeticsRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_inCosmeticsRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inCosmeticsRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SphereCollider headCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& GlobalNamespace::GorillaTagger::dyn_headCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_headCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CapsuleCollider bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::GorillaTagger::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastLeftHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastLeftHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastRightHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastRightHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastBodyPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastBodyPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastBodyPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBodyPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastHeadPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_lastHeadPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastHeadPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaTagger::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaTagger::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticWaitSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_hapticWaitSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_hapticWaitSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticWaitSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handTapVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_handTapVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_handTapVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handTapVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapCoolDown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tapCoolDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tapCoolDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapCoolDown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastLeftTap
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_lastLeftTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastLeftTap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftTap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastRightTap
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_lastRightTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_lastRightTap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightTap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tapHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tapHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tapHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tapHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tagHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tagHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_taggedHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_taggedHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_taggedHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_taggedHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leftHandTouching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_leftHandTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rightHandTouching
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_rightHandTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_taggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_taggedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_tagCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tagCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_slowCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_slowCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaTagger::dyn_myVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_myVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig offlineVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaTagger::dyn_offlineVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_offlineVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject thirdPersonCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_thirdPersonCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_thirdPersonCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thirdPersonCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testTutorial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_testTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_testTutorial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testTutorial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableTutorial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_disableTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_disableTutorial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableTutorial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean frameRateUpdated
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_frameRateUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_frameRateUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameRateUpdated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftHandTriggerCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_leftHandTriggerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandTriggerCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTriggerCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightHandTriggerCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTagger::dyn_rightHandTriggerCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandTriggerCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTriggerCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera mirrorCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::GorillaTagger::dyn_mirrorCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_mirrorCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource leftHandSlideSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::GorillaTagger::dyn_leftHandSlideSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHandSlideSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSlideSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource rightHandSlideSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::GorillaTagger::dyn_rightHandSlideSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHandSlideSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSlideSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_leftRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftHeadRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_leftHeadRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftHeadRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHeadRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_rightRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightHeadRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_rightHeadRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightHeadRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHeadRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_headRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_headRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bodyRaycastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_bodyRaycastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bodyRaycastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyRaycastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice rightDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::dyn_rightDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_rightDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice leftDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::dyn_leftDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_leftDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean primaryButtonPressRight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_primaryButtonPressRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_primaryButtonPressRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPressRight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secondaryButtonPressRight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryButtonPressRight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean primaryButtonPressLeft
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_primaryButtonPressLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_primaryButtonPressLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPressLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secondaryButtonPressLeft
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_secondaryButtonPressLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryButtonPressLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit hitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GlobalNamespace::GorillaTagger::dyn_hitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_hitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player otherPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagger::dyn_otherPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_otherPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "otherPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tryPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaTagger::dyn_tryPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tryPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 topVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_topVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_topVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bottomVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_bottomVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bottomVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bodyVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTagger::dyn_bodyVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_bodyVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::dyn_tempInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tempInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice inputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::dyn_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_inputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasInOverlay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::dyn_wasInOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_wasInOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasInOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView tempView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaTagger::dyn_tempView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_tempView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagger/StatusEffect currentStatus
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTagger::StatusEffect& GlobalNamespace::GorillaTagger::dyn_currentStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_currentStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStatus"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTagger::StatusEffect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single statusStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_statusStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_statusStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single statusEndTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_statusEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_statusEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single refreshRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_refreshRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_refreshRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refreshRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single baseSlideControl
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::dyn_baseSlideControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_baseSlideControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseSlideControl"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] nonAllocRaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& GlobalNamespace::GorillaTagger::dyn_nonAllocRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_nonAllocRaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonAllocRaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nonAllocHits
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::dyn_nonAllocHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_nonAllocHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonAllocHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder myRecorder
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& GlobalNamespace::GorillaTagger::dyn_myRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::dyn_myRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRecorder"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagger.get_Instance
::GlobalNamespace::GorillaTagger* GlobalNamespace::GorillaTagger::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaTagger", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaTagger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaTagger.get_sphereCastRadius
float GlobalNamespace::GorillaTagger::get_sphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::get_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.set_sphereCastRadius
void GlobalNamespace::GorillaTagger::set_sphereCastRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::set_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTagger.Awake
void GlobalNamespace::GorillaTagger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.Start
void GlobalNamespace::GorillaTagger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.LateUpdate
void GlobalNamespace::GorillaTagger::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.TryToTag
bool GlobalNamespace::GorillaTagger::TryToTag(::UnityEngine::RaycastHit hitInfo, bool isBodyTag, ByRef<::Photon::Realtime::Player*> taggedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::TryToTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(isBodyTag), ::il2cpp_utils::ExtractIndependentType<::Photon::Realtime::Player*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hitInfo, isBodyTag, byref(taggedPlayer));
}
// Autogenerated method: GorillaTagger.StartVibration
void GlobalNamespace::GorillaTagger::StartVibration(bool forLeftController, float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StartVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forLeftController), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forLeftController, amplitude, duration);
}
// Autogenerated method: GorillaTagger.HapticPulses
::System::Collections::IEnumerator* GlobalNamespace::GorillaTagger::HapticPulses(bool forLeftController, float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::HapticPulses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HapticPulses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forLeftController), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, forLeftController, amplitude, duration);
}
// Autogenerated method: GorillaTagger.UpdateColor
void GlobalNamespace::GorillaTagger::UpdateColor(float red, float green, float blue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(red), ::il2cpp_utils::ExtractType(green), ::il2cpp_utils::ExtractType(blue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, red, green, blue);
}
// Autogenerated method: GorillaTagger.OnTriggerEnter
void GlobalNamespace::GorillaTagger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaTagger.ShowCosmeticParticles
void GlobalNamespace::GorillaTagger::ShowCosmeticParticles(bool showParticles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::ShowCosmeticParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCosmeticParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showParticles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showParticles);
}
// Autogenerated method: GorillaTagger.ApplyStatusEffect
void GlobalNamespace::GorillaTagger::ApplyStatusEffect(::GlobalNamespace::GorillaTagger::StatusEffect newStatus, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::ApplyStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newStatus), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newStatus, duration);
}
// Autogenerated method: GorillaTagger.CheckEndStatusEffect
void GlobalNamespace::GorillaTagger::CheckEndStatusEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::CheckEndStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEndStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger.EndStatusEffect
void GlobalNamespace::GorillaTagger::EndStatusEffect(::GlobalNamespace::GorillaTagger::StatusEffect effectToEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::EndStatusEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndStatusEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectToEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effectToEnd);
}
// Autogenerated method: GorillaTagger.CalcSlideControl
float GlobalNamespace::GorillaTagger::CalcSlideControl(float fps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::CalcSlideControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcSlideControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fps)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, fps);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTagger/StatusEffect
#include "GlobalNamespace/GorillaTagger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect None
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "None"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect None
void GlobalNamespace::GorillaTagger::StatusEffect::_set_None(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "None", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Frozen
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Frozen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Frozen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Frozen"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Frozen
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Frozen(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Frozen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Frozen", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Slowed
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Slowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Slowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Slowed"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Slowed
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Slowed(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Slowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Slowed", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Dead
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Dead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Dead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Dead"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Dead
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Dead(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Dead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Dead", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect Infected
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_Infected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_Infected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "Infected"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect Infected
void GlobalNamespace::GorillaTagger::StatusEffect::_set_Infected(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_Infected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "Infected", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaTagger/StatusEffect It
::GlobalNamespace::GorillaTagger::StatusEffect GlobalNamespace::GorillaTagger::StatusEffect::_get_It() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_get_It");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaTagger::StatusEffect>("", "GorillaTagger/StatusEffect", "It"));
}
// Autogenerated static field setter
// Set static field: static public GorillaTagger/StatusEffect It
void GlobalNamespace::GorillaTagger::StatusEffect::_set_It(::GlobalNamespace::GorillaTagger::StatusEffect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::_set_It");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaTagger/StatusEffect", "It", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::StatusEffect::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::StatusEffect::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTagger/<HapticPulses>d__80
#include "GlobalNamespace/GorillaTagger_-HapticPulses-d__80.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forLeftController
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_forLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_forLeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forLeftController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTagger <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTagger*& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTagger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$startTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$startTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice <device>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$device$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$device$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<device>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <channel>5__4
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$channel$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::dyn_$channel$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<channel>5__4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__80.System.IDisposable.Dispose
void GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__80*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__80.MoveNext
bool GlobalNamespace::GorillaTagger::$HapticPulses$d__80::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__80*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__80.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__80*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__80.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__80*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTagger/<HapticPulses>d__80.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTagger::$HapticPulses$d__80::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTagger::$HapticPulses$d__80*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTrigger
#include "GlobalNamespace/GorillaTrigger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaTrigger.OnTriggered
void GlobalNamespace::GorillaTrigger::OnTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTrigger::OnTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTrigger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTurning
#include "GlobalNamespace/GorillaTurning.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material redMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_redMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_redMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material blueMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_blueMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_blueMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blueMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material greenMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_greenMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_greenMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "greenMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material transparentBlueMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_transparentBlueMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_transparentBlueMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentBlueMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material transparentRedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_transparentRedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_transparentRedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentRedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material transparentGreenMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaTurning::dyn_transparentGreenMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_transparentGreenMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transparentGreenMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer smoothTurnBox
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaTurning::dyn_smoothTurnBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_smoothTurnBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothTurnBox"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer snapTurnBox
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaTurning::dyn_snapTurnBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_snapTurnBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapTurnBox"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer noTurnBox
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaTurning::dyn_noTurnBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_noTurnBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noTurnBox"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn snapTurn
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn*& GlobalNamespace::GorillaTurning::dyn_snapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_snapTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapTurn"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentChoice
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaTurning::dyn_currentChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_currentChoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChoice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurning::dyn_currentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::dyn_currentSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTurning.Awake
void GlobalNamespace::GorillaTurning::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurning::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTurningChoice
#include "GlobalNamespace/GorillaTurningChoice.hpp"
// Including type: GorillaTurning
#include "GlobalNamespace/GorillaTurning.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String choiceName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaTurningChoice::dyn_choiceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurningChoice::dyn_choiceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "choiceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTurning parent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTurning*& GlobalNamespace::GorillaTurningChoice::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurningChoice::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTurning**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTurningChoice.OnBoxTriggered
void GlobalNamespace::GorillaTurningChoice::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurningChoice::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaUI
#include "GlobalNamespace/GorillaUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaUI.Start
void GlobalNamespace::GorillaUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaUI.Update
void GlobalNamespace::GorillaUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaUIParent
#include "GlobalNamespace/GorillaUIParent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaUIParent instance
::GlobalNamespace::GorillaUIParent* GlobalNamespace::GorillaUIParent::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUIParent::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaUIParent*>("", "GorillaUIParent", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaUIParent instance
void GlobalNamespace::GorillaUIParent::_set_instance(::GlobalNamespace::GorillaUIParent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUIParent::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaUIParent", "instance", value));
}
// Autogenerated method: GorillaUIParent.Awake
void GlobalNamespace::GorillaUIParent::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUIParent::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaUITransformFollow
#include "GlobalNamespace/GorillaUITransformFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transformToFollow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaUITransformFollow::dyn_transformToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::dyn_transformToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformToFollow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaUITransformFollow::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean doesMove
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaUITransformFollow::dyn_doesMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::dyn_doesMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doesMove"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaUITransformFollow.Start
void GlobalNamespace::GorillaUITransformFollow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaUITransformFollow.LateUpdate
void GlobalNamespace::GorillaUITransformFollow::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaUITransformFollow::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaVRConstraint
#include "GlobalNamespace/GorillaVRConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isConstrained
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaVRConstraint::dyn_isConstrained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaVRConstraint::dyn_isConstrained");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isConstrained"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaVRConstraint::dyn_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaVRConstraint::dyn_angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaVRConstraint.Update
void GlobalNamespace::GorillaVRConstraint::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaVRConstraint::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaZone
#include "GlobalNamespace/GorillaZone.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String myZone
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaZone::dyn_myZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaZone::dyn_myZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myZone"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaZone.OnTriggerEnter
void GlobalNamespace::GorillaZone::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaZone::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GroupJoinButton
#include "GlobalNamespace/GroupJoinButton.hpp"
// Including type: GorillaFriendCollider
#include "GlobalNamespace/GorillaFriendCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 gameModeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GroupJoinButton::dyn_gameModeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::dyn_gameModeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaFriendCollider friendCollider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaFriendCollider*& GlobalNamespace::GroupJoinButton::dyn_friendCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::dyn_friendCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendCollider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaFriendCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inPrivate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GroupJoinButton::dyn_inPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::dyn_inPrivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inPrivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GroupJoinButton.Update
void GlobalNamespace::GroupJoinButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupJoinButton.ButtonActivation
void GlobalNamespace::GroupJoinButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupJoinButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HeightVolume
#include "GlobalNamespace/HeightVolume.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform heightTop
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HeightVolume::dyn_heightTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_heightTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightTop"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform heightBottom
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HeightVolume::dyn_heightBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_heightBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightBottom"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::HeightVolume::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeightVolume::dyn_baseVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_baseVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeightVolume::dyn_minVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_minVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform targetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::HeightVolume::dyn_targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean invertHeightVol
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeightVolume::dyn_invertHeightVol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::dyn_invertHeightVol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invertHeightVol"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeightVolume.Update
void GlobalNamespace::HeightVolume::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeightVolume::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModeSelectButton
#include "GlobalNamespace/ModeSelectButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ModeSelectButton::dyn_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModeSelectButton::dyn_gameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ModeSelectButton.ButtonActivation
void GlobalNamespace::ModeSelectButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModeSelectButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RandomizeTest
#include "GlobalNamespace/RandomizeTest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Int32> testList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::RandomizeTest::dyn_testList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_testList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] testListArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::RandomizeTest::dyn_testListArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_testListArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testListArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 randomIterator
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizeTest::dyn_randomIterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_randomIterator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomIterator"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tempRandIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizeTest::dyn_tempRandIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_tempRandIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tempRandValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizeTest::dyn_tempRandValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::dyn_tempRandValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRandValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RandomizeTest.Start
void GlobalNamespace::RandomizeTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizeTest.RandomizeList
void GlobalNamespace::RandomizeTest::RandomizeList(ByRef<::System::Collections::Generic::List_1<int>*> listToRandomize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizeTest::RandomizeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomizeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listToRandomize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(listToRandomize));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SlowCameraUpdate
#include "GlobalNamespace/SlowCameraUpdate.hpp"
// Including type: SlowCameraUpdate/<UpdateMirror>d__7
#include "GlobalNamespace/SlowCameraUpdate_-UpdateMirror-d__7.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera myCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::SlowCameraUpdate::dyn_myCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::dyn_myCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single frameRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SlowCameraUpdate::dyn_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::dyn_frameRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeToNextFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SlowCameraUpdate::dyn_timeToNextFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::dyn_timeToNextFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToNextFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastFrameCaptured
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SlowCameraUpdate::dyn_lastFrameCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::dyn_lastFrameCaptured");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFrameCaptured"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SlowCameraUpdate.Awake
void GlobalNamespace::SlowCameraUpdate::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate.OnEnable
void GlobalNamespace::SlowCameraUpdate::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate.OnDisable
void GlobalNamespace::SlowCameraUpdate::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate.UpdateMirror
::System::Collections::IEnumerator* GlobalNamespace::SlowCameraUpdate::UpdateMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::UpdateMirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SlowCameraUpdate/<UpdateMirror>d__7
#include "GlobalNamespace/SlowCameraUpdate_-UpdateMirror-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SlowCameraUpdate <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SlowCameraUpdate*& GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SlowCameraUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__7.System.IDisposable.Dispose
void GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__7.MoveNext
bool GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SlowCameraUpdate/<UpdateMirror>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SlowCameraUpdate::$UpdateMirror$d__7*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SynchedMusicController
#include "GlobalNamespace/SynchedMusicController.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 mySeed
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SynchedMusicController::dyn_mySeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_mySeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mySeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Random randomNumberGenerator
[[deprecated("Use field access instead!")]] ::System::Random*& GlobalNamespace::SynchedMusicController::dyn_randomNumberGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_randomNumberGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomNumberGenerator"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 minimumWait
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::SynchedMusicController::dyn_minimumWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_minimumWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumWait"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 randomInterval
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SynchedMusicController::dyn_randomInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_randomInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64[] songStartTimes
[[deprecated("Use field access instead!")]] ::ArrayW<int64_t>& GlobalNamespace::SynchedMusicController::dyn_songStartTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_songStartTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songStartTimes"))->offset;
  return *reinterpret_cast<::ArrayW<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] audioSourcesForPlaying
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::SynchedMusicController::dyn_audioSourcesForPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioSourcesForPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSourcesForPlaying"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] audioClipsForPlaying
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::SynchedMusicController::dyn_audioClipsForPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioClipsForPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClipsForPlaying"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SynchedMusicController::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource[] audioSourceArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioSource*>& GlobalNamespace::SynchedMusicController::dyn_audioSourceArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_audioSourceArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSourceArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioSource*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] songsArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::SynchedMusicController::dyn_songsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_songsArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songsArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastPlayIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SynchedMusicController::dyn_lastPlayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_lastPlayIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPlayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 currentTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::SynchedMusicController::dyn_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isMuted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_isMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_isMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMuted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 totalLoopTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::SynchedMusicController::dyn_totalLoopTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_totalLoopTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalLoopTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPressableButton muteButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPressableButton*& GlobalNamespace::SynchedMusicController::dyn_muteButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_muteButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muteButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPressableButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usingMultipleSongs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_usingMultipleSongs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_usingMultipleSongs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingMultipleSongs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usingMultipleSources
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_usingMultipleSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_usingMultipleSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingMultipleSources"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPlayingCurrently
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_isPlayingCurrently() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_isPlayingCurrently");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPlayingCurrently"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPlay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_testPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_testPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean twoLayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SynchedMusicController::dyn_twoLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_twoLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twoLayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String locationName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SynchedMusicController::dyn_locationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::dyn_locationName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SynchedMusicController.Start
void GlobalNamespace::SynchedMusicController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.Update
void GlobalNamespace::SynchedMusicController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.StartPlayingSong
void GlobalNamespace::SynchedMusicController::StartPlayingSong(int64_t timeStarted, int64_t currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::StartPlayingSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayingSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStarted), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeStarted, currentTime);
}
// Autogenerated method: SynchedMusicController.StartPlayingSongs
void GlobalNamespace::SynchedMusicController::StartPlayingSongs(int64_t timeStarted, int64_t currentTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::StartPlayingSongs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayingSongs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStarted), ::il2cpp_utils::ExtractType(currentTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeStarted, currentTime);
}
// Autogenerated method: SynchedMusicController.StartPlayingSong
void GlobalNamespace::SynchedMusicController::StartPlayingSong(int64_t timeStarted, int64_t currentTime, ::UnityEngine::AudioClip* clipToPlay, ::UnityEngine::AudioSource* sourceToPlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::StartPlayingSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayingSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStarted), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(clipToPlay), ::il2cpp_utils::ExtractType(sourceToPlay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeStarted, currentTime, clipToPlay, sourceToPlay);
}
// Autogenerated method: SynchedMusicController.GenerateSongStartRandomTimes
void GlobalNamespace::SynchedMusicController::GenerateSongStartRandomTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::GenerateSongStartRandomTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSongStartRandomTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchedMusicController.MuteAudio
void GlobalNamespace::SynchedMusicController::MuteAudio(::GlobalNamespace::GorillaPressableButton* pressedButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchedMusicController::MuteAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressedButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressedButton);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextCopier
#include "GlobalNamespace/TextCopier.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text textToCopy
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::TextCopier::dyn_textToCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextCopier::dyn_textToCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textToCopy"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::TextCopier::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextCopier::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextCopier.Start
void GlobalNamespace::TextCopier::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextCopier::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextCopier.Update
void GlobalNamespace::TextCopier::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextCopier::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TransformFollow
#include "GlobalNamespace/TransformFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transformToFollow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TransformFollow::dyn_transformToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::dyn_transformToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformToFollow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TransformFollow::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransformFollow.LateUpdate
void GlobalNamespace::TransformFollow::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformFollow::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BetterDayNightManager
#include "GlobalNamespace/BetterDayNightManager.hpp"
// Including type: AddCollidersToParticleSystemTriggers
#include "GlobalNamespace/AddCollidersToParticleSystemTriggers.hpp"
// Including type: BetterDayNightManager/<UpdateTimeOfDay>d__61
#include "GlobalNamespace/BetterDayNightManager_-UpdateTimeOfDay-d__61.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager instance
::GlobalNamespace::BetterDayNightManager* GlobalNamespace::BetterDayNightManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager*>("", "BetterDayNightManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager instance
void GlobalNamespace::BetterDayNightManager::_set_instance(::GlobalNamespace::BetterDayNightManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader standard
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::BetterDayNightManager::dyn_standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standard"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader gorillaUnlit
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaUnlit"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader gorillaUnlitCutout
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlitCutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_gorillaUnlitCutout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaUnlitCutout"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] standardMaterialsUnlit
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardMaterialsUnlit"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] standardMaterialsUnlitDarker
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlitDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardMaterialsUnlitDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardMaterialsUnlitDarker"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] dayNightSupportedMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightSupportedMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] dayNightSupportedMaterialsCutout
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterialsCutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightSupportedMaterialsCutout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightSupportedMaterialsCutout"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dayNightLightmaps
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightLightmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightLightmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightLightmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dayNightWeatherLightmaps
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherLightmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherLightmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightWeatherLightmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dayNightSkyboxTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightSkyboxTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightSkyboxTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightSkyboxTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] dayNightWeatherSkyboxTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherSkyboxTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_dayNightWeatherSkyboxTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightWeatherSkyboxTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] standardUnlitColor
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardUnlitColor"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] standardUnlitColorWithPremadeColorDarker
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColorWithPremadeColorDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_standardUnlitColorWithPremadeColorDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardUnlitColorWithPremadeColorDarker"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material skyMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::BetterDayNightManager::dyn_skyMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_skyMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skyMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_currentLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentIncrement
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_currentIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentIncrement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIncrement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentTimestep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_currentTimestep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentTimestep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTimestep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeOfDay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_timeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_timeOfDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeOfDay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double[] timeOfDayRange
[[deprecated("Use field access instead!")]] ::ArrayW<double>& GlobalNamespace::BetterDayNightManager::dyn_timeOfDayRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_timeOfDayRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeOfDayRange"))->offset;
  return *reinterpret_cast<::ArrayW<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double timeMultiplier
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_timeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_timeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeMultiplier"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_lastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_lastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double currentTime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double totalHours
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_totalHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_totalHours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalHours"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double totalSeconds
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_totalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_totalSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalSeconds"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorFrom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorFrom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorTo
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorTo"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorFromDarker
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorFromDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorFromDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorFromDarker"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single colorToDarker
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_colorToDarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_colorToDarker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorToDarker"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentTimeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_currentTimeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentTimeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTimeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentWeatherIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_currentWeatherIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentWeatherIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWeatherIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_lastIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_lastIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double currentIndexSeconds
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_currentIndexSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentIndexSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndexSeconds"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single tempLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_tempLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_tempLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double baseSeconds
[[deprecated("Use field access instead!")]] double& GlobalNamespace::BetterDayNightManager::dyn_baseSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_baseSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseSeconds"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean computerInit
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BetterDayNightManager::dyn_computerInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_computerInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computerInit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single h
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single s
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single v
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_v() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_v");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mySeed
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_mySeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_mySeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mySeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Random randomNumberGenerator
[[deprecated("Use field access instead!")]] ::System::Random*& GlobalNamespace::BetterDayNightManager::dyn_randomNumberGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_randomNumberGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomNumberGenerator"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager/WeatherType[] weatherCycle
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BetterDayNightManager::WeatherType>& GlobalNamespace::BetterDayNightManager::dyn_weatherCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_weatherCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weatherCycle"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BetterDayNightManager::WeatherType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentTimeOfDay
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BetterDayNightManager::dyn_currentTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentTimeOfDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTimeOfDay"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rainChance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_rainChance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_rainChance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rainChance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxRainDuration
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_maxRainDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_maxRainDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRainDuration"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single calcRainPercent
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_calcRainPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_calcRainPercent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calcRainPercent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rainDuration
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_rainDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_rainDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rainDuration"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single remainingSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetterDayNightManager::dyn_remainingSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_remainingSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remainingSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 completedDayNightCycles
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_completedDayNightCycles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_completedDayNightCycles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completedDayNightCycles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentWeatherCycle
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_currentWeatherCycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_currentWeatherCycle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWeatherCycle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 fromWeatherIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_fromWeatherIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_fromWeatherIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromWeatherIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 toWeatherIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_toWeatherIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_toWeatherIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toWeatherIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D fromMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_fromMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_fromMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D fromSky
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_fromSky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_fromSky");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromSky"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D toMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_toMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_toMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D toSky
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BetterDayNightManager::dyn_toSky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_toSky");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toSky"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AddCollidersToParticleSystemTriggers[] weatherSystems
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AddCollidersToParticleSystemTriggers*>& GlobalNamespace::BetterDayNightManager::dyn_weatherSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_weatherSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weatherSystems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AddCollidersToParticleSystemTriggers*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Collider> collidersToAddToWeatherSystems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::BetterDayNightManager::dyn_collidersToAddToWeatherSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_collidersToAddToWeatherSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersToAddToWeatherSystems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 overrideIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::dyn_overrideIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::dyn_overrideIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetterDayNightManager.Awake
void GlobalNamespace::BetterDayNightManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.UpdateTimeOfDay
::System::Collections::IEnumerator* GlobalNamespace::BetterDayNightManager::UpdateTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::UpdateTimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.ChangeLerps
void GlobalNamespace::BetterDayNightManager::ChangeLerps(float newLerp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ChangeLerps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeLerps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLerp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newLerp);
}
// Autogenerated method: BetterDayNightManager.ChangeMaps
void GlobalNamespace::BetterDayNightManager::ChangeMaps(int fromIndex, int toIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::ChangeMaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeMaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromIndex), ::il2cpp_utils::ExtractType(toIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromIndex, toIndex);
}
// Autogenerated method: BetterDayNightManager.CurrentWeather
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::CurrentWeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::CurrentWeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentWeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BetterDayNightManager::WeatherType, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.NextWeather
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::NextWeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::NextWeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextWeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BetterDayNightManager::WeatherType, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.LastWeather
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::LastWeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::LastWeather");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastWeather", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BetterDayNightManager::WeatherType, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager.GenerateWeatherEventTimes
void GlobalNamespace::BetterDayNightManager::GenerateWeatherEventTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::GenerateWeatherEventTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateWeatherEventTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BetterDayNightManager/WeatherType
#include "GlobalNamespace/BetterDayNightManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager/WeatherType None
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::WeatherType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager::WeatherType>("", "BetterDayNightManager/WeatherType", "None"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager/WeatherType None
void GlobalNamespace::BetterDayNightManager::WeatherType::_set_None(::GlobalNamespace::BetterDayNightManager::WeatherType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager/WeatherType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager/WeatherType Raining
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::WeatherType::_get_Raining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_get_Raining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager::WeatherType>("", "BetterDayNightManager/WeatherType", "Raining"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager/WeatherType Raining
void GlobalNamespace::BetterDayNightManager::WeatherType::_set_Raining(::GlobalNamespace::BetterDayNightManager::WeatherType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_set_Raining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager/WeatherType", "Raining", value));
}
// Autogenerated static field getter
// Get static field: static public BetterDayNightManager/WeatherType All
::GlobalNamespace::BetterDayNightManager::WeatherType GlobalNamespace::BetterDayNightManager::WeatherType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BetterDayNightManager::WeatherType>("", "BetterDayNightManager/WeatherType", "All"));
}
// Autogenerated static field setter
// Set static field: static public BetterDayNightManager/WeatherType All
void GlobalNamespace::BetterDayNightManager::WeatherType::_set_All(::GlobalNamespace::BetterDayNightManager::WeatherType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BetterDayNightManager/WeatherType", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::WeatherType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::WeatherType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BetterDayNightManager/<UpdateTimeOfDay>d__61
#include "GlobalNamespace/BetterDayNightManager_-UpdateTimeOfDay-d__61.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager*& GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetterDayNightManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__61.System.IDisposable.Dispose
void GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__61.MoveNext
bool GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__61.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__61.System.Collections.IEnumerator.Reset
void GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetterDayNightManager/<UpdateTimeOfDay>d__61.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetterDayNightManager::$UpdateTimeOfDay$d__61*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DayNightCycle
#include "GlobalNamespace/DayNightCycle.hpp"
// Including type: UnityEngine.LightmapData
#include "UnityEngine/LightmapData.hpp"
// Including type: DayNightCycle/<UpdateWork>d__37
#include "GlobalNamespace/DayNightCycle_-UpdateWork-d__37.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D _dayMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn__dayMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn__dayMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dayMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D fromMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn_fromMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_fromMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D _sunriseMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn__sunriseMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn__sunriseMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sunriseMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D toMap
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn_toMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_toMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toMap"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DayNightCycle/LerpBakedLightingJob job
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DayNightCycle::LerpBakedLightingJob& GlobalNamespace::DayNightCycle::dyn_job() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_job");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "job"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DayNightCycle::LerpBakedLightingJob*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Jobs.JobHandle jobHandle
[[deprecated("Use field access instead!")]] ::Unity::Jobs::JobHandle& GlobalNamespace::DayNightCycle::dyn_jobHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_jobHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jobHandle"))->offset;
  return *reinterpret_cast<::Unity::Jobs::JobHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isComplete
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeTakenStartingJob
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_timeTakenStartingJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_timeTakenStartingJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeTakenStartingJob"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeTakenPostJob
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_timeTakenPostJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_timeTakenPostJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeTakenPostJob"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeTakenDuringJob
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_timeTakenDuringJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_timeTakenDuringJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeTakenDuringJob"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LightmapData newData
[[deprecated("Use field access instead!")]] ::UnityEngine::LightmapData*& GlobalNamespace::DayNightCycle::dyn_newData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_newData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newData"))->offset;
  return *reinterpret_cast<::UnityEngine::LightmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] fromPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_fromPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_fromPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] toPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_toPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_toPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] mixedPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_mixedPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_mixedPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapData[] newDatas
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::LightmapData*>& GlobalNamespace::DayNightCycle::dyn_newDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_newDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newDatas"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LightmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D newTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::DayNightCycle::dyn_newTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_newTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 textureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_textureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_textureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 textureHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_textureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_textureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] workBlockFrom
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_workBlockFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_workBlockFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBlockFrom"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] workBlockTo
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_workBlockTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_workBlockTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBlockTo"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] workBlockMix
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::dyn_workBlockMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_workBlockMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBlockMix"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subTextureSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_subTextureSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_subTextureSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTextureSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D[] subTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture2D*>& GlobalNamespace::DayNightCycle::dyn_subTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_subTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startCoroutine
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_startCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startCoroutine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startedCoroutine
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_startedCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startedCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startedCoroutine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean finishedCoroutine
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_finishedCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_finishedCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCoroutine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startJob
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_startJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_startJob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startJob"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single switchTimeTaken
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_switchTimeTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_switchTimeTaken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchTimeTaken"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean jobStarted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DayNightCycle::dyn_jobStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_jobStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jobStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::dyn_lerpAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_lerpAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentRow
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentColumn
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentColumn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentColumn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentSubTexture
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentSubTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentSubTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSubTexture"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentRowInSubtexture
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::dyn_currentRowInSubtexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::dyn_currentRowInSubtexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRowInSubtexture"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightCycle.Awake
void GlobalNamespace::DayNightCycle::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle.Update
void GlobalNamespace::DayNightCycle::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle.UpdateWork
::System::Collections::IEnumerator* GlobalNamespace::DayNightCycle::UpdateWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::UpdateWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DayNightCycle/LerpBakedLightingJob
#include "GlobalNamespace/DayNightCycle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Color> fromPixels
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_fromPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_fromPixels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromPixels"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Color> toPixels
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_toPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_toPixels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPixels"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Color> mixedPixels
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Color>& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_mixedPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_mixedPixels");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedPixels"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::dyn_lerpValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightCycle/LerpBakedLightingJob.Execute
void GlobalNamespace::DayNightCycle::LerpBakedLightingJob::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::LerpBakedLightingJob::Execute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::GlobalNamespace::DayNightCycle::LerpBakedLightingJob), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DayNightCycle/<UpdateWork>d__37
#include "GlobalNamespace/DayNightCycle_-UpdateWork-d__37.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DayNightCycle <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DayNightCycle*& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DayNightCycle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <j>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$j$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::dyn_$j$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<j>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.IDisposable.Dispose
void GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.MoveNext
bool GlobalNamespace::DayNightCycle::$UpdateWork$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.Collections.IEnumerator.Reset
void GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightCycle/<UpdateWork>d__37.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightCycle::$UpdateWork$d__37::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DayNightCycle::$UpdateWork$d__37*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DayNightResetForBaking
#include "GlobalNamespace/DayNightResetForBaking.hpp"
// Including type: BetterDayNightManager
#include "GlobalNamespace/BetterDayNightManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager dayNightManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager*& GlobalNamespace::DayNightResetForBaking::dyn_dayNightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightResetForBaking::dyn_dayNightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNightManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetterDayNightManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DayNightResetForBaking.SetMaterialsForBaking
void GlobalNamespace::DayNightResetForBaking::SetMaterialsForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightResetForBaking::SetMaterialsForBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialsForBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DayNightResetForBaking.SetMaterialsForGame
void GlobalNamespace::DayNightResetForBaking::SetMaterialsForGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DayNightResetForBaking::SetMaterialsForGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialsForGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaColorSlider
#include "GlobalNamespace/GorillaColorSlider.hpp"
// Including type: GorillaTriggerBox
#include "GlobalNamespace/GorillaTriggerBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean setRandomly
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaColorSlider::dyn_setRandomly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_setRandomly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setRandomly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single zRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_zRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_zRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaColorSlider::dyn_startingLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_startingLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 valueIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaColorSlider::dyn_valueIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_valueIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single valueImReporting
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_valueImReporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_valueImReporting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueImReporting"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTriggerBox gorilla
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerBox*& GlobalNamespace::GorillaColorSlider::dyn_gorilla() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_gorilla");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorilla"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerBox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startingZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaColorSlider::dyn_startingZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::dyn_startingZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaColorSlider.Start
void GlobalNamespace::GorillaColorSlider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaColorSlider.SetPosition
void GlobalNamespace::GorillaColorSlider::SetPosition(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: GorillaColorSlider.InterpolateValue
float GlobalNamespace::GorillaColorSlider::InterpolateValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::InterpolateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaColorSlider.OnSliderRelease
void GlobalNamespace::GorillaColorSlider::OnSliderRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColorSlider::OnSliderRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSliderRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaComputerTerminal
#include "GlobalNamespace/GorillaComputerTerminal.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myScreenText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaComputerTerminal::dyn_myScreenText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::dyn_myScreenText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myScreenText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myFunctionText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaComputerTerminal::dyn_myFunctionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::dyn_myFunctionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myFunctionText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer monitorMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaComputerTerminal::dyn_monitorMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::dyn_monitorMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monitorMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaComputerTerminal.LateUpdate
void GlobalNamespace::GorillaComputerTerminal::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaComputerTerminal::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNameManager
#include "GlobalNamespace/GorillaNameManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPlayerLineButton
#include "GlobalNamespace/GorillaPlayerLineButton.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: GorillaPlayerLineButton/<TestPressCheck>d__14
#include "GlobalNamespace/GorillaPlayerLineButton_-TestPressCheck-d__14.hpp"
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerScoreboardLine parentLine
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerScoreboardLine*& GlobalNamespace::GorillaPlayerLineButton::dyn_parentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_parentLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentLine"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerScoreboardLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton/ButtonType buttonType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton::ButtonType& GlobalNamespace::GorillaPlayerLineButton::dyn_buttonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_buttonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton::ButtonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerLineButton::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material offMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPlayerLineButton::dyn_offMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material onMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPlayerLineButton::dyn_onMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerLineButton::dyn_offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String onText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerLineButton::dyn_onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerLineButton::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debounceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlayerLineButton::dyn_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_debounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single touchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlayerLineButton::dyn_touchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_touchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerLineButton::dyn_testPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::dyn_testPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerLineButton.OnEnable
void GlobalNamespace::GorillaPlayerLineButton::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton.OnDisable
void GlobalNamespace::GorillaPlayerLineButton::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton.TestPressCheck
::System::Collections::IEnumerator* GlobalNamespace::GorillaPlayerLineButton::TestPressCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::TestPressCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPressCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton.OnTriggerEnter
void GlobalNamespace::GorillaPlayerLineButton::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaPlayerLineButton.OnTriggerExit
void GlobalNamespace::GorillaPlayerLineButton::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaPlayerLineButton.UpdateColor
void GlobalNamespace::GorillaPlayerLineButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPlayerLineButton/ButtonType
#include "GlobalNamespace/GorillaPlayerLineButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType HateSpeech
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_HateSpeech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_HateSpeech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "HateSpeech"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType HateSpeech
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_HateSpeech(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_HateSpeech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "HateSpeech", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Cheating
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cheating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cheating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Cheating"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Cheating
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cheating(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cheating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Cheating", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Toxicity
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Toxicity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Toxicity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Toxicity"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Toxicity
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Toxicity(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Toxicity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Toxicity", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Mute
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Mute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Mute"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Mute
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Mute(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Mute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Mute", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Report
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Report() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Report");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Report"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Report
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Report(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Report");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Report", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaPlayerLineButton/ButtonType Cancel
::GlobalNamespace::GorillaPlayerLineButton::ButtonType GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerLineButton::ButtonType>("", "GorillaPlayerLineButton/ButtonType", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public GorillaPlayerLineButton/ButtonType Cancel
void GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cancel(::GlobalNamespace::GorillaPlayerLineButton::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlayerLineButton/ButtonType", "Cancel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerLineButton::ButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::ButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaPlayerLineButton/<TestPressCheck>d__14
#include "GlobalNamespace/GorillaPlayerLineButton_-TestPressCheck-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton*& GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__14.System.IDisposable.Dispose
void GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__14.MoveNext
bool GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerLineButton/<TestPressCheck>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerLineButton::$TestPressCheck$d__14*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPlayerScoreboardLine
#include "GlobalNamespace/GorillaPlayerScoreboardLine.hpp"
// Including type: GorillaPlayerScoreboardLine/<UpdateLine>d__30
#include "GlobalNamespace/GorillaPlayerScoreboardLine_-UpdateLine-d__30.hpp"
// Including type: GorillaPlayerScoreboardLine/<>c
#include "GlobalNamespace/GorillaPlayerScoreboardLine_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: PlayFab.ClientModels.GetUserDataResult
#include "PlayFab/ClientModels/GetUserDataResult.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: Photon.Voice.PUN.PhotonVoiceView
#include "Photon/Voice/PUN/PhotonVoiceView.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: GorillaPlayerLineButton/ButtonType
#include "GlobalNamespace/GorillaPlayerLineButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text playerName
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text playerLevel
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerLevel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text playerMMR
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerMMR"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image playerSwatch
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerSwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerSwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSwatch"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture infectedTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_infectedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_infectedTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infectedTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player linePlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_linePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_linePlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig playerVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentMatIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_currentMatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_currentMatIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMatIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerLevelValue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevelValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerLevelValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerLevelValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerMMRValue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMRValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerMMRValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerMMRValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerNameValue
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerNameValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerNameValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playerActorNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerActorNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_playerActorNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerActorNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton muteButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_muteButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_muteButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muteButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerLineButton reportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerLineButton*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_reportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerLineButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject speakerIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_speakerIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_speakerIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speakerIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean canPressNextReportButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_canPressNextReportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_canPressNextReportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canPressNextReportButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text[] texts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Text*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_texts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_texts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Text*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SpriteRenderer[] sprites
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::SpriteRenderer*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_sprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_sprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sprites"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::SpriteRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer[] meshes
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_meshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_meshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshes"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image[] images
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Image*>& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "images"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.PUN.PhotonVoiceView myVoiceView
[[deprecated("Use field access instead!")]] ::Photon::Voice::PUN::PhotonVoiceView*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myVoiceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myVoiceView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myVoiceView"))->offset;
  return *reinterpret_cast<::Photon::Voice::PUN::PhotonVoiceView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder myRecorder
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRecorder"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean linePlayerInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_linePlayerInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_linePlayerInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePlayerInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mute
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_mute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 emptyRigCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_emptyRigCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_emptyRigCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyRigCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject myRig
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerScoreboardLine.Start
void GlobalNamespace::GorillaPlayerScoreboardLine::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.UpdateLevel
void GlobalNamespace::GorillaPlayerScoreboardLine::UpdateLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::UpdateLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.HideShowLine
void GlobalNamespace::GorillaPlayerScoreboardLine::HideShowLine(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::HideShowLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideShowLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, active);
}
// Autogenerated method: GorillaPlayerScoreboardLine.UpdateLine
::System::Collections::IEnumerator* GlobalNamespace::GorillaPlayerScoreboardLine::UpdateLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::UpdateLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine.PressButton
void GlobalNamespace::GorillaPlayerScoreboardLine::PressButton(bool isOn, ::GlobalNamespace::GorillaPlayerLineButton::ButtonType buttonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::PressButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn), ::il2cpp_utils::ExtractType(buttonType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn, buttonType);
}
// Autogenerated method: GorillaPlayerScoreboardLine.SetReportState
void GlobalNamespace::GorillaPlayerScoreboardLine::SetReportState(bool reportState, ::GlobalNamespace::GorillaPlayerLineButton::ButtonType buttonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::SetReportState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reportState), ::il2cpp_utils::ExtractType(buttonType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reportState, buttonType);
}
// Autogenerated method: GorillaPlayerScoreboardLine.GetUserLevel
void GlobalNamespace::GorillaPlayerScoreboardLine::GetUserLevel(::StringW myPlayFabeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::GetUserLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myPlayFabeId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, myPlayFabeId);
}
// Autogenerated method: GorillaPlayerScoreboardLine.ReportPlayer
void GlobalNamespace::GorillaPlayerScoreboardLine::ReportPlayer(::StringW PlayerID, ::GlobalNamespace::GorillaPlayerLineButton::ButtonType buttonType, ::StringW OtherPlayerNickName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::ReportPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(PlayerID), ::il2cpp_utils::ExtractType(buttonType), ::il2cpp_utils::ExtractType(OtherPlayerNickName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, PlayerID, buttonType, OtherPlayerNickName);
}
// Autogenerated method: GorillaPlayerScoreboardLine.MutePlayer
void GlobalNamespace::GorillaPlayerScoreboardLine::MutePlayer(::StringW PlayerID, ::StringW OtherPlayerNickName, int muting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::MutePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MutePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(PlayerID), ::il2cpp_utils::ExtractType(OtherPlayerNickName), ::il2cpp_utils::ExtractType(muting)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, PlayerID, OtherPlayerNickName, muting);
}
// Autogenerated method: GorillaPlayerScoreboardLine.NormalizeName
::StringW GlobalNamespace::GorillaPlayerScoreboardLine::NormalizeName(bool doIt, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::NormalizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doIt), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, doIt, text);
}
// Autogenerated method: GorillaPlayerScoreboardLine.<GetUserLevel>b__33_0
void GlobalNamespace::GorillaPlayerScoreboardLine::$GetUserLevel$b__33_0(::PlayFab::ClientModels::GetUserDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::<GetUserLevel>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserLevel>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaPlayerScoreboardLine/<UpdateLine>d__30
#include "GlobalNamespace/GorillaPlayerScoreboardLine_-UpdateLine-d__30.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPlayerScoreboardLine <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPlayerScoreboardLine*& GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPlayerScoreboardLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<UpdateLine>d__30.System.IDisposable.Dispose
void GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<UpdateLine>d__30.MoveNext
bool GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<UpdateLine>d__30.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<UpdateLine>d__30.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<UpdateLine>d__30.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPlayerScoreboardLine::$UpdateLine$d__30*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPlayerScoreboardLine/<>c
#include "GlobalNamespace/GorillaPlayerScoreboardLine_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaPlayerScoreboardLine/<>c <>9
::GlobalNamespace::GorillaPlayerScoreboardLine::$$c* GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlayerScoreboardLine::$$c*>("", "GorillaPlayerScoreboardLine/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaPlayerScoreboardLine/<>c <>9
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9(::GlobalNamespace::GorillaPlayerScoreboardLine::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaPlayerScoreboardLine/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__33_1
::System::Action_1<::PlayFab::PlayFabError*>* GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9__33_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9__33_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("", "GorillaPlayerScoreboardLine/<>c", "<>9__33_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__33_1
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9__33_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9__33_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaPlayerScoreboardLine/<>c", "<>9__33_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Char> <>9__36_0
::System::Predicate_1<::Il2CppChar>* GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9__36_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_get_$$9__36_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Il2CppChar>*>("", "GorillaPlayerScoreboardLine/<>c", "<>9__36_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Char> <>9__36_0
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9__36_0(::System::Predicate_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_set_$$9__36_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaPlayerScoreboardLine/<>c", "<>9__36_0", value)));
}
// Autogenerated method: GorillaPlayerScoreboardLine/<>c..cctor
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaPlayerScoreboardLine/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<>c.<GetUserLevel>b__33_1
void GlobalNamespace::GorillaPlayerScoreboardLine::$$c::$GetUserLevel$b__33_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::<GetUserLevel>b__33_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserLevel>b__33_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaPlayerScoreboardLine/<>c.<NormalizeName>b__36_0
bool GlobalNamespace::GorillaPlayerScoreboardLine::$$c::$NormalizeName$b__36_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerScoreboardLine::$$c::<NormalizeName>b__36_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NormalizeName>b__36_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
// Including type: GorillaPressableButton/<TestPressCheck>d__14
#include "GlobalNamespace/GorillaPressableButton_-TestPressCheck-d__14.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material pressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPressableButton::dyn_pressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_pressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material unpressedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::GorillaPressableButton::dyn_unpressedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_unpressedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unpressedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer buttonRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::GorillaPressableButton::dyn_buttonRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_buttonRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPressableButton::dyn_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_isOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debounceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPressableButton::dyn_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_debounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single touchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPressableButton::dyn_touchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_touchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPressableButton::dyn_testPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_testPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testHandLeft
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPressableButton::dyn_testHandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_testHandLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testHandLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String offText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPressableButton::dyn_offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String onText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPressableButton::dyn_onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text myText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPressableButton::dyn_myText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::dyn_myText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPressableButton.Start
void GlobalNamespace::GorillaPressableButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.OnEnable
void GlobalNamespace::GorillaPressableButton::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.OnDisable
void GlobalNamespace::GorillaPressableButton::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.TestPressCheck
::System::Collections::IEnumerator* GlobalNamespace::GorillaPressableButton::TestPressCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::TestPressCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPressCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.OnTriggerEnter
void GlobalNamespace::GorillaPressableButton::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: GorillaPressableButton.UpdateColor
void GlobalNamespace::GorillaPressableButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::UpdateColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.ButtonActivation
void GlobalNamespace::GorillaPressableButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton.ButtonActivationWithHand
void GlobalNamespace::GorillaPressableButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaPressableButton/<TestPressCheck>d__14
#include "GlobalNamespace/GorillaPressableButton_-TestPressCheck-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaPressableButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaPressableButton*& GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaPressableButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPressableButton/<TestPressCheck>d__14.System.IDisposable.Dispose
void GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton/<TestPressCheck>d__14.MoveNext
bool GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton/<TestPressCheck>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton/<TestPressCheck>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPressableButton/<TestPressCheck>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton::$TestPressCheck$d__14*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaRoomMonitor
#include "GlobalNamespace/GorillaRoomMonitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaScoreboardSpawner
#include "GlobalNamespace/GorillaScoreboardSpawner.hpp"
// Including type: GorillaScoreboardSpawner/<UpdateBoard>d__11
#include "GlobalNamespace/GorillaScoreboardSpawner_-UpdateBoard-d__11.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaScoreBoard
#include "GlobalNamespace/GorillaScoreBoard.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreboardSpawner::dyn_gameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_gameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeMMR
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardSpawner::dyn_includeMMR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_includeMMR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeMMR"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject scoreboardPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreboardSpawner::dyn_scoreboardPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_scoreboardPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreboardPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject notInRoomText
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreboardSpawner::dyn_notInRoomText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_notInRoomText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notInRoomText"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject controllingParentGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaScoreboardSpawner::dyn_controllingParentGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_controllingParentGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllingParentGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreboardSpawner::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaScoreBoard currentScoreboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaScoreBoard*& GlobalNamespace::GorillaScoreboardSpawner::dyn_currentScoreboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::dyn_currentScoreboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentScoreboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaScoreBoard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreboardSpawner.Awake
void GlobalNamespace::GorillaScoreboardSpawner::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.IsCurrentScoreboard
bool GlobalNamespace::GorillaScoreboardSpawner::IsCurrentScoreboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::IsCurrentScoreboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCurrentScoreboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.UpdateBoard
::System::Collections::IEnumerator* GlobalNamespace::GorillaScoreboardSpawner::UpdateBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::UpdateBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.OnJoinedRoom
void GlobalNamespace::GorillaScoreboardSpawner::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner.OnDisconnected
void GlobalNamespace::GorillaScoreboardSpawner::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: GorillaScoreboardSpawner.OnLeftRoom
void GlobalNamespace::GorillaScoreboardSpawner::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaScoreboardSpawner/<UpdateBoard>d__11
#include "GlobalNamespace/GorillaScoreboardSpawner_-UpdateBoard-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaScoreboardSpawner <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaScoreboardSpawner*& GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaScoreboardSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__11.System.IDisposable.Dispose
void GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__11.MoveNext
bool GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__11.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__11.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreboardSpawner/<UpdateBoard>d__11.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaScoreboardSpawner::$UpdateBoard$d__11*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaThrowableController
#include "GlobalNamespace/GorillaThrowableController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: GorillaThrowable
#include "GlobalNamespace/GorillaThrowable.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandController
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowableController::dyn_leftHandController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftHandController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandController"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandController
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowableController::dyn_rightHandController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightHandController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandController"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHandIsGrabbing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_leftHandIsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftHandIsGrabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandIsGrabbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightHandIsGrabbing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_rightHandIsGrabbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightHandIsGrabbing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandIsGrabbing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaThrowable leftHandGrabbedObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaThrowable*& GlobalNamespace::GorillaThrowableController::dyn_leftHandGrabbedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftHandGrabbedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandGrabbedObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaThrowable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaThrowable rightHandGrabbedObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaThrowable*& GlobalNamespace::GorillaThrowableController::dyn_rightHandGrabbedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightHandGrabbedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandGrabbedObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaThrowable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverVibrationStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverVibrationStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hoverVibrationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_hoverVibrationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hoverVibrationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_handRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_handRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice rightDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaThrowableController::dyn_rightDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_rightDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice leftDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaThrowableController::dyn_leftDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_leftDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice inputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaThrowableController::dyn_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_inputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single triggerValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_triggerValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_triggerValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean boolVar
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_boolVar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_boolVar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boolVar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] colliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::GorillaThrowableController::dyn_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider minCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaThrowableController::dyn_minCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_minCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider returnCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaThrowableController::dyn_returnCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_returnCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single magnitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowableController::dyn_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_magnitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "magnitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testCanGrab
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowableController::dyn_testCanGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::dyn_testCanGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testCanGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaThrowableController.Start
void GlobalNamespace::GorillaThrowableController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowableController.LateUpdate
void GlobalNamespace::GorillaThrowableController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowableController.CheckIfHandHasReleased
bool GlobalNamespace::GorillaThrowableController::CheckIfHandHasReleased(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::CheckIfHandHasReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfHandHasReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: GorillaThrowableController.CheckIfHandHasGrabbed
bool GlobalNamespace::GorillaThrowableController::CheckIfHandHasGrabbed(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::CheckIfHandHasGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfHandHasGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: GorillaThrowableController.CanGrabAnObject
bool GlobalNamespace::GorillaThrowableController::CanGrabAnObject(::UnityEngine::Transform* handTransform, ByRef<::UnityEngine::Collider*> returnCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::CanGrabAnObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanGrabAnObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handTransform), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Collider*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, handTransform, byref(returnCollider));
}
// Autogenerated method: GorillaThrowableController.GrabbableObjectHover
void GlobalNamespace::GorillaThrowableController::GrabbableObjectHover(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowableController::GrabbableObjectHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrabbableObjectHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTriggerColliderHandIndicator
#include "GlobalNamespace/GorillaTriggerColliderHandIndicator.hpp"
// Including type: GorillaThrowableController
#include "GlobalNamespace/GorillaThrowableController.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_isLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_isLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaThrowableController throwableController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaThrowableController*& GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_throwableController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::dyn_throwableController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwableController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaThrowableController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerColliderHandIndicator.LateUpdate
void GlobalNamespace::GorillaTriggerColliderHandIndicator::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerColliderHandIndicator.OnTriggerEnter
void GlobalNamespace::GorillaTriggerColliderHandIndicator::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerColliderHandIndicator::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTurnSlider
#include "GlobalNamespace/GorillaTurnSlider.hpp"
// Including type: GorillaTurning
#include "GlobalNamespace/GorillaTurning.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single zRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_zRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_zRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTurning gorillaTurn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTurning*& GlobalNamespace::GorillaTurnSlider::dyn_gorillaTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_gorillaTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gorillaTurn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTurning**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startingZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaTurnSlider::dyn_startingZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_startingZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTurnSlider::dyn_startingLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::dyn_startingLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTurnSlider.Awake
void GlobalNamespace::GorillaTurnSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTurnSlider.FixedUpdate
void GlobalNamespace::GorillaTurnSlider::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTurnSlider.SetPosition
void GlobalNamespace::GorillaTurnSlider::SetPosition(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: GorillaTurnSlider.InterpolateValue
float GlobalNamespace::GorillaTurnSlider::InterpolateValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::InterpolateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: GorillaTurnSlider.OnSliderRelease
void GlobalNamespace::GorillaTurnSlider::OnSliderRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTurnSlider::OnSliderRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSliderRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaEnemyAI
#include "GlobalNamespace/GorillaEnemyAI.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AI.NavMeshAgent
#include "UnityEngine/AI/NavMeshAgent.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: ExitGames.Client.Photon.Hashtable
#include "ExitGames/Client/Photon/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform playerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaEnemyAI::dyn_playerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_playerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshAgent agent
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshAgent*& GlobalNamespace::GorillaEnemyAI::dyn_agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_agent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agent"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshAgent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody r
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaEnemyAI::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaEnemyAI::dyn_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaEnemyAI::dyn_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaEnemyAI::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaEnemyAI.Start
void GlobalNamespace::GorillaEnemyAI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEnemyAI.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::GorillaEnemyAI::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaEnemyAI.Update
void GlobalNamespace::GorillaEnemyAI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEnemyAI.FindClosestPlayer
void GlobalNamespace::GorillaEnemyAI::FindClosestPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::FindClosestPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindClosestPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaEnemyAI.OnCollisionEnter
void GlobalNamespace::GorillaEnemyAI::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newMasterClient);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertiesThatChanged);
}
// Autogenerated method: GorillaEnemyAI.Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
void GlobalNamespace::GorillaEnemyAI::Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaEnemyAI::Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaEnemyAI*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPlayer, changedProps);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaEnemySpawner
#include "GlobalNamespace/GorillaEnemySpawner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaFireball
#include "GlobalNamespace/GorillaFireball.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single maxExplosionScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_maxExplosionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_maxExplosionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxExplosionScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single totalExplosionTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_totalExplosionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_totalExplosionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalExplosionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gravityStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_gravityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_gravityStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravityStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canExplode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaFireball::dyn_canExplode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_canExplode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canExplode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single explosionStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireball::dyn_explosionStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::dyn_explosionStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "explosionStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaFireball.Update
void GlobalNamespace::GorillaFireball::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.LocalExplode
void GlobalNamespace::GorillaFireball::LocalExplode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::LocalExplode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalExplode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.OnPhotonInstantiate
void GlobalNamespace::GorillaFireball::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaFireball*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaFireball.Explode
void GlobalNamespace::GorillaFireball::Explode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::Explode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Explode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.Start
void GlobalNamespace::GorillaFireball::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.LateUpdate
void GlobalNamespace::GorillaFireball::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.ThrowThisThingo
void GlobalNamespace::GorillaFireball::ThrowThisThingo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::ThrowThisThingo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireball.OnCollisionEnter
void GlobalNamespace::GorillaFireball::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireball::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaFireballControllerManager
#include "GlobalNamespace/GorillaFireballControllerManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaFireballControllerManager::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputDevice rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::GorillaFireballControllerManager::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaFireballControllerManager::dyn_hasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_hasInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single leftHandLastState
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireballControllerManager::dyn_leftHandLastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_leftHandLastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandLastState"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightHandLastState
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireballControllerManager::dyn_rightHandLastState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_rightHandLastState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandLastState"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwingThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaFireballControllerManager::dyn_throwingThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::dyn_throwingThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwingThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaFireballControllerManager.Update
void GlobalNamespace::GorillaFireballControllerManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFireballControllerManager.TryThrowFireball
void GlobalNamespace::GorillaFireballControllerManager::TryThrowFireball(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::TryThrowFireball");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryThrowFireball", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated method: GorillaFireballControllerManager.CreateFireball
void GlobalNamespace::GorillaFireballControllerManager::CreateFireball(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFireballControllerManager::CreateFireball");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFireball", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPVEManager
#include "GlobalNamespace/GorillaPVEManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaThrowable
#include "GlobalNamespace/GorillaThrowable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 trackingHistorySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_trackingHistorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_trackingHistorySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingHistorySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_throwMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_throwMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single throwMagnitudeLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_throwMagnitudeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_throwMagnitudeLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "throwMagnitudeLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] velocityHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_velocityHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_velocityHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] headsetVelocityHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_headsetVelocityHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_headsetVelocityHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetVelocityHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] positionHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_positionHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_positionHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] headsetPositionHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_headsetPositionHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_headsetPositionHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetPositionHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] rotationHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_rotationHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_rotationHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] rotationalVelocityHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaThrowable::dyn_rotationalVelocityHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_rotationalVelocityHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationalVelocityHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_previousPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_previousPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_previousRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_previousRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 previousHeadsetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_previousHeadsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_previousHeadsetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousHeadsetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentHeadsetVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_currentHeadsetVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentHeadsetVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentHeadsetVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentRotationalVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_currentRotationalVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_currentRotationalVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRotationalVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 denormalizedVelocityAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_denormalizedVelocityAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_denormalizedVelocityAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "denormalizedVelocityAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 denormalizedHeadsetVelocityAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_denormalizedHeadsetVelocityAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_denormalizedHeadsetVelocityAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "denormalizedHeadsetVelocityAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 denormalizedRotationalVelocityAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_denormalizedRotationalVelocityAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_denormalizedRotationalVelocityAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "denormalizedRotationalVelocityAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowable::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion targetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaThrowable::dyn_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean initialLerp
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_initialLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_initialLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialLerp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpDistanceLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_lerpDistanceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_lerpDistanceLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpDistanceLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isHeld
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_isHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_isHeld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isHeld"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaThrowable::dyn_rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 loopIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_loopIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_loopIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform transformToFollow
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowable::dyn_transformToFollow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_transformToFollow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformToFollow"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaThrowable::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion offsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::GorillaThrowable::dyn_offsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_offsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::GorillaThrowable::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 timeLastReceived
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_timeLastReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_timeLastReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeLastReceived"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean synchThrow
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_synchThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_synchThrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synchThrow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tempFloat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_tempFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_tempFloat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempFloat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform grabbingTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaThrowable::dyn_grabbingTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_grabbingTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grabbingTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pickupLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_pickupLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_pickupLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickupLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_minVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_minVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_maxVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_maxVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_minVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_minVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_maxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLinear
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaThrowable::dyn_isLinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_isLinear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLinear"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single linearMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_linearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_linearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linearMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single exponThrowMultMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowable::dyn_exponThrowMultMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_exponThrowMultMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exponThrowMultMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bounceAudioClip
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaThrowable::dyn_bounceAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::dyn_bounceAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bounceAudioClip"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaThrowable.Start
void GlobalNamespace::GorillaThrowable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.LateUpdate
void GlobalNamespace::GorillaThrowable::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.IsHandPushing
void GlobalNamespace::GorillaThrowable::IsHandPushing(::UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::IsHandPushing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHandPushing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: GorillaThrowable.StoreHistories
void GlobalNamespace::GorillaThrowable::StoreHistories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::StoreHistories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreHistories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.Grabbed
void GlobalNamespace::GorillaThrowable::Grabbed(::UnityEngine::Transform* grabTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::Grabbed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grabTransform);
}
// Autogenerated method: GorillaThrowable.ThrowThisThingo
void GlobalNamespace::GorillaThrowable::ThrowThisThingo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::ThrowThisThingo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaThrowable.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::GorillaThrowable::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: GorillaThrowable.OnCollisionEnter
void GlobalNamespace::GorillaThrowable::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::OnCollisionEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: GorillaThrowable.PlaySurfaceHit
void GlobalNamespace::GorillaThrowable::PlaySurfaceHit(int soundIndex, float tapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::PlaySurfaceHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySurfaceHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(tapVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, tapVolume);
}
// Autogenerated method: GorillaThrowable.InterpolateVolume
float GlobalNamespace::GorillaThrowable::InterpolateVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowable::InterpolateVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpolateVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaThrowingRock
#include "GlobalNamespace/GorillaThrowingRock.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single bonkSpeedMin
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonkSpeedMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bonkSpeedMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::dyn_bonkSpeedMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonkSpeedMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig hitRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaThrowingRock::dyn_hitRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::dyn_hitRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaThrowingRock.OnPhotonInstantiate
void GlobalNamespace::GorillaThrowingRock::OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowingRock*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaThrowingRock.OnTriggerEnter
void GlobalNamespace::GorillaThrowingRock::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaThrowingRock.OnCollisionEnter
void GlobalNamespace::GorillaThrowingRock::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaThrowingRock::OnCollisionEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaThrowable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoundPostMuteButton
#include "GlobalNamespace/SoundPostMuteButton.hpp"
// Including type: SynchedMusicController
#include "GlobalNamespace/SynchedMusicController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SynchedMusicController[] musicControllers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SynchedMusicController*>& GlobalNamespace::SoundPostMuteButton::dyn_musicControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundPostMuteButton::dyn_musicControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "musicControllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SynchedMusicController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoundPostMuteButton.ButtonActivation
void GlobalNamespace::SoundPostMuteButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundPostMuteButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnlockCompButton
#include "GlobalNamespace/UnlockCompButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::UnlockCompButton::dyn_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::dyn_gameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::UnlockCompButton::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnlockCompButton.Update
void GlobalNamespace::UnlockCompButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnlockCompButton.Start
void GlobalNamespace::UnlockCompButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnlockCompButton.ButtonActivation
void GlobalNamespace::UnlockCompButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnlockCompButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRRigLookupTableGenerator
#include "GlobalNamespace/VRRigLookupTableGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRRigLookupTableGenerator.Start
void GlobalNamespace::VRRigLookupTableGenerator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigLookupTableGenerator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRigLookupTableGenerator.Update
void GlobalNamespace::VRRigLookupTableGenerator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRigLookupTableGenerator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaFriendCollider
#include "GlobalNamespace/GorillaFriendCollider.hpp"
// Including type: GorillaFriendCollider/<UpdatePlayersInSphere>d__5
#include "GlobalNamespace/GorillaFriendCollider_-UpdatePlayersInSphere-d__5.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> playerIDsCurrentlyTouching
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GorillaFriendCollider::dyn_playerIDsCurrentlyTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::dyn_playerIDsCurrentlyTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerIDsCurrentlyTouching"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CapsuleCollider thisCapsule
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::GorillaFriendCollider::dyn_thisCapsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::dyn_thisCapsule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisCapsule"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] myAllowedMapsToJoin
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::GorillaFriendCollider::dyn_myAllowedMapsToJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::dyn_myAllowedMapsToJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myAllowedMapsToJoin"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider[] overlapColliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::GorillaFriendCollider::dyn_overlapColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::dyn_overlapColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlapColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaFriendCollider.Awake
void GlobalNamespace::GorillaFriendCollider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFriendCollider.UpdatePlayersInSphere
::System::Collections::IEnumerator* GlobalNamespace::GorillaFriendCollider::UpdatePlayersInSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::UpdatePlayersInSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayersInSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaFriendCollider/<UpdatePlayersInSphere>d__5
#include "GlobalNamespace/GorillaFriendCollider_-UpdatePlayersInSphere-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaFriendCollider <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaFriendCollider*& GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaFriendCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaFriendCollider/<UpdatePlayersInSphere>d__5.System.IDisposable.Dispose
void GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFriendCollider/<UpdatePlayersInSphere>d__5.MoveNext
bool GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFriendCollider/<UpdatePlayersInSphere>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFriendCollider/<UpdatePlayersInSphere>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaFriendCollider/<UpdatePlayersInSphere>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaFriendCollider::$UpdatePlayersInSphere$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaInfectionCount
#include "GlobalNamespace/GorillaInfectionCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworkLeaveTutorialTrigger
#include "GlobalNamespace/GorillaNetworkLeaveTutorialTrigger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaNetworkLeaveTutorialTrigger.OnBoxTriggered
void GlobalNamespace::GorillaNetworkLeaveTutorialTrigger::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkLeaveTutorialTrigger::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworkPrivateTestJoin
#include "GlobalNamespace/GorillaNetworkPrivateTestJoin.hpp"
// Including type: GorillaNetworkPrivateTestJoin/<GracePeriod>d__15
#include "GlobalNamespace/GorillaNetworkPrivateTestJoin_-GracePeriod-d__15.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaNetworking.PhotonNetworkController
#include "GorillaNetworking/PhotonNetworkController.hpp"
// Including type: GorillaLevelScreen
#include "GlobalNamespace/GorillaLevelScreen.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsDisabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_makeSureThisIsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_makeSureThisIsDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsDisabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsEnabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_makeSureThisIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_makeSureThisIsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsEnabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String gameModeName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_gameModeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_gameModeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameModeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.PhotonNetworkController photonNetworkController
[[deprecated("Use field access instead!")]] ::GorillaNetworking::PhotonNetworkController*& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_photonNetworkController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_photonNetworkController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonNetworkController"))->offset;
  return *reinterpret_cast<::GorillaNetworking::PhotonNetworkController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String componentTypeToAdd
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_componentTypeToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_componentTypeToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTypeToAdd"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject componentTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_componentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_componentTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLevelScreen[] joinScreens
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaLevelScreen*>& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_joinScreens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_joinScreens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinScreens"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaLevelScreen*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaLevelScreen[] leaveScreens
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaLevelScreen*>& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_leaveScreens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_leaveScreens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaveScreens"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaLevelScreen*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform tosPition
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_tosPition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_tosPition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tosPition"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform othsTosPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_othsTosPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_othsTosPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "othsTosPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Pun.PhotonView fotVew
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_fotVew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_fotVew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fotVew"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean waiting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::dyn_waiting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waiting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin.Awake
void GlobalNamespace::GorillaNetworkPrivateTestJoin::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin.LateUpdate
void GlobalNamespace::GorillaNetworkPrivateTestJoin::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin.GracePeriod
::System::Collections::IEnumerator* GlobalNamespace::GorillaNetworkPrivateTestJoin::GracePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::GracePeriod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GracePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworkPrivateTestJoin/<GracePeriod>d__15
#include "GlobalNamespace/GorillaNetworkPrivateTestJoin_-GracePeriod-d__15.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworkPrivateTestJoin <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaNetworkPrivateTestJoin*& GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaNetworkPrivateTestJoin**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin/<GracePeriod>d__15.System.IDisposable.Dispose
void GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin/<GracePeriod>d__15.MoveNext
bool GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin/<GracePeriod>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin/<GracePeriod>d__15.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworkPrivateTestJoin/<GracePeriod>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaNetworkPrivateTestJoin::$GracePeriod$d__15*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CopyMaterialScript
#include "GlobalNamespace/CopyMaterialScript.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer sourceToCopyMaterialFrom
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::CopyMaterialScript::dyn_sourceToCopyMaterialFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CopyMaterialScript::dyn_sourceToCopyMaterialFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceToCopyMaterialFrom"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer mySkinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::CopyMaterialScript::dyn_mySkinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CopyMaterialScript::dyn_mySkinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mySkinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CopyMaterialScript.Start
void GlobalNamespace::CopyMaterialScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CopyMaterialScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CopyMaterialScript.Update
void GlobalNamespace::CopyMaterialScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CopyMaterialScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamManager
#include "GlobalNamespace/SteamManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamManager.get_Initialized
bool GlobalNamespace::SteamManager::get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamManager::get_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamManager", "get_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PositionVolumeModifier
#include "GlobalNamespace/PositionVolumeModifier.hpp"
// Including type: TimeOfDayDependentAudio
#include "GlobalNamespace/TimeOfDayDependentAudio.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TimeOfDayDependentAudio audioToMod
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeOfDayDependentAudio*& GlobalNamespace::PositionVolumeModifier::dyn_audioToMod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PositionVolumeModifier::dyn_audioToMod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioToMod"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimeOfDayDependentAudio**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PositionVolumeModifier.OnTriggerStay
void GlobalNamespace::PositionVolumeModifier::OnTriggerStay(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PositionVolumeModifier::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimeOfDayDependentAudio
#include "GlobalNamespace/TimeOfDayDependentAudio.hpp"
// Including type: TimeOfDayDependentAudio/<UpdateTimeOfDay>d__22
#include "GlobalNamespace/TimeOfDayDependentAudio_-UpdateTimeOfDay-d__22.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource[] audioSources
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioSource*>& GlobalNamespace::TimeOfDayDependentAudio::dyn_audioSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_audioSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSources"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioSource*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] volumes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::TimeOfDayDependentAudio::dyn_volumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_volumes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TimeOfDayDependentAudio::dyn_currentVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_currentVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stepTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TimeOfDayDependentAudio::dyn_stepTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_stepTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BetterDayNightManager/WeatherType myWeather
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetterDayNightManager::WeatherType& GlobalNamespace::TimeOfDayDependentAudio::dyn_myWeather() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_myWeather");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myWeather"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetterDayNightManager::WeatherType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject dependentStuff
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TimeOfDayDependentAudio::dyn_dependentStuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_dependentStuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dependentStuff"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject timeOfDayDependent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::TimeOfDayDependentAudio::dyn_timeOfDayDependent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_timeOfDayDependent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeOfDayDependent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includesAudio
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TimeOfDayDependentAudio::dyn_includesAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_includesAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includesAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem myParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::TimeOfDayDependentAudio::dyn_myParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_myParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startingEmissionRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TimeOfDayDependentAudio::dyn_startingEmissionRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_startingEmissionRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingEmissionRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastEmission
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TimeOfDayDependentAudio::dyn_lastEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_lastEmission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastEmission"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextEmission
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TimeOfDayDependentAudio::dyn_nextEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_nextEmission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextEmission"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/MinMaxCurve newCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem::MinMaxCurve& GlobalNamespace::TimeOfDayDependentAudio::dyn_newCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_newCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::MinMaxCurve*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/EmissionModule myEmissionModule
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem::EmissionModule& GlobalNamespace::TimeOfDayDependentAudio::dyn_myEmissionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_myEmissionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myEmissionModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single newRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TimeOfDayDependentAudio::dyn_newRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_newRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionMultiplierSet
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TimeOfDayDependentAudio::dyn_positionMultiplierSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_positionMultiplierSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionMultiplierSet"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TimeOfDayDependentAudio::dyn_positionMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_positionMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isModified
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TimeOfDayDependentAudio::dyn_isModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::dyn_isModified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isModified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TimeOfDayDependentAudio.Awake
void GlobalNamespace::TimeOfDayDependentAudio::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio.OnDisable
void GlobalNamespace::TimeOfDayDependentAudio::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio.OnEnable
void GlobalNamespace::TimeOfDayDependentAudio::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio.FixedUpdate
void GlobalNamespace::TimeOfDayDependentAudio::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio.UpdateTimeOfDay
::System::Collections::IEnumerator* GlobalNamespace::TimeOfDayDependentAudio::UpdateTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::UpdateTimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TimeOfDayDependentAudio/<UpdateTimeOfDay>d__22
#include "GlobalNamespace/TimeOfDayDependentAudio_-UpdateTimeOfDay-d__22.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TimeOfDayDependentAudio <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeOfDayDependentAudio*& GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimeOfDayDependentAudio**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TimeOfDayDependentAudio/<UpdateTimeOfDay>d__22.System.IDisposable.Dispose
void GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio/<UpdateTimeOfDay>d__22.MoveNext
bool GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio/<UpdateTimeOfDay>d__22.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio/<UpdateTimeOfDay>d__22.System.Collections.IEnumerator.Reset
void GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeOfDayDependentAudio/<UpdateTimeOfDay>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TimeOfDayDependentAudio::$UpdateTimeOfDay$d__22*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PublicKeyConvert.PEMKeyLoader
#include "PublicKeyConvert/PEMKeyLoader.hpp"
// Including type: System.Security.Cryptography.RSACryptoServiceProvider
#include "System/Security/Cryptography/RSACryptoServiceProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] SeqOID
::ArrayW<uint8_t> PublicKeyConvert::PEMKeyLoader::_get_SeqOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PublicKeyConvert::PEMKeyLoader::_get_SeqOID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("PublicKeyConvert", "PEMKeyLoader", "SeqOID"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] SeqOID
void PublicKeyConvert::PEMKeyLoader::_set_SeqOID(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PublicKeyConvert::PEMKeyLoader::_set_SeqOID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PublicKeyConvert", "PEMKeyLoader", "SeqOID", value));
}
// Autogenerated method: PublicKeyConvert.PEMKeyLoader.CompareBytearrays
bool PublicKeyConvert::PEMKeyLoader::CompareBytearrays(::ArrayW<uint8_t> a, ::ArrayW<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PublicKeyConvert::PEMKeyLoader::CompareBytearrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PublicKeyConvert", "PEMKeyLoader", "CompareBytearrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: PublicKeyConvert.PEMKeyLoader.CryptoServiceProviderFromPublicKeyInfo
::System::Security::Cryptography::RSACryptoServiceProvider* PublicKeyConvert::PEMKeyLoader::CryptoServiceProviderFromPublicKeyInfo(::ArrayW<uint8_t> x509key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PublicKeyConvert::PEMKeyLoader::CryptoServiceProviderFromPublicKeyInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PublicKeyConvert", "PEMKeyLoader", "CryptoServiceProviderFromPublicKeyInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x509key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSACryptoServiceProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x509key);
}
// Autogenerated method: PublicKeyConvert.PEMKeyLoader.CryptoServiceProviderFromPublicKeyInfo
::System::Security::Cryptography::RSACryptoServiceProvider* PublicKeyConvert::PEMKeyLoader::CryptoServiceProviderFromPublicKeyInfo(::StringW base64EncodedKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PublicKeyConvert::PEMKeyLoader::CryptoServiceProviderFromPublicKeyInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PublicKeyConvert", "PEMKeyLoader", "CryptoServiceProviderFromPublicKeyInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(base64EncodedKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSACryptoServiceProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, base64EncodedKey);
}
// Autogenerated method: PublicKeyConvert.PEMKeyLoader..cctor
void PublicKeyConvert::PEMKeyLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PublicKeyConvert::PEMKeyLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PublicKeyConvert", "PEMKeyLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.MainThreadDispatcher
#include "Viveport/MainThreadDispatcher.hpp"
// Including type: Viveport.MainThreadDispatcher/<>c__DisplayClass6_0
#include "Viveport/MainThreadDispatcher_--c__DisplayClass6_0.hpp"
// Including type: Viveport.MainThreadDispatcher/<ActionWrapper>d__12
#include "Viveport/MainThreadDispatcher_-ActionWrapper-d__12.hpp"
// Including type: Viveport.MainThreadDispatcher/<ActionWrapper>d__13`1
#include "Viveport/MainThreadDispatcher_-ActionWrapper-d__13_1.hpp"
// Including type: Viveport.MainThreadDispatcher/<ActionWrapper>d__14`2
#include "Viveport/MainThreadDispatcher_-ActionWrapper-d__14_2.hpp"
// Including type: Viveport.MainThreadDispatcher/<ActionWrapper>d__15`3
#include "Viveport/MainThreadDispatcher_-ActionWrapper-d__15_3.hpp"
// Including type: Viveport.MainThreadDispatcher/<ActionWrapper>d__16`4
#include "Viveport/MainThreadDispatcher_-ActionWrapper-d__16_4.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Queue`1<System.Action> actions
::System::Collections::Generic::Queue_1<::System::Action*>* Viveport::MainThreadDispatcher::_get_actions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::_get_actions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::System::Action*>*>("Viveport", "MainThreadDispatcher", "actions"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Queue`1<System.Action> actions
void Viveport::MainThreadDispatcher::_set_actions(::System::Collections::Generic::Queue_1<::System::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::_set_actions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "MainThreadDispatcher", "actions", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.MainThreadDispatcher instance
::Viveport::MainThreadDispatcher* Viveport::MainThreadDispatcher::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::MainThreadDispatcher*>("Viveport", "MainThreadDispatcher", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.MainThreadDispatcher instance
void Viveport::MainThreadDispatcher::_set_instance(::Viveport::MainThreadDispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "MainThreadDispatcher", "instance", value));
}
// Autogenerated method: Viveport.MainThreadDispatcher.Awake
void Viveport::MainThreadDispatcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher.Update
void Viveport::MainThreadDispatcher::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher.Instance
::Viveport::MainThreadDispatcher* Viveport::MainThreadDispatcher::Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "MainThreadDispatcher", "Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::MainThreadDispatcher*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher.OnDestroy
void Viveport::MainThreadDispatcher::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher.Enqueue
void Viveport::MainThreadDispatcher::Enqueue(::System::Collections::IEnumerator* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Viveport.MainThreadDispatcher.Enqueue
void Viveport::MainThreadDispatcher::Enqueue(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Viveport.MainThreadDispatcher.ActionWrapper
::System::Collections::IEnumerator* Viveport::MainThreadDispatcher::ActionWrapper(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::ActionWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, action);
}
// Autogenerated method: Viveport.MainThreadDispatcher..cctor
void Viveport::MainThreadDispatcher::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "MainThreadDispatcher", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.MainThreadDispatcher/<>c__DisplayClass6_0
#include "Viveport/MainThreadDispatcher_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Viveport.MainThreadDispatcher <>4__this
[[deprecated("Use field access instead!")]] ::Viveport::MainThreadDispatcher*& Viveport::MainThreadDispatcher::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Viveport::MainThreadDispatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.IEnumerator action
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Viveport::MainThreadDispatcher::$$c__DisplayClass6_0::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$$c__DisplayClass6_0::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.MainThreadDispatcher/<>c__DisplayClass6_0.<Enqueue>b__0
void Viveport::MainThreadDispatcher::$$c__DisplayClass6_0::$Enqueue$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$$c__DisplayClass6_0::<Enqueue>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Enqueue>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.MainThreadDispatcher/<ActionWrapper>d__12
#include "Viveport/MainThreadDispatcher_-ActionWrapper-d__12.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Viveport::MainThreadDispatcher::$ActionWrapper$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Viveport::MainThreadDispatcher::$ActionWrapper$d__12::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& Viveport::MainThreadDispatcher::$ActionWrapper$d__12::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.MainThreadDispatcher/<ActionWrapper>d__12.System.IDisposable.Dispose
void Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::MainThreadDispatcher::$ActionWrapper$d__12*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher/<ActionWrapper>d__12.MoveNext
bool Viveport::MainThreadDispatcher::$ActionWrapper$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::MainThreadDispatcher::$ActionWrapper$d__12*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher/<ActionWrapper>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::MainThreadDispatcher::$ActionWrapper$d__12*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher/<ActionWrapper>d__12.System.Collections.IEnumerator.Reset
void Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::MainThreadDispatcher::$ActionWrapper$d__12*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.MainThreadDispatcher/<ActionWrapper>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::MainThreadDispatcher::$ActionWrapper$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::MainThreadDispatcher::$ActionWrapper$d__12*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Locale
#include "Viveport/Locale.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Locale US
::Viveport::Locale Viveport::Locale::_get_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "US"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale US
void Viveport::Locale::_set_US(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "US", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Locale DE
::Viveport::Locale Viveport::Locale::_get_DE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_DE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "DE"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale DE
void Viveport::Locale::_set_DE(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_DE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "DE", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Locale JP
::Viveport::Locale Viveport::Locale::_get_JP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_JP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "JP"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale JP
void Viveport::Locale::_set_JP(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_JP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "JP", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Locale KR
::Viveport::Locale Viveport::Locale::_get_KR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_KR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "KR"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale KR
void Viveport::Locale::_set_KR(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_KR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "KR", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Locale RU
::Viveport::Locale Viveport::Locale::_get_RU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_RU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "RU"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale RU
void Viveport::Locale::_set_RU(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_RU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "RU", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Locale CN
::Viveport::Locale Viveport::Locale::_get_CN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_CN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "CN"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale CN
void Viveport::Locale::_set_CN(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_CN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "CN", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Locale TW
::Viveport::Locale Viveport::Locale::_get_TW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_TW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "TW"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale TW
void Viveport::Locale::_set_TW(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_TW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "TW", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Locale FR
::Viveport::Locale Viveport::Locale::_get_FR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_get_FR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Locale>("Viveport", "Locale", "FR"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Locale FR
void Viveport::Locale::_set_FR(::Viveport::Locale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::_set_FR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Locale", "FR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Locale::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Locale::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.StatusCallback
#include "Viveport/StatusCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.StatusCallback.Invoke
void Viveport::StatusCallback::Invoke(int nResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::StatusCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::StatusCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nResult);
}
// Autogenerated method: Viveport.StatusCallback.BeginInvoke
::System::IAsyncResult* Viveport::StatusCallback::BeginInvoke(int nResult, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::StatusCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::StatusCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, nResult, callback, object);
}
// Autogenerated method: Viveport.StatusCallback.EndInvoke
void Viveport::StatusCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::StatusCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::StatusCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.StatusCallback2
#include "Viveport/StatusCallback2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.StatusCallback2.Invoke
void Viveport::StatusCallback2::Invoke(int nResult, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::StatusCallback2::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::StatusCallback2*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nResult, message);
}
// Autogenerated method: Viveport.StatusCallback2.BeginInvoke
::System::IAsyncResult* Viveport::StatusCallback2::BeginInvoke(int nResult, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::StatusCallback2::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::StatusCallback2*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, nResult, message, callback, object);
}
// Autogenerated method: Viveport.StatusCallback2.EndInvoke
void Viveport::StatusCallback2::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::StatusCallback2::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::StatusCallback2*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.QueryRuntimeModeCallback
#include "Viveport/QueryRuntimeModeCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.QueryRuntimeModeCallback.Invoke
void Viveport::QueryRuntimeModeCallback::Invoke(int nResult, int emu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::QueryRuntimeModeCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::QueryRuntimeModeCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nResult, emu);
}
// Autogenerated method: Viveport.QueryRuntimeModeCallback.BeginInvoke
::System::IAsyncResult* Viveport::QueryRuntimeModeCallback::BeginInvoke(int nResult, int emu, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::QueryRuntimeModeCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::QueryRuntimeModeCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, nResult, emu, callback, object);
}
// Autogenerated method: Viveport.QueryRuntimeModeCallback.EndInvoke
void Viveport::QueryRuntimeModeCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::QueryRuntimeModeCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::QueryRuntimeModeCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Leaderboard
#include "Viveport/Leaderboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Rank>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::Leaderboard::dyn_$Rank$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::dyn_$Rank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rank>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Score>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::Leaderboard::dyn_$Score$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::dyn_$Score$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Score>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <UserName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::Leaderboard::dyn_$UserName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::dyn_$UserName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.Leaderboard.get_Rank
int Viveport::Leaderboard::get_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::get_Rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.Leaderboard.set_Rank
void Viveport::Leaderboard::set_Rank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::set_Rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.Leaderboard.get_Score
int Viveport::Leaderboard::get_Score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::get_Score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.Leaderboard.set_Score
void Viveport::Leaderboard::set_Score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::set_Score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.Leaderboard.get_UserName
::StringW Viveport::Leaderboard::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.Leaderboard.set_UserName
void Viveport::Leaderboard::set_UserName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Leaderboard::set_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.SubscriptionStatus
#include "Viveport/SubscriptionStatus.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Viveport.SubscriptionStatus/Platform> <Platforms>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Viveport::SubscriptionStatus::Platform>*& Viveport::SubscriptionStatus::dyn_$Platforms$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::dyn_$Platforms$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Platforms>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Viveport::SubscriptionStatus::Platform>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Viveport.SubscriptionStatus/TransactionType <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::Viveport::SubscriptionStatus::TransactionType& Viveport::SubscriptionStatus::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::Viveport::SubscriptionStatus::TransactionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.SubscriptionStatus.get_Platforms
::System::Collections::Generic::List_1<::Viveport::SubscriptionStatus::Platform>* Viveport::SubscriptionStatus::get_Platforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::get_Platforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Platforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Viveport::SubscriptionStatus::Platform>*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.SubscriptionStatus.set_Platforms
void Viveport::SubscriptionStatus::set_Platforms(::System::Collections::Generic::List_1<::Viveport::SubscriptionStatus::Platform>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::set_Platforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Platforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.SubscriptionStatus.get_Type
::Viveport::SubscriptionStatus::TransactionType Viveport::SubscriptionStatus::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::SubscriptionStatus::TransactionType, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.SubscriptionStatus.set_Type
void Viveport::SubscriptionStatus::set_Type(::Viveport::SubscriptionStatus::TransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
