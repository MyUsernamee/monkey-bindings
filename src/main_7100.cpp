// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/LoopMode
#include "UnityEngine/Timeline/AnimationPlayableAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [TooltipAttribute] Offset: 0xADC258
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode UseSourceAsset
::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_UseSourceAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_UseSourceAsset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "UseSourceAsset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode UseSourceAsset
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_UseSourceAsset(::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_UseSourceAsset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "UseSourceAsset", value));
}
// [TooltipAttribute] Offset: 0xADC290
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode On
::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "On"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode On
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_On(::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "On", value));
}
// [TooltipAttribute] Offset: 0xADC2C8
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode Off
::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode Off
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_Off(::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade
#include "UnityEngine/Timeline/AnimationPlayableAsset_AnimationPlayableAssetUpgrade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade.ConvertRotationToEuler
void UnityEngine::Timeline::AnimationPlayableAsset::AnimationPlayableAssetUpgrade::ConvertRotationToEuler(::UnityEngine::Timeline::AnimationPlayableAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::AnimationPlayableAssetUpgrade::ConvertRotationToEuler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset/AnimationPlayableAssetUpgrade", "ConvertRotationToEuler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45
#include "UnityEngine/Timeline/AnimationPlayableAsset_-get_outputs-d__45.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.AnimationPlayableAsset <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::AnimationPlayableAsset*& UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::AnimationPlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.IDisposable.Dispose
void UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.MoveNext
bool UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
::UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MatchTargetFields
#include "UnityEngine/Timeline/MatchTargetFields.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionX
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_get_PositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionX
void UnityEngine::Timeline::MatchTargetFields::_set_PositionX(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_set_PositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionY
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_get_PositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionY
void UnityEngine::Timeline::MatchTargetFields::_set_PositionY(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_set_PositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionZ
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_get_PositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionZ
void UnityEngine::Timeline::MatchTargetFields::_set_PositionZ(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_set_PositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationX
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_get_RotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationX
void UnityEngine::Timeline::MatchTargetFields::_set_RotationX(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_set_RotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationY
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_get_RotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationY
void UnityEngine::Timeline::MatchTargetFields::_set_RotationY(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_set_RotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationZ
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_get_RotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationZ
void UnityEngine::Timeline::MatchTargetFields::_set_RotationZ(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::_set_RotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationZ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::MatchTargetFields::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFields::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackOffset
#include "UnityEngine/Timeline/TrackOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset ApplyTransformOffsets
::UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_ApplyTransformOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackOffset::_get_ApplyTransformOffsets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "ApplyTransformOffsets"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset ApplyTransformOffsets
void UnityEngine::Timeline::TrackOffset::_set_ApplyTransformOffsets(::UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackOffset::_set_ApplyTransformOffsets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "ApplyTransformOffsets", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset ApplySceneOffsets
::UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_ApplySceneOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackOffset::_get_ApplySceneOffsets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "ApplySceneOffsets"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset ApplySceneOffsets
void UnityEngine::Timeline::TrackOffset::_set_ApplySceneOffsets(::UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackOffset::_set_ApplySceneOffsets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "ApplySceneOffsets", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset Auto
::UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackOffset::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset Auto
void UnityEngine::Timeline::TrackOffset::_set_Auto(::UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackOffset::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "Auto", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TrackOffset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackOffset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AppliedOffsetMode
#include "UnityEngine/Timeline/AppliedOffsetMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode NoRootTransform
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_NoRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_get_NoRootTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "NoRootTransform"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode NoRootTransform
void UnityEngine::Timeline::AppliedOffsetMode::_set_NoRootTransform(::UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_set_NoRootTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "NoRootTransform", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffset
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffset
void UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffset(::UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffset
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffset
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffset(::UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffsetLegacy
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffsetLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffsetLegacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffsetLegacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffsetLegacy
void UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffsetLegacy(::UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffsetLegacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffsetLegacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacy
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacy
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacy(::UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetEditor
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetEditor
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetEditor(::UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacyEditor
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacyEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacyEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacyEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacyEditor
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacyEditor(::UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacyEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacyEditor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::AppliedOffsetMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AppliedOffsetMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MatchTargetFieldConstants
#include "UnityEngine/Timeline/MatchTargetFieldConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields All
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields All
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_All(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields None
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields None
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_None(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields Position
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields Position
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_Position(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields Rotation
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields Rotation
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_Rotation(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "Rotation", value));
}
// Autogenerated method: UnityEngine.Timeline.MatchTargetFieldConstants..cctor
void UnityEngine::Timeline::MatchTargetFieldConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MatchTargetFieldConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "MatchTargetFieldConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationTrack
#include "UnityEngine/Timeline/AnimationTrack.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade
#include "UnityEngine/Timeline/AnimationTrack_AnimationTrackUpgrade.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49
#include "UnityEngine/Timeline/AnimationTrack_-get_outputs-d__49.hpp"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Timeline.AppliedOffsetMode
#include "UnityEngine/Timeline/AppliedOffsetMode.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Animations.AnimationLayerMixerPlayable
#include "UnityEngine/Animations/AnimationLayerMixerPlayable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultInfiniteClipName
::StringW UnityEngine::Timeline::AnimationTrack::_get_k_DefaultInfiniteClipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::_get_k_DefaultInfiniteClipName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultInfiniteClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultInfiniteClipName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::_set_k_DefaultInfiniteClipName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultRecordableClipName
::StringW UnityEngine::Timeline::AnimationTrack::_get_k_DefaultRecordableClipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::_get_k_DefaultRecordableClipName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultRecordableClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultRecordableClipName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::_set_k_DefaultRecordableClipName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip/ClipExtrapolation m_InfiniteClipPreExtrapolation
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineClip::ClipExtrapolation& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipPreExtrapolation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClipPreExtrapolation"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip/ClipExtrapolation m_InfiniteClipPostExtrapolation
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineClip::ClipExtrapolation& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipPostExtrapolation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClipPostExtrapolation"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InfiniteClipOffsetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipOffsetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClipOffsetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InfiniteClipOffsetEulerAngles
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipOffsetEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipOffsetEulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClipOffsetEulerAngles"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_InfiniteClipTimeOffset
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClipTimeOffset"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_InfiniteClipRemoveOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipRemoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipRemoveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClipRemoveOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_InfiniteClipApplyFootIK
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipApplyFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClipApplyFootIK");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClipApplyFootIK"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.AnimationPlayableAsset/LoopMode mInfiniteClipLoop
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode& UnityEngine::Timeline::AnimationTrack::dyn_mInfiniteClipLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_mInfiniteClipLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mInfiniteClipLoop"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.MatchTargetFields m_MatchTargetFields
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::MatchTargetFields& UnityEngine::Timeline::AnimationTrack::dyn_m_MatchTargetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_MatchTargetFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MatchTargetFields"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::MatchTargetFields*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Timeline::AnimationTrack::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_EulerAngles
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Timeline::AnimationTrack::dyn_m_EulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_EulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EulerAngles"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AvatarMask m_AvatarMask
[[deprecated("Use field access instead!")]] ::UnityEngine::AvatarMask*& UnityEngine::Timeline::AnimationTrack::dyn_m_AvatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_AvatarMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AvatarMask"))->offset;
  return *reinterpret_cast<::UnityEngine::AvatarMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ApplyAvatarMask
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::AnimationTrack::dyn_m_ApplyAvatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_ApplyAvatarMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ApplyAvatarMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TrackOffset m_TrackOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TrackOffset& UnityEngine::Timeline::AnimationTrack::dyn_m_TrackOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_TrackOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TrackOffset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip m_InfiniteClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_InfiniteClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InfiniteClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_OpenClipOffsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Timeline::AnimationTrack::dyn_m_OpenClipOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_OpenClipOffsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OpenClipOffsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Timeline::AnimationTrack::dyn_m_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_Rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ApplyOffsets
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::AnimationTrack::dyn_m_ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::dyn_m_ApplyOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ApplyOffsets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_position
::UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_position
void UnityEngine::Timeline::AnimationTrack::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_rotation
::UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_rotation
void UnityEngine::Timeline::AnimationTrack::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_eulerAngles
::UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_eulerAngles
void UnityEngine::Timeline::AnimationTrack::set_eulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyOffsets
bool UnityEngine::Timeline::AnimationTrack::get_applyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_applyOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_applyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyOffsets
void UnityEngine::Timeline::AnimationTrack::set_applyOffsets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_applyOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_trackOffset
::UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::AnimationTrack::get_trackOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_trackOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackOffset, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_trackOffset
void UnityEngine::Timeline::AnimationTrack::set_trackOffset(::UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_trackOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_matchTargetFields
::UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::AnimationTrack::get_matchTargetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchTargetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::MatchTargetFields, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_matchTargetFields
void UnityEngine::Timeline::AnimationTrack::set_matchTargetFields(::UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchTargetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClip
::UnityEngine::AnimationClip* UnityEngine::Timeline::AnimationTrack::get_infiniteClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClip
void UnityEngine::Timeline::AnimationTrack::set_infiniteClip(::UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipRemoveOffset
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipRemoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipRemoveOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipRemoveOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipRemoveOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipRemoveOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipRemoveOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipRemoveOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_avatarMask
::UnityEngine::AvatarMask* UnityEngine::Timeline::AnimationTrack::get_avatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_avatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AvatarMask*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_avatarMask
void UnityEngine::Timeline::AnimationTrack::set_avatarMask(::UnityEngine::AvatarMask* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_avatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyAvatarMask
bool UnityEngine::Timeline::AnimationTrack::get_applyAvatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_applyAvatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_applyAvatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyAvatarMask
void UnityEngine::Timeline::AnimationTrack::set_applyAvatarMask(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_applyAvatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyAvatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_inClipMode
bool UnityEngine::Timeline::AnimationTrack::get_inClipMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_inClipMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inClipMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetPosition
::UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetRotation
::UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetEulerAngles
::UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetEulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipApplyFootIK
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipApplyFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipApplyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipApplyFootIK
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipApplyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipApplyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipTimeOffset
double UnityEngine::Timeline::AnimationTrack::get_infiniteClipTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipTimeOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipTimeOffset(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPreExtrapolation
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPreExtrapolation(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPostExtrapolation
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPostExtrapolation(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipLoop
::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationTrack::get_infiniteClipLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_infiniteClipLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipLoop
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipLoop(::UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_infiniteClipLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ResetOffsets
void UnityEngine::Timeline::AnimationTrack::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateClip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateClip(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteClip
void UnityEngine::Timeline::AnimationTrack::CreateInfiniteClip(::StringW infiniteClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CreateInfiniteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInfiniteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infiniteClipName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infiniteClipName);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateRecordableClip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateRecordableClip(::StringW animClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CreateRecordableClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRecordableClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animClipName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, animClipName);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UpdateClipOffsets
void UnityEngine::Timeline::AnimationTrack::UpdateClipOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::UpdateClipOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClipOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CompileTrackPlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CompileTrackPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree, ::UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CompileTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, track, go, tree, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UnityEngine.Timeline.ILayerable.CreateLayerMixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::UnityEngine_Timeline_ILayerable_CreateLayerMixer(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::UnityEngine.Timeline.ILayerable.CreateLayerMixer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateDefaultBlend
::UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CreateDefaultBlend(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::UnityEngine::Playables::Playable mixer, bool requireOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CreateDefaultBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(mixer), ::il2cpp_utils::ExtractType(requireOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, mixer, requireOffset);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AttachOffsetPlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::AttachOffsetPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable playable, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::AttachOffsetPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachOffsetPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, playable, pos, rot);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.RequiresMotionXPlayable
bool UnityEngine::Timeline::AnimationTrack::RequiresMotionXPlayable(::UnityEngine::Timeline::AppliedOffsetMode mode, ::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::RequiresMotionXPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequiresMotionXPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mode, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UsesAbsoluteMotion
bool UnityEngine::Timeline::AnimationTrack::UsesAbsoluteMotion(::UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::UsesAbsoluteMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "UsesAbsoluteMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.HasController
bool UnityEngine::Timeline::AnimationTrack::HasController(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::HasController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetBinding
::UnityEngine::Animator* UnityEngine::Timeline::AnimationTrack::GetBinding(::UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::GetBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(this, ___internal__method, director);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateGroupMixer
::UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Timeline::AnimationTrack::CreateGroupMixer(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CreateGroupMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "CreateGroupMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteTrackPlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CreateInfiniteTrackPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree, ::UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CreateInfiniteTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInfiniteTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ApplyTrackOffset
::UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::ApplyTrackOffset(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable root, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::ApplyTrackOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTrackOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, root, go, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AssignAnimationClip
void UnityEngine::Timeline::AnimationTrack::AssignAnimationClip(::UnityEngine::Timeline::TimelineClip* clip, ::UnityEngine::AnimationClip* animClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::AssignAnimationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignAnimationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(animClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, animClip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetAnimationClips
void UnityEngine::Timeline::AnimationTrack::GetAnimationClips(::System::Collections::Generic::List_1<::UnityEngine::AnimationClip*>* animClips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::GetAnimationClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimationClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animClips)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animClips);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetOffsetMode
::UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AnimationTrack::GetOffsetMode(::UnityEngine::GameObject* go, bool animatesRootTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::GetOffsetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOffsetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(animatesRootTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::AppliedOffsetMode, false>(this, ___internal__method, go, animatesRootTransform);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AnimatesRootTransform
bool UnityEngine::Timeline::AnimationTrack::AnimatesRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::AnimatesRootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimatesRootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetPosition
::UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_openClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_openClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetRotation
::UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_openClipOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_openClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_openClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetEulerAngles
::UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_openClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetEulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_openClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPreExtrapolation
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_openClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPreExtrapolation(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_openClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPostExtrapolation
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_openClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPostExtrapolation(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::set_openClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CanCompileClips
bool UnityEngine::Timeline::AnimationTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClip
void UnityEngine::Timeline::AnimationTrack::OnCreateClip(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CalculateItemsHash
int UnityEngine::Timeline::AnimationTrack::CalculateItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::CalculateItemsHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClipPlayableGraph
::UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::OnCreateClipPlayableGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::OnCreateClipPlayableGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetEvaluationTime
void UnityEngine::Timeline::AnimationTrack::GetEvaluationTime(ByRef<double> outStart, ByRef<double> outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::GetEvaluationTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(outStart), byref(outDuration));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetSequenceTime
void UnityEngine::Timeline::AnimationTrack::GetSequenceTime(ByRef<double> outStart, ByRef<double> outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::GetSequenceTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(outStart), byref(outDuration));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GatherProperties
void UnityEngine::Timeline::AnimationTrack::GatherProperties(::UnityEngine::Playables::PlayableDirector* director, ::UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::GatherProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnUpgradeFromVersion
void UnityEngine::Timeline::AnimationTrack::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::OnUpgradeFromVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade
#include "UnityEngine/Timeline/AnimationTrack_AnimationTrackUpgrade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertRotationsToEuler
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRotationsToEuler(::UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRotationsToEuler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertRotationsToEuler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertRootMotion
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRootMotion(::UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertInfiniteTrack
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertInfiniteTrack(::UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertInfiniteTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertInfiniteTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, track);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49
#include "UnityEngine/Timeline/AnimationTrack_-get_outputs-d__49.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.AnimationTrack <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::AnimationTrack*& UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::AnimationTrack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.IDisposable.Dispose
void UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.MoveNext
bool UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
::UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ICurvesOwner
#include "UnityEngine/Timeline/ICurvesOwner.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::StringW UnityEngine::Timeline::ICurvesOwner::get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ICurvesOwner::get_defaultCurvesName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ICurvesOwner*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_asset
::UnityEngine::Object* UnityEngine::Timeline::ICurvesOwner::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ICurvesOwner::get_asset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ICurvesOwner*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_assetOwner
::UnityEngine::Object* UnityEngine::Timeline::ICurvesOwner::get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ICurvesOwner::get_assetOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ICurvesOwner*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_targetTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::ICurvesOwner::get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ICurvesOwner::get_targetTrack");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ICurvesOwner*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade
#include "UnityEngine/Timeline/TimelineClip_TimelineClipUpgrade.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineClip::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineClip::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::_get_kDefaultClipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_kDefaultClipCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipCaps(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_kDefaultClipCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single kDefaultClipDurationInSeconds
float UnityEngine::Timeline::TimelineClip::_get_kDefaultClipDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_kDefaultClipDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single kDefaultClipDurationInSeconds
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipDurationInSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_kDefaultClipDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMin
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMin
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMin(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMax
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMax
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMax(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String kDefaultCurvesName
::StringW UnityEngine::Timeline::TimelineClip::_get_kDefaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String kDefaultCurvesName
void UnityEngine::Timeline::TimelineClip::_set_kDefaultCurvesName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinDuration
double UnityEngine::Timeline::TimelineClip::_get_kMinDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_kMinDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMinDuration"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinDuration
void UnityEngine::Timeline::TimelineClip::_set_kMinDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_kMinDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMinDuration", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMaxTimeValue
double UnityEngine::Timeline::TimelineClip::_get_kMaxTimeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_get_kMaxTimeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMaxTimeValue
void UnityEngine::Timeline::TimelineClip::_set_kMaxTimeValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::_set_kMaxTimeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Version
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelineClip::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_Start
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_Start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Start"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_ClipIn
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_ClipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_ClipIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipIn"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object m_Asset
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& UnityEngine::Timeline::TimelineClip::dyn_m_Asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_Asset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Asset"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_Duration
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Duration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_TimeScale
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_TimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_TimeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeScale"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TrackAsset m_ParentTrack
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TrackAsset*& UnityEngine::Timeline::TimelineClip::dyn_m_ParentTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_ParentTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentTrack"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TrackAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_EaseInDuration
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_EaseInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_EaseInDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EaseInDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_EaseOutDuration
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_EaseOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_EaseOutDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EaseOutDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_BlendInDuration
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_BlendInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_BlendInDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendInDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_BlendOutDuration
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_BlendOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_BlendOutDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendOutDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_MixInCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::Timeline::TimelineClip::dyn_m_MixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_MixInCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MixInCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_MixOutCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::Timeline::TimelineClip::dyn_m_MixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_MixOutCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MixOutCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip/BlendCurveMode m_BlendInCurveMode
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineClip::BlendCurveMode& UnityEngine::Timeline::TimelineClip::dyn_m_BlendInCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_BlendInCurveMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendInCurveMode"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip::BlendCurveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip/BlendCurveMode m_BlendOutCurveMode
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineClip::BlendCurveMode& UnityEngine::Timeline::TimelineClip::dyn_m_BlendOutCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_BlendOutCurveMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendOutCurveMode"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip::BlendCurveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> m_ExposedParameterNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& UnityEngine::Timeline::TimelineClip::dyn_m_ExposedParameterNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_ExposedParameterNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExposedParameterNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip m_AnimationCurves
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& UnityEngine::Timeline::TimelineClip::dyn_m_AnimationCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_AnimationCurves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimationCurves"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Recordable
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TimelineClip::dyn_m_Recordable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_Recordable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Recordable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip/ClipExtrapolation m_PostExtrapolationMode
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineClip::ClipExtrapolation& UnityEngine::Timeline::TimelineClip::dyn_m_PostExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_PostExtrapolationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PostExtrapolationMode"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip/ClipExtrapolation m_PreExtrapolationMode
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineClip::ClipExtrapolation& UnityEngine::Timeline::TimelineClip::dyn_m_PreExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_PreExtrapolationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreExtrapolationMode"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_PostExtrapolationTime
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_PostExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_PostExtrapolationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PostExtrapolationTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_PreExtrapolationTime
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineClip::dyn_m_PreExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_PreExtrapolationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreExtrapolationTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_DisplayName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::TimelineClip::dyn_m_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::dyn_m_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineClip::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_timeScale
double UnityEngine::Timeline::TimelineClip::get_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_timeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_start
double UnityEngine::Timeline::TimelineClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_start
void UnityEngine::Timeline::TimelineClip::set_start(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_duration
double UnityEngine::Timeline::TimelineClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 10));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_duration
void UnityEngine::Timeline::TimelineClip::set_duration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_end
double UnityEngine::Timeline::TimelineClip::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipIn
double UnityEngine::Timeline::TimelineClip::get_clipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_clipIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_displayName
::StringW UnityEngine::Timeline::TimelineClip::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_displayName
void UnityEngine::Timeline::TimelineClip::set_displayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_curves
::UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineClip::get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_curves");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::StringW UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_asset
::UnityEngine::Object* UnityEngine::Timeline::TimelineClip::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_asset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_asset
void UnityEngine::Timeline::TimelineClip::set_asset(::UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
::UnityEngine::Object* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_assetOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_targetTrack");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_parentTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::get_parentTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_parentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_parentTrack
void UnityEngine::Timeline::TimelineClip::set_parentTrack(::UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_parentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeInDuration
double UnityEngine::Timeline::TimelineClip::get_easeInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_easeInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeOutDuration
double UnityEngine::Timeline::TimelineClip::get_easeOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_easeOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendInDuration
double UnityEngine::Timeline::TimelineClip::get_blendInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_blendInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendOutDuration
double UnityEngine::Timeline::TimelineClip::get_blendOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_blendOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendIn
bool UnityEngine::Timeline::TimelineClip::get_hasBlendIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_hasBlendIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBlendIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendOut
bool UnityEngine::Timeline::TimelineClip::get_hasBlendOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_hasBlendOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBlendOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInCurve
::UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixInCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixInCurve
void UnityEngine::Timeline::TimelineClip::set_mixInCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mixInCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInDuration
double UnityEngine::Timeline::TimelineClip::get_mixInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_mixInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutCurve
::UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixOutCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixOutCurve
void UnityEngine::Timeline::TimelineClip::set_mixOutCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mixOutCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutTime
double UnityEngine::Timeline::TimelineClip::get_mixOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_mixOutTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixOutTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutDuration
double UnityEngine::Timeline::TimelineClip::get_mixOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_mixOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_recordable
bool UnityEngine::Timeline::TimelineClip::get_recordable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_recordable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_recordable
void UnityEngine::Timeline::TimelineClip::set_recordable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_recordable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_clipCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.Hash
int UnityEngine::Timeline::TimelineClip::Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixOut
float UnityEngine::Timeline::TimelineClip::EvaluateMixOut(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::EvaluateMixOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateMixOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixIn
float UnityEngine::Timeline::TimelineClip::EvaluateMixIn(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::EvaluateMixIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateMixIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixInCurve
::UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::GetDefaultMixInCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixInCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixOutCurve
::UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::GetDefaultMixOutCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixOutCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToLocalTime
double UnityEngine::Timeline::TimelineClip::ToLocalTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SanitizeTimeValue
double UnityEngine::Timeline::TimelineClip::SanitizeTimeValue(double value, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::SanitizeTimeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "SanitizeTimeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_postExtrapolationMode
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_postExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_postExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_postExtrapolationMode(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_preExtrapolationMode
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_preExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_preExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_preExtrapolationMode(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::set_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPostExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPostExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::SetPostExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPostExtrapolationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPreExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPreExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::SetPreExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreExtrapolationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPreExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPreExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::IsPreExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPreExtrapolatedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequenceTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPostExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPostExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::IsPostExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPostExtrapolatedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequenceTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedStart
double UnityEngine::Timeline::TimelineClip::get_extrapolatedStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_extrapolatedStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extrapolatedStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedDuration
double UnityEngine::Timeline::TimelineClip::get_extrapolatedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::get_extrapolatedDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extrapolatedDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetExtrapolatedTime
double UnityEngine::Timeline::TimelineClip::GetExtrapolatedTime(double time, ::UnityEngine::Timeline::TimelineClip::ClipExtrapolation mode, double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::GetExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetExtrapolatedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, mode, duration);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineClip*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpdateDirty
void UnityEngine::Timeline::TimelineClip::UpdateDirty(double oldValue, double newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::UpdateDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip..cctor
void UnityEngine::Timeline::TimelineClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToString
::StringW UnityEngine::Timeline::TimelineClip::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade
#include "UnityEngine/Timeline/TimelineClip_TimelineClipUpgrade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade.UpgradeClipInFromGlobalToLocal
void UnityEngine::Timeline::TimelineClip::TimelineClipUpgrade::UpgradeClipInFromGlobalToLocal(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::TimelineClipUpgrade::UpgradeClipInFromGlobalToLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip/TimelineClipUpgrade", "UpgradeClipInFromGlobalToLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/ClipExtrapolation
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_None(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Hold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Hold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Hold"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Hold(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Hold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Hold", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Loop(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_PingPong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_PingPong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "PingPong"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_PingPong(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_PingPong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "PingPong", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
::UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Continue(::UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Continue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelineClip::ClipExtrapolation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::ClipExtrapolation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/BlendCurveMode
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
::UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineClip::BlendCurveMode>("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
void UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Auto(::UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
::UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineClip::BlendCurveMode>("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
void UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Manual(::UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Manual", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelineClip::BlendCurveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClip::BlendCurveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Version
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelineAsset::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ScriptableObject> m_Tracks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*& UnityEngine::Timeline::TimelineAsset::dyn_m_Tracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_Tracks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_FixedDuration
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimelineAsset::dyn_m_FixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_FixedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FixedDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TrackAsset[] m_CacheOutputTracks
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Timeline::TrackAsset*>& UnityEngine::Timeline::TimelineAsset::dyn_m_CacheOutputTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_CacheOutputTracks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheOutputTracks"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Timeline::TrackAsset*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.TrackAsset> m_CacheRootTracks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TimelineAsset::dyn_m_CacheRootTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_CacheRootTracks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheRootTracks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.TrackAsset> m_CacheFlattenedTracks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TimelineAsset::dyn_m_CacheFlattenedTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_CacheFlattenedTracks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheFlattenedTracks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineAsset/EditorSettings m_EditorSettings
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineAsset::EditorSettings*& UnityEngine::Timeline::TimelineAsset::dyn_m_EditorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_EditorSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EditorSettings"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineAsset::EditorSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineAsset/DurationMode m_DurationMode
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineAsset::DurationMode& UnityEngine::Timeline::TimelineAsset::dyn_m_DurationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_DurationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DurationMode"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineAsset::DurationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.MarkerTrack m_MarkerTrack
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::MarkerTrack*& UnityEngine::Timeline::TimelineAsset::dyn_m_MarkerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::dyn_m_MarkerTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MarkerTrack"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::MarkerTrack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_editorSettings
::UnityEngine::Timeline::TimelineAsset::EditorSettings* UnityEngine::Timeline::TimelineAsset::get_editorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_editorSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editorSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineAsset::EditorSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_fixedDuration
double UnityEngine::Timeline::TimelineAsset::get_fixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fixedDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_fixedDuration
void UnityEngine::Timeline::TimelineAsset::set_fixedDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::set_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fixedDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_durationMode
::UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::get_durationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_durationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_durationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineAsset::DurationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_durationMode
void UnityEngine::Timeline::TimelineAsset::set_durationMode(::UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::set_durationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_durationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputTrackCount
int UnityEngine::Timeline::TimelineAsset::get_outputTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_outputTrackCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_rootTrackCount
int UnityEngine::Timeline::TimelineAsset::get_rootTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_rootTrackCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.OnValidate
void UnityEngine::Timeline::TimelineAsset::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetValidFramerate
float UnityEngine::Timeline::TimelineAsset::GetValidFramerate(float framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::GetValidFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "GetValidFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framerate)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, framerate);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetRootTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::GetRootTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTracks
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetRootTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::GetRootTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetOutputTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::GetOutputTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTracks
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetOutputTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::GetOutputTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateRootTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateRootTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::UpdateRootTrackCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRootTrackCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateOutputTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateOutputTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::UpdateOutputTrackCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOutputTrackCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_flattenedTracks
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::get_flattenedTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_flattenedTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flattenedTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_markerTrack
::UnityEngine::Timeline::MarkerTrack* UnityEngine::Timeline::TimelineAsset::get_markerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_markerTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_markerTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::MarkerTrack*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_trackObjects
::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TimelineAsset::get_trackObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_trackObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddTrackInternal
void UnityEngine::Timeline::TimelineAsset::AddTrackInternal(::UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::AddTrackInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTrackInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.RemoveTrack
void UnityEngine::Timeline::TimelineAsset::RemoveTrack(::UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::RemoveTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.__internalAwake
void UnityEngine::Timeline::TimelineAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::__internalAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GatherProperties
void UnityEngine::Timeline::TimelineAsset::GatherProperties(::UnityEngine::Playables::PlayableDirector* director, ::UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateMarkerTrack
void UnityEngine::Timeline::TimelineAsset::CreateMarkerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::CreateMarkerTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMarkerTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.Invalidate
void UnityEngine::Timeline::TimelineAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CalculateDuration
double UnityEngine::Timeline::TimelineAsset::CalculateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::CalculateDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddSubTracksRecursive
void UnityEngine::Timeline::TimelineAsset::AddSubTracksRecursive(::UnityEngine::Timeline::TrackAsset* track, ByRef<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TrackAsset*>*> allTracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::AddSubTracksRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "AddSubTracksRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(allTracks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, track, byref(allTracks));
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::CreateTrack(::System::Type* type, ::UnityEngine::Timeline::TrackAsset* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::CreateTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, type, parent, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteClip
bool UnityEngine::Timeline::TimelineAsset::DeleteClip(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DeleteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteTrack
bool UnityEngine::Timeline::TimelineAsset::DeleteTrack(::UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DeleteTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TimelineAsset::MoveLastTrackBefore(::UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AllocateTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::AllocateTrack(::UnityEngine::Timeline::TrackAsset* trackAssetParent, ::StringW trackName, ::System::Type* trackType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::AllocateTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackAssetParent), ::il2cpp_utils::ExtractType(trackName), ::il2cpp_utils::ExtractType(trackType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, trackAssetParent, trackName, trackType);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(::UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_duration
double UnityEngine::Timeline::TimelineAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 7));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::TimelineAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/DurationMode
#include "UnityEngine/Timeline/TimelineAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode BasedOnClips
::UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::DurationMode::_get_BasedOnClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DurationMode::_get_BasedOnClips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineAsset::DurationMode>("UnityEngine.Timeline", "TimelineAsset/DurationMode", "BasedOnClips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode BasedOnClips
void UnityEngine::Timeline::TimelineAsset::DurationMode::_set_BasedOnClips(::UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DurationMode::_set_BasedOnClips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/DurationMode", "BasedOnClips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode FixedLength
::UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::DurationMode::_get_FixedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DurationMode::_get_FixedLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimelineAsset::DurationMode>("UnityEngine.Timeline", "TimelineAsset/DurationMode", "FixedLength"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode FixedLength
void UnityEngine::Timeline::TimelineAsset::DurationMode::_set_FixedLength(::UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DurationMode::_set_FixedLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/DurationMode", "FixedLength", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelineAsset::DurationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::DurationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Single kMinFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMinFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMinFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMinFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMinFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMinFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kMaxFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMaxFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMaxFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMaxFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMaxFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kDefaultFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kDefaultFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kDefaultFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kDefaultFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kDefaultFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kDefaultFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Framerate
[[deprecated("Use field access instead!")]] float& UnityEngine::Timeline::TimelineAsset::EditorSettings::dyn_m_Framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::dyn_m_Framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Framerate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.get_fps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::get_fps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::get_fps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.set_fps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::set_fps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::set_fps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings..cctor
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::EditorSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset/EditorSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.TimelineAsset <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineAsset*& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<UnityEngine.Timeline.TrackAsset> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<UnityEngine.Playables.PlayableBinding> <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*& UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.IDisposable.Dispose
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.MoveNext
bool UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.<>m__Finally1
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.<>m__Finally2
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
::UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset/TransientBuildData s_BuildData
::UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::_get_s_BuildData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_get_s_BuildData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackAsset::TransientBuildData>("UnityEngine.Timeline", "TrackAsset", "s_BuildData"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset/TransientBuildData s_BuildData
void UnityEngine::Timeline::TrackAsset::_set_s_BuildData(::UnityEngine::Timeline::TrackAsset::TransientBuildData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_set_s_BuildData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_BuildData", value));
}
// Autogenerated static field getter
// Get static field: static System.String kDefaultCurvesName
::StringW UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static System.String kDefaultCurvesName
void UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName", value));
}
// [CompilerGeneratedAttribute] Offset: 0xADCAE8
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
::System::Action_3<::UnityEngine::Timeline::TimelineClip*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<::UnityEngine::Timeline::TimelineClip*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate(::System::Action_3<::UnityEngine::Timeline::TimelineClip*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate", value));
}
// [CompilerGeneratedAttribute] Offset: 0xADCAF8
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
::System::Action_3<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate(::System::Action_3<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
::ArrayW<::UnityEngine::Timeline::TrackAsset*> UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Timeline::TrackAsset*>>("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
void UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache(::ArrayW<::UnityEngine::Timeline::TrackAsset*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::Timeline::TrackBindingTypeAttribute*>* UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::Timeline::TrackBindingTypeAttribute*>*>("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
void UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::Timeline::TrackBindingTypeAttribute*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Version
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TrackAsset::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimationClip m_AnimClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& UnityEngine::Timeline::TrackAsset::dyn_m_AnimClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_AnimClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Locked
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TrackAsset::dyn_m_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Muted
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TrackAsset::dyn_m_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_CustomPlayableFullTypename
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::TrackAsset::dyn_m_CustomPlayableFullTypename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_CustomPlayableFullTypename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomPlayableFullTypename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip m_Curves
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& UnityEngine::Timeline::TrackAsset::dyn_m_Curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Curves");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Curves"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableAsset m_Parent
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableAsset*& UnityEngine::Timeline::TrackAsset::dyn_m_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Parent"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ScriptableObject> m_Children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*& UnityEngine::Timeline::TrackAsset::dyn_m_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ItemsHash
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TrackAsset::dyn_m_ItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_ItemsHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItemsHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip[] m_ClipsCache
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Timeline::TimelineClip*>& UnityEngine::Timeline::TrackAsset::dyn_m_ClipsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_ClipsCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipsCache"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Timeline::TimelineClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.DiscreteTime m_Start
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::DiscreteTime& UnityEngine::Timeline::TrackAsset::dyn_m_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Start"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::DiscreteTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.DiscreteTime m_End
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::DiscreteTime& UnityEngine::Timeline::TrackAsset::dyn_m_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_End");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_End"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::DiscreteTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CacheSorted
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TrackAsset::dyn_m_CacheSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_CacheSorted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheSorted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> m_SupportsNotifications
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& UnityEngine::Timeline::TrackAsset::dyn_m_SupportsNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_SupportsNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SupportsNotifications"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerable`1<UnityEngine.Timeline.TrackAsset> m_ChildTrackCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TrackAsset::dyn_m_ChildTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_ChildTrackCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChildTrackCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Generic.List`1<UnityEngine.Timeline.TimelineClip> m_Clips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimelineClip*>*& UnityEngine::Timeline::TrackAsset::dyn_m_Clips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Clips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimelineClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.MarkerList m_Markers
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::MarkerList& UnityEngine::Timeline::TrackAsset::dyn_m_Markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::dyn_m_Markers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Markers"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::MarkerList*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnBeforeTrackSerialize
void UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnAfterTrackDeserialize
void UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnUpgradeFromVersion
void UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate(::System::Action_3<::UnityEngine::Timeline::TimelineClip*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate(::System::Action_3<::UnityEngine::Timeline::TimelineClip*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate(::System::Action_3<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate(::System::Action_3<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::GameObject*, ::UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_start
double UnityEngine::Timeline::TrackAsset::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_end
double UnityEngine::Timeline::TrackAsset::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_muted
bool UnityEngine::Timeline::TrackAsset::get_muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_muted
void UnityEngine::Timeline::TrackAsset::set_muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::set_muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_mutedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mutedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_timelineAsset
::UnityEngine::Timeline::TimelineAsset* UnityEngine::Timeline::TrackAsset::get_timelineAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_timelineAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timelineAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_parent
::UnityEngine::Playables::PlayableAsset* UnityEngine::Timeline::TrackAsset::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_parent
void UnityEngine::Timeline::TrackAsset::set_parent(::UnityEngine::Playables::PlayableAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClips
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::GetClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TimelineClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_clips
::ArrayW<::UnityEngine::Timeline::TimelineClip*> UnityEngine::Timeline::TrackAsset::get_clips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_clips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Timeline::TimelineClip*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isEmpty
bool UnityEngine::Timeline::TrackAsset::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_isEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasClips
bool UnityEngine::Timeline::TrackAsset::get_hasClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_hasClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasCurves
bool UnityEngine::Timeline::TrackAsset::get_hasCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_hasCurves");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isSubTrack
bool UnityEngine::Timeline::TrackAsset::get_isSubTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_isSubTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSubTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetChildTracks
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TrackAsset::GetChildTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetChildTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_customPlayableTypename
::StringW UnityEngine::Timeline::TrackAsset::get_customPlayableTypename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customPlayableTypename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_customPlayableTypename
void UnityEngine::Timeline::TrackAsset::set_customPlayableTypename(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::set_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customPlayableTypename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_curves
::UnityEngine::AnimationClip* UnityEngine::Timeline::TrackAsset::get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_curves");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_curves
void UnityEngine::Timeline::TrackAsset::set_curves(::UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::set_curves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::StringW UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_asset
::UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_asset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
::UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_assetOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_targetTrack");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_subTracksObjects
::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::get_subTracksObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_subTracksObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subTracksObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_locked
bool UnityEngine::Timeline::TrackAsset::get_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_locked
void UnityEngine::Timeline::TrackAsset::set_locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::set_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_lockedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lockedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_supportsNotifications
bool UnityEngine::Timeline::TrackAsset::get_supportsNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_supportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.__internalAwake
void UnityEngine::Timeline::TrackAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::__internalAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateCurves
void UnityEngine::Timeline::TrackAsset::CreateCurves(::StringW curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateCurves");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateTrackMixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateTrackMixer(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateTrackMixer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateDefaultClip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateDefaultClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateDefaultClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateMarker
::UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::CreateMarker(::System::Type* type, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, type, time);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarker
bool UnityEngine::Timeline::TrackAsset::DeleteMarker(::UnityEngine::Timeline::IMarker* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::DeleteMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkers
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::TrackAsset::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkerCount
int UnityEngine::Timeline::TrackAsset::GetMarkerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetMarkerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarker
::UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::GetMarker(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClip(::System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateAndAddNewClipOfType
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType(::System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndAddNewClipOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipOfType
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipOfType(::System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateClipOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromPlayableAsset
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset(::UnityEngine::Playables::IPlayableAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipFromPlayableAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromAsset
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromAsset(::UnityEngine::ScriptableObject* playableAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateClipFromAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipFromAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playableAsset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, playableAsset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkersRaw
::System::Collections::Generic::IEnumerable_1<::UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::GetMarkersRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetMarkersRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkersRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearMarkers
void UnityEngine::Timeline::TrackAsset::ClearMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::ClearMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddMarker
void UnityEngine::Timeline::TrackAsset::AddMarker(::UnityEngine::ScriptableObject* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::AddMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarkerRaw
bool UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw(::UnityEngine::ScriptableObject* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteMarkerRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetTimeRangeHash
int UnityEngine::Timeline::TrackAsset::GetTimeRangeHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetTimeRangeHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeRangeHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddClip
void UnityEngine::Timeline::TrackAsset::AddClip(::UnityEngine::Timeline::TimelineClip* newClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newClip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNotificationsPlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable mixerPlayable, ::UnityEngine::GameObject* go, ::UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(mixerPlayable), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, mixerPlayable, go, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayableGraph
::UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayableGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree, ::UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CompileClips
::UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CompileClips(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::TimelineClip*>* timelineClips, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CompileClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherCompilableTracks
void UnityEngine::Timeline::TrackAsset::GatherCompilableTracks(::System::Collections::Generic::IList_1<::UnityEngine::Timeline::TrackAsset*>* tracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GatherCompilableTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherCompilableTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tracks);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherNotificiations
void UnityEngine::Timeline::TrackAsset::GatherNotificiations(::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>* markers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GatherNotificiations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherNotificiations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markers);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnCreateClipPlayableGraph
::UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::OnCreateClipPlayableGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::OnCreateClipPlayableGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ConfigureTrackAnimation
void UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation(::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree, ::UnityEngine::GameObject* go, ::UnityEngine::Playables::Playable blend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureTrackAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(blend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, go, blend);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.SortClips
void UnityEngine::Timeline::TrackAsset::SortClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::SortClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearClipsInternal
void UnityEngine::Timeline::TrackAsset::ClearClipsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::ClearClipsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearClipsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearSubTracksInternal
void UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSubTracksInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnClipMove
void UnityEngine::Timeline::TrackAsset::OnClipMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::OnClipMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClipMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNewClipContainerInternal
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewClipContainerInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddChild
void UnityEngine::Timeline::TrackAsset::AddChild(::UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore(::UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveSubTrack
bool UnityEngine::Timeline::TrackAsset::RemoveSubTrack(::UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::RemoveSubTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSubTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveClip
void UnityEngine::Timeline::TrackAsset::RemoveClip(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::RemoveClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetEvaluationTime
void UnityEngine::Timeline::TrackAsset::GetEvaluationTime(ByRef<double> outStart, ByRef<double> outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetEvaluationTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(outStart), byref(outDuration));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetSequenceTime
void UnityEngine::Timeline::TrackAsset::GetSequenceTime(ByRef<double> outStart, ByRef<double> outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetSequenceTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(outStart), byref(outDuration));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherProperties
void UnityEngine::Timeline::TrackAsset::GatherProperties(::UnityEngine::Playables::PlayableDirector* director, ::UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetGameObjectBinding
::UnityEngine::GameObject* UnityEngine::Timeline::TrackAsset::GetGameObjectBinding(::UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetGameObjectBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameObjectBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, director);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ValidateClipType
bool UnityEngine::Timeline::TrackAsset::ValidateClipType(::System::Type* clipType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::ValidateClipType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateClipType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clipType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnCreateClip
void UnityEngine::Timeline::TrackAsset::OnCreateClip(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateDuration
void UnityEngine::Timeline::TrackAsset::UpdateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UpdateDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CalculateItemsHash
int UnityEngine::Timeline::TrackAsset::CalculateItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CalculateItemsHash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* gameObject, ::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, gameObject, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Invalidate
void UnityEngine::Timeline::TrackAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetNotificationDuration
double UnityEngine::Timeline::TrackAsset::GetNotificationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetNotificationDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNotificationDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileClips
bool UnityEngine::Timeline::TrackAsset::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.IsCompilable
bool UnityEngine::Timeline::TrackAsset::IsCompilable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::IsCompilable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCompilable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateChildTrackCache
void UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateChildTrackCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Hash
int UnityEngine::Timeline::TrackAsset::Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::Hash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 33));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClipsHash
int UnityEngine::Timeline::TrackAsset::GetClipsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetClipsHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipsHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetAnimationClipHash
int UnityEngine::Timeline::TrackAsset::GetAnimationClipHash(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::GetAnimationClipHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "GetAnimationClipHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.HasNotifications
bool UnityEngine::Timeline::TrackAsset::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileNotifications
bool UnityEngine::Timeline::TrackAsset::CanCompileNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CanCompileNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileClipsRecursive
bool UnityEngine::Timeline::TrackAsset::CanCompileClipsRecursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CanCompileClipsRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClipsRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset..cctor
void UnityEngine::Timeline::TrackAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_duration
double UnityEngine::Timeline::TrackAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 7));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/TransientBuildData
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Timeline.TrackAsset> trackList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TrackAsset*>*& UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_trackList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_trackList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TrackAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Timeline.TimelineClip> clipList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimelineClip*>*& UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_clipList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_clipList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimelineClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Timeline.IMarker> markerList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>*& UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_markerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::TransientBuildData::dyn_markerList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markerList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/TransientBuildData.Create
::UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::TransientBuildData::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::TransientBuildData::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/TransientBuildData", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset::TransientBuildData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/TransientBuildData.Clear
void UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.TrackAsset <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TrackAsset*& UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TrackAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.IDisposable.Dispose
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.MoveNext
bool UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
::UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset::$get_outputs$d__65*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TrackAsset/<>c <>9
::UnityEngine::Timeline::TrackAsset::$$c* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackAsset::$$c*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TrackAsset/<>c <>9
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9(::UnityEngine::Timeline::TrackAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__120_0
::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__120_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__120_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__120_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__120_0
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__120_0(::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__120_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__120_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<>c..cctor
void UnityEngine::Timeline::TrackAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<>c.<SortClips>b__120_0
int UnityEngine::Timeline::TrackAsset::$$c::$SortClips$b__120_0(::UnityEngine::Timeline::TimelineClip* clip1, ::UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAsset::$$c::<SortClips>b__120_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClips>b__120_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackColorAttribute
#include "UnityEngine/Timeline/TrackColorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_Color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::Timeline::TrackColorAttribute::dyn_m_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackColorAttribute::dyn_m_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps None
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps None
void UnityEngine::Timeline::ClipCaps::_set_None(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Looping
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_Looping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Looping"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Looping
void UnityEngine::Timeline::ClipCaps::_set_Looping(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_Looping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Looping", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Extrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_Extrapolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Extrapolation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
void UnityEngine::Timeline::ClipCaps::_set_Extrapolation(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_Extrapolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Extrapolation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps ClipIn
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_ClipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_ClipIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "ClipIn"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps ClipIn
void UnityEngine::Timeline::ClipCaps::_set_ClipIn(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_ClipIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "ClipIn", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
void UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Blending
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Blending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_Blending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Blending"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Blending
void UnityEngine::Timeline::ClipCaps::_set_Blending(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_Blending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Blending", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps All
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps All
void UnityEngine::Timeline::ClipCaps::_set_All(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::ClipCaps::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClipCapsExtensions
#include "UnityEngine/Timeline/TimelineClipCapsExtensions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsExtrapolation
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAny
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny(::UnityEngine::Timeline::ClipCaps caps, ::UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DiscreteTime
#include "UnityEngine/Timeline/DiscreteTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double k_Tick
double UnityEngine::Timeline::DiscreteTime::_get_k_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_get_k_Tick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "DiscreteTime", "k_Tick"));
}
// Autogenerated static field setter
// Set static field: static private System.Double k_Tick
void UnityEngine::Timeline::DiscreteTime::_set_k_Tick(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_set_k_Tick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "k_Tick", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::_get_kMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_get_kMaxTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "kMaxTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
void UnityEngine::Timeline::DiscreteTime::_set_kMaxTime(::UnityEngine::Timeline::DiscreteTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_set_kMaxTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "kMaxTime", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 m_DiscreteTime
[[deprecated("Use field access instead!")]] int64_t& UnityEngine::Timeline::DiscreteTime::dyn_m_DiscreteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::dyn_m_DiscreteTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DiscreteTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t time)
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickBefore
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::OneTickBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickAfter
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::OneTickAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FromTicks
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::FromTicks(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::FromTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FromTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.CompareTo
int UnityEngine::Timeline::DiscreteTime::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Timeline::DiscreteTime), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::UnityEngine::Timeline::DiscreteTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.DoubleToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "DoubleToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.IntToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "IntToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToDouble
double UnityEngine::Timeline::DiscreteTime::ToDouble(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Max
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Max(::UnityEngine::Timeline::DiscreteTime lhs, ::UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetNearestTick
int64_t UnityEngine::Timeline::DiscreteTime::GetNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::GetNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "GetNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..cctor
void UnityEngine::Timeline::DiscreteTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToString
::StringW UnityEngine::Timeline::DiscreteTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetHashCode
int UnityEngine::Timeline::DiscreteTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Equality
bool UnityEngine::Timeline::operator ==(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Inequality
bool UnityEngine::Timeline::operator !=(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThanOrEqual
bool UnityEngine::Timeline::operator <=(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThanOrEqual
bool UnityEngine::Timeline::operator >=(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Subtraction
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator-(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.InfiniteRuntimeClip
#include "UnityEngine/Timeline/InfiniteRuntimeClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 kIntervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 kIntervalEnd
void UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::InfiniteRuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip..cctor
void UnityEngine::Timeline::InfiniteRuntimeClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "InfiniteRuntimeClip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalStart
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.set_enable
void UnityEngine::Timeline::InfiniteRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.EvaluateAt
void UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt(double localTime, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IInterval
#include "UnityEngine/Timeline/IInterval.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalStart
int64_t UnityEngine::Timeline::IInterval::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IInterval::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IInterval*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalEnd
int64_t UnityEngine::Timeline::IInterval::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IInterval::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IInterval*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClip
#include "UnityEngine/Timeline/RuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip m_Clip
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TimelineClip*& UnityEngine::Timeline::RuntimeClip::dyn_m_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::dyn_m_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clip"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::RuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_ParentMixer
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::RuntimeClip::dyn_m_ParentMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::dyn_m_ParentMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Create
void UnityEngine::Timeline::RuntimeClip::Create(::UnityEngine::Timeline::TimelineClip* clip, ::UnityEngine::Playables::Playable clipPlayable, ::UnityEngine::Playables::Playable parentMixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_clip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::RuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_mixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_playable
::UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetTime
void UnityEngine::Timeline::RuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetDuration
void UnityEngine::Timeline::RuntimeClip::SetDuration(double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::SetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_start
double UnityEngine::Timeline::RuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_duration
double UnityEngine::Timeline::RuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.set_enable
void UnityEngine::Timeline::RuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.EvaluateAt
void UnityEngine::Timeline::RuntimeClip::EvaluateAt(double localTime, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Reset
void UnityEngine::Timeline::RuntimeClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClipBase
#include "UnityEngine/Timeline/RuntimeClipBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_start
double UnityEngine::Timeline::RuntimeClipBase::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_duration
double UnityEngine::Timeline::RuntimeClipBase::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <intervalBit>k__BackingField
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::RuntimeElement::dyn_$intervalBit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::dyn_$intervalBit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<intervalBit>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalBit
int UnityEngine::Timeline::RuntimeElement::get_intervalBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::get_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_intervalBit
void UnityEngine::Timeline::RuntimeElement::set_intervalBit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::set_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_enable
void UnityEngine::Timeline::RuntimeElement::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::set_enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.EvaluateAt
void UnityEngine::Timeline::RuntimeElement::EvaluateAt(double localTime, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.Reset
void UnityEngine::Timeline::RuntimeElement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IMarker.get_time
double UnityEngine::Timeline::IMarker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::get_time");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.set_time
void UnityEngine::Timeline::IMarker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::set_time");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.get_parent
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::IMarker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::get_parent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::IMarker::Initialize(::UnityEngine::Timeline::TrackAsset* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.INotificationOptionProvider
#include "UnityEngine/Timeline/INotificationOptionProvider.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.INotificationOptionProvider.get_flags
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::INotificationOptionProvider::get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::INotificationOptionProvider::get_flags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::INotificationOptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerList
#include "UnityEngine/Timeline/MarkerList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ScriptableObject> m_Objects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*& UnityEngine::Timeline::MarkerList::dyn_m_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_Objects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Objects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.IMarker> m_Cache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>*& UnityEngine::Timeline::MarkerList::dyn_m_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_Cache");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CacheDirty
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::MarkerList::dyn_m_CacheDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_CacheDirty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasNotifications
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::MarkerList::dyn_m_HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_HasNotifications");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasNotifications"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_markers
::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::get_markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::get_markers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_markers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList..ctor
UnityEngine::Timeline::MarkerList::MarkerList(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Add
void UnityEngine::Timeline::MarkerList::Add(::UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(::UnityEngine::Timeline::IMarker* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(::UnityEngine::ScriptableObject* item, ::UnityEngine::Timeline::TimelineAsset* timelineAsset, ::UnityEngine::Playables::PlayableAsset* thingToDirty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(timelineAsset), ::il2cpp_utils::ExtractType(thingToDirty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item, timelineAsset, thingToDirty);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Clear
void UnityEngine::Timeline::MarkerList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetMarkers
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Count
int UnityEngine::Timeline::MarkerList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Item
::UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::get_Item(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetRawMarkerList
::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>* UnityEngine::Timeline::MarkerList::GetRawMarkerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::GetRawMarkerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRawMarkerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.CreateMarker
::UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::CreateMarker(::System::Type* type, double time, ::UnityEngine::Timeline::TrackAsset* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, type, time, owner);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.HasNotifications
bool UnityEngine::Timeline::MarkerList::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Timeline::MarkerList), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Timeline::MarkerList), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.BuildCache
void UnityEngine::Timeline::MarkerList::BuildCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::BuildCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BuildCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerTrack.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::MarkerTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.GroupTrack.CanCompileClips
bool UnityEngine::Timeline::GroupTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::GroupTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.GroupTrack.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::GroupTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::GroupTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ILayerable
#include "UnityEngine/Timeline/ILayerable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ILayerable.CreateLayerMixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::ILayerable::CreateLayerMixer(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ILayerable::CreateLayerMixer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ILayerable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
void UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_Retroactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "Retroactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
void UnityEngine::Timeline::NotificationFlags::_set_Retroactive(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_Retroactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "Retroactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
void UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 value__
[[deprecated("Use field access instead!")]] int16_t& UnityEngine::Timeline::NotificationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> m_Notifications
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Notifications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_PreviousTime
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_NeedSortNotifications
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NeedSortNotifications"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_TimeSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(::UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(::UnityEngine::Playables::PlayableGraph graph, double duration, ::UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(loopMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, ::UnityEngine::Playables::INotification* payload, ::UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(payload), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, ::UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(previousTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, ::UnityEngine::Playables::FrameData info, ::UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(checkState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::PlayableOutput output, ByRef<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable, output, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(ByRef<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
[[deprecated("Use field access instead!")]] double& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.INotification payload
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::INotification*& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "payload"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::INotification**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean notificationFired
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notificationFired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.NotificationFlags flags
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::NotificationFlags& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::NotificationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerInEditor
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_prewarm
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_prewarm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerOnce
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
::UnityEngine::Timeline::TimeNotificationBehaviour::$$c* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeNotificationBehaviour::$$c*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9(::UnityEngine::Timeline::TimeNotificationBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0(::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c..cctor
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c.<SortNotifications>b__12_0
int UnityEngine::Timeline::TimeNotificationBehaviour::$$c::$SortNotifications$b__12_0(::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry x, ::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::<SortNotifications>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortNotifications>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PlayableTrack
#include "UnityEngine/Timeline/PlayableTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PlayableTrack.OnCreateClip
void UnityEngine::Timeline::PlayableTrack::OnCreateClip(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PlayableTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackClipTypeAttribute
#include "UnityEngine/Timeline/TrackClipTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type inspectedType
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectedType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean allowAutoCreate
[[deprecated("Use field access instead!")]] bool& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoCreate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotKeyableAttribute
#include "UnityEngine/Timeline/NotKeyableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingFlags
#include "UnityEngine/Timeline/TrackBindingFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags None
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags None
void UnityEngine::Timeline::TrackBindingFlags::_set_None(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
void UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags All
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags All
void UnityEngine::Timeline::TrackBindingFlags::_set_All(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TrackBindingFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Timeline.TrackBindingFlags flags
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::TrackBindingFlags& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TrackBindingFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SupportsChildTracksAttribute
#include "UnityEngine/Timeline/SupportsChildTracksAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type childType
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 levels
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IgnoreOnPlayableTrackAttribute
#include "UnityEngine/Timeline/IgnoreOnPlayableTrackAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HideInMenuAttribute
#include "UnityEngine/Timeline/HideInMenuAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineClipAsset
#include "UnityEngine/Timeline/ITimelineClipAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineClipAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimelineClipAsset*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineEvaluateCallback.Evaluate
void UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimelineEvaluateCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelinePlayable
#include "UnityEngine/Timeline/TimelinePlayable.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean muteAudioScrubbing
bool UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean muteAudioScrubbing
void UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.IntervalTree`1<UnityEngine.Timeline.RuntimeElement> m_IntervalTree
[[deprecated("Use field access instead!")]] ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntervalTree"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_ActiveClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_CurrentListOfActiveClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentListOfActiveClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ActiveBit
[[deprecated("Use field access instead!")]] int& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveBit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.ITimelineEvaluateCallback> m_EvaluateCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::ITimelineEvaluateCallback*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EvaluateCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::ITimelineEvaluateCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Timeline.TrackAsset,UnityEngine.Playables.Playable> m_PlayableCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::Playables::Playable>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayableCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::Playables::Playable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimelinePlayable*> UnityEngine::Timeline::TimelinePlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimelinePlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Compile
void UnityEngine::Timeline::TimelinePlayable::Compile(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CompileTrackList
void UnityEngine::Timeline::TimelinePlayable::CompileTrackList(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CompileTrackList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackOutput
void UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::GameObject* go, ::UnityEngine::Playables::Playable playable, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, track, go, playable, port);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateWeightsForAnimationPlayableOutput
void UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateWeightsForAnimationPlayableOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreatePlayableGraph
::UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::TrackAsset* asset, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree, ::UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, asset, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackPlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, timelinePlayable, track, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Evaluate
void UnityEngine::Timeline::TimelinePlayable::Evaluate(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, frameData);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CacheTrack
void UnityEngine::Timeline::TimelinePlayable::CacheTrack(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Playables::Playable playable, int port, ::UnityEngine::Playables::Playable parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CacheTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, playable, port, parent);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable..cctor
void UnityEngine::Timeline::TimelinePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.PrepareFrame
void UnityEngine::Timeline::TimelinePlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation
#include "UnityEngine/Timeline/Extrapolation.hpp"
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinExtrapolationTime
double UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinExtrapolationTime
void UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime", value));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.CalculateExtrapolationTimes
void UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes(::UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "CalculateExtrapolationTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.SortClipsByStartTime
::ArrayW<::UnityEngine::Timeline::TimelineClip*> UnityEngine::Timeline::Extrapolation::SortClipsByStartTime(::ArrayW<::UnityEngine::Timeline::TimelineClip*> clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::SortClipsByStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "SortClipsByStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Timeline::TimelineClip*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation..cctor
void UnityEngine::Timeline::Extrapolation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
::UnityEngine::Timeline::Extrapolation::$$c* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::Extrapolation::$$c*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9(::UnityEngine::Timeline::Extrapolation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0(::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c..cctor
void UnityEngine::Timeline::Extrapolation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c.<SortClipsByStartTime>b__2_0
int UnityEngine::Timeline::Extrapolation::$$c::$SortClipsByStartTime$b__2_0(::UnityEngine::Timeline::TimelineClip* clip1, ::UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::<SortClipsByStartTime>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClipsByStartTime>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HashUtility
#include "UnityEngine/Timeline/HashUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PushActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PopActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddObjectProperties
void UnityEngine::Timeline::IPropertyCollector::AddObjectProperties(::UnityEngine::Object* obj, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddObjectProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyPreview
#include "UnityEngine/Timeline/IPropertyPreview.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyPreview.GatherProperties
void UnityEngine::Timeline::IPropertyPreview::GatherProperties(::UnityEngine::Playables::PlayableDirector* director, ::UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyPreview::GatherProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyPreview*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationUtilities
#include "UnityEngine/Timeline/NotificationUtilities.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.CreateNotificationsPlayable
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable(::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>* markers, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(markers), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, markers, go);
}
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.TrackTypeSupportsNotifications
bool UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "TrackTypeSupportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities
#include "UnityEngine/Timeline/TimelineCreateUtilities.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.GenerateUniqueActorName
::StringW UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName(::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>* tracks, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "GenerateUniqueActorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tracks, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.SaveAssetIntoObject
void UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject(::UnityEngine::Object* childAsset, ::UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "SaveAssetIntoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.CreateAnimationClipForTrack
::UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack(::StringW name, ::UnityEngine::Timeline::TrackAsset* track, bool isLegacy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "CreateAnimationClipForTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(isLegacy)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, track, isLegacy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.ValidateParentTrack
bool UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack(::UnityEngine::Timeline::TrackAsset* parent, ::System::Type* childType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "ValidateParentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(childType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, childType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0.<GenerateUniqueActorName>b__0
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::$GenerateUniqueActorName$b__0(::UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::<GenerateUniqueActorName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String result
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1.<GenerateUniqueActorName>b__1
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::$GenerateUniqueActorName$b__1(::UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::<GenerateUniqueActorName>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineUndo
#include "UnityEngine/Timeline/TimelineUndo.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushDestroyUndo
void UnityEngine::Timeline::TimelineUndo::PushDestroyUndo(::UnityEngine::Timeline::TimelineAsset* timeline, ::UnityEngine::Object* thingToDirty, ::UnityEngine::Object* objectToDestroy, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::PushDestroyUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushDestroyUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeline), ::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(objectToDestroy), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeline, thingToDirty, objectToDestroy, operation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.WeightUtility
#include "UnityEngine/Timeline/WeightUtility.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.WeightUtility.NormalizeMixer
float UnityEngine::Timeline::WeightUtility::NormalizeMixer(::UnityEngine::Playables::Playable mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::WeightUtility::NormalizeMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "WeightUtility", "NormalizeMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CodeAnalysis.EmbeddedAttribute
#include "Microsoft/CodeAnalysis/EmbeddedAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IsReadOnlyAttribute
#include "System/Runtime/CompilerServices/IsReadOnlyAttribute__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InputHelpers
#include "GlobalNamespace/InputHelpers.hpp"
// Including type: InputHelpers/Button
#include "GlobalNamespace/InputHelpers_Button.hpp"
// Including type: UnityEngine.XR.InputDevice
#include "UnityEngine/XR/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly InputHelpers/ButtonInfo[] s_ButtonData
::ArrayW<::GlobalNamespace::InputHelpers::ButtonInfo> GlobalNamespace::InputHelpers::_get_s_ButtonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::_get_s_ButtonData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::InputHelpers::ButtonInfo>>("", "InputHelpers", "s_ButtonData"));
}
// Autogenerated static field setter
// Set static field: static private readonly InputHelpers/ButtonInfo[] s_ButtonData
void GlobalNamespace::InputHelpers::_set_s_ButtonData(::ArrayW<::GlobalNamespace::InputHelpers::ButtonInfo> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::_set_s_ButtonData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers", "s_ButtonData", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultPressThreshold
float GlobalNamespace::InputHelpers::_get_k_DefaultPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::_get_k_DefaultPressThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "InputHelpers", "k_DefaultPressThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultPressThreshold
void GlobalNamespace::InputHelpers::_set_k_DefaultPressThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::_set_k_DefaultPressThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers", "k_DefaultPressThreshold", value));
}
// Autogenerated method: InputHelpers.IsPressed
bool GlobalNamespace::InputHelpers::IsPressed(::UnityEngine::XR::InputDevice device, ::GlobalNamespace::InputHelpers::Button button, ByRef<bool> isPressed, float pressThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::IsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InputHelpers", "IsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(pressThreshold)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, button, byref(isPressed), pressThreshold);
}
// Autogenerated method: InputHelpers..cctor
void GlobalNamespace::InputHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InputHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InputHelpers/Button
#include "GlobalNamespace/InputHelpers_Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button None
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "None"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button None
void GlobalNamespace::InputHelpers::Button::_set_None(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "None", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button MenuButton
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_MenuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_MenuButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "MenuButton"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button MenuButton
void GlobalNamespace::InputHelpers::Button::_set_MenuButton(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_MenuButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "MenuButton", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button Trigger
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "Trigger"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button Trigger
void GlobalNamespace::InputHelpers::Button::_set_Trigger(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "Trigger", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button Grip
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "Grip"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button Grip
void GlobalNamespace::InputHelpers::Button::_set_Grip(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "Grip", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button TriggerPressed
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_TriggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_TriggerPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "TriggerPressed"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button TriggerPressed
void GlobalNamespace::InputHelpers::Button::_set_TriggerPressed(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_TriggerPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "TriggerPressed", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button GripPressed
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_GripPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_GripPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "GripPressed"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button GripPressed
void GlobalNamespace::InputHelpers::Button::_set_GripPressed(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_GripPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "GripPressed", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button PrimaryButton
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_PrimaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_PrimaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "PrimaryButton"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button PrimaryButton
void GlobalNamespace::InputHelpers::Button::_set_PrimaryButton(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_PrimaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "PrimaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button PrimaryTouch
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_PrimaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_PrimaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "PrimaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button PrimaryTouch
void GlobalNamespace::InputHelpers::Button::_set_PrimaryTouch(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_PrimaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "PrimaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button SecondaryButton
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_SecondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_SecondaryButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "SecondaryButton"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button SecondaryButton
void GlobalNamespace::InputHelpers::Button::_set_SecondaryButton(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_SecondaryButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "SecondaryButton", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button SecondaryTouch
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_SecondaryTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_SecondaryTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "SecondaryTouch"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button SecondaryTouch
void GlobalNamespace::InputHelpers::Button::_set_SecondaryTouch(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_SecondaryTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "SecondaryTouch", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button Primary2DAxisTouch
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_Primary2DAxisTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_Primary2DAxisTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "Primary2DAxisTouch"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button Primary2DAxisTouch
void GlobalNamespace::InputHelpers::Button::_set_Primary2DAxisTouch(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_Primary2DAxisTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "Primary2DAxisTouch", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button Primary2DAxisClick
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_Primary2DAxisClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_Primary2DAxisClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "Primary2DAxisClick"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button Primary2DAxisClick
void GlobalNamespace::InputHelpers::Button::_set_Primary2DAxisClick(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_Primary2DAxisClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "Primary2DAxisClick", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button Secondary2DAxisTouch
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_Secondary2DAxisTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_Secondary2DAxisTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "Secondary2DAxisTouch"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button Secondary2DAxisTouch
void GlobalNamespace::InputHelpers::Button::_set_Secondary2DAxisTouch(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_Secondary2DAxisTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "Secondary2DAxisTouch", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button Secondary2DAxisClick
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_Secondary2DAxisClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_Secondary2DAxisClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "Secondary2DAxisClick"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button Secondary2DAxisClick
void GlobalNamespace::InputHelpers::Button::_set_Secondary2DAxisClick(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_Secondary2DAxisClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "Secondary2DAxisClick", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button PrimaryAxis2DUp
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "PrimaryAxis2DUp"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button PrimaryAxis2DUp
void GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DUp(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "PrimaryAxis2DUp", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button PrimaryAxis2DDown
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "PrimaryAxis2DDown"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button PrimaryAxis2DDown
void GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DDown(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "PrimaryAxis2DDown", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button PrimaryAxis2DLeft
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "PrimaryAxis2DLeft"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button PrimaryAxis2DLeft
void GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DLeft(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "PrimaryAxis2DLeft", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button PrimaryAxis2DRight
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_PrimaryAxis2DRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "PrimaryAxis2DRight"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button PrimaryAxis2DRight
void GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DRight(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_PrimaryAxis2DRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "PrimaryAxis2DRight", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button SecondaryAxis2DUp
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "SecondaryAxis2DUp"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button SecondaryAxis2DUp
void GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DUp(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "SecondaryAxis2DUp", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button SecondaryAxis2DDown
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "SecondaryAxis2DDown"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button SecondaryAxis2DDown
void GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DDown(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "SecondaryAxis2DDown", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button SecondaryAxis2DLeft
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "SecondaryAxis2DLeft"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button SecondaryAxis2DLeft
void GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DLeft(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "SecondaryAxis2DLeft", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/Button SecondaryAxis2DRight
::GlobalNamespace::InputHelpers::Button GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_get_SecondaryAxis2DRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::Button>("", "InputHelpers/Button", "SecondaryAxis2DRight"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/Button SecondaryAxis2DRight
void GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DRight(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::_set_SecondaryAxis2DRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/Button", "SecondaryAxis2DRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::InputHelpers::Button::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::Button::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InputHelpers/ButtonReadType
#include "GlobalNamespace/InputHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public InputHelpers/ButtonReadType None
::GlobalNamespace::InputHelpers::ButtonReadType GlobalNamespace::InputHelpers::ButtonReadType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::ButtonReadType>("", "InputHelpers/ButtonReadType", "None"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/ButtonReadType None
void GlobalNamespace::InputHelpers::ButtonReadType::_set_None(::GlobalNamespace::InputHelpers::ButtonReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/ButtonReadType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/ButtonReadType Binary
::GlobalNamespace::InputHelpers::ButtonReadType GlobalNamespace::InputHelpers::ButtonReadType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::ButtonReadType>("", "InputHelpers/ButtonReadType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/ButtonReadType Binary
void GlobalNamespace::InputHelpers::ButtonReadType::_set_Binary(::GlobalNamespace::InputHelpers::ButtonReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/ButtonReadType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/ButtonReadType Axis1D
::GlobalNamespace::InputHelpers::ButtonReadType GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis1D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis1D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::ButtonReadType>("", "InputHelpers/ButtonReadType", "Axis1D"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/ButtonReadType Axis1D
void GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis1D(::GlobalNamespace::InputHelpers::ButtonReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis1D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/ButtonReadType", "Axis1D", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/ButtonReadType Axis2DUp
::GlobalNamespace::InputHelpers::ButtonReadType GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::ButtonReadType>("", "InputHelpers/ButtonReadType", "Axis2DUp"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/ButtonReadType Axis2DUp
void GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DUp(::GlobalNamespace::InputHelpers::ButtonReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/ButtonReadType", "Axis2DUp", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/ButtonReadType Axis2DDown
::GlobalNamespace::InputHelpers::ButtonReadType GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::ButtonReadType>("", "InputHelpers/ButtonReadType", "Axis2DDown"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/ButtonReadType Axis2DDown
void GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DDown(::GlobalNamespace::InputHelpers::ButtonReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/ButtonReadType", "Axis2DDown", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/ButtonReadType Axis2DLeft
::GlobalNamespace::InputHelpers::ButtonReadType GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::ButtonReadType>("", "InputHelpers/ButtonReadType", "Axis2DLeft"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/ButtonReadType Axis2DLeft
void GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DLeft(::GlobalNamespace::InputHelpers::ButtonReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/ButtonReadType", "Axis2DLeft", value));
}
// Autogenerated static field getter
// Get static field: static public InputHelpers/ButtonReadType Axis2DRight
::GlobalNamespace::InputHelpers::ButtonReadType GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_get_Axis2DRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InputHelpers::ButtonReadType>("", "InputHelpers/ButtonReadType", "Axis2DRight"));
}
// Autogenerated static field setter
// Set static field: static public InputHelpers/ButtonReadType Axis2DRight
void GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DRight(::GlobalNamespace::InputHelpers::ButtonReadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::_set_Axis2DRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InputHelpers/ButtonReadType", "Axis2DRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::InputHelpers::ButtonReadType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonReadType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InputHelpers/ButtonInfo
#include "GlobalNamespace/InputHelpers.hpp"
// Including type: InputHelpers/ButtonReadType
// Already included the same include: GlobalNamespace/InputHelpers.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InputHelpers::ButtonInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonInfo::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public InputHelpers/ButtonReadType type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::ButtonReadType& GlobalNamespace::InputHelpers::ButtonInfo::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputHelpers::ButtonInfo::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::ButtonReadType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InputHelpers/ButtonInfo..ctor
// ABORTED elsewhere.  GlobalNamespace::InputHelpers::ButtonInfo::ButtonInfo(::StringW name, ::GlobalNamespace::InputHelpers::ButtonReadType type)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ActionBasedController
#include "UnityEngine/XR/Interaction/Toolkit/ActionBasedController.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_PositionAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_PositionAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_PositionAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_RotationAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_SelectAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_SelectAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_SelectAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_ActivateAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ActivateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ActivateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_UIPressAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_UIPressAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_UIPressAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_HapticDeviceAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HapticDeviceAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_HapticDeviceAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticDeviceAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_RotateAnchorAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_RotateAnchorAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateAnchorAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputActionProperty m_TranslateAnchorAction
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionProperty& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_TranslateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_TranslateAnchorAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TranslateAnchorAction"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ButtonPressPoint
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ButtonPressPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::dyn_m_ButtonPressPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ButtonPressPoint"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_positionAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_positionAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_positionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_positionAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_positionAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_positionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_positionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_rotationAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_rotationAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotationAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_selectAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_selectAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_selectAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_selectAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_selectAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_selectAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_activateAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_activateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_activateAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_activateAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_activateAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_activateAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activateAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_uiPressAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_uiPressAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_uiPressAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_uiPressAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_uiPressAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_uiPressAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiPressAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_hapticDeviceAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_hapticDeviceAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_hapticDeviceAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticDeviceAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_hapticDeviceAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_hapticDeviceAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_hapticDeviceAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticDeviceAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_rotateAnchorAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_rotateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_rotateAnchorAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotateAnchorAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_rotateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_translateAnchorAction
::UnityEngine::InputSystem::InputActionProperty UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_translateAnchorAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_translateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_translateAnchorAction
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_translateAnchorAction(::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_translateAnchorAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translateAnchorAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.get_buttonPressPoint
float UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_buttonPressPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::get_buttonPressPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonPressPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.set_buttonPressPoint
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_buttonPressPoint(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::set_buttonPressPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonPressPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.EnableAllDirectActions
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::EnableAllDirectActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::EnableAllDirectActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableAllDirectActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.DisableAllDirectActions
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::DisableAllDirectActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::DisableAllDirectActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAllDirectActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.SetInputActionProperty
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SetInputActionProperty(ByRef<::UnityEngine::InputSystem::InputActionProperty> property, ::UnityEngine::InputSystem::InputActionProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SetInputActionProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInputActionProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(property), value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.ComputeInteractionActionStates
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::ComputeInteractionActionStates(bool pressed, ByRef<::UnityEngine::XR::Interaction::Toolkit::InteractionState> interactionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::ComputeInteractionActionStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "ActionBasedController", "ComputeInteractionActionStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(interactionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pressed, byref(interactionState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.<UpdateInput>g__IsPressed|39_0
bool UnityEngine::XR::Interaction::Toolkit::ActionBasedController::$UpdateInput$g__IsPressed_39_0(::UnityEngine::InputSystem::InputActionProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::<UpdateInput>g__IsPressed|39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateInput>g__IsPressed|39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.OnEnable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.OnDisable
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateTrackingInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateTrackingInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ActionBasedController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ActionBasedController::SendHapticImpulse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType m_UpdateTrackingType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UpdateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UpdateTrackingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateTrackingType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputTracking
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInputActions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_EnableInputActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInputActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ModelTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AnimateModel
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnimateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnimateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimateModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelSelectTransition
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ModelDeSelectTransition
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelDeSelectTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelDeSelectTransition"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AnchorControlDeadzone
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnchorControlDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnchorControlDeadzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnchorControlDeadzone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AnchorControlOffAxisDeadzone
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnchorControlOffAxisDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_AnchorControlOffAxisDeadzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnchorControlOffAxisDeadzone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionState m_SelectInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_SelectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_SelectInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionState m_ActivateInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ActivateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ActivateInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.InteractionState m_UIPressInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UIPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_UIPressInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerModel
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_HideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_HideControllerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRControllerState m_ControllerState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRControllerState*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ControllerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ControllerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRControllerState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ModelGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_ModelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ModelGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_updateTrackingType
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_updateTrackingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_updateTrackingType
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_updateTrackingType(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_updateTrackingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateTrackingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_enableInputTracking
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_enableInputTracking
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputTracking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputTracking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_enableInputActions
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_enableInputActions
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputActions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_enableInputActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInputActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelPrefab
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelPrefab
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelPrefab(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelTransform
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_animateModel
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_animateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_animateModel
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_animateModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_animateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_modelDeSelectTransition
::StringW UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelDeSelectTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_modelDeSelectTransition
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelDeSelectTransition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_modelDeSelectTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modelDeSelectTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_anchorControlDeadzone
float UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorControlDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_anchorControlDeadzone
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlDeadzone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorControlDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_anchorControlOffAxisDeadzone
float UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlOffAxisDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_anchorControlOffAxisDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorControlOffAxisDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_anchorControlOffAxisDeadzone
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlOffAxisDeadzone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_anchorControlOffAxisDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorControlOffAxisDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_selectInteractionState
::UnityEngine::XR::Interaction::Toolkit::InteractionState UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_selectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_selectInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_activateInteractionState
::UnityEngine::XR::Interaction::Toolkit::InteractionState UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_activateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_activateInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_uiPressInteractionState
::UnityEngine::XR::Interaction::Toolkit::InteractionState UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_uiPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_uiPressInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::InteractionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.get_hideControllerModel
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_hideControllerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::get_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.set_hideControllerModel
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_hideControllerModel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::set_hideControllerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.Update
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.PerformSetup
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::PerformSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.SetupModel
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetupModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetupModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateController
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateController");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.OnBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::OnBeforeRender");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.GetControllerState
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::GetControllerState(ByRef<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*> controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::GetControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(controllerState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.SetControllerState
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetControllerState(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::SetControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.ApplyControllerState
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::ApplyControllerState(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase, ::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::ApplyControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateTrackingInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateTrackingInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateInputInternal
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateInputInternal(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateInputInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInputInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateControllerModelAnimation
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateControllerModelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateControllerModelAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.UpdateControllerPose
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateControllerPose(::UnityEngine::Vector3 localPosition, ::UnityEngine::Quaternion localRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(localRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localPosition, localRotation);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRBaseController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::SendHapticImpulse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType UpdateAndBeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_UpdateAndBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_UpdateAndBeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "UpdateAndBeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType UpdateAndBeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_UpdateAndBeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_UpdateAndBeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "UpdateAndBeforeRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType Update
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType Update
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_Update(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType BeforeRender
::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_BeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_get_BeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "BeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseController/UpdateType BeforeRender
void UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_BeforeRender(::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::_set_BeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseController/UpdateType", "BeforeRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseController::UpdateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionState
#include "UnityEngine/XR/Interaction/Toolkit/InteractionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Active
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_Active");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ActivatedThisFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_ActivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_ActivatedThisFrame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivatedThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DeactivatedThisFrame
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_DeactivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::dyn_m_DeactivatedThisFrame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeactivatedThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_active
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_active
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_activatedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_activatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_activatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_activatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_activatedThisFrame
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_activatedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_activatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_activatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_deactivatedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deactivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deactivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deactivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_deactivatedThisFrame
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deactivatedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deactivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_deactivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.get_deActivatedThisFrame
bool UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deActivatedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::get_deActivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deActivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.set_deActivatedThisFrame
void UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deActivatedThisFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::set_deActivatedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_deActivatedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.ResetFrameDependent
void UnityEngine::XR::Interaction::Toolkit::InteractionState::ResetFrameDependent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::ResetFrameDependent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResetFrameDependent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.InteractionState.Reset
void UnityEngine::XR::Interaction::Toolkit::InteractionState::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::InteractionState::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SpatialTracking.PoseDataFlags poseDataFlags
[[deprecated("Use field access instead!")]] ::UnityEngine::SpatialTracking::PoseDataFlags& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_poseDataFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_poseDataFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poseDataFlags"))->offset;
  return *reinterpret_cast<::UnityEngine::SpatialTracking::PoseDataFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.InteractionState selectInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_selectInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_selectInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.InteractionState activateInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_activateInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_activateInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Interaction.Toolkit.InteractionState uiPressInteractionState
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::InteractionState& UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_uiPressInteractionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::dyn_uiPressInteractionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiPressInteractionState"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::InteractionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.SimulateInteractionState
void UnityEngine::XR::Interaction::Toolkit::XRControllerState::SimulateInteractionState(bool pressed, ByRef<::UnityEngine::XR::Interaction::Toolkit::InteractionState> interactionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::SimulateInteractionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateInteractionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(interactionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressed, byref(interactionState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.ResetFrameDependentStates
void UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetFrameDependentStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetFrameDependentStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFrameDependentStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.ResetInputs
void UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetInputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::ResetInputs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetInputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerState.ToString
::StringW UnityEngine::XR::Interaction::Toolkit::XRControllerState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerState::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.Experimental.XR.Interaction.BasePoseProvider
#include "UnityEngine/Experimental/XR/Interaction/BasePoseProvider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.InteractionState
#include "UnityEngine/XR/Interaction/Toolkit/InteractionState.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_ControllerNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ControllerNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllerNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InputHelpers/Button m_SelectUsage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_SelectUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectUsage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InputHelpers/Button m_ActivateUsage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_ActivateUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateUsage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InputHelpers/Button m_UIPressUsage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_UIPressUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UIPressUsage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AxisToPressThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_AxisToPressThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisToPressThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InputHelpers/Button m_RotateAnchorLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateAnchorLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InputHelpers/Button m_RotateAnchorRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_RotateAnchorRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateAnchorRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InputHelpers/Button m_MoveObjectIn
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MoveObjectIn"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InputHelpers/Button m_MoveObjectOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InputHelpers::Button& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_MoveObjectOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MoveObjectOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InputHelpers::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.XR.Interaction.BasePoseProvider m_PoseProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PoseProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_PoseProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PoseProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::XR::Interaction::BasePoseProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice m_InputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::dyn_m_InputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_controllerNode
::UnityEngine::XR::XRNode UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_controllerNode
void UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_controllerNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllerNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_selectUsage
::GlobalNamespace::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_selectUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_selectUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_activateUsage
::GlobalNamespace::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_activateUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_activateUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activateUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_uiPressUsage
::GlobalNamespace::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_uiPressUsage
void UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_uiPressUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiPressUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_axisToPressThreshold
float UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_axisToPressThreshold
void UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_axisToPressThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_axisToPressThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_rotateObjectLeft
::GlobalNamespace::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateObjectLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_rotateObjectLeft
void UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectLeft(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateObjectLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_rotateObjectRight
::GlobalNamespace::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_rotateObjectRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateObjectRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_rotateObjectRight
void UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectRight(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_rotateObjectRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateObjectRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_moveObjectIn
::GlobalNamespace::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveObjectIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_moveObjectIn
void UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectIn(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveObjectIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_moveObjectOut
::GlobalNamespace::InputHelpers::Button UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_moveObjectOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveObjectOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::InputHelpers::Button, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_moveObjectOut
void UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectOut(::GlobalNamespace::InputHelpers::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_moveObjectOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveObjectOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_poseProvider
::UnityEngine::Experimental::XR::Interaction::BasePoseProvider* UnityEngine::XR::Interaction::Toolkit::XRController::get_poseProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_poseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_poseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::XR::Interaction::BasePoseProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.set_poseProvider
void UnityEngine::XR::Interaction::Toolkit::XRController::set_poseProvider(::UnityEngine::Experimental::XR::Interaction::BasePoseProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::set_poseProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_poseProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.get_inputDevice
::UnityEngine::XR::InputDevice UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::get_inputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputDevice, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.HandleInteractionAction
void UnityEngine::XR::Interaction::Toolkit::XRController::HandleInteractionAction(::GlobalNamespace::InputHelpers::Button button, ByRef<::UnityEngine::XR::Interaction::Toolkit::InteractionState> interactionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::HandleInteractionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInteractionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(interactionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, byref(interactionState));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateTrackingInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateTrackingInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.UpdateInput
void UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::UpdateInput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controllerState);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRController.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRController::SendHapticImpulse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseController*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecorder.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayOnStart
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PlayOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRControllerRecording m_Recording
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_Recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Recording"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseController m_XRController
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseController*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_XRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_XRController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XRController"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_CurrentTime
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_CurrentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <recordingStartTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_$recordingStartTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_$recordingStartTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<recordingStartTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsRecording
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsPlaying
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_IsPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_LastPlaybackTime
[[deprecated("Use field access instead!")]] double& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastPlaybackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPlaybackTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LastFrameIdx
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_LastFrameIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastFrameIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PrevEnableInputActions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevEnableInputActions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PrevEnableInputTracking
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::dyn_m_PrevEnableInputTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevEnableInputTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_playOnStart
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_playOnStart
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_playOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_recording
::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_recording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_xrController
::UnityEngine::XR::Interaction::Toolkit::XRBaseController* UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_xrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_xrController
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_xrController(::UnityEngine::XR::Interaction::Toolkit::XRBaseController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isRecording
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_isPlaying
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_isPlaying
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_currentTime
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_currentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.get_recordingStartTime
float UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recordingStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::get_recordingStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.set_recordingStartTime
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recordingStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::set_recordingStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Awake
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.Update
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.ResetPlayback
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::ResetPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.UpdatePlaybackTime
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime(double playbackTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::UpdatePlaybackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlaybackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playbackTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playbackTime);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecorder.GetControllerState
bool UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::GetControllerState(ByRef<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*> controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder::GetControllerState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRControllerRecorder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(controllerState));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerRecording.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRControllerState
#include "UnityEngine/XR/Interaction/Toolkit/XRControllerState.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRControllerState> m_Frames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>*& UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::dyn_m_Frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Frames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_frames
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>* UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRControllerState*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.get_duration
double UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.AddRecordingFrame
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame(double time, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool selectActive, bool activateActive, bool pressActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecordingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(selectActive), ::il2cpp_utils::ExtractType(activateActive), ::il2cpp_utils::ExtractType(pressActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, position, rotation, selectActive, activateActive, pressActive);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.AddRecordingFrame
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame(::UnityEngine::XR::Interaction::Toolkit::XRControllerState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::AddRecordingFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRecordingFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.InitRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::InitRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRControllerRecording.SaveRecording
void UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRControllerRecording::SaveRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual/ShaderPropertyLookup
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual_ShaderPropertyLookup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Material> s_Materials
::System::Collections::Generic::List_1<::UnityEngine::Material*>* UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_get_s_Materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_get_s_Materials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Material*>*>("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual", "s_Materials"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Material> s_Materials
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_set_s_Materials(::System::Collections::Generic::List_1<::UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_set_s_Materials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual", "s_Materials", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_TintColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnHover
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TintOnSelection
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintOnSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintOnSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Renderer> m_TintRenderers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintRenderers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_Interactable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock m_TintPropertyBlock
[[deprecated("Use field access instead!")]] ::UnityEngine::MaterialPropertyBlock*& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_TintPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TintPropertyBlock"))->offset;
  return *reinterpret_cast<::UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EmissionEnabled
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_EmissionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_EmissionEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EmissionEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasLoggedMaterialInstance
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_HasLoggedMaterialInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::dyn_m_HasLoggedMaterialInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasLoggedMaterialInstance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintColor
::UnityEngine::Color UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintColor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnHover
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnHover
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintOnSelection
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintOnSelection
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintOnSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintOnSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.get_tintRenderers
::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::get_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.set_tintRenderers
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::set_tintRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.SetTint
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::SetTint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.GetEmissionEnabled
bool UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::GetEmissionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::GetEmissionEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnFirstHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnFirstHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFirstHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnLastHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnLastHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLastHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::OnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual..cctor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual/ShaderPropertyLookup
#include "UnityEngine/XR/Interaction/Toolkit/XRTintInteractableVisual_ShaderPropertyLookup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 emissionColor
int UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_get_emissionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_get_emissionColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual/ShaderPropertyLookup", "emissionColor"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 emissionColor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_set_emissionColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_set_emissionColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual/ShaderPropertyLookup", "emissionColor", value));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRTintInteractableVisual/ShaderPropertyLookup..cctor
void UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRTintInteractableVisual::ShaderPropertyLookup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRTintInteractableVisual/ShaderPropertyLookup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractableEvent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_s_InteractionManagerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_get_s_InteractionManagerCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "s_InteractionManagerCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::_set_s_InteractionManagerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable", "s_InteractionManagerCache", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_Colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Colliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> m_HoveringInteractors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoveringInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_HoveringInteractors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoveringInteractors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isHovered>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isHovered$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isHovered$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isHovered>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isSelected>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isSelected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_$isSelected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isSelected>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnFirstHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnFirstHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnLastHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnLastHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectCanceled
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnSelectCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectCanceled"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnActivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_OnDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnDeactivate"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor,UnityEngine.GameObject> m_ReticleCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::dyn_m_ReticleCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_colliders
::System::Collections::Generic::List_1<::UnityEngine::Collider*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_interactionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_hoveringInteractors
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoveringInteractors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isHovered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_isHovered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isHovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_isSelected
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_isSelected
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onFirstHoverEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFirstHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onFirstHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onFirstHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onFirstHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFirstHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onLastHoverExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onLastHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onLastHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onLastHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onLastHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onLastHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectCanceled
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onSelectCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onSelectCancel
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onActivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_onDeactivate
::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_onDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.get_customReticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.set_customReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customReticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.FindInteractionManagerEditTime
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindInteractionManagerEditTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindInteractionManagerEditTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindInteractionManagerEditTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RegisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor
float UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistanceSqrToInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsOnValidLayerMask
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnValidLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceling
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceled
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivate
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType VelocityTracking
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_VelocityTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType VelocityTracking
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_VelocityTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "VelocityTracking", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Kinematic
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Kinematic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Kinematic
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Kinematic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Kinematic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Instantaneous
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_get_Instantaneous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType Instantaneous
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::_set_Instantaneous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable/MovementType", "Instantaneous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRGrabInteractable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultTighteningAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultTighteningAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultTighteningAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultTighteningAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultTighteningAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultSmoothingAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultSmoothingAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultSmoothingAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultSmoothingAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultSmoothingAmount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_VelocityPredictionFactor
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityPredictionFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_VelocityPredictionFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityPredictionFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_VelocityPredictionFactor
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityPredictionFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_VelocityPredictionFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_VelocityPredictionFactor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_AngularVelocityDamping
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_AngularVelocityDamping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_AngularVelocityDamping
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_AngularVelocityDamping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_AngularVelocityDamping", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_ThrowSmoothingFrameCount
int UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_ThrowSmoothingFrameCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_ThrowSmoothingFrameCount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_ThrowSmoothingFrameCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_ThrowSmoothingFrameCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultAttachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultAttachEaseInTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultAttachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultAttachEaseInTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultAttachEaseInTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowSmoothingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowSmoothingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowSmoothingDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowVelocityScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_DefaultThrowAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_get_k_DefaultThrowAngularVelocityScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_DefaultThrowAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::_set_k_DefaultThrowAngularVelocityScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRGrabInteractable", "k_DefaultThrowAngularVelocityScale", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AttachEaseInTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_AttachEaseInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachEaseInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType m_MovementType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_MovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothPositionAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothPositionAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothPositionAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenPosition
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TrackRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TrackRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SmoothRotationAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SmoothRotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothRotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TightenRotation
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TightenRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TightenRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ThrowOnDetach
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowSmoothingDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_ThrowSmoothingCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowVelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ThrowAngularVelocityScale
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowAngularVelocityScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowAngularVelocityScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_GravityOnDetach
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_GravityOnDetach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GravityOnDetach"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RetainTransformParent
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RetainTransformParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_RetainTransformParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RetainTransformParent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_SelectingInteractor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SelectingInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_SelectingInteractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectingInteractor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InteractorLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_InteractorLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_InteractorLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractorLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetWorldPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetWorldPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_TargetWorldRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_TargetWorldRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetWorldRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentAttachEaseTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentAttachEaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentAttachEaseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/MovementType m_CurrentMovementType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_CurrentMovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentMovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DetachInLateUpdate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachInLateUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachInLateUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_DetachAngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_DetachAngularVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DetachAngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ThrowSmoothingCurrentFrame
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingCurrentFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingCurrentFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single[] m_ThrowSmoothingFrameTimes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingFrameTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingFrameTimes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ThrowSmoothingVelocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ThrowSmoothingAngularVelocityFrames
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_ThrowSmoothingAngularVelocityFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ThrowSmoothingAngularVelocityFrames"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody m_Rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_Rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_Rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_LastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_LastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_LastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasKinematic
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_WasKinematic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasKinematic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UsedGravity
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_UsedGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsedGravity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_OriginalSceneParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OriginalSceneParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::dyn_m_OriginalSceneParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OriginalSceneParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachTransform
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_attachEaseInTime
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_attachEaseInTime
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_attachEaseInTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachEaseInTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_movementType
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_movementType
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPosition
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothPositionAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothPositionAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothPositionAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothPositionAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenPosition
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenPosition
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_trackRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_trackRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_trackRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotation
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_smoothRotationAmount
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_smoothRotationAmount
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_smoothRotationAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothRotationAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_tightenRotation
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_tightenRotation
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_tightenRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tightenRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwSmoothingDuration
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwSmoothingDuration
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwSmoothingDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwSmoothingCurve
::UnityEngine::AnimationCurve* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwSmoothingCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwSmoothingCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwSmoothingCurve
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwSmoothingCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwSmoothingCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_throwAngularVelocityScale
float UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_throwAngularVelocityScale
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_throwAngularVelocityScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_throwAngularVelocityScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_gravityOnDetach
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_gravityOnDetach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_gravityOnDetach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gravityOnDetach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_retainTransformParent
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_retainTransformParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_retainTransformParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_retainTransformParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.set_retainTransformParent
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_retainTransformParent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::set_retainTransformParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_retainTransformParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.get_selectingInteractor
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_selectingInteractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::get_selectingInteractor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectingInteractor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetWorldAttachPosition
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachPosition(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldAttachPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetWorldAttachRotation
::UnityEngine::Quaternion UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachRotation(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetWorldAttachRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldAttachRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateTarget
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget(float timeDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformInstantaneousUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformInstantaneousUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformInstantaneousUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformKinematicUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformKinematicUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformKinematicUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.PerformVelocityTrackingUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate(float timeDelta, ::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::PerformVelocityTrackingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformVelocityTrackingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeDelta), ::il2cpp_utils::ExtractType(updatePhase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeDelta, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Detach
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Detach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Detach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.UpdateInteractorLocalPose
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateInteractorLocalPose(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::UpdateInteractorLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInteractorLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Drop
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Drop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Drop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Drop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityStart
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityEnd
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SmoothVelocityUpdate
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::SmoothVelocityUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothVelocityUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetSmoothedVelocityValue
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSmoothedVelocityValue(::ArrayW<::UnityEngine::Vector3> velocityFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::GetSmoothedVelocityValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSmoothedVelocityValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(velocityFrames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, velocityFrames);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Awake
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ProcessInteractable
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::ProcessInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectCanceling
void UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectCanceling(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::OnSelectCanceling");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.IsHoverableBy
bool UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRGrabInteractable::IsHoverableBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRSimpleInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRSimpleInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider
#include "UnityEngine/XR/Interaction/Toolkit/IXRCustomReticleProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle(::UnityEngine::GameObject* reticleInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticleInstance);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.IXRCustomReticleProvider.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::IXRCustomReticleProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> numPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(numPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.ILineRenderable.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorLineVisual.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
#include "UnityEngine/XR/Interaction/Toolkit/ILineRenderable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_MinLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MinLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MinLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MinLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MinLineWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_MaxLineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_get_k_MaxLineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_MaxLineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::_set_k_MaxLineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorLineVisual", "k_MaxLineWidth", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_OverrideInteractorLineLength
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_OverrideInteractorLineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideInteractorLineLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LineLength
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_WidthCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_WidthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WidthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_ValidColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ValidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_InvalidColorGradient
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_InvalidColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InvalidColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SmoothMovement
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SmoothMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SmoothMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FollowTightness
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_FollowTightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FollowTightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SnapThresholdDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapThresholdDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapThresholdDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Reticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_Reticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Reticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StopLineAtFirstRaycastHit
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_StopLineAtFirstRaycastHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StopLineAtFirstRaycastHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticlePos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticlePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_ReticleNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_EndPositionInLine
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_EndPositionInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPositionInLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SnapCurve
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_SnapCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SnapCurve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PerformSetup
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PerformSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleToUse
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ReticleToUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleToUse"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer m_LineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.ILineRenderable m_LineRenderable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_LineRenderable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineRenderable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::ILineRenderable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_TargetPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_TargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoTargetPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoTargetPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoTargetPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_RenderPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_RenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoRenderPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_PreviousRenderPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_PreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousRenderPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoPreviousRenderPoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_NoPreviousRenderPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoPreviousRenderPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ClearArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_ClearArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_CustomReticle
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticle"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CustomReticleAttached
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::dyn_m_CustomReticleAttached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomReticleAttached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineWidth
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineWidth
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_overrideInteractorLineLength
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_overrideInteractorLineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_overrideInteractorLineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideInteractorLineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_lineLength
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_lineLength
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_lineLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_widthCurve
::UnityEngine::AnimationCurve* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_widthCurve
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_widthCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_widthCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_validColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_validColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_validColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_validColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_invalidColorGradient
::UnityEngine::Gradient* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Gradient*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_invalidColorGradient
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient(::UnityEngine::Gradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_invalidColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_invalidColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_smoothMovement
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_smoothMovement
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_smoothMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_followTightness
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_followTightness
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_followTightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_followTightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_snapThresholdDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_snapThresholdDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_snapThresholdDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_snapThresholdDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_reticle
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_reticle
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_reticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.get_stopLineAtFirstRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::get_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.set_stopLineAtFirstRaycastHit
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::set_stopLineAtFirstRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stopLineAtFirstRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Reset
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnValidate
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.ClearLineRenderer
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::ClearLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.OnBeforeRenderLineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnBeforeRenderLineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::OnBeforeRenderLineVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRenderLineVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateLineVisual
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateLineVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLineVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.UpdateSettings
void UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::UpdateSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.TryFindLineRenderer
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::TryFindLineRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryFindLineRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.AttachCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle(::UnityEngine::GameObject* reticleInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::AttachCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reticleInstance);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorLineVisual.RemoveCustomReticle
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual::RemoveCustomReticle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorLineVisual*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorReticleVisual.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_get_k_MaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::_set_k_MaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "k_MaxRaycastHits", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticlePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticlePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticlePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PrefabScalingFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_PrefabScalingFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrefabScalingFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UndoDistanceScaling
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_UndoDistanceScaling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UndoDistanceScaling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AlignPrefabWithSurfaceNormal
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_AlignPrefabWithSurfaceNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlignPrefabWithSurfaceNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndpointSmoothingTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_EndpointSmoothingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndpointSmoothingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DrawWhileSelecting
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_DrawWhileSelecting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DrawWhileSelecting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReticleActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_ReticleInstance
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_ReticleInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReticleInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor m_Interactor
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_Interactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactor"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_TargetEndNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_TargetEndNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetEndNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.RaycastHit[] m_RaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasSelectedInteractable
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::dyn_m_HasSelectedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasSelectedInteractable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticlePrefab
::UnityEngine::GameObject* UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_prefabScalingFactor
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_prefabScalingFactor
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_prefabScalingFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefabScalingFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_undoDistanceScaling
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_undoDistanceScaling
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_undoDistanceScaling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_undoDistanceScaling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_alignPrefabWithSurfaceNormal
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_alignPrefabWithSurfaceNormal
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_alignPrefabWithSurfaceNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignPrefabWithSurfaceNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_endpointSmoothingTime
float UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_endpointSmoothingTime
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_endpointSmoothingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endpointSmoothingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_drawWhileSelecting
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_drawWhileSelecting
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_drawWhileSelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drawWhileSelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.get_reticleActive
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::get_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.set_reticleActive
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::set_reticleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reticleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Awake
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.Update
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.SetupReticlePrefab
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::SetupReticlePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupReticlePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.FindClosestHit
::UnityEngine::RaycastHit UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit(::ArrayW<::UnityEngine::RaycastHit> hits, int hitCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::FindClosestHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRInteractorReticleVisual", "FindClosestHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hits), ::il2cpp_utils::ExtractType(hitCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hits, hitCount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.TryGetRaycastPoint
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint(ByRef<::UnityEngine::Vector3> raycastPos, ByRef<::UnityEngine::Vector3> raycastNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::TryGetRaycastPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetRaycastPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raycastPos), ::il2cpp_utils::ExtractType(raycastNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastPos), byref(raycastNormal));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.UpdateReticleTarget
bool UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::UpdateReticleTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateReticleTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.ActivateReticleAtTarget
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::ActivateReticleAtTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateReticleAtTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRInteractorReticleVisual.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRInteractorReticleVisual::OnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseController
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType m_SelectActionTrigger
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_SelectActionTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_SelectActionTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectActionTrigger"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideControllerOnSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HideControllerOnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideControllerOnSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnSelectExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnSelectExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnSelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnSelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayAudioClipOnHoverExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayAudioClipOnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayAudioClipOnHoverExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_AudioClipForOnHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_AudioClipForOnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AudioClipForOnHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectEnterDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnSelectExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnSelectExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticSelectExitDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticSelectExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticSelectExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverEntered
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverEntered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverEnterDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverEnterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverEnterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PlayHapticsOnHoverExited
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_PlayHapticsOnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayHapticsOnHoverExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitIntensity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HapticHoverExitDuration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_HapticHoverExitDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HapticHoverExitDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseController m_Controller
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseController*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_Controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controller"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ToggleSelectActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_ToggleSelectActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToggleSelectActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WaitingForSecondDeactivate
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_WaitingForSecondDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_WaitingForSecondDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitingForSecondDeactivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource m_EffectsAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::dyn_m_EffectsAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectsAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_selectActionTrigger
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_selectActionTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_selectActionTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectActionTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_selectActionTrigger
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_selectActionTrigger(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_selectActionTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectActionTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hideControllerOnSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hideControllerOnSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hideControllerOnSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideControllerOnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectEntered
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectEntered(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectExited
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectExited(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnSelectExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnSelectExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnSelectExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverEntered
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverEntered(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverEnter
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverEnter
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playAudioClipOnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playAudioClipOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAudioClipOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playAudioClipOnHoverExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playAudioClipOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playAudioClipOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverExited
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_audioClipForOnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverExited(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_audioClipForOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioClipForOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_audioClipForOnHoverExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_audioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_AudioClipForOnHoverExit
::UnityEngine::AudioClip* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_AudioClipForOnHoverExit
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_AudioClipForOnHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClipForOnHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnSelectExit
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticSelectExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticSelectExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticSelectExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticSelectExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverEntered
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEntered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverEnter
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverEnterDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverEnterDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverEnterDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverEnterDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_playHapticsOnHoverExited
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_playHapticsOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playHapticsOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_playHapticsOnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_playHapticsOnHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playHapticsOnHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitIntensity
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitIntensity
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_hapticHoverExitDuration
float UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_hapticHoverExitDuration
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_hapticHoverExitDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hapticHoverExitDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_xrController
::UnityEngine::XR::Interaction::Toolkit::XRBaseController* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_xrController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.set_xrController
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_xrController(::UnityEngine::XR::Interaction::Toolkit::XRBaseController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::set_xrController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_xrController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_validTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_validTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_validTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.CreateEffectsAudioSource
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::CreateEffectsAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEffectsAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isUISelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isUISelectActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUISelectActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendHapticImpulse
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse(float amplitude, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::SendHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, amplitude, duration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseControllerInteractor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType State
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_State");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "State"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType State
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_State(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_State");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "State", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType StateChange
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_StateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "StateChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType StateChange
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_StateChange(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_StateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "StateChange", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Toggle
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Toggle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Toggle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Toggle
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Toggle(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Toggle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Toggle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Sticky
::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Sticky() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_get_Sticky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType>("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Sticky"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor/InputTriggerType Sticky
void UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Sticky(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::_set_Sticky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseControllerInteractor/InputTriggerType", "Sticky", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor::InputTriggerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionManager
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractorEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_s_InteractionManagerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_get_s_InteractionManagerCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*>("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "s_InteractionManagerCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::_set_s_InteractionManagerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor", "s_InteractionManagerCache", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_InteractionLayerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_InteractionLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractionLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_AttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_StartingSelectedInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartingSelectedInteractable"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnHoverExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHoverExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEntered
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectEntered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectEntered"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExited
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_OnSelectExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelectExited"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowHover
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowHover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowHover"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_AllowSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableInteractions
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_EnableInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_EnableInteractions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableInteractions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsPerformingManualInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_IsPerformingManualInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_IsPerformingManualInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsPerformingManualInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable <selectTarget>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$selectTarget$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$selectTarget$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectTarget>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <hoverTargets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$hoverTargets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_$hoverTargets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hoverTargets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RequiresRegistration
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RequiresRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RequiresRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequiresRegistration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::dyn_m_RegisteredInteractionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInteractionManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionManager
::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_interactionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_interactionLayerMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_interactionLayerMask
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_attachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_attachTransform
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_attachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_startingSelectedInteractable
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startingSelectedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_startingSelectedInteractable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startingSelectedInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onHoverExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onHoverExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onHoverExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectEntered
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectEnter
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectExited
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_onSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelectExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_onSelectExit
::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelectExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowHover
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHover", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_allowSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_allowSelect
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_enableInteractions
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_enableInteractions
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isPerformingManualInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPerformingManualInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectTarget
::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.set_selectTarget
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_hoverTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Reset
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Start
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDestroy
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetHoverTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHoverTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.FindInteractionManagerEditTime
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindInteractionManagerEditTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindInteractionManagerEditTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindInteractionManagerEditTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.FindCreateInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCreateInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.RegisterWithInteractionManager
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithInteractionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsOnValidLayerMask
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnValidLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EnableInteractions
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isHoverActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_isSelectActive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_requireSelectExclusive
bool UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.get_selectedInteractableMovementTypeOverride
::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EndManualInteraction
void UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable,System.Single> m_InteractableDistanceSqrMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableDistanceSqrMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableDistanceSqrMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableDistanceSqrMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Comparison`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_InteractableSortComparison
[[deprecated("Use field access instead!")]] ::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableSortComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::dyn_m_InteractableSortComparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InteractableSortComparison"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerEnter
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerExit
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.InteractableSortComparison
int UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::InteractableSortComparison(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* x, ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::InteractableSortComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InteractableSortComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.get_validTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_validTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::get_validTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<>c
#include "UnityEngine/XR/Interaction/Toolkit/XRDirectInteractor_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<>c <>9
::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<>c <>9
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9(::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__5_0
::System::Func_2<::UnityEngine::Collider*, bool>* UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Collider*, bool>*>("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Collider,System.Boolean> <>9__5_0
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__5_0(::System::Func_2<::UnityEngine::Collider*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", "<>9__5_0", value)));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<>c..cctor
void UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRDirectInteractor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor/<>c.<Awake>b__5_0
bool UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::$Awake$b__5_0(::UnityEngine::Collider* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRDirectInteractor::$$c::<Awake>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/RaycastHitComparer
#include "UnityEngine/XR/Interaction/Toolkit/XRRayInteractor_RaycastHitComparer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRRig
#include "UnityEngine/XR/Interaction/Toolkit/XRRig.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule
#include "UnityEngine/XR/Interaction/Toolkit/UI/XRUIInputModule.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel
#include "UnityEngine/XR/Interaction/Toolkit/UI/TrackedDeviceModel.hpp"
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UpdatePhase
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder_UpdatePhase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRaycastHits
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxRaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxRaycastHits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxRaycastHits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRaycastHits
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxRaycastHits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxRaycastHits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxRaycastHits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MinLineSamples
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinLineSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MinLineSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinLineSamples"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MinLineSamples
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinLineSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MinLineSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MinLineSamples", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxLineSamples
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxLineSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_k_MaxLineSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxLineSamples"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxLineSamples
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxLineSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_k_MaxLineSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "k_MaxLineSamples", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] s_CachedLinePoints
::ArrayW<::UnityEngine::Vector3> UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_CachedLinePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_get_s_CachedLinePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_CachedLinePoints"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] s_CachedLinePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_CachedLinePoints(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::_set_s_CachedLinePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "s_CachedLinePoints", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/LineType m_LineType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LineType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxRaycastDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_MaxRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ReferenceFrame
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ReferenceFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceFrame"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Velocity
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Acceleration
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_Acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AdditionalFlightTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AdditionalFlightTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AdditionalFlightTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EndPointHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EndPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EndPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointDistance
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ControlPointHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPointHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPointHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_SampleFrequency
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SampleFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SampleFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/HitDetectionType m_HitDetectionType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitDetectionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitDetectionType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SphereCastRadius
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SphereCastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SphereCastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask m_RaycastMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.QueryTriggerInteraction m_RaycastTriggerInteraction
[[deprecated("Use field access instead!")]] ::UnityEngine::QueryTriggerInteraction& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastTriggerInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastTriggerInteraction"))->offset;
  return *reinterpret_cast<::UnityEngine::QueryTriggerInteraction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_KeepSelectedTargetValid
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_KeepSelectedTargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_KeepSelectedTargetValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeepSelectedTargetValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HoverToSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HoverTimeToSelect
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HoverTimeToSelect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableUIInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_EnableUIInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableUIInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowAnchorControl
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AllowAnchorControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_AllowAnchorControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowAnchorControl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseForceGrab
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_UseForceGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_UseForceGrab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseForceGrab"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RotateSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RotateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RotateSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotateSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TranslateSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_TranslateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_TranslateSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TranslateSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> m_ValidTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ValidTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_OriginalAttachTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_OriginalAttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_OriginalAttachTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OriginalAttachTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRRig m_XRRig
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRig*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_XRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_XRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XRRig"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.RaycastHit[] m_RaycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.Interaction.Toolkit.XRRayInteractor/RaycastHitComparer m_RaycastHitComparer
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RaycastHitComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RaycastHitComparer"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RaycastHitComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_SamplePoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_SamplePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SamplePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NoSamplePoints
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_NoSamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_NoSamplePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoSamplePoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_CurrentNearestObject
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_CurrentNearestObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_CurrentNearestObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentNearestObject"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastTimeHoveredObjectChanged
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_LastTimeHoveredObjectChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastTimeHoveredObjectChanged"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PassedHoverTimeToSelect
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_PassedHoverTimeToSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PassedHoverTimeToSelect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HitCount
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HitPositionInLine
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitPositionInLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_HitPositionInLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HitPositionInLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_ControlPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_ControlPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_InputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.UI.XRUIInputModule m_RegisteredInputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule*& UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RegisteredInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::dyn_m_RegisteredInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredInputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::UI::XRUIInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_lineType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_lineType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_maxRaycastDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_maxRaycastDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_maxRaycastDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRaycastDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_referenceFrame
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_referenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_referenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_velocity
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_velocity
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Velocity
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Velocity
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_acceleration
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_acceleration
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_acceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Acceleration
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_Acceleration
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_Acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_additionalFlightTime
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_additionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_additionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_additionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_additionalFlightTime
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_additionalFlightTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_additionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_additionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_AdditionalFlightTime
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_AdditionalFlightTime
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_AdditionalFlightTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AdditionalFlightTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_endPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_endPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_endPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_endPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointDistance
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointDistance
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_controlPointHeight
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_controlPointHeight
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_controlPointHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sampleFrequency
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sampleFrequency
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sampleFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sampleFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hitDetectionType
::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hitDetectionType
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::HitDetectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hitDetectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hitDetectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_sphereCastRadius
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_sphereCastRadius
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_sphereCastRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sphereCastRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastMask
::UnityEngine::LayerMask UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastMask
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_raycastTriggerInteraction
::UnityEngine::QueryTriggerInteraction UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::QueryTriggerInteraction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_raycastTriggerInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_raycastTriggerInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_raycastTriggerInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_keepSelectedTargetValid
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_keepSelectedTargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_keepSelectedTargetValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepSelectedTargetValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_keepSelectedTargetValid
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_keepSelectedTargetValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_keepSelectedTargetValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keepSelectedTargetValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverToSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_hoverTimeToSelect
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_hoverTimeToSelect
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_hoverTimeToSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hoverTimeToSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_enableUIInteraction
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_enableUIInteraction
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_enableUIInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableUIInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_allowAnchorControl
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_allowAnchorControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_allowAnchorControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowAnchorControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_allowAnchorControl
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_allowAnchorControl(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_allowAnchorControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowAnchorControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_useForceGrab
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_useForceGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_useForceGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useForceGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_useForceGrab
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_useForceGrab(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_useForceGrab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useForceGrab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_rotateSpeed
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_rotateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_rotateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_rotateSpeed
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_rotateSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_rotateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_translateSpeed
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_translateSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_translateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_translateSpeed
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_translateSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_translateSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_translateSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_angle
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_Angle
float UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_originalAttachTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_originalAttachTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_originalAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_originalAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.set_originalAttachTransform
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_originalAttachTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::set_originalAttachTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_originalAttachTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_startTransform
::UnityEngine::Transform* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_startTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_startTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnValidate
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RebuildSamplePoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RebuildSamplePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RebuildSamplePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSamplePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FindOrCreateXRUIInputModule
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindOrCreateXRUIInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindOrCreateXRUIInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindOrCreateXRUIInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RegisterWithXRUIInputModule
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RegisterWithXRUIInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RegisterWithXRUIInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterWithXRUIInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UnregisterFromXRUIInputModule
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UnregisterFromXRUIInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UnregisterFromXRUIInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterFromXRUIInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RegisterOrUnregisterXRUIInputModule
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RegisterOrUnregisterXRUIInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RegisterOrUnregisterXRUIInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterOrUnregisterXRUIInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> numPoints, int _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linePoints), ::il2cpp_utils::ExtractType(numPoints), ::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(numPoints), _);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> numPoints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(linePoints), byref(numPoints));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget, int _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetHitInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(positionInLine), ::il2cpp_utils::ExtractType(isValidTarget), ::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget), _);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetHitInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position), byref(normal), byref(positionInLine), byref(isValidTarget));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateUIModel
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetUIModel
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel(ByRef<::UnityEngine::XR::Interaction::Toolkit::UI::TrackedDeviceModel> model) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryGetUIModel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(model));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentRaycastHit
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit(ByRef<::UnityEngine::RaycastHit> raycastHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(raycastHit));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentUIRaycastResult
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentUIRaycastResult(ByRef<::UnityEngine::EventSystems::RaycastResult> result, ByRef<int> raycastPointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetCurrentUIRaycastResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentUIRaycastResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::RaycastResult&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result), byref(raycastPointIndex));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateBezierControlPoints
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateBezierControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::UpdateBezierControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBezierControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CalculateBezierPoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateBezierPoint(float t, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 control, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateBezierPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "CalculateBezierPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, start, control, end);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CalculateProjectilePoint
::UnityEngine::Vector3 UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectilePoint(float t, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 velocity, ::UnityEngine::Vector3 acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CalculateProjectilePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "CalculateProjectilePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(acceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, start, velocity, acceleration);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.FindReferenceFrame
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::FindReferenceFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindReferenceFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryRead2DAxis
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryRead2DAxis(::UnityEngine::InputSystem::InputAction* action, ByRef<::UnityEngine::Vector2> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TryRead2DAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "XRRayInteractor", "TryRead2DAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, byref(output));
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RotateAnchor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RotateAnchor(::UnityEngine::Transform* anchor, float directionAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::RotateAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchor, directionAmount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TranslateAnchor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TranslateAnchor(::UnityEngine::Transform* originalAnchor, ::UnityEngine::Transform* anchor, float directionAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::TranslateAnchor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, originalAnchor, anchor, directionAmount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CheckCollidersBetweenPoints
int UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CheckCollidersBetweenPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCollidersBetweenPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.get_validTargets
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_validTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::get_validTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.Awake
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnEnable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnDisable
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.ProcessInteractor
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::ProcessInteractor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatePhase);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetValidTargets
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::GetValidTargets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validTargets);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanHover
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanHover");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanSelect
bool UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::CanSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnSelectExiting
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectExiting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnSelectEntering
void UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRRayInteractor::OnSelectEntering");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Interaction::Toolkit::XRBaseControllerInteractor*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactable);
}
